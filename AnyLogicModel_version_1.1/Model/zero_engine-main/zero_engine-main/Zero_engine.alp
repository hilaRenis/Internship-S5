<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File
*************************************************
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="8.9.1.202408021042" AlpVersion="8.9.1">
<Model>
	<Id>1658477103134</Id>
	<Name><![CDATA[Zero_engine]]></Name>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[zero_engine]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Hour]]></ModelTimeUnit>
	<OptionLists>
		<OptionList>
			<Id>1658478100573</Id>
			<Name><![CDATA[OL_GridNodeType]]></Name>
			<Option>
				<Id>1658478100574</Id>
				<Name><![CDATA[HVMV]]></Name>
			</Option>
			<Option>
				<Id>1721992801441</Id>
				<Name><![CDATA[MVMV]]></Name>
			</Option>
			<Option>
				<Id>1721992807138</Id>
				<Name><![CDATA[SUBMV]]></Name>
			</Option>
			<Option>
				<Id>1658478100575</Id>
				<Name><![CDATA[MVLV]]></Name>
			</Option>
			<Option>
				<Id>1659705289295</Id>
				<Name><![CDATA[HT]]></Name>
			</Option>
			<Option>
				<Id>1659705303447</Id>
				<Name><![CDATA[MT]]></Name>
			</Option>
			<Option>
				<Id>1659705308600</Id>
				<Name><![CDATA[LT]]></Name>
			</Option>
			<Option>
				<Id>1659705310310</Id>
				<Name><![CDATA[LT5thgen]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659117289326</Id>
			<Name><![CDATA[OL_EnergyCarrierType]]></Name>
			<Option>
				<Id>1659117289850</Id>
				<Name><![CDATA[ELECTRICITY]]></Name>
			</Option>
			<Option>
				<Id>1659117296810</Id>
				<Name><![CDATA[METHANE]]></Name>
			</Option>
			<Option>
				<Id>1659117299915</Id>
				<Name><![CDATA[HEAT]]></Name>
			</Option>
			<Option>
				<Id>1659117304956</Id>
				<Name><![CDATA[HYDROGEN]]></Name>
			</Option>
			<Option>
				<Id>1668600528877</Id>
				<Name><![CDATA[DIESEL]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659118262286</Id>
			<Name><![CDATA[OL_ElectrolyserState]]></Name>
			<Option>
				<Id>1659118262287</Id>
				<Name><![CDATA[SHUTDOWN]]></Name>
			</Option>
			<Option>
				<Id>1659118262289</Id>
				<Name><![CDATA[STANDBY]]></Name>
			</Option>
			<Option>
				<Id>1659118262290</Id>
				<Name><![CDATA[IDLE]]></Name>
			</Option>
			<Option>
				<Id>1660052337329</Id>
				<Name><![CDATA[FUNCTIONAL]]></Name>
			</Option>
			<Option>
				<Id>1665480199198</Id>
				<Name><![CDATA[FULLCAPACITY]]></Name>
			</Option>
			<Option>
				<Id>1716971923636</Id>
				<Name><![CDATA[POWER_UP]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659118272924</Id>
			<Name><![CDATA[OL_GISObjectType]]></Name>
			<Option>
				<Id>1659118342822</Id>
				<Name><![CDATA[REGION]]></Name>
			</Option>
			<Option>
				<Id>1659118328423</Id>
				<Name><![CDATA[PARCEL]]></Name>
			</Option>
			<Option>
				<Id>1659118330290</Id>
				<Name><![CDATA[BUILDING]]></Name>
			</Option>
			<Option>
				<Id>1724852069141</Id>
				<Name><![CDATA[GRIDNODE]]></Name>
			</Option>
			<Option>
				<Id>1659118284642</Id>
				<Name><![CDATA[CHARGER]]></Name>
			</Option>
			<Option>
				<Id>1659118298339</Id>
				<Name><![CDATA[SOLARFARM]]></Name>
			</Option>
			<Option>
				<Id>1659118321493</Id>
				<Name><![CDATA[WINDFARM]]></Name>
			</Option>
			<Option>
				<Id>1659118323157</Id>
				<Name><![CDATA[BATTERY]]></Name>
			</Option>
			<Option>
				<Id>1724848835916</Id>
				<Name><![CDATA[ELECTROLYSER]]></Name>
			</Option>
			<Option>
				<Id>1659118344195</Id>
				<Name><![CDATA[ANTI_LAYER]]></Name>
			</Option>
			<Option>
				<Id>1725026204865</Id>
				<Name><![CDATA[LV_GRID]]></Name>
			</Option>
			<Option>
				<Id>1725026212801</Id>
				<Name><![CDATA[MV_GRID]]></Name>
			</Option>
			<Option>
				<Id>1724849181274</Id>
				<Name><![CDATA[OTHER]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659118426374</Id>
			<Name><![CDATA[OL_EnergyAssetType]]></Name>
			<Option>
				<Id>1669816033364</Id>
				<Name><![CDATA[ELECTRICITY_DEMAND]]></Name>
			</Option>
			<Option>
				<Id>1669815514091</Id>
				<Name><![CDATA[HEAT_DEMAND]]></Name>
			</Option>
			<Option>
				<Id>1659118426728</Id>
				<Name><![CDATA[WINDMILL]]></Name>
			</Option>
			<Option>
				<Id>1659118437009</Id>
				<Name><![CDATA[PHOTOVOLTAIC]]></Name>
			</Option>
			<Option>
				<Id>1659118482977</Id>
				<Name><![CDATA[PHOTOTHERMAL]]></Name>
			</Option>
			<Option>
				<Id>1659118532364</Id>
				<Name><![CDATA[GAS_BURNER]]></Name>
			</Option>
			<Option>
				<Id>1659454936646</Id>
				<Name><![CDATA[HEAT_PUMP_AIR]]></Name>
			</Option>
			<Option>
				<Id>1659454948025</Id>
				<Name><![CDATA[HEAT_PUMP_GROUND]]></Name>
			</Option>
			<Option>
				<Id>1659454952726</Id>
				<Name><![CDATA[STORAGE_HEAT]]></Name>
			</Option>
			<Option>
				<Id>1659703216848</Id>
				<Name><![CDATA[STORAGE_ELECTRIC]]></Name>
			</Option>
			<Option>
				<Id>1659954815659</Id>
				<Name><![CDATA[HOT_WATER_CONSUMPTION]]></Name>
			</Option>
			<Option>
				<Id>1660134509899</Id>
				<Name><![CDATA[HEAT_DELIVERY_SET]]></Name>
			</Option>
			<Option>
				<Id>1665501765513</Id>
				<Name><![CDATA[METHANE_FURNACE]]></Name>
			</Option>
			<Option>
				<Id>1665501776892</Id>
				<Name><![CDATA[HYDROGEN_FURNACE]]></Name>
			</Option>
			<Option>
				<Id>1666267116036</Id>
				<Name><![CDATA[ELECTRIC_HEATER]]></Name>
			</Option>
			<Option>
				<Id>1671111224507</Id>
				<Name><![CDATA[ELECTROLYSER]]></Name>
			</Option>
			<Option>
				<Id>1671465832026</Id>
				<Name><![CDATA[HYDROGEN_DEMAND]]></Name>
			</Option>
			<Option>
				<Id>1673867715990</Id>
				<Name><![CDATA[ELECTRIC_HOB]]></Name>
			</Option>
			<Option>
				<Id>1676965109301</Id>
				<Name><![CDATA[CURTAILER]]></Name>
			</Option>
			<Option>
				<Id>1678469475524</Id>
				<Name><![CDATA[CURTAILER_HEAT]]></Name>
			</Option>
			<Option>
				<Id>1676383232204</Id>
				<Name><![CDATA[RESIDUALHEATHT]]></Name>
			</Option>
			<Option>
				<Id>1676638948113</Id>
				<Name><![CDATA[RESIDUALHEATLT]]></Name>
			</Option>
			<Option>
				<Id>1676466480037</Id>
				<Name><![CDATA[METHANE_CHP]]></Name>
			</Option>
			<Option>
				<Id>1676463395259</Id>
				<Name><![CDATA[GAS_PIT]]></Name>
			</Option>
			<Option>
				<Id>1676894965662</Id>
				<Name><![CDATA[BUILDINGTHERMALS]]></Name>
			</Option>
			<Option>
				<Id>1677510098544</Id>
				<Name><![CDATA[HEAT_PUMP_WATER]]></Name>
			</Option>
			<Option>
				<Id>1681828835093</Id>
				<Name><![CDATA[DISTRICT_EBOILER_CHPPEAK]]></Name>
			</Option>
			<Option>
				<Id>1684332070404</Id>
				<Name><![CDATA[LIVESTOCK]]></Name>
			</Option>
			<Option>
				<Id>1684917236306</Id>
				<Name><![CDATA[STORAGE_GAS]]></Name>
			</Option>
			<Option>
				<Id>1685008578606</Id>
				<Name><![CDATA[DIESEL_DEMAND]]></Name>
			</Option>
			<Option>
				<Id>1685030175392</Id>
				<Name><![CDATA[BIOGAS_METHANE_CONVERTER]]></Name>
			</Option>
			<Option>
				<Id>1685518641145</Id>
				<Name><![CDATA[METHANE_DEMAND]]></Name>
			</Option>
			<Option>
				<Id>1668602156278</Id>
				<Name><![CDATA[DIESEL_VEHICLE]]></Name>
			</Option>
			<Option>
				<Id>1700138621293</Id>
				<Name><![CDATA[DIESEL_VAN]]></Name>
			</Option>
			<Option>
				<Id>1699367407696</Id>
				<Name><![CDATA[DIESEL_TRUCK]]></Name>
			</Option>
			<Option>
				<Id>1660202624229</Id>
				<Name><![CDATA[ELECTRIC_VEHICLE]]></Name>
			</Option>
			<Option>
				<Id>1710866465365</Id>
				<Name><![CDATA[ELECTRIC_VAN]]></Name>
			</Option>
			<Option>
				<Id>1666950754271</Id>
				<Name><![CDATA[ELECTRIC_TRUCK]]></Name>
			</Option>
			<Option>
				<Id>1711010112248</Id>
				<Name><![CDATA[HYDROGEN_VEHICLE]]></Name>
			</Option>
			<Option>
				<Id>1711010123129</Id>
				<Name><![CDATA[HYDROGEN_VAN]]></Name>
			</Option>
			<Option>
				<Id>1711010139283</Id>
				<Name><![CDATA[HYDROGEN_TRUCK]]></Name>
			</Option>
			<Option>
				<Id>1715121632612</Id>
				<Name><![CDATA[HYDROGEN_BURNER]]></Name>
			</Option>
			<Option>
				<Id>1717159864803</Id>
				<Name><![CDATA[FUEL_CELL]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659525715752</Id>
			<Name><![CDATA[OL_EAConversionTypes]]></Name>
			<Option>
				<Id>1659535854305</Id>
				<Name><![CDATA[HEATPUMP]]></Name>
			</Option>
			<Option>
				<Id>1659535860604</Id>
				<Name><![CDATA[GASBURNER]]></Name>
			</Option>
			<Option>
				<Id>1659535864564</Id>
				<Name><![CDATA[ELECTROLYSER]]></Name>
			</Option>
			<Option>
				<Id>1659535868209</Id>
				<Name><![CDATA[EBOILER]]></Name>
			</Option>
			<Option>
				<Id>1660131462165</Id>
				<Name><![CDATA[HEATDELIVERYSET]]></Name>
			</Option>
			<Option>
				<Id>1676964594398</Id>
				<Name><![CDATA[CURTAILER]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659525726440</Id>
			<Name><![CDATA[OL_EAProductionTypes]]></Name>
			<Option>
				<Id>1659535893345</Id>
				<Name><![CDATA[PHOTOVOLTAIC]]></Name>
			</Option>
			<Option>
				<Id>1659535901330</Id>
				<Name><![CDATA[PHOTOTHERMAL]]></Name>
			</Option>
			<Option>
				<Id>1659950311558</Id>
				<Name><![CDATA[WINDMILL]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659525736586</Id>
			<Name><![CDATA[OL_EAConsumptionTypes]]></Name>
			<Option>
				<Id>1659535824593</Id>
				<Name><![CDATA[ELECTRICITY]]></Name>
			</Option>
			<Option>
				<Id>1659535830792</Id>
				<Name><![CDATA[HEAT]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659525748543</Id>
			<Name><![CDATA[OL_EAStorageTypes]]></Name>
			<Option>
				<Id>1659535943908</Id>
				<Name><![CDATA[ELECTRIC_BATTERY]]></Name>
			</Option>
			<Option>
				<Id>1659535950717</Id>
				<Name><![CDATA[ELECTRIC_VEHICLE]]></Name>
			</Option>
			<Option>
				<Id>1659535949187</Id>
				<Name><![CDATA[HEATMODEL_BUILDING]]></Name>
			</Option>
			<Option>
				<Id>1674311988696</Id>
				<Name><![CDATA[HEATBUFFER]]></Name>
			</Option>
			<Option>
				<Id>1684917094693</Id>
				<Name><![CDATA[GAS]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659535485693</Id>
			<Name><![CDATA[OL_EACategories]]></Name>
			<Option>
				<Id>1659535486263</Id>
				<Name><![CDATA[CONSUMPTION]]></Name>
			</Option>
			<Option>
				<Id>1659535492572</Id>
				<Name><![CDATA[CONVERSION]]></Name>
			</Option>
			<Option>
				<Id>1659535495564</Id>
				<Name><![CDATA[PRODUCTION]]></Name>
			</Option>
			<Option>
				<Id>1659535498309</Id>
				<Name><![CDATA[STORAGE]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659701773383</Id>
			<Name><![CDATA[OL_AreaType]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<Option>
				<Id>1659701782496</Id>
				<Name><![CDATA[NEIGHBORHOOD]]></Name>
			</Option>
			<Option>
				<Id>1659701773953</Id>
				<Name><![CDATA[RES]]></Name>
			</Option>
			<Option>
				<Id>1659701788868</Id>
				<Name><![CDATA[INDUSTRY]]></Name>
			</Option>
			<Option>
				<Id>1659701795639</Id>
				<Name><![CDATA[BUSINESS]]></Name>
			</Option>
			<Option>
				<Id>1697466302695</Id>
				<Name><![CDATA[HVTRANSFORMER]]></Name>
			</Option>
			<Option>
				<Id>1713426522585</Id>
				<Name><![CDATA[PARCEL]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659711659517</Id>
			<Name><![CDATA[OL_BuildingType]]></Name>
			<Option>
				<Id>1659711661606</Id>
				<Name><![CDATA[House]]></Name>
			</Option>
			<Option>
				<Id>1659711661607</Id>
				<Name><![CDATA[Office]]></Name>
			</Option>
			<Option>
				<Id>1659711661608</Id>
				<Name><![CDATA[Store]]></Name>
			</Option>
			<Option>
				<Id>1659711661609</Id>
				<Name><![CDATA[School]]></Name>
			</Option>
			<Option>
				<Id>1659711661610</Id>
				<Name><![CDATA[Factory]]></Name>
			</Option>
			<Option>
				<Id>1660054094472</Id>
				<Name><![CDATA[Other]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1659950471000</Id>
			<Name><![CDATA[OL_EAPresetProductionAssets]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<Option>
				<Id>1659950531538</Id>
				<Name><![CDATA[House_solarpanels_S]]></Name>
			</Option>
			<Option>
				<Id>1659950534060</Id>
				<Name><![CDATA[House_solarpanels_M]]></Name>
			</Option>
			<Option>
				<Id>1659950555546</Id>
				<Name><![CDATA[House_solarpanels_L]]></Name>
			</Option>
			<Option>
				<Id>1659950562453</Id>
				<Name><![CDATA[Windmill_3MW]]></Name>
			</Option>
			<Option>
				<Id>1659950566729</Id>
				<Name><![CDATA[Windmill_5MW]]></Name>
			</Option>
			<Option>
				<Id>1659950570261</Id>
				<Name><![CDATA[Windmill_7MW]]></Name>
			</Option>
			<Option>
				<Id>1659970013275</Id>
				<Name><![CDATA[Solarpanels_0MW]]></Name>
			</Option>
			<Option>
				<Id>1667995960684</Id>
				<Name><![CDATA[Solarpanels_1MW]]></Name>
			</Option>
			<Option>
				<Id>1667995977424</Id>
				<Name><![CDATA[Solarpanels_2MW]]></Name>
			</Option>
			<Option>
				<Id>1667995970571</Id>
				<Name><![CDATA[Solarpanels_3MW]]></Name>
			</Option>
			<Option>
				<Id>1667995986536</Id>
				<Name><![CDATA[Solarpanels_4MW]]></Name>
			</Option>
			<Option>
				<Id>1667996880047</Id>
				<Name><![CDATA[Solarpanels_5MW]]></Name>
			</Option>
			<Option>
				<Id>1667995988427</Id>
				<Name><![CDATA[Solarpanels_10MW]]></Name>
			</Option>
			<Option>
				<Id>1667995990541</Id>
				<Name><![CDATA[Building_solarpanels_0kWp]]></Name>
			</Option>
			<Option>
				<Id>1667996008098</Id>
				<Name><![CDATA[Building_solarpanels_1kWp]]></Name>
			</Option>
			<Option>
				<Id>1667996006832</Id>
				<Name><![CDATA[Building_solarpanels_2kWp]]></Name>
			</Option>
			<Option>
				<Id>1667996013583</Id>
				<Name><![CDATA[Building_solarpanels_3kWp]]></Name>
			</Option>
			<Option>
				<Id>1667996015832</Id>
				<Name><![CDATA[Building_solarpanels_4kWp]]></Name>
			</Option>
			<Option>
				<Id>1667996018938</Id>
				<Name><![CDATA[Building_solarpanels_5kWp]]></Name>
			</Option>
			<Option>
				<Id>1667996020759</Id>
				<Name><![CDATA[Building_solarpanels_10kWp]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1660055228680</Id>
			<Name><![CDATA[OL_EAPresetStorageAssets]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<Option>
				<Id>1660055281773</Id>
				<Name><![CDATA[House_battery]]></Name>
			</Option>
			<Option>
				<Id>1660055281774</Id>
				<Name><![CDATA[House_heatmodel_A]]></Name>
			</Option>
			<Option>
				<Id>1660055281775</Id>
				<Name><![CDATA[House_heatmodel_B]]></Name>
			</Option>
			<Option>
				<Id>1660055281776</Id>
				<Name><![CDATA[House_heatmodel_C]]></Name>
			</Option>
			<Option>
				<Id>1660055281777</Id>
				<Name><![CDATA[House_heatmodel_D]]></Name>
			</Option>
			<Option>
				<Id>1660055281778</Id>
				<Name><![CDATA[House_heatmodel_E]]></Name>
			</Option>
			<Option>
				<Id>1660055281779</Id>
				<Name><![CDATA[House_heatmodel_F]]></Name>
			</Option>
			<Option>
				<Id>1660055281780</Id>
				<Name><![CDATA[House_heatmodel_G]]></Name>
			</Option>
			<Option>
				<Id>1660055281781</Id>
				<Name><![CDATA[EV]]></Name>
			</Option>
			<Option>
				<Id>1660055439251</Id>
				<Name><![CDATA[District_Heating_heat_buffer_HT_S]]></Name>
			</Option>
			<Option>
				<Id>1664536366729</Id>
				<Name><![CDATA[District_Heating_network_HT_S]]></Name>
			</Option>
			<Option>
				<Id>1664541052353</Id>
				<Name><![CDATA[District_Heating_network_MT_S]]></Name>
			</Option>
			<Option>
				<Id>1666959280721</Id>
				<Name><![CDATA[Grid_battery_1MWh]]></Name>
			</Option>
			<Option>
				<Id>1667757454119</Id>
				<Name><![CDATA[EHGV]]></Name>
			</Option>
			<Option>
				<Id>1667464089952</Id>
				<Name><![CDATA[Grid_battery_10MWh]]></Name>
			</Option>
			<Option>
				<Id>1667995942136</Id>
				<Name><![CDATA[Grid_battery_0MWh]]></Name>
			</Option>
			<Option>
				<Id>1667996898857</Id>
				<Name><![CDATA[Grid_battery_5MWh]]></Name>
			</Option>
			<Option>
				<Id>1668594477547</Id>
				<Name><![CDATA[EHGV_x50]]></Name>
			</Option>
			<Option>
				<Id>1676893732560</Id>
				<Name><![CDATA[Store_heatmodel_A]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1660226249511</Id>
			<Name><![CDATA[OL_ActorType]]></Name>
			<Option>
				<Id>1660226249512</Id>
				<Name><![CDATA[CONNECTIONOWNER]]></Name>
			</Option>
			<Option>
				<Id>1660226249513</Id>
				<Name><![CDATA[GOV]]></Name>
			</Option>
			<Option>
				<Id>1660226249514</Id>
				<Name><![CDATA[SUPPLIERENERGY]]></Name>
			</Option>
			<Option>
				<Id>1660226249515</Id>
				<Name><![CDATA[COOPENERGY]]></Name>
			</Option>
			<Option>
				<Id>1660577544099</Id>
				<Name><![CDATA[OPERATORGRID]]></Name>
			</Option>
			<Option>
				<Id>1692796172966</Id>
				<Name><![CDATA[GOVHOLON]]></Name>
			</Option>
			<Option>
				<Id>1703256179429</Id>
				<Name><![CDATA[SUBTENANT]]></Name>
			</Option>
			<Option>
				<Id>1717960308322</Id>
				<Name><![CDATA[CPO]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1660743989498</Id>
			<Name><![CDATA[OL_ContractType]]></Name>
			<Option>
				<Id>1676283271704</Id>
				<Name><![CDATA[DELIVERY]]></Name>
			</Option>
			<Option>
				<Id>1676283288950</Id>
				<Name><![CDATA[CONNECTION]]></Name>
			</Option>
			<Option>
				<Id>1676283296109</Id>
				<Name><![CDATA[TRANSPORT]]></Name>
			</Option>
			<Option>
				<Id>1676283299749</Id>
				<Name><![CDATA[TAX]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1660743989598</Id>
			<Name><![CDATA[OL_DeliveryContractType]]></Name>
			<Option>
				<Id>1660743990769</Id>
				<Name><![CDATA[ELECTRICITY_VARIABLE]]></Name>
			</Option>
			<Option>
				<Id>1676306691089</Id>
				<Name><![CDATA[ELECTRICITY_FIXED]]></Name>
			</Option>
			<Option>
				<Id>1679503406580</Id>
				<Name><![CDATA[METHANE_FIXED]]></Name>
			</Option>
			<Option>
				<Id>1679503410998</Id>
				<Name><![CDATA[HYDROGEN_FIXED]]></Name>
			</Option>
			<Option>
				<Id>1679503414243</Id>
				<Name><![CDATA[HEAT_FIXED]]></Name>
			</Option>
			<Option>
				<Id>1679503416680</Id>
				<Name><![CDATA[DIESEL_FIXED]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1660743989698</Id>
			<Name><![CDATA[OL_TransportContractType]]></Name>
			<Option>
				<Id>1660743990769</Id>
				<Name><![CDATA[DEFAULT]]></Name>
			</Option>
			<Option>
				<Id>1676307663012</Id>
				<Name><![CDATA[NODALPRICING]]></Name>
			</Option>
			<Option>
				<Id>1676307680468</Id>
				<Name><![CDATA[PEAK]]></Name>
			</Option>
			<Option>
				<Id>1676539817413</Id>
				<Name><![CDATA[BANDWIDTH]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1660743989698</Id>
			<Name><![CDATA[OL_ConnectionContractType]]></Name>
			<Option>
				<Id>1660743990769</Id>
				<Name><![CDATA[DEFAULT]]></Name>
			</Option>
			<Option>
				<Id>1676307607364</Id>
				<Name><![CDATA[NFATO]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1660743989798</Id>
			<Name><![CDATA[OL_TaxContractType]]></Name>
			<Option>
				<Id>1660743990769</Id>
				<Name><![CDATA[SALDEREN]]></Name>
			</Option>
			<Option>
				<Id>1676307694256</Id>
				<Name><![CDATA[NIETSALDEREN]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1665486884039</Id>
			<Name><![CDATA[OL_GridConnectionHeatingType]]></Name>
			<Option>
				<Id>1665486892834</Id>
				<Name><![CDATA[HEATPUMP_AIR]]></Name>
			</Option>
			<Option>
				<Id>1665486897604</Id>
				<Name><![CDATA[DISTRICTHEAT]]></Name>
			</Option>
			<Option>
				<Id>1665486901407</Id>
				<Name><![CDATA[NONE]]></Name>
			</Option>
			<Option>
				<Id>1665488083020</Id>
				<Name><![CDATA[HEATPUMP_GASPEAK]]></Name>
			</Option>
			<Option>
				<Id>1666258251099</Id>
				<Name><![CDATA[HEATPUMP_BOILERPEAK]]></Name>
			</Option>
			<Option>
				<Id>1676468183199</Id>
				<Name><![CDATA[GASFIRED_CHPPEAK]]></Name>
			</Option>
			<Option>
				<Id>1677498067952</Id>
				<Name><![CDATA[LT_RESIDUAL_HEATPUMP_GASPEAK]]></Name>
			</Option>
			<Option>
				<Id>1678098224204</Id>
				<Name><![CDATA[DISTRICTHEATDECENTRAL]]></Name>
			</Option>
			<Option>
				<Id>1678457573856</Id>
				<Name><![CDATA[DISTRICT_EBOILER_CHP]]></Name>
			</Option>
			<Option>
				<Id>1665486884694</Id>
				<Name><![CDATA[GASBURNER]]></Name>
			</Option>
			<Option>
				<Id>1711395634190</Id>
				<Name><![CDATA[HYBRID_HEATPUMP]]></Name>
			</Option>
			<Option>
				<Id>1711395468389</Id>
				<Name><![CDATA[ELECTRIC_HEATPUMP]]></Name>
			</Option>
			<Option>
				<Id>1665501223992</Id>
				<Name><![CDATA[HYDROGENBURNER]]></Name>
			</Option>
			<Option>
				<Id>1711395650860</Id>
				<Name><![CDATA[OTHER]]></Name>
			</Option>
			<Option>
				<Id>1715094777291</Id>
				<Name><![CDATA[MIXED]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1665487983362</Id>
			<Name><![CDATA[OL_GridConnectionIsolationLabel]]></Name>
			<Option>
				<Id>1665487983978</Id>
				<Name><![CDATA[A]]></Name>
			</Option>
			<Option>
				<Id>1665487986412</Id>
				<Name><![CDATA[B]]></Name>
			</Option>
			<Option>
				<Id>1665487986996</Id>
				<Name><![CDATA[C]]></Name>
			</Option>
			<Option>
				<Id>1665487987672</Id>
				<Name><![CDATA[D]]></Name>
			</Option>
			<Option>
				<Id>1665487988212</Id>
				<Name><![CDATA[E]]></Name>
			</Option>
			<Option>
				<Id>1665487988752</Id>
				<Name><![CDATA[F]]></Name>
			</Option>
			<Option>
				<Id>1665487989247</Id>
				<Name><![CDATA[G]]></Name>
			</Option>
			<Option>
				<Id>1665487989742</Id>
				<Name><![CDATA[NONE]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1667742453792</Id>
			<Name><![CDATA[OL_MobilityPatternType]]></Name>
			<Option>
				<Id>1667742462468</Id>
				<Name><![CDATA[TRUCK]]></Name>
			</Option>
			<Option>
				<Id>1667742466151</Id>
				<Name><![CDATA[PRIVATE_VEHICLE]]></Name>
			</Option>
			<Option>
				<Id>1667742486158</Id>
				<Name><![CDATA[BUS]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1668361027279</Id>
			<Name><![CDATA[OL_ChargingAttitude]]></Name>
			<Option>
				<Id>1668361027280</Id>
				<Name><![CDATA[SIMPLE]]></Name>
			</Option>
			<Option>
				<Id>1668368194052</Id>
				<Name><![CDATA[MAX_SPREAD]]></Name>
			</Option>
			<Option>
				<Id>1668371973959</Id>
				<Name><![CDATA[MAX_POWER]]></Name>
			</Option>
			<Option>
				<Id>1671011596610</Id>
				<Name><![CDATA[CHEAP]]></Name>
			</Option>
			<Option>
				<Id>1695825443639</Id>
				<Name><![CDATA[V2G]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1668693527446</Id>
			<Name><![CDATA[OL_BatteryOperationMode]]></Name>
			<Option>
				<Id>1668693549846</Id>
				<Name><![CDATA[BALANCE]]></Name>
			</Option>
			<Option>
				<Id>1668693554312</Id>
				<Name><![CDATA[PRICE]]></Name>
			</Option>
			<Option>
				<Id>1678708484242</Id>
				<Name><![CDATA[HOUSEHOLD_LOAD]]></Name>
			</Option>
			<Option>
				<Id>1710163149238</Id>
				<Name><![CDATA[BALANCE_SUPPLY]]></Name>
			</Option>
			<Option>
				<Id>1720602442837</Id>
				<Name><![CDATA[NODAL_PRICING]]></Name>
			</Option>
			<Option>
				<Id>1725879557284</Id>
				<Name><![CDATA[SIMPLE]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1668693527447</Id>
			<Name><![CDATA[OL_ElectrolyserOperationMode]]></Name>
			<Option>
				<Id>1668693549847</Id>
				<Name><![CDATA[BALANCE]]></Name>
			</Option>
			<Option>
				<Id>1668693554313</Id>
				<Name><![CDATA[PRICE]]></Name>
			</Option>
			<Option>
				<Id>1717061998153</Id>
				<Name><![CDATA[BALANCE_PASTWEEK]]></Name>
			</Option>
			<Option>
				<Id>1717140116168</Id>
				<Name><![CDATA[ALWAYS_IDLE]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1674403295460</Id>
			<Name><![CDATA[OL_EVChargingNeed]]></Name>
			<Option>
				<Id>1674403295461</Id>
				<Name><![CDATA[HIGH]]></Name>
			</Option>
			<Option>
				<Id>1674403295462</Id>
				<Name><![CDATA[MEDIUM]]></Name>
			</Option>
			<Option>
				<Id>1674403295463</Id>
				<Name><![CDATA[LOW]]></Name>
			</Option>
			<Option>
				<Id>1674403309820</Id>
				<Name><![CDATA[NONE]]></Name>
			</Option>
			<Option>
				<Id>1674416304469</Id>
				<Name><![CDATA[EV_NOT_AVAILABLE]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1675025163072</Id>
			<Name><![CDATA[OL_ConnectionOwnerType]]></Name>
			<Option>
				<Id>1675025163073</Id>
				<Name><![CDATA[COMPANY]]></Name>
			</Option>
			<Option>
				<Id>1675025163074</Id>
				<Name><![CDATA[HOUSEHOLD]]></Name>
			</Option>
			<Option>
				<Id>1675025163075</Id>
				<Name><![CDATA[SUBTENANT]]></Name>
			</Option>
			<Option>
				<Id>1702915272457</Id>
				<Name><![CDATA[COOP]]></Name>
			</Option>
			<Option>
				<Id>1722505556838</Id>
				<Name><![CDATA[SOLARFARM_OP]]></Name>
			</Option>
			<Option>
				<Id>1722505534634</Id>
				<Name><![CDATA[WINDFARM_OP]]></Name>
			</Option>
			<Option>
				<Id>1722505559622</Id>
				<Name><![CDATA[ELECTROLYSER_OP]]></Name>
			</Option>
			<Option>
				<Id>1722505562966</Id>
				<Name><![CDATA[BATTERY_OP]]></Name>
			</Option>
			<Option>
				<Id>1717960327813</Id>
				<Name><![CDATA[CHARGEPOINT_OP]]></Name>
			</Option>
			<Option>
				<Id>1707990736908</Id>
				<Name><![CDATA[OTHER]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1718560423698</Id>
			<Name><![CDATA[OL_ProfileAssetType]]></Name>
			<Option>
				<Id>1718560423699</Id>
				<Name><![CDATA[ELECTRICITYBASELOAD]]></Name>
			</Option>
			<Option>
				<Id>1718560423700</Id>
				<Name><![CDATA[CHARGING]]></Name>
			</Option>
			<Option>
				<Id>1718713672051</Id>
				<Name><![CDATA[WINDTURBINE]]></Name>
			</Option>
			<Option>
				<Id>1718713684483</Id>
				<Name><![CDATA[SOLARPANELS]]></Name>
			</Option>
			<Option>
				<Id>1727254638101</Id>
				<Name><![CDATA[HEATDEMAND]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1722411204920</Id>
			<Name><![CDATA[OL_CurtailmentMode]]></Name>
			<Option>
				<Id>1722411204921</Id>
				<Name><![CDATA[CAPACITY]]></Name>
			</Option>
			<Option>
				<Id>1722411204922</Id>
				<Name><![CDATA[PRICE]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1726685111559</Id>
			<Name><![CDATA[OL_HouseholdCookingMethod]]></Name>
			<Option>
				<Id>1726685111560</Id>
				<Name><![CDATA[ELECTRIC]]></Name>
			</Option>
			<Option>
				<Id>1726685111561</Id>
				<Name><![CDATA[GAS]]></Name>
			</Option>
			<Option>
				<Id>1726685111562</Id>
				<Name><![CDATA[NONE]]></Name>
			</Option>
		</OptionList>
	</OptionLists>
	
	<Folders>
		
	</Folders>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1658477103140</Id>
			<Name><![CDATA[EnergyModel]]></Name>
			<Import><![CDATA[import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.NumericNode;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.FileOutputStream;
import java.util.stream.Stream;
import java.util.stream.IntStream;
import java.util.Dictionary.*;
import java.util.Hashtable.*;
import java.util.*;
import java.util.stream.Collectors;

import java.io.*;
import java.io.File;
import java.io.IOException;
//import java.util.Date;  
import java.text.SimpleDateFormat;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import java.time.DayOfWeek;
import java.time.LocalDate;
import zeroPackage.ZeroMath;
import zeroPackage.ZeroAccumulator;]]></Import>
			<StartupCode><![CDATA[v_hourOfYearStart=hourOfYearPerMonth[getMonth()] + (getDayOfMonth()-1)*24;

//j_dataOut = new DataOut();
//j_experimentSettingsData = new J_ExperimentSettingsData();
//j_simulationResults = new J_SimulationResults();
//j_hourlyCurvesData = new J_HourlyCurvesData();

LocalDate localDate = LocalDate.of(p_year, 1, 1);
Date startDate = date();
startDate.setYear(p_year-1900);
//startDate.set
getExperiment().getEngine().setStartDate(startDate); 

v_dayOfWeek1jan = DayOfWeek.from(localDate).getValue();
//traceln("Day of the week on january 1st %s: %s, int value: %s", p_year, DayOfWeek.from(localDate).name(), v_dayOfWeek1jan);

/*
J_profilePointer profilePointer = new J_profilePointer("normalized onshore wind production", tf_p_wind_e_normalized);
f_addProfile(profilePointer);
pp_windOnshoreProduction = profilePointer;

profilePointer = new J_profilePointer("normalized_PV_production", tf_p_solar_e_normalized);
f_addProfile(profilePointer);
pp_solarPVproduction = profilePointer;

//tf_p_house_e_demand_other.setArgumentsAndValues(a_arguments, a_houseEdemand);
//TableFunction tf = new TableFunction(a_arguments, a_houseEdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("house_other_electricity_demand", tf_p_house_e_demand_other);
f_addProfile(profilePointer);

//tf_p_house_h_demand_hot_water.setArgumentsAndValues(a_arguments, a_houseDHWdemand);
profilePointer = new J_profilePointer("house_hot_water_demand", tf_p_house_h_demand_hot_water);
f_addProfile(profilePointer);

//tf_p_building_e_demand_other.setArgumentsAndValues(a_arguments, a_buildingEdemand);
profilePointer = new J_profilePointer("Office_other_electricity", tf_p_building_e_demand_other);
f_addProfile(profilePointer);

//tf_p_building_h_demand.setArgumentsAndValues(a_arguments, a_buildingHeatDemand);
profilePointer = new J_profilePointer("Building_heat_demand", tf_p_building_h_demand);
f_addProfile(profilePointer);

//tf_p_industry_other_e_demand.setArgumentsAndValues(a_arguments, a_industryOtherEdemand);
profilePointer = new J_profilePointer("Industry_other_electricity", tf_p_industry_other_e_demand);
f_addProfile(profilePointer);

//tf_p_industry_other_h_demand.setArgumentsAndValues(a_arguments, a_industryOtherHdemand);
profilePointer = new J_profilePointer("Industry_other_heat", tf_p_industry_other_h_demand);
f_addProfile(profilePointer);

//tf_p_industry_steel_e_demand.setArgumentsAndValues(a_arguments, a_industrySteelEdemand);
profilePointer = new J_profilePointer("Industry_steel_electricity", tf_p_industry_steel_e_demand);
f_addProfile(profilePointer);

//tf_p_industry_steel_h_demand.setArgumentsAndValues(a_arguments, a_industrySteelHdemand);
profilePointer = new J_profilePointer("Industry_steel_heat", tf_p_industry_steel_h_demand);
f_addProfile(profilePointer);

//tf_p_logistics_fleet_e_hgv.setArgumentsAndValues(a_arguments, a_logisticsFleetEdemand);
profilePointer = new J_profilePointer("LOGISTICS_FLEET_HGV_E", tf_p_logistics_fleet_e_hgv);
f_addProfile(profilePointer);

double[] x = {0, 8760};
double[] y = {1.0/8760, 1.0/8760};
TableFunction tf = new TableFunction(x, y, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("flat_profile", tf_p_logistics_fleet_e_hgv);
f_addProfile(profilePointer);


traceln("Available profiles in this simulation: %s", c_profiles);
*/]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1658477103138</Id>
				<Name><![CDATA[1658477103138]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>false</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[p_timeStep_h]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1658477103136</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1658477103139</CurrentLevel>
			<ConnectionsId>1658477103135</ConnectionsId>
			<Outputs>
				<Output>
					<Id>1661516161016</Id>
					<Name><![CDATA[o_outputActorData]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>810</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[String]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<ComputationMoment>MANUALLY</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1661587200000</ComputationDate>
				</Output>
				<Output>
					<Id>1661529224106</Id>
					<Name><![CDATA[o_outputExceptions]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>830</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[String]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<ComputationMoment>MANUALLY</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1661587200000</ComputationDate>
				</Output>
				<Output>
					<Id>1663238746791</Id>
					<Name><![CDATA[o_outputSettings]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>850</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[String]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<ComputationMoment>MANUALLY</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1663315200000</ComputationDate>
				</Output>
				<Output>
					<Id>1663255244236</Id>
					<Name><![CDATA[o_outputTrigger]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>930</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[double]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<Value Class="CodeValue">
						<Code><![CDATA[//f_returnKPIData(false)]]></Code>
					</Value>
					<ComputationMoment>ON_SIMULATION_END</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1663315200000</ComputationDate>
				</Output>
				<Output>
					<Id>1666880542545</Id>
					<Name><![CDATA[o_simulationResults]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>870</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[String]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<ComputationMoment>MANUALLY</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1666944000000</ComputationDate>
				</Output>
				<Output>
					<Id>1672910222316</Id>
					<Name><![CDATA[o_hourlyCurvesData]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>890</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[String]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<ComputationMoment>MANUALLY</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1666944000000</ComputationDate>
				</Output>
				<Output>
					<Id>1679503183018</Id>
					<Name><![CDATA[o_contractData]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>910</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[String]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<ComputationMoment>MANUALLY</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1666944000000</ComputationDate>
				</Output>
			</Outputs>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1659356181110</Id>
					<Name><![CDATA[pp_windOnshoreProduction]]></Name>
					<Description><![CDATA[Fraction of yearly demand in MWh per hour, multiplied by demand in MWh per year = MW for that hour]]></Description>
					<X>-670</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_profilePointer]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659356201846</Id>
					<Name><![CDATA[v_currentWindPowerNormalized_r]]></Name>
					<X>1120</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659356216131</Id>
					<Name><![CDATA[v_currentSolarPowerNormalized_r]]></Name>
					<X>1120</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659364131698</Id>
					<Name><![CDATA[v_currentAmbientTemperature_degC]]></Name>
					<X>1120</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1663238634515</Id>
					<Name><![CDATA[v_timeStepsElapsed]]></Name>
					<X>557</X><Y>372</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666879575045</Id>
					<Name><![CDATA[v_gridNodePeakLoadElectricityMSLS_kW]]></Name>
					<Description><![CDATA[Absolute piekbelastingen MSLS-nodes over de modelrun opgeteld voor externe berekening netinfrastructuurkosten.

@author: JorritvandenHouten
@since: 27-10-2022]]></Description>
					<X>-480</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666879592543</Id>
					<Name><![CDATA[v_gridNodePeakLoadElectricityHSMS_kW]]></Name>
					<Description><![CDATA[Absolute piekbelasting(en) HSMS-node(s) over de modelrun opgeteld voor externe berekening netinfrastructuurkosten.

@author: JorritvandenHouten
@since: 27-10-2022]]></Description>
					<X>-480</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666945456285</Id>
					<Name><![CDATA[v_totalElectricityImport_MWh]]></Name>
					<Description><![CDATA[Totale import van net-electriciteit het systeem in over de modelrun, gelijk aan de electriciteit geïmporteerd via de HSMS gridnode(s). Berekend aan het einde van de modelrun in f_sumGridNodeLoads(). Gebruikt voor totale kosten-berekening buiten het model en voor model-verificatie.

@author: JorritvandenHouten
@since: 28-10-2022]]></Description>
					<X>-480</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666945464449</Id>
					<Name><![CDATA[v_totalElectricityExport_MWh]]></Name>
					<Description><![CDATA[Totale export van net-electriciteit het systeem uit over de modelrun, gelijk aan de electriciteit geëxporteerd via de HSMS gridnode(s). Berekend aan het einde van de modelrun in f_sumGridNodeLoads().  Gebruikt voor totale kosten-berekening buiten het model en voor model-verificatie.

@author: JorritvandenHouten
@since: 28-10-2022]]></Description>
					<X>-480</X><Y>640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666945472961</Id>
					<Name><![CDATA[v_totalMethaneImport_MWh]]></Name>
					<Description><![CDATA[Totale import van methaan het systeem in over de modelrun, gelijk aan de methaan geïmporteerd door alle gridconnections. Berekend aan het einde van de modelrun in f_sumMolecularEnergyFlows(). Gebruikt voor totale kosten-berekening buiten het model en voor model-verificatie.

@author: JorritvandenHouten
@since: 28-10-2022]]></Description>
					<X>-480</X><Y>660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666945480077</Id>
					<Name><![CDATA[v_totalHydrogenImport_MWh]]></Name>
					<Description><![CDATA[Totale import van methaan het systeem in over de modelrun, gelijk aan de methaan geïmporteerd door alle gridconnections. Berekend aan het einde van de modelrun in f_sumMolecularEnergyFlows(). Gebruikt voor totale kosten-berekening buiten het model en voor model-verificatie.

@author: JorritvandenHouten
@since: 28-10-2022]]></Description>
					<X>-480</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666945779438</Id>
					<Name><![CDATA[v_totalHydrogenExport_MWh]]></Name>
					<Description><![CDATA[Totale export van waterstof het systeem uit over de modelrun, gelijk aan de waterstof geexporteerd door alle gridconnections. Berekend aan het einde van de modelrun in f_sumMolecularEnergyFlows(). Gebruikt voor totale kosten-berekening buiten het model en voor model-verificatie.

@author: JorritvandenHouten
@since: 28-10-2022]]></Description>
					<X>-480</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666945977336</Id>
					<Name><![CDATA[v_totalMethaneExport_MWh]]></Name>
					<Description><![CDATA[Totale export van methaan het systeem uit over de modelrun, gelijk aan de methaan geexporteerd door alle gridconnections. Berekend aan het einde van de modelrun in f_sumMolecularEnergyFlows(). Gebruikt voor totale kosten-berekening buiten het model en voor model-verificatie.

@author: JorritvandenHouten
@since: 28-10-2022]]></Description>
					<X>-480</X><Y>680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666979598282</Id>
					<Name><![CDATA[v_totalBatteryChargeAmount_MWh]]></Name>
					<X>-480</X><Y>760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666979615893</Id>
					<Name><![CDATA[v_totalBatteryDischargeAmount_MWh]]></Name>
					<X>-480</X><Y>780</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666979627442</Id>
					<Name><![CDATA[v_totalBatteryInstalledCapacity_MWh]]></Name>
					<X>1120</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668613097127</Id>
					<Name><![CDATA[v_totalDieselImport_MWh]]></Name>
					<X>-480</X><Y>740</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669026980656</Id>
					<Name><![CDATA[v_totalBatteryEnergyUsed_MWh]]></Name>
					<X>-480</X><Y>820</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671636172718</Id>
					<Name><![CDATA[v_WindYieldForecast_fr]]></Name>
					<X>810</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671636200983</Id>
					<Name><![CDATA[v_SolarYieldForecast_fr]]></Name>
					<X>810</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671638019875</Id>
					<Name><![CDATA[v_epexForecast_eurpkWh]]></Name>
					<X>810</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1672229241505</Id>
					<Name><![CDATA[v_totalInstalledWindPower_kW]]></Name>
					<X>1120</X><Y>202</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1672229257384</Id>
					<Name><![CDATA[v_totalInstalledPVPower_kW]]></Name>
					<X>1120</X><Y>222</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1674039544084</Id>
					<Name><![CDATA[v_MSLSnodePeakPositiveLoadElectricity_kW]]></Name>
					<Description><![CDATA[Absolute piekbelastingen MSLS-nodes over de modelrun opgeteld voor externe berekening netinfrastructuurkosten.

@author: JorritvandenHouten
@since: 27-10-2022]]></Description>
					<X>-480</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1674039545764</Id>
					<Name><![CDATA[v_MSLSnodePeakNegativeLoadElectricity_kW]]></Name>
					<Description><![CDATA[Absolute piekbelastingen MSLS-nodes over de modelrun opgeteld voor externe berekening netinfrastructuurkosten.

@author: JorritvandenHouten
@since: 27-10-2022]]></Description>
					<X>-480</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676968233773</Id>
					<Name><![CDATA[v_totalEnergyCurtailed_MWh]]></Name>
					<X>-480</X><Y>840</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1678980412868</Id>
					<Name><![CDATA[v_cumulativeGridCapacityMSLS_kW]]></Name>
					<X>-480</X><Y>900</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1678980423977</Id>
					<Name><![CDATA[v_cumulativeGridCapacityHSMS_kW]]></Name>
					<X>-480</X><Y>920</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1678980746805</Id>
					<Name><![CDATA[v_gridOverloadKPI_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-480</X><Y>940</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1683718894234</Id>
					<Name><![CDATA[v_timeSeriesRuntime_ms]]></Name>
					<X>557</X><Y>462</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1683718916458</Id>
					<Name><![CDATA[v_gridNodesRuntime_ms]]></Name>
					<X>557</X><Y>502</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1683718921466</Id>
					<Name><![CDATA[v_gridConnectionsRuntime_ms]]></Name>
					<X>557</X><Y>482</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1683718924632</Id>
					<Name><![CDATA[v_incentivesRuntime_ms]]></Name>
					<X>557</X><Y>542</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1683718924634</Id>
					<Name><![CDATA[v_financialsRuntime_ms]]></Name>
					<X>557</X><Y>522</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690290329895</Id>
					<Name><![CDATA[hourOfYearPerMonth]]></Name>
					<X>556</X><Y>392</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new int[] {0, 744, 1392, 2136, 2856, 3600, 4320, 5064, 5808, 6528, 7272, 7992}]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690290329902</Id>
					<Name><![CDATA[v_hourOfYearStart]]></Name>
					<X>556</X><Y>413</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1695655479591</Id>
					<Name><![CDATA[v_totalEnergyChargedOutsideModel_MWh]]></Name>
					<X>-480</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696863807573</Id>
					<Name><![CDATA[v_modelSelfSufficiency_fr]]></Name>
					<X>-480</X><Y>1190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696863821721</Id>
					<Name><![CDATA[v_modelSelfConsumption_fr]]></Name>
					<X>-480</X><Y>1210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1697554735224</Id>
					<Name><![CDATA[v_isRapidRun]]></Name>
					<X>790</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1698924487994</Id>
					<Name><![CDATA[v_batteryStoredEnergyDeltaSinceStart_MWh]]></Name>
					<X>-480</X><Y>880</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1698929539392</Id>
					<Name><![CDATA[v_totalEnergyUsed_MWh]]></Name>
					<X>-480</X><Y>1000</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1698929546080</Id>
					<Name><![CDATA[v_totalEnergyProduced_MWh]]></Name>
					<X>-480</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699275323335</Id>
					<Name><![CDATA[v_dayOfYear]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>560</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699277193134</Id>
					<Name><![CDATA[t_h]]></Name>
					<X>557</X><Y>212</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699278542893</Id>
					<Name><![CDATA[v_dailyElectricityConsumptionAvg_kW]]></Name>
					<X>20</X><Y>2760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699278542896</Id>
					<Name><![CDATA[v_dailyElectricityProductionAvg_kW]]></Name>
					<X>20</X><Y>2780</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699278542898</Id>
					<Name><![CDATA[v_dailyNetLoadAvg_kW]]></Name>
					<X>20</X><Y>2800</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700556115968</Id>
					<Name><![CDATA[v_totalSelfConsumedEnergy_MWh]]></Name>
					<X>-480</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700556144666</Id>
					<Name><![CDATA[v_totalImportedEnergy_MWh]]></Name>
					<X>-480</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700556155691</Id>
					<Name><![CDATA[v_totalExportedEnergy_MWh]]></Name>
					<X>-480</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700668441384</Id>
					<Name><![CDATA[v_summerWeekTotalImport_MWh]]></Name>
					<X>430</X><Y>2090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700668461882</Id>
					<Name><![CDATA[v_summerWeekTotalExport_MWh]]></Name>
					<X>430</X><Y>2110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700668472639</Id>
					<Name><![CDATA[v_summerWeekEnergyUsed_MWh]]></Name>
					<X>430</X><Y>2130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700668495328</Id>
					<Name><![CDATA[v_summerWeekEnergyProduced_MWh]]></Name>
					<X>430</X><Y>2150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700669484040</Id>
					<Name><![CDATA[v_summerWeekSelfConsumedEnergy_MWh]]></Name>
					<X>430</X><Y>2170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700670131980</Id>
					<Name><![CDATA[v_winterWeekTotalImport_MWh]]></Name>
					<X>430</X><Y>2270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700670131982</Id>
					<Name><![CDATA[v_winterWeekTotalExport_MWh]]></Name>
					<X>430</X><Y>2290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700670131984</Id>
					<Name><![CDATA[v_winterWeekEnergyUsed_MWh]]></Name>
					<X>430</X><Y>2310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700670131986</Id>
					<Name><![CDATA[v_winterWeekEnergyProduced_MWh]]></Name>
					<X>430</X><Y>2330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700670131988</Id>
					<Name><![CDATA[v_winterWeekSelfConsumedEnergy_MWh]]></Name>
					<X>430</X><Y>2370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700725227193</Id>
					<Name><![CDATA[v_currentEnergyConsumption_kW]]></Name>
					<X>80</X><Y>1000</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700725244568</Id>
					<Name><![CDATA[v_currentEnergyProduction_kW]]></Name>
					<X>80</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700725502196</Id>
					<Name><![CDATA[v_currentEnergyCurtailed_kW]]></Name>
					<X>80</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701699259425</Id>
					<Name><![CDATA[v_currentEnergyImport_kW]]></Name>
					<X>80</X><Y>1121</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701699273727</Id>
					<Name><![CDATA[v_currentEnergyExport_kW]]></Name>
					<X>80</X><Y>1141</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422825</Id>
					<Name><![CDATA[v_daytimeTotalImport_MWh]]></Name>
					<X>430</X><Y>1360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422827</Id>
					<Name><![CDATA[v_daytimeTotalExport_MWh]]></Name>
					<X>430</X><Y>1380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422829</Id>
					<Name><![CDATA[v_daytimeEnergyUsed_MWh]]></Name>
					<X>430</X><Y>1400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422831</Id>
					<Name><![CDATA[v_daytimeEnergyProduced_MWh]]></Name>
					<X>430</X><Y>1420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422833</Id>
					<Name><![CDATA[v_daytimeSelfConsumedEnergy_MWh]]></Name>
					<X>430</X><Y>1440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422835</Id>
					<Name><![CDATA[v_nighttimeTotalImport_MWh]]></Name>
					<X>718</X><Y>1358</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422837</Id>
					<Name><![CDATA[v_nighttimeTotalExport_MWh]]></Name>
					<X>718</X><Y>1378</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422839</Id>
					<Name><![CDATA[v_nighttimeEnergyUsed_MWh]]></Name>
					<X>718</X><Y>1398</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422841</Id>
					<Name><![CDATA[v_nighttimeEnergyProduced_MWh]]></Name>
					<X>718</X><Y>1418</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422843</Id>
					<Name><![CDATA[v_nighttimeSelfConsumedEnergy_MWh]]></Name>
					<X>718</X><Y>1438</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422845</Id>
					<Name><![CDATA[v_weekdayTotalImport_MWh]]></Name>
					<X>430</X><Y>1688</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422847</Id>
					<Name><![CDATA[v_weekdayTotalExport_MWh]]></Name>
					<X>430</X><Y>1708</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422849</Id>
					<Name><![CDATA[v_weekdayEnergyUsed_MWh]]></Name>
					<X>430</X><Y>1728</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422851</Id>
					<Name><![CDATA[v_weekdayEnergyProduced_MWh]]></Name>
					<X>430</X><Y>1748</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422853</Id>
					<Name><![CDATA[v_weekdaySelfConsumedEnergy_MWh]]></Name>
					<X>430</X><Y>1768</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422855</Id>
					<Name><![CDATA[v_weekendTotalImport_MWh]]></Name>
					<X>718</X><Y>1686</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422857</Id>
					<Name><![CDATA[v_weekendTotalExport_MWh]]></Name>
					<X>718</X><Y>1706</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422859</Id>
					<Name><![CDATA[v_weekendEnergyUsed_MWh]]></Name>
					<X>718</X><Y>1726</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422861</Id>
					<Name><![CDATA[v_weekendEnergyProduced_MWh]]></Name>
					<X>718</X><Y>1746</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701706422863</Id>
					<Name><![CDATA[v_weekendSelfConsumedEnergy_MWh]]></Name>
					<X>718</X><Y>1766</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701782531465</Id>
					<Name><![CDATA[v_peakElecImport_kW]]></Name>
					<X>80</X><Y>1210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701782538616</Id>
					<Name><![CDATA[v_peakElecExport_kW]]></Name>
					<X>80</X><Y>1230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786170797</Id>
					<Name><![CDATA[v_daytimePeakElecImport_kW]]></Name>
					<X>430</X><Y>1580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786170799</Id>
					<Name><![CDATA[v_daytimePeakElecExport_kW]]></Name>
					<X>430</X><Y>1600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786184365</Id>
					<Name><![CDATA[v_nighttimePeakElecImport_kW]]></Name>
					<X>718</X><Y>1580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786184367</Id>
					<Name><![CDATA[v_nighttimePeakElecExport_kW]]></Name>
					<X>718</X><Y>1600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786186276</Id>
					<Name><![CDATA[v_winterWeekPeakElecImport_kW]]></Name>
					<X>750</X><Y>2270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786186278</Id>
					<Name><![CDATA[v_winterWeekPeakElecExport_kW]]></Name>
					<X>750</X><Y>2290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786190557</Id>
					<Name><![CDATA[v_summerWeekPeakElecImport_kW]]></Name>
					<X>750</X><Y>2090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786190559</Id>
					<Name><![CDATA[v_summerWeekPeakElecExport_kW]]></Name>
					<X>750</X><Y>2110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786316417</Id>
					<Name><![CDATA[v_currentElectricityImport_kW]]></Name>
					<X>80</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701786316419</Id>
					<Name><![CDATA[v_currentElectricityExport_kW]]></Name>
					<X>80</X><Y>1180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701787706317</Id>
					<Name><![CDATA[v_weekdayPeakElecImport_kW]]></Name>
					<X>430</X><Y>1910</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701787706319</Id>
					<Name><![CDATA[v_weekdayPeakElecExport_kW]]></Name>
					<X>430</X><Y>1930</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701787749507</Id>
					<Name><![CDATA[v_weekendPeakElecImport_kW]]></Name>
					<X>717</X><Y>1910</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701787749509</Id>
					<Name><![CDATA[v_weekendPeakElecExport_kW]]></Name>
					<X>717</X><Y>1930</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701965985318</Id>
					<Name><![CDATA[v_gridOverloadDuration_h]]></Name>
					<X>-480</X><Y>960</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1702377382300</Id>
					<Name><![CDATA[v_deltaThermalEnergySinceStart_MWh]]></Name>
					<X>-480</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1702536957687</Id>
					<Name><![CDATA[v_avgGridLoad_fr]]></Name>
					<X>-480</X><Y>980</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704795167515</Id>
					<Name><![CDATA[v_totalElectricityConsumed_MWh]]></Name>
					<X>280</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704795167517</Id>
					<Name><![CDATA[v_totalElectricityProduced_MWh]]></Name>
					<X>280</X><Y>880</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704815333011</Id>
					<Name><![CDATA[v_totalElectricitySelfConsumed_MWh]]></Name>
					<X>280</X><Y>900</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705337817926</Id>
					<Name><![CDATA[v_totalHeatProduced_MWh]]></Name>
					<X>280</X><Y>920</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705422009185</Id>
					<Name><![CDATA[v_currentEnergyProductionHeat_kW]]></Name>
					<X>80</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540894170</Id>
					<Name><![CDATA[v_summerWeekElectricityImport_MWh]]></Name>
					<X>750</X><Y>2130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540908874</Id>
					<Name><![CDATA[v_summerWeekElectricityExport_MWh]]></Name>
					<X>750</X><Y>2150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540915718</Id>
					<Name><![CDATA[v_summerWeekMethaneImport_MWh]]></Name>
					<X>750</X><Y>2170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540931274</Id>
					<Name><![CDATA[v_summerWeekHydrogenImport_MWh]]></Name>
					<X>750</X><Y>2190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540938951</Id>
					<Name><![CDATA[v_summerWeekDieselImport_MWh]]></Name>
					<X>750</X><Y>2230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540954264</Id>
					<Name><![CDATA[v_winterWeekElectricityImport_MWh]]></Name>
					<X>750</X><Y>2310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540954266</Id>
					<Name><![CDATA[v_winterWeekElectricityExport_MWh]]></Name>
					<X>750</X><Y>2330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540954268</Id>
					<Name><![CDATA[v_winterWeekMethaneImport_MWh]]></Name>
					<X>750</X><Y>2350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540954270</Id>
					<Name><![CDATA[v_winterWeekHydrogenImport_MWh]]></Name>
					<X>750</X><Y>2370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706540954272</Id>
					<Name><![CDATA[v_winterWeekDieselImport_MWh]]></Name>
					<X>750</X><Y>2410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549264528</Id>
					<Name><![CDATA[v_daytimeElectricityImport_MWh]]></Name>
					<X>430</X><Y>1460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549264530</Id>
					<Name><![CDATA[v_daytimeElectricityExport_MWh]]></Name>
					<X>430</X><Y>1480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549264532</Id>
					<Name><![CDATA[v_daytimeMethaneImport_MWh]]></Name>
					<X>430</X><Y>1500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549264534</Id>
					<Name><![CDATA[v_daytimeHydrogenImport_MWh]]></Name>
					<X>430</X><Y>1520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549264536</Id>
					<Name><![CDATA[v_daytimeDieselImport_MWh]]></Name>
					<X>430</X><Y>1560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549357958</Id>
					<Name><![CDATA[v_nighttimeElectricityImport_MWh]]></Name>
					<X>718</X><Y>1457</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549357960</Id>
					<Name><![CDATA[v_nighttimeElectricityExport_MWh]]></Name>
					<X>718</X><Y>1477</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549357962</Id>
					<Name><![CDATA[v_nighttimeMethaneImport_MWh]]></Name>
					<X>718</X><Y>1497</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549357964</Id>
					<Name><![CDATA[v_nighttimeHydrogenImport_MWh]]></Name>
					<X>718</X><Y>1517</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549357966</Id>
					<Name><![CDATA[v_nighttimeDieselImport_MWh]]></Name>
					<X>718</X><Y>1557</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421314</Id>
					<Name><![CDATA[v_weekendElectricityImport_MWh]]></Name>
					<X>717</X><Y>1790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421316</Id>
					<Name><![CDATA[v_weekendElectricityExport_MWh]]></Name>
					<X>717</X><Y>1810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421318</Id>
					<Name><![CDATA[v_weekendMethaneImport_MWh]]></Name>
					<X>717</X><Y>1830</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421320</Id>
					<Name><![CDATA[v_weekendHydrogenImport_MWh]]></Name>
					<X>717</X><Y>1850</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421322</Id>
					<Name><![CDATA[v_weekendDieselImport_MWh]]></Name>
					<X>717</X><Y>1890</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421324</Id>
					<Name><![CDATA[v_weekdayElectricityImport_MWh]]></Name>
					<X>430</X><Y>1792</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421326</Id>
					<Name><![CDATA[v_weekdayElectricityExport_MWh]]></Name>
					<X>430</X><Y>1812</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421328</Id>
					<Name><![CDATA[v_weekdayMethaneImport_MWh]]></Name>
					<X>430</X><Y>1832</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421330</Id>
					<Name><![CDATA[v_weekdayHydrogenImport_MWh]]></Name>
					<X>430</X><Y>1852</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549421332</Id>
					<Name><![CDATA[v_weekdayDieselImport_MWh]]></Name>
					<X>430</X><Y>1892</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706550174173</Id>
					<Name><![CDATA[v_totalElectricPower_kW]]></Name>
					<X>80</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706550178882</Id>
					<Name><![CDATA[v_totalMethanePower_kW]]></Name>
					<X>80</X><Y>880</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706550189777</Id>
					<Name><![CDATA[v_totalHydrogenPower_kW]]></Name>
					<X>80</X><Y>900</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706550200610</Id>
					<Name><![CDATA[v_totalDieselPower_kW]]></Name>
					<X>80</X><Y>920</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602384519</Id>
					<Name><![CDATA[v_currentElectricityConsumption_kW]]></Name>
					<X>80</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602390691</Id>
					<Name><![CDATA[v_currentElectricityProduction_kW]]></Name>
					<X>80</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602796822</Id>
					<Name><![CDATA[v_summerWeekElectricityConsumed_MWh]]></Name>
					<X>430</X><Y>2190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602804494</Id>
					<Name><![CDATA[v_summerWeekSelfConsumedElectricity_MWh]]></Name>
					<X>430</X><Y>2230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602819866</Id>
					<Name><![CDATA[v_winterWeekElectricityConsumed_MWh]]></Name>
					<X>430</X><Y>2410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602819868</Id>
					<Name><![CDATA[v_winterWeekSelfConsumedElectricity_MWh]]></Name>
					<X>430</X><Y>2390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602924555</Id>
					<Name><![CDATA[v_daytimeElectricityConsumed_MWh]]></Name>
					<X>430</X><Y>1620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602924557</Id>
					<Name><![CDATA[v_daytimeSelfConsumedElectricity_MWh]]></Name>
					<X>430</X><Y>1640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602932838</Id>
					<Name><![CDATA[v_nighttimeElectricityConsumed_MWh]]></Name>
					<X>718</X><Y>1620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602932840</Id>
					<Name><![CDATA[v_nighttimeSelfConsumedElectricity_MWh]]></Name>
					<X>718</X><Y>1640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602944766</Id>
					<Name><![CDATA[v_weekdayElectricityConsumed_MWh]]></Name>
					<X>430</X><Y>1950</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602944768</Id>
					<Name><![CDATA[v_weekdaySelfConsumedElectricity_MWh]]></Name>
					<X>430</X><Y>1970</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602948510</Id>
					<Name><![CDATA[v_weekendElectricityConsumed_MWh]]></Name>
					<X>717</X><Y>1950</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602948512</Id>
					<Name><![CDATA[v_weekendSelfConsumedElectricity_MWh]]></Name>
					<X>717</X><Y>1970</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707233056349</Id>
					<Name><![CDATA[v_individualSelfConsumption_fr]]></Name>
					<X>-480</X><Y>1250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708951590474</Id>
					<Name><![CDATA[v_collectiveSelfConsumption_fr]]></Name>
					<X>-480</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708951616508</Id>
					<Name><![CDATA[v_individualSelfSufficiency_fr]]></Name>
					<X>-480</X><Y>1230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1712842800772</Id>
					<Name><![CDATA[v_dayOfWeek1jan]]></Name>
					<X>560</X><Y>740</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714216338618</Id>
					<Name><![CDATA[a_annualDaytimeIdxs]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>645</X><Y>910</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714216362817</Id>
					<Name><![CDATA[a_annualNighttimeIdxs]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>645</X><Y>930</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715074195578</Id>
					<Name><![CDATA[v_kpiCalcsRuntime_ms]]></Name>
					<X>557</X><Y>562</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715846769967</Id>
					<Name><![CDATA[acc_annualElectricityBalance_kW]]></Name>
					<X>644</X><Y>991</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481316</Id>
					<Name><![CDATA[acc_annualMethaneBalance_kW]]></Name>
					<X>644</X><Y>1012</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481318</Id>
					<Name><![CDATA[acc_annualHydrogenBalance_kW]]></Name>
					<X>644</X><Y>1032</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481320</Id>
					<Name><![CDATA[acc_annualDieselBalance_kW]]></Name>
					<X>644</X><Y>1052</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481322</Id>
					<Name><![CDATA[acc_annualHeatBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>644</X><Y>1072</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481324</Id>
					<Name><![CDATA[acc_annualEnergyProduction_kW]]></Name>
					<X>644</X><Y>1132</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481326</Id>
					<Name><![CDATA[acc_annualEnergyConsumption_kW]]></Name>
					<X>644</X><Y>1152</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481328</Id>
					<Name><![CDATA[acc_annualEnergyCurtailed_kW]]></Name>
					<X>644</X><Y>1172</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481330</Id>
					<Name><![CDATA[acc_annualElectricityProduction_kW]]></Name>
					<X>644</X><Y>1192</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481332</Id>
					<Name><![CDATA[acc_annualElectricityConsumption_kW]]></Name>
					<X>644</X><Y>1212</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481334</Id>
					<Name><![CDATA[acc_annualHeatProduction_kW]]></Name>
					<X>644</X><Y>1232</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481336</Id>
					<Name><![CDATA[acc_annualTotalImport_kW]]></Name>
					<X>644</X><Y>1092</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481338</Id>
					<Name><![CDATA[acc_annualTotalExport_kW]]></Name>
					<X>644</X><Y>1112</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481340</Id>
					<Name><![CDATA[acc_summerElectricityBalance_kW]]></Name>
					<X>934</X><Y>992</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481342</Id>
					<Name><![CDATA[acc_summerMethaneBalance_kW]]></Name>
					<X>934</X><Y>1012</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481344</Id>
					<Name><![CDATA[acc_summerHydrogenBalance_kW]]></Name>
					<X>934</X><Y>1032</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481346</Id>
					<Name><![CDATA[acc_summerDieselBalance_kW]]></Name>
					<X>934</X><Y>1052</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481348</Id>
					<Name><![CDATA[acc_summerHeatBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>934</X><Y>1072</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481350</Id>
					<Name><![CDATA[acc_summerEnergyProduction_kW]]></Name>
					<X>934</X><Y>1132</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481352</Id>
					<Name><![CDATA[acc_summerEnergyConsumption_kW]]></Name>
					<X>934</X><Y>1152</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481354</Id>
					<Name><![CDATA[acc_summerEnergyCurtailed_kW]]></Name>
					<X>934</X><Y>1172</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481356</Id>
					<Name><![CDATA[acc_summerElectricityProduction_kW]]></Name>
					<X>934</X><Y>1192</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481358</Id>
					<Name><![CDATA[acc_summerElectricityConsumption_kW]]></Name>
					<X>934</X><Y>1212</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481360</Id>
					<Name><![CDATA[acc_summerHeatProduction_kW]]></Name>
					<X>934</X><Y>1232</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481362</Id>
					<Name><![CDATA[acc_summerTotalImport_kW]]></Name>
					<X>934</X><Y>1092</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481364</Id>
					<Name><![CDATA[acc_summerTotalExport_kW]]></Name>
					<X>934</X><Y>1112</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481366</Id>
					<Name><![CDATA[acc_winterElectricityBalance_kW]]></Name>
					<X>1244</X><Y>992</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481368</Id>
					<Name><![CDATA[acc_winterMethaneBalance_kW]]></Name>
					<X>1244</X><Y>1012</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481370</Id>
					<Name><![CDATA[acc_winterHydrogenBalance_kW]]></Name>
					<X>1244</X><Y>1032</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481372</Id>
					<Name><![CDATA[acc_winterDieselBalance_kW]]></Name>
					<X>1244</X><Y>1052</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481374</Id>
					<Name><![CDATA[acc_winterHeatBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1244</X><Y>1072</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481376</Id>
					<Name><![CDATA[acc_winterEnergyProduction_kW]]></Name>
					<X>1244</X><Y>1132</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481378</Id>
					<Name><![CDATA[acc_winterEnergyConsumption_kW]]></Name>
					<X>1244</X><Y>1152</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481380</Id>
					<Name><![CDATA[acc_winterEnergyCurtailed_kW]]></Name>
					<X>1244</X><Y>1172</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481382</Id>
					<Name><![CDATA[acc_winterElectricityProduction_kW]]></Name>
					<X>1244</X><Y>1192</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481384</Id>
					<Name><![CDATA[acc_winterElectricityConsumption_kW]]></Name>
					<X>1244</X><Y>1212</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481386</Id>
					<Name><![CDATA[acc_winterHeatProduction_kW]]></Name>
					<X>1244</X><Y>1232</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481388</Id>
					<Name><![CDATA[acc_winterTotalImport_kW]]></Name>
					<X>1244</X><Y>1092</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715864481390</Id>
					<Name><![CDATA[acc_winterTotalExport_kW]]></Name>
					<X>1244</X><Y>1112</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715865981755</Id>
					<Name><![CDATA[v_summerWeekElectricityProduced_MWh]]></Name>
					<X>430</X><Y>2210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315931</Id>
					<Name><![CDATA[v_dailyBaseloadElectricityDemand_kW]]></Name>
					<X>20</X><Y>2830</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715866006028</Id>
					<Name><![CDATA[v_winterWeekElectricityProduced_MWh]]></Name>
					<X>430</X><Y>2350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315933</Id>
					<Name><![CDATA[v_dailyHeatPumpElectricityDemand_kW]]></Name>
					<X>20</X><Y>2850</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315935</Id>
					<Name><![CDATA[v_dailyElectricVehicleDemand_kW]]></Name>
					<X>20</X><Y>2870</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315937</Id>
					<Name><![CDATA[v_dailyBatteriesDemand_kW]]></Name>
					<X>20</X><Y>2890</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315939</Id>
					<Name><![CDATA[v_dailyPVGeneration_kW]]></Name>
					<X>20</X><Y>3010</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315941</Id>
					<Name><![CDATA[v_dailyWindGeneration_kW]]></Name>
					<X>20</X><Y>3030</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315943</Id>
					<Name><![CDATA[v_dailyBatteriesSupply_kW]]></Name>
					<X>20</X><Y>3050</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315945</Id>
					<Name><![CDATA[v_dailyV2GSupply_kW]]></Name>
					<X>20</X><Y>3070</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315951</Id>
					<Name><![CDATA[v_dailyDieselDemand_kW]]></Name>
					<X>20</X><Y>2930</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315953</Id>
					<Name><![CDATA[v_dailyHydrogenDemand_kW]]></Name>
					<X>20</X><Y>2950</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315955</Id>
					<Name><![CDATA[v_dailyNaturalGasDemand_kW]]></Name>
					<X>20</X><Y>2910</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315957</Id>
					<Name><![CDATA[v_dailyDistrictHeatDemand_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>20</X><Y>2970</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315959</Id>
					<Name><![CDATA[v_dailyDistrictHeatSupply_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>20</X><Y>3130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715246315961</Id>
					<Name><![CDATA[v_dailyNaturalGasSupply_kW]]></Name>
					<X>20</X><Y>3090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715671059724</Id>
					<Name><![CDATA[v_summerWeekHydrogenExport_MWh]]></Name>
					<X>750</X><Y>2210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715671086423</Id>
					<Name><![CDATA[v_winterWeekHydrogenExport_MWh]]></Name>
					<X>750</X><Y>2390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715671115896</Id>
					<Name><![CDATA[v_weekdayHydrogenExport_MWh]]></Name>
					<X>430</X><Y>1870</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715671137688</Id>
					<Name><![CDATA[v_weekendHydrogenExport_MWh]]></Name>
					<X>720</X><Y>1870</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715671218524</Id>
					<Name><![CDATA[v_dailyHydrogenSupply_kW]]></Name>
					<X>20</X><Y>3110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715671567289</Id>
					<Name><![CDATA[v_daytimeHydrogenExport_MWh]]></Name>
					<X>430</X><Y>1540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715671579793</Id>
					<Name><![CDATA[v_nighttimeHydrogenExport_MWh]]></Name>
					<X>718</X><Y>1540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1716899850820</Id>
					<Name><![CDATA[v_topLevelGridCapacity_kW]]></Name>
					<X>1119</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718883144081</Id>
					<Name><![CDATA[v_electricityYieldForecast_fr]]></Name>
					<X>810</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721228298986</Id>
					<Name><![CDATA[v_currentDLRfactor_fr]]></Name>
					<X>1120</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1.0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721228965491</Id>
					<Name><![CDATA[v_minDLRfactor_fr]]></Name>
					<X>1334</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[2]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721228970137</Id>
					<Name><![CDATA[v_maxDLRfactor_fr]]></Name>
					<X>1504</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722498503201</Id>
					<Name><![CDATA[acc_annualDLRfactor_f]]></Name>
					<X>640</X><Y>960</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, p_timeStep_h, 8760);]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722862764057</Id>
					<Name><![CDATA[data_netbelastingDuurkromme_kW]]></Name>
					<X>100</X><Y>2100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722862764059</Id>
					<Name><![CDATA[data_netbelastingDuurkrommeVorige_kW]]></Name>
					<X>100</X><Y>2120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722862764061</Id>
					<Name><![CDATA[data_summerWeekNetbelastingDuurkromme_kW]]></Name>
					<X>100</X><Y>2140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722862764063</Id>
					<Name><![CDATA[data_winterWeekNetbelastingDuurkromme_kW]]></Name>
					<X>100</X><Y>2160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722862764065</Id>
					<Name><![CDATA[data_daytimeNetbelastingDuurkromme_kW]]></Name>
					<X>100</X><Y>2180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722862764067</Id>
					<Name><![CDATA[data_nighttimeNetbelastingDuurkromme_kW]]></Name>
					<X>100</X><Y>2200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722862764069</Id>
					<Name><![CDATA[data_weekdayNetbelastingDuurkromme_kW]]></Name>
					<X>100</X><Y>2220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722862764071</Id>
					<Name><![CDATA[data_weekendNetbelastingDuurkromme_kW]]></Name>
					<X>100</X><Y>2240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1727107003296</Id>
					<Name><![CDATA[pp_solarPVproduction]]></Name>
					<Description><![CDATA[Fraction of yearly demand in MWh per hour, multiplied by demand in MWh per year = MW for that hour]]></Description>
					<X>-670</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_profilePointer]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726146654442</Id>
					<Name><![CDATA[v_currentCookingDemand_fr]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1116</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1658496701675</Id>
					<Name><![CDATA[p_timeStep_h]]></Name>
					<Description><![CDATA[Model timestep in uren. Kan in experimenten aangepast worden naar wens.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>-421</X><Y>79</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.25]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1658496701673</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658752734133</Id>
					<Name><![CDATA[b_parallelizeConnectionOwners]]></Name>
					<Description><![CDATA[Schakelaar om optionele visualisatie-agent te creëren.

@since: Sprint 6
@author: Jorrit]]></Description>
					<X>-421</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1658752734131</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1659521098545</Id>
					<Name><![CDATA[p_undergroundTemperature_degC]]></Name>
					<Description><![CDATA[Constante ondergrondtemperatuur voor gebruik in bijv. loss-functions voor heatStorage en efficientieberekeningen van bodemwarmtepompen. Per modelrun ingelezen vanuit externe database en gelinkte excelsheet.

@since: Sprint 6
@author: Jorrit]]></Description>
					<X>-421</X><Y>99</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1659521098543</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1663239405341</Id>
					<Name><![CDATA[j_dataOut]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-820</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[DataOut]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1663239405339</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1663242364390</Id>
					<Name><![CDATA[j_experimentSettingsData]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-820</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_ExperimentSettingsData]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1663242364388</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1663577621793</Id>
					<Name><![CDATA[b_parallelizeGridConnections]]></Name>
					<Description><![CDATA[Boolean om paralelle berekening van gridconnections aan te zetten.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>-421</X><Y>119</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1663577621791</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1666880315951</Id>
					<Name><![CDATA[j_simulationResults]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-820</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_SimulationResults]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1666880315949</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1671636582218</Id>
					<Name><![CDATA[p_forecastTime_h]]></Name>
					<Description><![CDATA[Model timestep in uren. Kan in experimenten aangepast worden naar wens.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>810</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[18]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1671636582216</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1672910307060</Id>
					<Name><![CDATA[j_hourlyCurvesData]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-820</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_HourlyCurvesData]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1672910307058</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1682945119357</Id>
					<Name><![CDATA[b_anylogicCostsForAllContracts]]></Name>
					<Description><![CDATA[Switch om HS en MS netload op 0 als output te geven wanneer er geen overbelasting plaats heeft gevonden. (workaround om geen greenfield kosten te hebben wanneer er geen overbelasting is!)

@author: GillisHommen
@since: 01/03/2023]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-819</X><Y>669</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1682945119355</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1699275323339</Id>
					<Name><![CDATA[p_startHourWinterWeek]]></Name>
					<X>560</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[8160]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1699275323337</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1699275323347</Id>
					<Name><![CDATA[p_startHourSummerWeek]]></Name>
					<X>560</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[3288+24*7]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1699275323345</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1699290370683</Id>
					<Name><![CDATA[p_plotInterval_h]]></Name>
					<X>560</X><Y>640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[168]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1699290370681</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1701855537716</Id>
					<Name><![CDATA[p_truckTripsExcel]]></Name>
					<X>-420</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[ExcelFile]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1701855537714</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1701855572858</Id>
					<Name><![CDATA[p_householdTripsExcel]]></Name>
					<X>-420</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[ExcelFile]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1701855572856</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1701855585052</Id>
					<Name><![CDATA[p_cookingPatternExcel]]></Name>
					<X>-420</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[ExcelFile]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1701855585050</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1712844009289</Id>
					<Name><![CDATA[p_year]]></Name>
					<X>560</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[2023]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1712844009287</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1715864755905</Id>
					<Name><![CDATA[avgc_data]]></Name>
					<X>-420</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_AVGC_data]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1715864755903</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721289658523</Id>
					<Name><![CDATA[b_enableDLR]]></Name>
					<Description><![CDATA[Schakelaar om optionele visualisatie-agent te creëren.

@since: Sprint 6
@author: Jorrit]]></Description>
					<X>-421</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1721289658521</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1724587724718</Id>
					<Name><![CDATA[p_gridNodeTimeSeriesExcel]]></Name>
					<X>1280</X><Y>760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[ExcelFile]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1724587724716</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1663238323139</Id>
					<Name><![CDATA[c_connectionOwners]]></Name>
					<X>90</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[ConnectionOwner]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1663251681035</Id>
					<Name><![CDATA[c_gridNodesTopLevel]]></Name>
					<X>299</X><Y>108</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1663252052482</Id>
					<Name><![CDATA[c_gridNodesNotTopLevel]]></Name>
					<X>299</X><Y>128</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1663312177330</Id>
					<Name><![CDATA[c_gridConnections]]></Name>
					<X>90</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1663336485480</Id>
					<Name><![CDATA[c_gridNodesHeat]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>299</X><Y>148</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1664953351408</Id>
					<Name><![CDATA[c_productionAssets]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>299</X><Y>208</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAProduction]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1665492426842</Id>
					<Name><![CDATA[c_ambientAirDependentAssets]]></Name>
					<X>299</X><Y>248</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666884023719</Id>
					<Name><![CDATA[c_globalElectricityImportProfile_MW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>950</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Integer]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666884311850</Id>
					<Name><![CDATA[c_globalElectricityExportProfile_MW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>970</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Integer]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666978650654</Id>
					<Name><![CDATA[c_energyAssets]]></Name>
					<X>299</X><Y>186</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666981403077</Id>
					<Name><![CDATA[c_totalBatteryChargeAmount_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>1050</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666984250257</Id>
					<Name><![CDATA[c_totalBatteryDischargeAmount_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>1070</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666984296429</Id>
					<Name><![CDATA[c_totalBatteryInstalledCapacity_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>1090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1667300034779</Id>
					<Name><![CDATA[c_totalBatteryUnitsInstalled]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>1110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1667553304068</Id>
					<Name><![CDATA[c_timesOfNodePeakLoads_h]]></Name>
					<X>-480</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1668007771830</Id>
					<Name><![CDATA[c_globalEVChargingProfile_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>990</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Integer]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1668007790848</Id>
					<Name><![CDATA[c_globalEHGVChargingProfile_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>1010</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Integer]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1668007805687</Id>
					<Name><![CDATA[c_globalBatteryChargingProfile_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>1030</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Integer]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1669725679330</Id>
					<Name><![CDATA[c_gridConnectionOverload_fr]]></Name>
					<X>-480</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1692799535493</Id>
					<Name><![CDATA[c_storageAssets]]></Name>
					<X>299</X><Y>228</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAStorage]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1692871551713</Id>
					<Name><![CDATA[c_EVs]]></Name>
					<X>299</X><Y>268</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAEV]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1703256089183</Id>
					<Name><![CDATA[c_actors]]></Name>
					<X>91</X><Y>518</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Actor]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1716453161218</Id>
					<Name><![CDATA[c_subGridConnections]]></Name>
					<Description><![CDATA[A subGridConnections are a subset of (children of) of GridConnections that are "part" of another GC and thus are not counted towards the totals.]]></Description>
					<X>90</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1716885030303</Id>
					<Name><![CDATA[c_gridNodeExecutionList]]></Name>
					<X>300</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1717756420421</Id>
					<Name><![CDATA[c_GISBuildingClusters]]></Name>
					<X>300</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GIS_Building]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1718895986988</Id>
					<Name><![CDATA[c_gridNodeExecutionListReverse]]></Name>
					<X>300</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722584740368</Id>
					<Name><![CDATA[c_pausedGridConnections]]></Name>
					<Description><![CDATA[A paused GridConnection is removed from the collection c_gridConnections and stored in here. Paused GridConnections are not operated or counted towards totals.]]></Description>
					<X>90</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1727099354305</Id>
					<Name><![CDATA[c_profiles]]></Name>
					<X>-670</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_profilePointer]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1674058522977</Id>
					<Name><![CDATA[pauseEvent]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>797</X><Y>212</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="occuresOnce">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_HOUR]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1674115200000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[60*24]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[pauseSimulation();]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1661328014569</Id>
					<Name><![CDATA[f_returnKPIData]]></Name>
					<Description><![CDATA[Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-840</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[writeToDisk]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[traceln("");
traceln("--------------------------");
traceln("====== RUN FINISHED ======");
traceln("--------------------------");
traceln("");

f_calculateKPIs();

ObjectMapper mapper = new ObjectMapper();

//DataOut great_succes = new DataOut();
j_dataOut.clearData();

// Collect actor data for all relevant actor groups en place in j_dataOut.actorData
for(ConnectionOwner c : pop_connectionOwners) {
	try {
		//traceln("ConnectionOwner v_ownedGridConnection: " + c.v_ownedGridConnection.p_gridConnectionID);
//		traceln("ConnectionOwner v_energySupplierDistrictHeat: " + c.v_energySupplierDistrictHeat.toString());
		boolean b_methaneUsedWithoutContracts = c.v_methanePrice_eurpkWh == 0.0 & c.v_totalMethaneUsed_kWh > 0;
		boolean b_hydrogenUsedWithoutContracts = c.v_hydrogenPrice_eurpkWh == 0.0 & c.v_totalHydrogenUsed_kWh > 0;
		if (b_methaneUsedWithoutContracts) {
			traceln("Connection Owner " + c.p_actorID + " used methane without the required contracts!") ;
		}
		String CoopString = c.p_CoopParent == null ? null : c.p_CoopParent.p_actorID;
//		c.j_ActorData.updateData(c.p_actorID, c.p_actorType, c.p_parentActorID, c.p_energySupplier.toString(), c.v_ownedGridConnection.toString(), c.v_energySupplierDistrictHeat.toString(), roundToDecimal( c.v_electricityVolume_kWh, 2 ), roundToDecimal( c.v_heatVolume_kWh, 2), roundToDecimal( c.v_methaneVolume_kWh, 2), roundToDecimal( c.v_hydrogenVolume_kWh, 2 ), c.v_electricityContractType.toString(), c.v_heatContractType.toString(), c.v_methaneContractType.toString(), c.v_hydrogenContractType.toString(), roundToDecimal( c.v_balanceElectricity_eur, 2), roundToDecimal( c.v_balanceHeat_eur, 2), roundToDecimal( c.v_balanceMethane_eur, 2), roundToDecimal( c.v_balanceHydrogen_eur, 2));
		
		//traceln("actor : "+  c.p_actorID);
		c.j_ActorData.updateData(
			c.p_actorID, c.p_actorType, c.p_gridOperator.p_actorID, CoopString, c.p_electricitySupplier.p_actorID, c.v_ownedGridConnection.p_gridConnectionID,
			null, roundToDecimal( c.v_totalElectricityUsed_kWh, 2 ), roundToDecimal( c.v_totalHeatUsed_kWh, 2), roundToDecimal( c.v_totalMethaneUsed_kWh, 2), 
			roundToDecimal( c.v_totalHydrogenUsed_kWh, 2 ), roundToDecimal( c.v_totalDieselUsed_kWh, 2 ),		
			roundToDecimal( c.v_balanceElectricity_eur, 2), roundToDecimal( c.v_balanceElectricityDelivery_eur, 2), 
			roundToDecimal( c.v_balanceElectricityTransport_eur, 2), roundToDecimal( c.v_balanceElectricityTax_eur, 2),
			c.v_contractDelivery.contractScope, c.v_contractTransport.contractScope, c.v_contractTax.contractScope,
			b_methaneUsedWithoutContracts, b_hydrogenUsedWithoutContracts);
			
				//c.v_electricityContractType.toString(), c.v_heatContractType.toString(), c.v_methaneContractType.toString(), c.v_hydrogenContractType.toString(), 
		//null, null, null, null,
		
		J_ActorData data = c.j_ActorData;
		j_dataOut.actorData.add(data);
	} catch (Exception e) {
		e.printStackTrace();
	}
	
	// Collect contracts with correnspondings energy/euro totals
	if (b_anylogicCostsForAllContracts) { // Account everything within anylogic, so that for all contracts only financialTransactionVolumes are non-zero, energyVolumes all zero.
		f_calculateContractCosts(c);
	} else { // Old method, which relies on cost-benefit module to calculate financial transactions for methane, hydrogen, diesel and heat.
		for(J_Contract co: c.c_actorContracts) {
			co.contractHolder = c.p_actorID;
			if(co.energyCarrier == OL_EnergyCarrierType.ELECTRICITY) {
				if(co.contractType.equals(OL_ContractType.DELIVERY)) {
					co.FinancialTransactionVolume_eur = c.v_balanceElectricityDelivery_eur;
				} else if(co.contractType.equals(OL_ContractType.TRANSPORT)) {
					co.FinancialTransactionVolume_eur = c.v_balanceElectricityTransport_eur;			
				} else if(co.contractType.equals(OL_ContractType.TAX)) {
					co.FinancialTransactionVolume_eur = c.v_balanceElectricityTax_eur;			
				}
			} else if (co.energyCarrier == OL_EnergyCarrierType.METHANE) {
				co.EnergyTransactionVolume_kWh = -c.v_totalMethaneUsed_kWh;
			} else if (co.energyCarrier == OL_EnergyCarrierType.HYDROGEN) {
				co.EnergyTransactionVolume_kWh = -c.v_totalHydrogenUsed_kWh;
			} else if (co.energyCarrier == OL_EnergyCarrierType.HEAT) {
				co.EnergyTransactionVolume_kWh = -c.v_totalHeatUsed_kWh;
			} else if (co.energyCarrier == OL_EnergyCarrierType.DIESEL) {
				co.EnergyTransactionVolume_kWh = -c.v_totalDieselUsed_kWh;
			}		
			j_dataOut.contractData.add(co);
			
		}
	}
//});
}
traceln("Printing all contract data: " + j_dataOut.contractData);
for(EnergyCoop a : pop_energyCoops) {
	a.f_totalFinances();
	try {
		//traceln("ConnectionOwner v_ownedGridConnection: " + a.v_ownedGridConnection.p_gridConnectionID);
		String CoopString = a.p_CoopParent == null ? null : a.p_CoopParent.toString();
		
		a.j_ActorData.updateData(a.p_actorID, a.p_actorType,  a.p_gridOperator.p_actorID, CoopString, a.p_electricitySupplier.p_actorID, a.p_gridNodeUnderResponsibility, 
		null, roundToDecimal( a.v_electricityImported_kWh-a.v_electricityExported_kWh, 2 ), roundToDecimal( a.v_heatImported_kWh-a.v_heatExported_kWh, 2), roundToDecimal( a.v_methaneImported_kWh-a.v_methaneExported_kWh, 2), roundToDecimal( a.v_hydrogenImported_kWh-a.v_hydrogenExported_kWh, 2 ), roundToDecimal( a.v_dieselImported_kWh, 2 ),
		//a.v_electricityContractType.toString(), a.v_heatContractType.toString(), a.v_methaneContractType.toString(), a.v_hydrogenContractType.toString(),
		//null, null, null, null,
		roundToDecimal( a.v_balanceElectricity_eur, 2), roundToDecimal( a.v_balanceElectricityDelivery_eur, 2), roundToDecimal( a.v_balanceElectricityTransport_eur, 2), roundToDecimal( a.v_balanceElectricityTax_eur, 2),
		a.v_contractDelivery.contractScope, a.v_contractTransport.contractScope, a.v_contractTax.contractScope,
		false, false);
		J_ActorData data = a.j_ActorData;
		j_dataOut.actorData.add(data);
	} catch (Exception e) {
		e.printStackTrace();
	}
	
	if (b_anylogicCostsForAllContracts) { // Account everything within anylogic, so that for all contracts only financialTransactionVolumes are non-zero, energyVolumes all zero.
		f_calculateContractCosts(a);
	} else { // Old method, which relies on cost-benefit module to calculate financial transactions for methane, hydrogen, diesel and heat.
	
		for(J_Contract co: a.c_actorContracts) {
			co.contractHolder = a.p_actorID;
			if(co.energyCarrier == OL_EnergyCarrierType.ELECTRICITY) {
				if(co.contractType.equals(OL_ContractType.DELIVERY)) {
					co.FinancialTransactionVolume_eur = a.v_balanceElectricityDelivery_eur;
				} else if(co.contractType.equals(OL_ContractType.TRANSPORT)) {
					co.FinancialTransactionVolume_eur = a.v_balanceElectricityTransport_eur;			
				} else if(co.contractType.equals(OL_ContractType.TAX)) {
					co.FinancialTransactionVolume_eur = a.v_balanceElectricityTax_eur;			
				}
			} else if (co.energyCarrier == OL_EnergyCarrierType.METHANE) {
				co.EnergyTransactionVolume_kWh = a.v_methaneImported_kWh-a.v_methaneExported_kWh;
			} else if (co.energyCarrier == OL_EnergyCarrierType.HYDROGEN) {
				co.EnergyTransactionVolume_kWh = a.v_hydrogenImported_kWh-a.v_hydrogenExported_kWh;
			} else if (co.energyCarrier == OL_EnergyCarrierType.HEAT) {
				co.EnergyTransactionVolume_kWh = a.v_heatImported_kWh-a.v_heatExported_kWh;
			} else if (co.energyCarrier == OL_EnergyCarrierType.DIESEL) {
				co.EnergyTransactionVolume_kWh = a.v_dieselImported_kWh;
			}
			j_dataOut.contractData.add(co);
			
		}
	}
//});
}


// Bereken netvlak-data:
//f_sumGridNodeLoads();
//traceln("Electricity imported: "+ v_totalElectricityImport_MWh + " MWh");
//traceln("Electricity exported: "+ v_totalElectricityExport_MWh + " MWh");

/*//Total energy consumption and production
//traceln("");
//traceln("__--** CONSUMPTION PER ASSET **--__");
double energyProduced_MWh = 0;
double electricityProduced_MWh = 0;
double energyConsumed_MWh = 0;
//testing
double energyConsumed_thermalModels_MWh = 0;   //tesing
double totalDistanceTrucks_km = 0;
double deltaThermalEnergySinceStart_MWh = 0;
double totalAmbientHeating_MWh = 0;

for (J_EA e : c_energyAssets) {
	double EnergyUsed_kWh = e.getEnergyUsed_kWh();
	double electricityProduced_kWh = 0;
	
	//energyConsumed_MWh += max(0,EnergyUsed_kWh)/1000;
	//energyProduced_MWh +=max(0,-EnergyUsed_kWh)/1000;
	if (EnergyUsed_kWh > 0) {
	
		if (e instanceof J_EAConversionCurtailer || e instanceof J_EAConversionCurtailerHeat) {
			energyProduced_MWh -= EnergyUsed_kWh/1000;
			v_totalEnergyCurtailed_MWh += EnergyUsed_kWh/1000;
		} else if( e instanceof J_EAConversionGasCHP ) {
			energyConsumed_MWh += EnergyUsed_kWh/1000;
			electricityProduced_kWh = ((J_EAConversionGasCHP)e).getElectricityProduced_kWh();
			electricityProduced_MWh += electricityProduced_kWh/1000;
		}
		else {
			energyConsumed_MWh += EnergyUsed_kWh/1000;
		}
		if( e instanceof J_EAStorageHeat && e.electricityConsumption_kW == 0) {
			energyConsumed_thermalModels_MWh +=  EnergyUsed_kWh/1000;
		}
		if ( e instanceof J_EABuilding ) {
			energyProduced_MWh += ((J_EABuilding)e).energyAbsorbed_kWh/1000;
			deltaThermalEnergySinceStart_MWh += (((J_EABuilding)e).getCurrentTemperature()-20)*((J_EABuilding)e).getHeatCapacity_JpK()/3.6e9;
		}
	} else {
		if( e.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC ||  e.energyAssetType == OL_EnergyAssetType.WINDMILL){
		electricityProduced_MWh -= EnergyUsed_kWh/1000;
		}
		if( e.energyAssetType == OL_EnergyAssetType.METHANE_CHP ) { // Unreachable code; CHP will always have positive EnergyUsed_kWh!
			//electricityProduced_MWh += roundToDecimal(e/1000,2); // Total electricity produced is not stored in CHP asset!
			traceln("CHP electricity production not counted!");
		}
		energyProduced_MWh -= EnergyUsed_kWh/1000;
	}
	if (e instanceof J_EABuilding) {
		totalAmbientHeating_MWh += ((J_EABuilding)e).energyAbsorbed_kWh/1000;
	}
	if (e instanceof J_EAEV) {
		v_totalEnergyChargedOutsideModel_MWh += ((J_EAEV)e).energyChargedOutsideModelArea_kWh/1000;
	}
}

traceln("Total energy absorbed from environment by buildings: %s MWh", totalAmbientHeating_MWh);
traceln("Delta thermal stored energy since start: %s MWh", deltaThermalEnergySinceStart_MWh);
//traceln("Trucks have traveled " + totalDistanceTrucks_km + " km");

traceln("");
traceln("__--** Totals **--__");
traceln("Energy consumed: "+ energyConsumed_MWh + " MWh");
traceln("Energy consumed heatstorages: "+ energyConsumed_thermalModels_MWh + " MWh");
traceln("Energy produced: "+ energyProduced_MWh + " MWh");
//traceln("Electricity produced: "+ electricityProduced_MWh + " MWh (only by solar and wind");

traceln("");
//Total selfconsumption, selfsufficiency

if ( energyProduced_MWh > 0 ){
	v_modelSelfConsumption_fr = 1 - (v_totalElectricityExport_MWh + max(0,v_totalMethaneExport_MWh-v_totalMethaneImport_MWh) + max(0,v_totalHydrogenExport_MWh-v_totalHydrogenImport_MWh))/energyProduced_MWh;
}
traceln("Energy selfconsumption: " + v_modelSelfConsumption_fr*100 + "%");
double totalElectricitySelfConsumption_fr = 0;
if ( electricityProduced_MWh > 0 ){
	totalElectricitySelfConsumption_fr = 1 - v_totalElectricityExport_MWh/electricityProduced_MWh;
}

v_modelSelfSufficiency_fr = 1 - (v_totalElectricityImport_MWh + max(0,v_totalMethaneImport_MWh - v_totalMethaneExport_MWh) + 
max(0,v_totalHydrogenImport_MWh - v_totalHydrogenExport_MWh) + v_totalDieselImport_MWh - v_batteryStoredEnergyDeltaSinceStart_MWh - deltaThermalEnergySinceStart_MWh) / energyConsumed_MWh;
traceln("Energy selfsufficiency (via import calc): %s %%", v_modelSelfSufficiency_fr*100);
double totalSelfSufficiency_fr_check = (energyProduced_MWh - (v_totalElectricityExport_MWh + max(0,v_totalMethaneExport_MWh-v_totalMethaneImport_MWh) + 
max(0,v_totalHydrogenExport_MWh-v_totalHydrogenImport_MWh)))/energyConsumed_MWh;
traceln("Energy selfsufficiency (via export calc): %s %%", totalSelfSufficiency_fr_check*100);
// Remaining difference due to different temps of houses start vs end?

traceln( "import electricity: " + v_totalElectricityImport_MWh + " MWh");
traceln( "export electricity: " + v_totalElectricityExport_MWh + " MWh");
traceln( "nett import methane: " + (v_totalMethaneImport_MWh-v_totalMethaneExport_MWh) + " MWh");
traceln( "import diesel: " + v_totalDieselImport_MWh + " MWh");

traceln("MS node peak load: " + v_gridNodePeakLoadElectricityMSLS_kW + " kW at hour: " + c_timesOfNodePeakLoads_h);
*/
double nbcars = 0;
double nbevs = 0;
double shareElectricvehiclesInHouseholds;

for (GCHouse h : Houses){
	nbcars = nbcars + h.c_vehicleAssets.size(); //c_vehicleAssets has size 0 if it has an electric vehicles. So this is not double counting
	if (h.p_householdEV != null){
		nbevs++;
		nbcars++;
	}
}
if (nbcars != 0){
	shareElectricvehiclesInHouseholds = nbevs/nbcars;
}
else {
	shareElectricvehiclesInHouseholds = 0;
}
traceln("share EVs " + nbevs / nbcars);
traceln("nb EVs " + nbevs);

// add Total Cost KPI data:
j_simulationResults.updateData( roundToDecimal( v_gridNodePeakLoadElectricityHSMS_kW, 2 ),
							roundToDecimal( v_gridNodePeakLoadElectricityMSLS_kW, 2 ),
							v_cumulativeGridCapacityHSMS_kW,
							v_cumulativeGridCapacityMSLS_kW,
							v_netOverloadKPI_pct,
							c_timesOfNodePeakLoads_h,
							c_gridConnectionOverload_fr,
							v_MSLSnodePeakPositiveLoadElectricity_kW,
							v_MSLSnodePeakNegativeLoadElectricity_kW,
							v_totalElectricityImport_MWh,
							v_totalElectricityExport_MWh,
							v_totalMethaneImport_MWh,
							v_totalMethaneExport_MWh,
							v_totalHydrogenImport_MWh,
							v_totalHydrogenExport_MWh,
							v_totalDieselImport_MWh,
							c_totalBatteryUnitsInstalled,
							c_totalBatteryChargeAmount_MWh,
							c_totalBatteryDischargeAmount_MWh,
							c_totalBatteryInstalledCapacity_MWh,
							//c_globalElectricityImportProfile_MWhph,
							//c_globalElectricityExportProfile_MWhph,
							//c_globalEVChargingProfile_kWhph,
							//c_globalEHGVChargingProfile_kWhph,
							//c_globalBatteryChargingProfile_kWhph,
							v_modelSelfConsumption_fr,
							v_modelSelfSufficiency_fr,
							v_totalEnergyUsed_MWh,
							v_totalEnergyProduced_MWh,
							v_totalEnergyCurtailed_MWh,
							shareElectricvehiclesInHouseholds
							);

j_dataOut.simulationResults.add(j_simulationResults);

j_hourlyCurvesData.updateData( c_globalElectricityImportProfile_MW,
							c_globalElectricityExportProfile_MW,
							c_globalEVChargingProfile_kW,
							c_globalEHGVChargingProfile_kW,
							c_globalBatteryChargingProfile_kW);
							
j_dataOut.hourlyCurvesData.add(j_hourlyCurvesData);
double modelRunDuration_s = 0;
j_experimentSettingsData.updateData( p_timeStep_h+"",
									v_timeStepsElapsed+"",
									time(HOUR) + "",
									null + "",
									modelRunDuration_s + "",
									pop_gridNodes.size() + "",
									c_gridConnections.size() + "",
									c_energyAssets.size() + "",
									pop_connectionOwners.size() + "",
									pop_energySuppliers.size() + "",
									pop_energyCoops.size() + "",
									pop_gridOperators.size() + "",
									1 + "", 
									shareElectricvehiclesInHouseholds  );
									
j_dataOut.runSettingsData.add(j_experimentSettingsData);

//traceln("Netload " + v_gridNodePeakLoadElectricityMSLS_kW/pop_gridNodes.get(0).p_capacity_kW * 100 + " %" );
traceln("Model run duration: " + modelRunDuration_s + " seconds");

    //System.out.println(json);

String agentDataJson = "";
String settingsJson = "";
String simulationResultsJson = "";
String hourlyCurvesDataJson = "";
String contractDataJson = "";

try {
	agentDataJson = mapper.writerWithDefaultPrettyPrinter().writeValueAsString( j_dataOut.actorData );
	settingsJson = mapper.writerWithDefaultPrettyPrinter().writeValueAsString( j_dataOut.runSettingsData );
	simulationResultsJson = mapper.writerWithDefaultPrettyPrinter().writeValueAsString( j_dataOut.simulationResults );
	hourlyCurvesDataJson = mapper.writerWithDefaultPrettyPrinter().writeValueAsString( j_dataOut.hourlyCurvesData );
	contractDataJson = mapper.writerWithDefaultPrettyPrinter().writeValueAsString( j_dataOut.contractData );
	update_o_outputActorData( agentDataJson );
	update_o_outputSettings( settingsJson );
	update_o_simulationResults( simulationResultsJson );
	update_o_hourlyCurvesData ( hourlyCurvesDataJson );
	update_o_contractData ( contractDataJson );
} catch(IOException e) {
	e.printStackTrace();
}

traceln("");
traceln("");
try {
    if(writeToDisk) {
    	//traceln("Succes.... YES!");
    	mapper.writerWithDefaultPrettyPrinter().writeValue(
		new File(".\\OutputAgentData.json"), j_dataOut.actorData );

	   	mapper.writerWithDefaultPrettyPrinter().writeValue(
		new File(".\\OutputRunSettingsData.json"), j_dataOut.runSettingsData );
//		traceln("file succes");

		mapper.writerWithDefaultPrettyPrinter().writeValue(
		new File(".\\OutputSimulationResults.json"), j_dataOut.simulationResults );

		mapper.writerWithDefaultPrettyPrinter().writeValue(
		new File(".\\ContractData.json"), j_dataOut.contractData );
		
		mapper.writerWithDefaultPrettyPrinter().writeValue(
		new File(".\\HourlyCurves.json"), j_dataOut.hourlyCurvesData );

	}
} catch (IOException e) {
//   traceln("exception generating output");
    e.printStackTrace();
}

return 1;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1664894248130</Id>
					<Name><![CDATA[f_updatePricesForNextTimestep]]></Name>
					<X>557</X><Y>312</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[t_h]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// Update the dayaheadprice
nationalEnergyMarket.f_updateEnergyPrice();

//
for (EnergySupplier e : pop_energySuppliers) {
	e.f_updateEnergyPrice();
}
for (GridOperator g : pop_gridOperators) {
	if( g.p_hasCongestionPricing ){
		g.f_updateCongestionTariff();
	}
}
for (EnergyCoop e : pop_energyCoops) {
	//e.f_updateEnergyPrice();
	//e.f_updateOtherIncentives();
	//e.f_setPriceBandsExperiment();
	e.f_updateIncentives();
}

for (GridNode GN : c_gridNodeExecutionListReverse) {
	GN.f_propagateNodalPricing();
}


/*if (p_parallelize) {
	c_connectionOwners.parallelStream().forEach(co -> co.f_updateIncentives());	
} else {*/
	for (ConnectionOwner c : pop_connectionOwners) {
		c.f_updateIncentives();
	}
//}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1664952601107</Id>
					<Name><![CDATA[f_updateTimeseries]]></Name>
					<X>557</X><Y>232</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[t_h]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[v_currentAmbientTemperature_degC = tf_ambientTemperature_degC(t_h);

c_profiles.forEach(p -> p.updateValue(t_h));
v_currentWindPowerNormalized_r = pp_windOnshoreProduction.getValue();
v_currentSolarPowerNormalized_r = pp_solarPVproduction.getValue();
//v_currentCookingDemand_fr = tf_cooking_demand(t_h);

if (b_enableDLR) {
	v_currentDLRfactor_fr = 1 + max(-0.1,v_currentWindPowerNormalized_r * 0.025*(30-v_currentAmbientTemperature_degC) + 0.5 - v_currentSolarPowerNormalized_r);
	//v_currentDLRfactor_fr = 1 + uniform(-0.1, 1.0);
	v_minDLRfactor_fr = min (v_minDLRfactor_fr, v_currentDLRfactor_fr);
	v_maxDLRfactor_fr = max (v_maxDLRfactor_fr, v_currentDLRfactor_fr);
	acc_annualDLRfactor_f.addStep(t_h, v_currentDLRfactor_fr);
	/*if (v_currentDLRfactor_fr < 0.5) {
		traceln("v_currentDLRfactor_fr is invalid! %s", v_currentDLRfactor_fr);
		pauseSimulation();
	}*/
}
//traceln("Current DLR factor: %s, ", v_currentDLRfactor_fr);
//traceln("Time hour " + time(HOUR) + ", t_h " + t_h + ", fleet demand " + v_currentLogisticsFleetEDemand_fr);

// Update environmental conditions for relevant energy assets
for( J_EA e : c_ambientAirDependentAssets ) {
	if( e instanceof J_EAStorageHeat ) {
		//e.f_setLinkedVariable("AIR", null); // Why every timestep??
		((J_EAStorageHeat)e).updateAmbientTemperature( v_currentAmbientTemperature_degC );		
		//e.updateAmbientTemperature( e.p_baseTemperatureReference );
	} else if (e instanceof J_EAConversionHeatPump) {
		((J_EAConversionHeatPump)e).updateAmbientTemperature( v_currentAmbientTemperature_degC );		
	//e.updateAmbientTemperature( e.p_baseTemperatureReference );
	}else if( e instanceof J_EABuilding ) {
		((J_EABuilding)e).updateSolarRadiation(v_currentSolarPowerNormalized_r*1000);
		((J_EABuilding)e).updateAmbientTemperature(v_currentAmbientTemperature_degC);
	}
}

// Update weather forecast
v_SolarYieldForecast_fr += (tf_p_solar_e_normalized(t_h+p_forecastTime_h)-v_currentSolarPowerNormalized_r)/(p_forecastTime_h/p_timeStep_h);
v_WindYieldForecast_fr += (tf_p_wind_e_normalized(t_h+p_forecastTime_h)-v_currentWindPowerNormalized_r)/(p_forecastTime_h/p_timeStep_h);
v_electricityYieldForecast_fr = (v_SolarYieldForecast_fr * v_totalInstalledPVPower_kW + v_WindYieldForecast_fr * v_totalInstalledWindPower_kW) / (v_totalInstalledPVPower_kW + v_totalInstalledWindPower_kW);

for (GridNode GN : c_gridNodeExecutionList) {
	GN.f_updateForecasts();
}

// And price forecast! 
v_epexForecast_eurpkWh += (tf_dayAheadElectricityPricing_eurpMWh(t_h+p_forecastTime_h)-tf_dayAheadElectricityPricing_eurpMWh(t_h))/(p_forecastTime_h/p_timeStep_h)/1000;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1665051878402</Id>
					<Name><![CDATA[f_calculateGridnodeFlows]]></Name>
					<X>557</X><Y>272</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[t_h]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[v_currentElectricityImport_kW = 0;
v_currentElectricityExport_kW = 0;

for(GridNode n : c_gridNodeExecutionList) {
	n.f_calculateEnergyBalance();
}

for(GridNode n : c_gridNodesTopLevel) {
	v_currentElectricityImport_kW += max(0, n.v_currentLoadElectricity_kW );
	v_currentElectricityExport_kW += - min(0, n.v_currentLoadElectricity_kW );
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1665051962956</Id>
					<Name><![CDATA[f_calculateFinancialFlows]]></Name>
					<X>557</X><Y>292</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[t_h]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (b_parallelizeConnectionOwners) {
	c_connectionOwners.parallelStream().forEach(co -> co.f_updateFinances());
} else {
	for (ConnectionOwner c : pop_connectionOwners) {
		c.f_updateFinances();
	}
}

for (EnergyCoop h : pop_energyCoops) {
	h.f_updateFinances();
}
for (EnergySupplier e : pop_energySuppliers) {
	e.f_updateFinances();
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666879523873</Id>
					<Name><![CDATA[f_sumGridNodeLoads]]></Name>
					<Description><![CDATA[Bereken belasting per netvlak in het model (elektriciteit, absolute waarde) voor kosten-berekeningen gebied buiten het model.

@author: Jorrit
@since: 27-10-2022]]></Description>
					<X>-830</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Bereken belasting per netvlak in het model (elektriciteit, absolute waarde) voor kosten-berekeningen gebied.

// Reset totals in case a full year simulation was already run before...
v_gridNodePeakLoadElectricityHSMS_kW = 0;
//v_totalElectricityImport_MWh = 0;
//v_totalElectricityExport_MWh = 0;
c_timesOfNodePeakLoads_h.clear();
v_cumulativeGridCapacityHSMS_kW = 0;
v_gridOverloadDuration_h = 0;

//v_totalHeatProduced_MWh = 0;

for(GridNode h : c_gridNodesTopLevel ) {
//	v_gridNodePeakLoadElectricityHSMS_kW = max(v_gridNodePeakLoadElectricityHSMS_kW,abs(h.v_peakLoadFilteredElectricity_kW));
	v_gridNodePeakLoadElectricityHSMS_kW += abs(h.v_peakLoadFilteredElectricity_kW);
	
	v_totalElectricityImport_MWh += h.v_electricityDrawn_kWh / 1000.0;
	v_totalElectricityExport_MWh += h.v_electricityDelivered_kWh / 1000.0;
	//c_timesOfNodePeakLoads_h.put(h.p_gridNodeID, h.v_timeOfPeakLoadFiltered_h);
	v_cumulativeGridCapacityHSMS_kW += h.p_capacity_kW;
	
	v_gridOverloadDuration_h += h.v_totalTimeOverloaded_h;
}

v_avgGridLoad_fr = sum(c_gridNodesTopLevel, GN->GN.v_averageAbsoluteLoadElectricity_kW)/v_cumulativeGridCapacityHSMS_kW;

//////// Obsolete gridload KPIs from Holon!
/*

v_gridNodePeakLoadElectricityMSLS_kW=0;
c_timesOfNodePeakLoads_h.clear();
v_cumulativeGridCapacityMSLS_kW=0;

for(GridNode m : c_gridNodesMSLS ) {
	v_gridNodePeakLoadElectricityMSLS_kW += abs(m.v_peakLoadFilteredElectricity_kW);
	
	v_MSLSnodePeakPositiveLoadElectricity_kW = max(v_MSLSnodePeakPositiveLoadElectricity_kW, m.v_peakPosLoadElectricity_kW);
	v_MSLSnodePeakNegativeLoadElectricity_kW = max(v_MSLSnodePeakNegativeLoadElectricity_kW, -m.v_peakNegLoadElectricity_kW);
	c_timesOfNodePeakLoads_h.put(m.p_gridNodeID, m.v_timeOfPeakLoadFiltered_h);
	v_cumulativeGridCapacityMSLS_kW += m.p_capacity_kW;
	
	if( c_gridNodesHSMS.size() == 0){ // Only take this from MSLS nodes when HSMS is not present!
		v_totalElectricityImport_MWh += m.v_electricityDrawn_kWh / 1000.0;
		v_totalElectricityExport_MWh += m.v_electricityDelivered_kWh / 1000.0;
	}
	
	double maxLoad_fr = max(m.v_peakPosLoadElectricity_kW, m.v_peakNegLoadElectricity_kW)/m.p_capacity_kW;


	if (maxLoad_fr > 1) {
		m.gisRegion.setFillColor(red);
		m.gisRegion.setLineColor( red.brighter() );
	} else if (maxLoad_fr > 0.7) {
		m.gisRegion.setFillColor(orange);
		m.gisRegion.setLineColor( orange.brighter() );
	} else {
		m.gisRegion.setFillColor(green);
		m.gisRegion.setLineColor( green.brighter() );
	}

	//traceln("MSLS node peak load unfiltered: " + m.v_peakLoadAbsoluteElectricity_kW + " kW");
	//traceln("Grid node " + m.p_gridNodeID);
	//traceln("MSLS peak positive load filtered: " + roundToDecimal(m.v_peakPosLoadElectricity_kW/m.p_capacity_kW*100,2) + " % at time: " + m.v_timeOfPeakPosLoadFiltered_h + " h");
	//traceln("MSLS peak negative load filtered: " + roundToDecimal(m.v_peakNegLoadElectricity_kW/m.p_capacity_kW*100,2) + " % at time: " + m.v_timeOfPeakNegLoadFiltered_h + " h");
}


// If the energy system only has LS nodes, determine KPI on LS level, otherwise on HS
if (c_gridNodesHSMS.size() == 0){
	double cumulativeGridNodePeakLoadElectricityMSLS_kW=0;
	for(GridNode m : c_gridNodesMSLS ) {		
		cumulativeGridNodePeakLoadElectricityMSLS_kW += abs(m.v_peakLoadFilteredElectricity_kW);
	}

	v_netOverloadKPI_pct = 100 * (max (0, cumulativeGridNodePeakLoadElectricityMSLS_kW ) / v_cumulativeGridCapacityMSLS_kW);
}
else if (c_gridNodesHSMS.size() > 1) {
	double cumulativeGridNodePeakLoadElectricityHSMS_kW=0;
	if (c_gridNodesHSMS.size() == 1 & c_gridNodesMSLS.size() == 1) { // laat netload KPI negatief worden als er maar 1 node is!
		for(GridNode h : c_gridNodesHSMS ) {		
			cumulativeGridNodePeakLoadElectricityHSMS_kW += (h.v_peakLoadFilteredElectricity_kW);
		}	
		v_netOverloadKPI_pct = 100 * (cumulativeGridNodePeakLoadElectricityHSMS_kW / v_cumulativeGridCapacityHSMS_kW);	
	} else {
		for(GridNode h : c_gridNodesHSMS ) {		
			cumulativeGridNodePeakLoadElectricityHSMS_kW += abs(h.v_peakLoadFilteredElectricity_kW);
		}
		v_netOverloadKPI_pct = 100 * (max (0, cumulativeGridNodePeakLoadElectricityHSMS_kW ) / v_cumulativeGridCapacityHSMS_kW);	
	}

}
else {
	double HSMSPeakLoad_kW = c_gridNodesHSMS.get(0).v_peakLoadFilteredElectricity_kW;
	v_netOverloadKPI_pct = 100 * HSMSPeakLoad_kW / v_cumulativeGridCapacityHSMS_kW;
}

v_avgNetLoad_fr = c_gridNodesHSMS.get(0).v_averageAbsoluteLoadElectricity_kW/c_gridNodesHSMS.get(0).p_capacity_kW;
//traceln("Average load on HSMS node: %s %", v_avgNetLoad_fr*100);
*/]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666945497935</Id>
					<Name><![CDATA[f_sumMolecularEnergyFlows]]></Name>
					<Description><![CDATA[Bereken invoer en uitvoer van energiedragers naast elektriciteit (methaan, waterstof) voor totale kostenberekening en model-verificatie. Aangeroepen in f_returnKPIData aan het einde van de modelrun.

@author: JorritvandenHouten
@since: 28-10-2022]]></Description>
					<X>-830</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Get import/export from balance arrays.
v_totalMethaneImport_MWh = acc_annualMethaneBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_totalMethaneExport_MWh = -acc_annualMethaneBalance_kW.getSumNeg() * p_timeStep_h / 1000;

v_totalHydrogenImport_MWh = acc_annualHydrogenBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_totalHydrogenExport_MWh = -acc_annualHydrogenBalance_kW.getSumNeg() * p_timeStep_h / 1000;

v_totalDieselImport_MWh = acc_annualDieselBalance_kW.getSum() * p_timeStep_h / 1000;
//v_dieselDelivered_kWh = 0;

/*v_totalMethaneImport_MWh = 0;
v_totalMethaneExport_MWh = 0;
v_totalHydrogenImport_MWh = 0;
v_totalHydrogenExport_MWh = 0;
v_totalDieselImport_MWh = 0;

for(GridConnection g : c_gridConnections ) {
	v_totalMethaneImport_MWh += g.v_methaneDrawn_kWh / 1000;
	v_totalMethaneExport_MWh += g.v_methaneDelivered_kWh / 1000;
	v_totalHydrogenImport_MWh += g.v_hydrogenDrawn_kWh / 1000;
	v_totalHydrogenExport_MWh += g.v_hydrogenDelivered_kWh / 1000;
	v_totalDieselImport_MWh += g.v_dieselDrawn_kWh / 1000;
}

// Assume 'infinite storage' of methane within model-scope; only nett total import/export counts.
if (v_totalMethaneImport_MWh > v_totalMethaneExport_MWh) {
	v_totalMethaneImport_MWh = v_totalMethaneImport_MWh - v_totalMethaneExport_MWh;
	v_totalMethaneExport_MWh = 0;
} else {
	v_totalMethaneExport_MWh = v_totalMethaneExport_MWh - v_totalMethaneImport_MWh;
	v_totalMethaneImport_MWh = 0;
}

// Assume 'infinite storage' of hydrogen within model-scope; only nett total import/export counts.
if (v_totalHydrogenImport_MWh > v_totalHydrogenExport_MWh) {
	v_totalHydrogenImport_MWh = v_totalHydrogenImport_MWh - v_totalHydrogenExport_MWh;
	v_totalHydrogenExport_MWh = 0;
} else {
	v_totalHydrogenExport_MWh = v_totalHydrogenExport_MWh - v_totalHydrogenImport_MWh;
	v_totalHydrogenImport_MWh = 0;
}*/]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666978595555</Id>
					<Name><![CDATA[f_sumBatteryUse]]></Name>
					<X>-830</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_totalBatteryDischargeAmount_MWh = 0;
v_totalBatteryChargeAmount_MWh = 0;
//v_totalBatteryInstalledCapacity_MWh = 0;
v_totalBatteryEnergyUsed_MWh = 0;

for(J_EA ea : c_energyAssets) { // Single loop of all assets without using c_EVs and c_storageAssets
	if( ea instanceof J_EAStorageElectric ) {
		J_EAStorageElectric e = (J_EAStorageElectric)ea;
		v_totalBatteryDischargeAmount_MWh += e.getTotalDischargeAmount_kWh() / 1000;
		v_totalBatteryChargeAmount_MWh += e.getTotalChargeAmount_kWh() / 1000;
		v_totalBatteryInstalledCapacity_MWh += e.getStorageCapacity_kWh() / 1000;
		v_totalBatteryEnergyUsed_MWh += e.getEnergyUsed_kWh() / 1000;
	}
	
	if( ea instanceof J_EAEV ) {
		J_EAEV e = (J_EAEV)ea;
		v_totalBatteryDischargeAmount_MWh += e.getTotalDischargeAmount_kWh() / 1000;
		v_totalBatteryChargeAmount_MWh += e.getTotalChargeAmount_kWh() / 1000;
		v_totalBatteryInstalledCapacity_MWh += e.getStorageCapacity_kWh() / 1000;
		v_totalBatteryEnergyUsed_MWh += e.getEnergyUsed_kWh() / 1000;
	}
}

/*
for(J_EAStorage es : c_storageAssets ) {
	if( es instanceof J_EAStorageElectric ) {
		J_EAStorageElectric e = (J_EAStorageElectric)es;
		v_totalBatteryDischargeAmount_MWh += e.getTotalDischargeAmount_kWh() / 1000;
		v_totalBatteryChargeAmount_MWh += e.getTotalChargeAmount_kWh() / 1000;
		v_totalBatteryInstalledCapacity_MWh += e.getStorageCapacity_kWh() / 1000;
		v_totalBatteryEnergyUsed_MWh += e.getEnergyUsed_kWh() / 1000;
		//traceln( ((J_EAStorageElectric)e.j_ea).getStorageCapacity() / 1000 );
	}
}
for(J_EAEV ev : c_EVs ) {
	v_totalBatteryDischargeAmount_MWh += ev.getTotalDischargeAmount_kWh() / 1000;
	v_totalBatteryChargeAmount_MWh += ev.getTotalChargeAmount_kWh() / 1000;
	v_totalBatteryInstalledCapacity_MWh += ev.getStorageCapacity_kWh() / 1000;
	v_totalBatteryEnergyUsed_MWh += ev.getEnergyUsed_kWh() / 1000;
	//traceln( ((J_EAStorageElectric)e.j_ea).getStorageCapacity() / 1000 );
}
*/

v_batteryStoredEnergyDeltaSinceStart_MWh = v_totalBatteryChargeAmount_MWh - v_totalBatteryDischargeAmount_MWh - v_totalBatteryEnergyUsed_MWh;
if (v_batteryStoredEnergyDeltaSinceStart_MWh == Double.NaN) {
	v_batteryStoredEnergyDeltaSinceStart_MWh = 0;
}
traceln("Electricity delta in batteries (including EVs): "+ v_batteryStoredEnergyDeltaSinceStart_MWh + " MWh");]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1668528129020</Id>
					<Name><![CDATA[f_calculateGridConnectionFlows]]></Name>
					<X>557</X><Y>252</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[t_h]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[v_totalElectricPower_kW = 0;
v_totalMethanePower_kW = 0;
v_totalDieselPower_kW = 0;
v_totalHydrogenPower_kW = 0;

v_currentEnergyConsumption_kW = 0;
v_currentEnergyProduction_kW = 0;
v_currentEnergyCurtailed_kW = 0;
v_currentEnergyProductionHeat_kW = 0;
v_currentElectricityConsumption_kW = 0;
v_currentElectricityProduction_kW = 0;

if (b_parallelizeGridConnections) {
	c_gridConnections.parallelStream().forEach(gc -> gc.f_calculateEnergyBalance());
	for(GridConnection gc : c_gridConnections) { // Can't do this in parallel due to different threads writing to the same values!
		v_totalElectricPower_kW += gc.v_currentPowerElectricity_kW;
		v_totalMethanePower_kW += gc.v_currentPowerMethane_kW;
		v_totalHydrogenPower_kW += gc.v_currentPowerHydrogen_kW;
		v_totalDieselPower_kW += gc.v_currentPowerDiesel_kW;
		v_currentEnergyConsumption_kW += gc.v_currentEnergyConsumption_kW;
		v_currentEnergyProduction_kW += gc.v_currentEnergyProduction_kW;
		v_currentEnergyCurtailed_kW += gc.v_currentEnergyCurtailed_kW;
		v_currentEnergyProductionHeat_kW += gc.v_currentEnergyProductionHeat_kW;
		v_currentElectricityConsumption_kW += gc.v_currentElectricityConsumption_kW;
		v_currentElectricityProduction_kW += gc.v_currentElectricityProduction_kW;
	}
} 
else {
	for(GridConnection gc : c_gridConnections) {
		gc.f_calculateEnergyBalance();
		v_totalElectricPower_kW += gc.v_currentPowerElectricity_kW;
		v_totalMethanePower_kW += gc.v_currentPowerMethane_kW;
		v_totalHydrogenPower_kW += gc.v_currentPowerHydrogen_kW;
		v_totalDieselPower_kW += gc.v_currentPowerDiesel_kW;		
		v_currentEnergyConsumption_kW += gc.v_currentEnergyConsumption_kW;
		v_currentEnergyProduction_kW += gc.v_currentEnergyProduction_kW;
		v_currentEnergyCurtailed_kW += gc.v_currentEnergyCurtailed_kW;
		v_currentElectricityConsumption_kW += gc.v_currentElectricityConsumption_kW;
		v_currentElectricityProduction_kW += gc.v_currentElectricityProduction_kW;
	}
}

for (GridConnection gc : c_subGridConnections) {
	gc.f_calculateEnergyBalance();
}

//v_totalElectricityConsumed_MWh += v_currentElectricityConsumption_kW * p_timeStep_h / 1000; // Totals shall be calculated at end of simulation from arrays!
//v_totalElectricityProduced_MWh += v_currentElectricityProduction_kW * p_timeStep_h / 1000; // Totals shall be calculated at end of simulation from arrays!
v_currentEnergyImport_kW = max(0,v_totalElectricPower_kW) + max(0, v_totalMethanePower_kW) + max(0,v_totalHydrogenPower_kW) + v_totalDieselPower_kW; // Heat excluded as it is assumes it will not be imported/exported! Total heatbalance should be 0.
v_currentEnergyExport_kW = max(0,-v_totalElectricPower_kW) + max(0, -v_totalMethanePower_kW) + max(0,-v_totalHydrogenPower_kW);
		
// Current consumption and production

]]></Body>
				</Function>
				<Function AccessType="private" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1671636439933</Id>
					<Name><![CDATA[f_initializeForecasts]]></Name>
					<X>590</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_WindYieldForecast_fr = 0;
v_SolarYieldForecast_fr = 0;
v_epexForecast_eurpkWh = 0;
for (double ts_h = t_h; ts_h<t_h+p_forecastTime_h; ts_h += p_timeStep_h) {
	v_WindYieldForecast_fr += tf_p_wind_e_normalized(ts_h)/(p_forecastTime_h/p_timeStep_h);
	v_SolarYieldForecast_fr += tf_p_solar_e_normalized(ts_h)/(p_forecastTime_h/p_timeStep_h);
	//v_epexForecast_eurpkWh += nationalEnergyMarket.tf_dayAheadElectricityPricing_eurpMWh(ts_h)/(p_forecastTime_h/p_timeStep_h)/1000;
}
//v_epexForecast_eurpkWh += 0.17;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1682943799138</Id>
					<Name><![CDATA[f_calculateContractCosts]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-819</X><Y>689</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[a]]></Name>
						<Type><![CDATA[Actor]]></Type>
					</Parameter>
					<Body><![CDATA[double v_totalMethaneUsed_kWh = 0;
double v_totalDieselUsed_kWh = 0;
double v_totalHydrogenUsed_kWh = 0;
double v_totalHeatUsed_kWh = 0;

double v_balanceElectricityDelivery_eur = 0;
double v_balanceElectricityTransport_eur = 0;
double v_balanceElectricityTax_eur = 0;

String p_actorID = "";
ArrayList<J_Contract> c_actorContracts = null;

if (a instanceof ConnectionOwner) {
	ConnectionOwner c = (ConnectionOwner)a;
	p_actorID = c.p_actorID;
	c_actorContracts = c.c_actorContracts;
	v_totalMethaneUsed_kWh = c.v_totalMethaneUsed_kWh;
	v_totalDieselUsed_kWh = c.v_totalDieselUsed_kWh;
	v_totalHydrogenUsed_kWh = c.v_totalHydrogenUsed_kWh;
	v_totalHeatUsed_kWh = c.v_totalHeatUsed_kWh;
	v_balanceElectricityDelivery_eur = c.v_balanceElectricityDelivery_eur;
	v_balanceElectricityTransport_eur = c.v_balanceElectricityTransport_eur;
	v_balanceElectricityTax_eur = c.v_balanceElectricityTax_eur;
} else {
	EnergyCoop c = (EnergyCoop)a;
	p_actorID = c.p_actorID;
	c_actorContracts = c.c_actorContracts;
	v_totalMethaneUsed_kWh = c.v_methaneImported_kWh - c.v_methaneExported_kWh;
	v_totalDieselUsed_kWh = c.v_dieselImported_kWh;
	v_totalHydrogenUsed_kWh = c.v_hydrogenImported_kWh - c.v_hydrogenExported_kWh;
	v_totalHeatUsed_kWh = c.v_heatImported_kWh - c.v_heatExported_kWh;
	v_balanceElectricityDelivery_eur = c.v_balanceElectricityDelivery_eur;
	v_balanceElectricityTransport_eur = c.v_balanceElectricityTransport_eur;
	v_balanceElectricityTax_eur = c.v_balanceElectricityTax_eur;
}

J_DeliveryContract methaneDeliveryContract = null;
J_DeliveryContract hydrogenDeliveryContract = null;
J_DeliveryContract dieselDeliveryContract = null;
J_DeliveryContract heatDeliveryContract = null;

J_TaxContract methaneTaxContract = null;
J_TaxContract hydrogenTaxContract = null;
J_TaxContract dieselTaxContract = null;
J_TaxContract heatTaxContract = null;

J_TransportContract methaneTransportContract = null;
J_TransportContract hydrogenTransportContract = null;
J_TransportContract dieselTransportContract = null;
J_TransportContract heatTransportContract = null;

J_ConnectionContract methaneConnectionContract = null;
J_ConnectionContract hydrogenConnectionContract = null;
J_ConnectionContract dieselConnectionContract = null;
J_ConnectionContract heatConnectionContract = null;


//for(J_Contract co: c.c_actorContracts) {
for( int idx = 0 ; idx<c_actorContracts.size() ; idx++) {
	J_Contract co = c_actorContracts.get(idx);
	co.contractHolder = p_actorID;	
	
	if(co.energyCarrier == OL_EnergyCarrierType.ELECTRICITY) {
		if(co.contractType.equals(OL_ContractType.DELIVERY)) {
			co.FinancialTransactionVolume_eur = -v_balanceElectricityDelivery_eur;
		} else if(co.contractType.equals(OL_ContractType.TRANSPORT)) {
			co.FinancialTransactionVolume_eur = -v_balanceElectricityTransport_eur;			
		} else if(co.contractType.equals(OL_ContractType.TAX)) {
			co.FinancialTransactionVolume_eur = -v_balanceElectricityTax_eur;			
		}
		co.FinancialTransactionVolume_eur += co.annualFee_eur;
		j_dataOut.contractData.add(co);
	} else if (co.energyCarrier == OL_EnergyCarrierType.METHANE) {
		if(co.contractType.equals(OL_ContractType.DELIVERY)) {
				methaneDeliveryContract = (J_DeliveryContract)co;
				methaneDeliveryContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.TRANSPORT)) {
				methaneTransportContract = (J_TransportContract) co;
				methaneTransportContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.TAX)) {
				methaneTaxContract = (J_TaxContract)co;
				methaneTaxContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.CONNECTION)) {
				methaneConnectionContract = (J_ConnectionContract)co;
				methaneConnectionContract.idx = idx;
			}
			//co.EnergyTransactionVolume_kWh = -c.v_totalMethaneUsed_kWh;
	} else if (co.energyCarrier == OL_EnergyCarrierType.HYDROGEN) {
		if(co.contractType.equals(OL_ContractType.DELIVERY)) {
				hydrogenDeliveryContract = (J_DeliveryContract)co;
				hydrogenDeliveryContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.TRANSPORT)) {
				hydrogenTransportContract = (J_TransportContract)co;
				hydrogenTransportContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.TAX)) {
				hydrogenTaxContract = (J_TaxContract)co;
				hydrogenTaxContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.CONNECTION)) {
				hydrogenConnectionContract = (J_ConnectionContract)co;
				hydrogenConnectionContract.idx = idx;
			}
		//co.EnergyTransactionVolume_kWh = -c.v_totalHydrogenUsed_kWh;
	} else if (co.energyCarrier == OL_EnergyCarrierType.HEAT) {
		if(co.contractType.equals(OL_ContractType.DELIVERY)) {
				heatDeliveryContract = (J_DeliveryContract)co;
				heatDeliveryContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.TRANSPORT)) {
				heatTransportContract = (J_TransportContract)co;
				heatTransportContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.TAX)) {
				heatTaxContract = (J_TaxContract)co;
				heatTaxContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.CONNECTION)) {
				heatConnectionContract = (J_ConnectionContract)co;
				heatConnectionContract.idx = idx;
			}
		//co.EnergyTransactionVolume_kWh = -c.v_totalHeatUsed_kWh;
	} else if (co.energyCarrier == OL_EnergyCarrierType.DIESEL) {
		if(co.contractType.equals(OL_ContractType.DELIVERY)) {
				dieselDeliveryContract = (J_DeliveryContract)co;
				dieselDeliveryContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.TRANSPORT)) {
				dieselTransportContract = (J_TransportContract)co;
				dieselTransportContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.TAX)) {
				dieselTaxContract = (J_TaxContract)co;
				dieselTaxContract.idx = idx;
			} else if(co.contractType.equals(OL_ContractType.CONNECTION)) {
				dieselConnectionContract = (J_ConnectionContract)co;
				dieselConnectionContract.idx = idx;
			}
		//co.EnergyTransactionVolume_kWh = -c.v_totalDieselUsed_kWh;
	}		
}

f_contractCostsPerEnergyCarrier(v_totalMethaneUsed_kWh, methaneDeliveryContract, methaneConnectionContract, methaneTransportContract, methaneTaxContract);
f_contractCostsPerEnergyCarrier(v_totalDieselUsed_kWh, dieselDeliveryContract, dieselConnectionContract, dieselTransportContract, dieselTaxContract);
f_contractCostsPerEnergyCarrier(v_totalHydrogenUsed_kWh, hydrogenDeliveryContract, hydrogenConnectionContract, hydrogenTransportContract, hydrogenTaxContract);
f_contractCostsPerEnergyCarrier(v_totalHeatUsed_kWh, heatDeliveryContract, heatConnectionContract, heatTransportContract, heatTaxContract);

/*
//// Handle all methane costs
double methaneTotalCostsForVAT_eur = 0;
if (methaneDeliveryContract!= null) {
	if (v_totalMethaneUsed_kWh > 0) {
		methaneDeliveryContract.FinancialTransactionVolume_eur = v_totalMethaneUsed_kWh * methaneDeliveryContract.deliveryPrice_eurpkWh;
	} else {
		methaneDeliveryContract.FinancialTransactionVolume_eur = v_totalMethaneUsed_kWh * methaneDeliveryContract.feedinPrice_eurpkWh;
	}
	methaneDeliveryContract.FinancialTransactionVolume_eur += methaneDeliveryContract.annualFee_eur;
	methaneTotalCostsForVAT_eur += methaneDeliveryContract.FinancialTransactionVolume_eur;

	j_dataOut.contractData.add((J_Contract)methaneDeliveryContract);
}
if (methaneTransportContract!= null) {
	// Transport tariffs don't apply for methane
	methaneTransportContract.FinancialTransactionVolume_eur += methaneTransportContract.annualFee_eur;
	methaneTotalCostsForVAT_eur += methaneTransportContract.FinancialTransactionVolume_eur;
	j_dataOut.contractData.add((J_Contract)methaneTransportContract);
}
if (methaneConnectionContract!= null) {	
	// Connection contracts only have annualFee, no volume-dependent costs
	methaneConnectionContract.FinancialTransactionVolume_eur += methaneConnectionContract.annualFee_eur;
	methaneTotalCostsForVAT_eur += methaneConnectionContract.FinancialTransactionVolume_eur;
	j_dataOut.contractData.add((J_Contract)methaneTransportContract);
}
if (methaneTaxContract != null) {
	if (v_totalMethaneUsed_kWh > 0) {
		methaneTaxContract.FinancialTransactionVolume_eur = v_totalMethaneUsed_kWh * methaneTaxContract.deliveryTax_eurpkWh;
	} else {
		methaneTaxContract.FinancialTransactionVolume_eur = v_totalMethaneUsed_kWh * methaneTaxContract.feedinTax_eurpkWh;
	}
	methaneTaxContract.FinancialTransactionVolume_eur += methaneTaxContract.annualFee_eur;
	methaneTotalCostsForVAT_eur += methaneTaxContract.FinancialTransactionVolume_eur;
	// Apply VAT to everything (effectively saldering of everything! Not really correct for methane...)
	methaneTaxContract.FinancialTransactionVolume_eur += methaneTotalCostsForVAT_eur * methaneTaxContract.proportionalTax_pct + methaneTaxContract.annualFee_eur;
	j_dataOut.contractData.add((J_Contract)methaneTaxContract);
}

//// Handle all diesel costs
double dieselTotalCostsForVAT_eur = 0;
if (dieselDeliveryContract!= null) {
	if (v_totalDieselUsed_kWh > 0) {
		dieselDeliveryContract.FinancialTransactionVolume_eur = v_totalDieselUsed_kWh * dieselDeliveryContract.deliveryPrice_eurpkWh;
	} else {
		dieselDeliveryContract.FinancialTransactionVolume_eur = v_totalDieselUsed_kWh * dieselDeliveryContract.feedinPrice_eurpkWh;
	}
	dieselDeliveryContract.FinancialTransactionVolume_eur += dieselDeliveryContract.annualFee_eur;
	dieselTotalCostsForVAT_eur += dieselDeliveryContract.FinancialTransactionVolume_eur;

	j_dataOut.contractData.add((J_Contract)dieselDeliveryContract);
}
if (dieselTransportContract!= null) {
	// Transport tariffs don't apply for diesel
	dieselTransportContract.FinancialTransactionVolume_eur += dieselTransportContract.annualFee_eur;
	dieselTotalCostsForVAT_eur += dieselTransportContract.FinancialTransactionVolume_eur;

	j_dataOut.contractData.add((J_Contract)dieselTransportContract);
}
if (dieselConnectionContract!= null) {	
	// Connection contracts only have annualFee, no volume-dependent costs
	dieselConnectionContract.FinancialTransactionVolume_eur += dieselConnectionContract.annualFee_eur;
	dieselTotalCostsForVAT_eur += dieselConnectionContract.FinancialTransactionVolume_eur;

	j_dataOut.contractData.add((J_Contract)dieselTransportContract);
}
if (dieselTaxContract != null) {
	if (v_totalDieselUsed_kWh > 0) {
		dieselTaxContract.FinancialTransactionVolume_eur = v_totalDieselUsed_kWh * dieselTaxContract.deliveryTax_eurpkWh;
	} else {
		dieselTaxContract.FinancialTransactionVolume_eur = v_totalDieselUsed_kWh * dieselTaxContract.feedinTax_eurpkWh;
	}
	dieselTaxContract.FinancialTransactionVolume_eur += dieselTaxContract.annualFee_eur;
	dieselTotalCostsForVAT_eur += dieselTaxContract.FinancialTransactionVolume_eur;

	// Apply VAT to everything (effectively saldering of everything! Not really correct for diesel...)
	dieselTaxContract.FinancialTransactionVolume_eur += dieselTotalCostsForVAT_eur * dieselTaxContract.proportionalTax_pct + dieselTaxContract.annualFee_eur;
	j_dataOut.contractData.add((J_Contract)dieselTaxContract);
}

//// Handle all hydrogen costs
double hydrogenTotalCostsForVAT_eur = 0;
if (hydrogenDeliveryContract!= null) {
	if (v_totalHydrogenUsed_kWh > 0) {
		hydrogenDeliveryContract.FinancialTransactionVolume_eur = v_totalHydrogenUsed_kWh * hydrogenDeliveryContract.deliveryPrice_eurpkWh;
	} else {
		hydrogenDeliveryContract.FinancialTransactionVolume_eur = v_totalHydrogenUsed_kWh * hydrogenDeliveryContract.feedinPrice_eurpkWh;
	}
	hydrogenDeliveryContract.FinancialTransactionVolume_eur += hydrogenDeliveryContract.annualFee_eur;
	hydrogenTotalCostsForVAT_eur += hydrogenDeliveryContract.FinancialTransactionVolume_eur;

	j_dataOut.contractData.add((J_Contract)hydrogenDeliveryContract);
}
if (hydrogenTransportContract!= null) {
	// Transport tariffs don't apply for hydrogen
	hydrogenTransportContract.FinancialTransactionVolume_eur += hydrogenTransportContract.annualFee_eur;
	hydrogenTotalCostsForVAT_eur += hydrogenTransportContract.FinancialTransactionVolume_eur;

	j_dataOut.contractData.add((J_Contract)hydrogenTransportContract);
}
if (hydrogenConnectionContract!= null) {	
	// Connection contracts only have annualFee, no volume-dependent costs
	hydrogenConnectionContract.FinancialTransactionVolume_eur += hydrogenConnectionContract.annualFee_eur;
	hydrogenTotalCostsForVAT_eur += hydrogenConnectionContract.FinancialTransactionVolume_eur;

	j_dataOut.contractData.add((J_Contract)hydrogenTransportContract);
}
if (hydrogenTaxContract != null) {
	if (v_totalHydrogenUsed_kWh > 0) {
		hydrogenTaxContract.FinancialTransactionVolume_eur = v_totalHydrogenUsed_kWh * hydrogenTaxContract.deliveryTax_eurpkWh;
	} else {
		hydrogenTaxContract.FinancialTransactionVolume_eur = v_totalHydrogenUsed_kWh * hydrogenTaxContract.feedinTax_eurpkWh;
	}
	hydrogenTaxContract.FinancialTransactionVolume_eur += hydrogenTaxContract.annualFee_eur ;
	hydrogenTotalCostsForVAT_eur += hydrogenTaxContract.FinancialTransactionVolume_eur
	
	// Apply VAT to everything (effectively saldering of everything! Not really correct for hydrogen...)
	hydrogenTaxContract.FinancialTransactionVolume_eur += hydrogenTotalCostsForVAT_eur * hydrogenTaxContract.proportionalTax_pct + hydrogenTaxContract.annualFee_eur;
	j_dataOut.contractData.add((J_Contract)hydrogenTaxContract);
}

//// Handle all heat costs
double heatTotalCostsForVAT_eur = 0;
if (heatDeliveryContract!= null) {
	if (v_totalHeatUsed_kWh > 0) {
		heatDeliveryContract.FinancialTransactionVolume_eur = v_totalHeatUsed_kWh * heatDeliveryContract.deliveryPrice_eurpkWh;
	} else {
		heatDeliveryContract.FinancialTransactionVolume_eur = v_totalHeatUsed_kWh * heatDeliveryContract.feedinPrice_eurpkWh;
	}
	heatDeliveryContract.FinancialTransactionVolume_eur += heatDeliveryContract.annualFee_eur;
	heatTotalCostsForVAT_eur += heatDeliveryContract.FinancialTransactionVolume_eur;
	j_dataOut.contractData.add((J_Contract)heatDeliveryContract);
}
if (heatTransportContract!= null) {
	// Transport tariffs don't apply for heat
	heatTransportContract.FinancialTransactionVolume_eur += heatTransportContract.annualFee_eur;
	heatTotalCostsForVAT_eur += heatTransportContract.FinancialTransactionVolume_eur;
	j_dataOut.contractData.add((J_Contract)heatTransportContract);
}
if (heatConnectionContract!= null) {	
	// Connection contracts only have annualFee, no volume-dependent costs
	heatConnectionContract.FinancialTransactionVolume_eur += heatConnectionContract.annualFee_eur;
	heatTotalCostsForVAT_eur += heatConnectionContract.FinancialTransactionVolume_eur;
	j_dataOut.contractData.add((J_Contract)heatTransportContract);
}
if (heatTaxContract != null) {
	if (v_totalHeatUsed_kWh > 0) {
		heatTaxContract.FinancialTransactionVolume_eur = v_totalHeatUsed_kWh * heatTaxContract.deliveryTax_eurpkWh;
	} else {
		heatTaxContract.FinancialTransactionVolume_eur = v_totalHeatUsed_kWh * heatTaxContract.feedinTax_eurpkWh;
	}
	heatTotalCostsForVAT_eur += heatTaxContract.FinancialTransactionVolume_eur + heatTaxContract.annualFee_eur ;
	// Apply VAT to everything (effectively saldering of everything! Not really correct for heat...)
	heatTaxContract.FinancialTransactionVolume_eur += heatTotalCostsForVAT_eur * heatTaxContract.proportionalTax_pct + heatTaxContract.annualFee_eur;
	j_dataOut.contractData.add((J_Contract)heatTaxContract);
}
//j_dataOut.contractData.add(co);
*/]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1683018740227</Id>
					<Name><![CDATA[f_contractCostsPerEnergyCarrier]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-819</X><Y>709</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[energyUsed_kWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[deliveryContract]]></Name>
						<Type><![CDATA[J_DeliveryContract]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[connectionContract]]></Name>
						<Type><![CDATA[J_ConnectionContract]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[transportContract]]></Name>
						<Type><![CDATA[J_TransportContract]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[taxContract]]></Name>
						<Type><![CDATA[J_TaxContract]]></Type>
					</Parameter>
					<Body><![CDATA[double totalCostsForVAT_eur = 0;
if (deliveryContract!= null) {
	if (energyUsed_kWh > 0) {
		deliveryContract.FinancialTransactionVolume_eur = energyUsed_kWh * deliveryContract.deliveryPrice_eurpkWh;
	} else {
		deliveryContract.FinancialTransactionVolume_eur = energyUsed_kWh * deliveryContract.feedinPrice_eurpkWh;
	}
	deliveryContract.FinancialTransactionVolume_eur += deliveryContract.annualFee_eur;
	totalCostsForVAT_eur += deliveryContract.FinancialTransactionVolume_eur;

	j_dataOut.contractData.add((J_Contract)deliveryContract);
}
if (transportContract!= null) {
	// Transport tariffs don't apply for energy
	transportContract.FinancialTransactionVolume_eur += transportContract.annualFee_eur;
	totalCostsForVAT_eur += transportContract.FinancialTransactionVolume_eur;
	j_dataOut.contractData.add((J_Contract)transportContract);
	
}
if (connectionContract!= null) {	
	// Connection contracts only have annualFee, no volume-dependent costs
	connectionContract.FinancialTransactionVolume_eur += connectionContract.annualFee_eur;
	totalCostsForVAT_eur += connectionContract.FinancialTransactionVolume_eur;
	j_dataOut.contractData.add((J_Contract)connectionContract);

}
if (taxContract != null) {
	if (energyUsed_kWh > 0) {
		taxContract.FinancialTransactionVolume_eur = energyUsed_kWh * taxContract.deliveryTax_eurpkWh;
	} else {
		taxContract.FinancialTransactionVolume_eur = energyUsed_kWh * taxContract.feedinTax_eurpkWh;
	}
	taxContract.FinancialTransactionVolume_eur += taxContract.annualFee_eur;
	totalCostsForVAT_eur += taxContract.FinancialTransactionVolume_eur;
	// Apply VAT to everything
	taxContract.FinancialTransactionVolume_eur += totalCostsForVAT_eur * taxContract.proportionalTax_pct;
	j_dataOut.contractData.add((J_Contract)taxContract);
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1696521316832</Id>
					<Name><![CDATA[f_runRapidSimulation]]></Name>
					<X>790</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[pauseSimulation();

traceln(" ");
traceln("*** Running headless simulation *** ");
traceln(" ");

double startTime1 = System.currentTimeMillis();

// Store and reset model states...

for (J_EA EA : c_energyAssets) {
	EA.storeStatesAndReset();		
}

for (GridConnection GC : c_gridConnections) {
	GC.f_resetStates();
	GC.c_tripTrackers.forEach(tt->tt.storeAndResetState());
	GC.c_tripTrackers.forEach(tt->tt.prepareNextActivity(0));
}
for (GridConnection GC : c_subGridConnections) {
	GC.f_resetStates();
}

for (GridNode GN : pop_gridNodes) {
	GN.f_resetStates();
}

for (ConnectionOwner CO : pop_connectionOwners) {
	CO.f_resetStates();
}

for (EnergyCoop EC : pop_energyCoops) {
	EC.f_resetStates();
}


t_h=0;
int v_timeStepsElapsed_live = v_timeStepsElapsed;
v_timeStepsElapsed=0;
f_initializeForecasts();
// When adding actors, also reset their states! Not used yet for Drechtsteden...

v_isRapidRun = true;
f_resetAnnualValues();

//Run energy calculations loop
for(t_h = 0; t_h < 8760 ; t_h += p_timeStep_h){
	// Update time-series for model-wide variables (such as temps, wind, etc.)
	double startTime = System.currentTimeMillis();
	f_updateTimeseries(t_h);
	v_timeSeriesRuntime_ms += (System.currentTimeMillis()-startTime);
	
	// Operate assets on each gridConnection
	startTime = System.currentTimeMillis();
	f_calculateGridConnectionFlows(t_h);
	v_gridConnectionsRuntime_ms += (System.currentTimeMillis()-startTime);
	
	// Calculate grid node flows
	startTime = System.currentTimeMillis();
	f_calculateGridnodeFlows(t_h);
	v_gridNodesRuntime_ms += (System.currentTimeMillis()-startTime);
	
	// Financial accounting of energy flows
	startTime = System.currentTimeMillis();
	f_calculateFinancialFlows(t_h);
	v_financialsRuntime_ms += (System.currentTimeMillis()-startTime);
	
	// Update elektriciteitsprijzen
	startTime = System.currentTimeMillis();
	f_updatePricesForNextTimestep(t_h);
	v_incentivesRuntime_ms += (System.currentTimeMillis()-startTime);


	/*// Update time-series for model-wide variables (such as temps, wind, etc.)
	f_updateTimeseries(t_h);
	
	// Operate assets on each gridConnection
	f_calculateGridConnectionFlows(t_h);
	
	// Calculate grid node flows
	f_calculateGridnodeFlows(t_h);
	
	// Financial accounting of energy flows
	f_calculateFinancialFlows(t_h);
	
	// Update elektriciteitsprijzen
	f_updatePricesForNextTimestep(t_h);
	*/
	f_updateArrays(t_h);
	
	v_timeStepsElapsed++;
}	
//traceln("HVMV overloaded hours: %s", c_gridNodesHSMS.get(0).v_totalTimeOverloaded_h);
double startTime = System.currentTimeMillis();

if( p_gridNodeTimeSeriesExcel != null){
	f_writeGridNodeTimeseriesToExcel();
}

f_calculateKPIs();
v_kpiCalcsRuntime_ms = (System.currentTimeMillis()-startTime);
traceln("---FINISHED YEAR MODEL RUN----");

//numberOfRuns++;

//Return model to previous state to continue simulation run
v_timeStepsElapsed = v_timeStepsElapsed_live;

for (J_EA EA : c_energyAssets) {
	EA.restoreStates();		
}
for (GridNode GN : pop_gridNodes) {
	//GN.f_resetStates();
}
for (GridConnection GC : c_gridConnections) {
	//GC.f_resetStates();
	GC.f_resetStatesAfterRapidRun();
	GC.c_tripTrackers.forEach(tt->tt.restoreState());	
	GC.c_tripTrackers.forEach(tt->tt.prepareNextActivity(time(MINUTE)));
}
f_setInitialValues();

v_isRapidRun = false;

double duration = System.currentTimeMillis() - startTime1;

traceln("*** headless run duration: "+ duration/1000 + " s ***");

t_h = time(HOUR);
f_initializeForecasts();
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1698922757486</Id>
					<Name><![CDATA[f_calculateKPIs]]></Name>
					<Description><![CDATA[Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6]]></Description>
					<X>-840</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Totals from accumulators:
//v_totalEnergyUsed_MWh = Arrays.stream( a_annualEnergyConsumption_kW ).sum() * p_timeStep_h / 1000;
v_totalEnergyUsed_MWh = acc_annualEnergyConsumption_kW.getSum() * p_timeStep_h / 1000;
v_totalEnergyProduced_MWh = acc_annualEnergyProduction_kW.getSum() * p_timeStep_h / 1000;
v_totalEnergyCurtailed_MWh = acc_annualEnergyCurtailed_kW.getSum() * p_timeStep_h / 1000;

//v_totalEnergyProduced_MWh= Arrays.stream( a_annualEnergyProduction_kW ).sum() * p_timeStep_h / 1000;
v_totalElectricityProduced_MWh = acc_annualElectricityProduction_kW.getSum() * p_timeStep_h / 1000; // Arrays.stream( a_annualElectricityProduction_kW ).sum() * p_timeStep_h / 1000;
v_totalElectricityConsumed_MWh = acc_annualElectricityConsumption_kW.getSum() * p_timeStep_h / 1000; // Arrays.stream( a_annualElectricityConsumption_kW ).sum() * p_timeStep_h / 1000;

// GridConnection KPIs (can these be done on-demand? What is dependency of other KPIs on GC KPI results?
if (b_parallelizeGridConnections) {
	c_gridConnections.parallelStream().forEach(gc -> gc.f_calculateKPIs());
} else {
	c_gridConnections.forEach(gc -> gc.f_calculateKPIs());
}
c_subGridConnections.forEach(gc -> gc.f_calculateKPIs());

for(GridConnection g: c_gridConnections){ // 
	    c_gridConnectionOverload_fr.put(g.p_gridConnectionID, g.v_maxConnectionLoad_fr);
	    //v_totalElectricityConsumed_MWh += g.v_totalElectricityConsumed_MWh;
	    //v_totalElectricityProduced_MWh += g.v_totalElectricityProduced_MWh;
	    v_totalHeatProduced_MWh += g.v_totalHeatProduced_MWh;
}	

pop_gridNodes.forEach(gn -> gn.f_calculateKPIs()); // This concerns a relatively small collection, so no need for parallelStream.

//traceln("Check methane import from array: %s MWh", Arrays.stream(a_annualMethaneBalance_kW).sum()* p_timeStep_h / 1000);

f_sumMolecularEnergyFlows();
f_sumGridNodeLoads();
f_sumBatteryUse();
f_duurkrommes();

pop_energyCoops.forEach(ec -> ec.f_calculateKPIs()); // Must go after f_sumGridNodeLoads() because it uses total electricity export!

v_totalImportedEnergy_MWh = v_totalElectricityImport_MWh + max(0,v_totalMethaneImport_MWh-v_totalMethaneExport_MWh) + max(0,v_totalHydrogenImport_MWh-v_totalHydrogenExport_MWh) + v_totalDieselImport_MWh;
v_totalExportedEnergy_MWh = v_totalElectricityExport_MWh + max(0,v_totalMethaneExport_MWh-v_totalMethaneImport_MWh) + max(0,v_totalHydrogenExport_MWh-v_totalHydrogenImport_MWh);
// Electricity self consumption
v_individualSelfSufficiency_fr = sum(c_gridConnections, gc -> gc.v_totalElectricitySelfConsumed_MWh) / v_totalElectricityConsumed_MWh;
v_individualSelfConsumption_fr = sum(c_gridConnections, gc -> gc.v_totalElectricitySelfConsumed_MWh) / v_totalElectricityProduced_MWh;
v_totalElectricitySelfConsumed_MWh = max(0, v_totalElectricityConsumed_MWh - v_totalElectricityImport_MWh);
v_collectiveSelfConsumption_fr = v_totalElectricitySelfConsumed_MWh / v_totalElectricityProduced_MWh;

traceln("");
traceln("__--** Totals **--__");
traceln("Energy consumed: "+ v_totalEnergyUsed_MWh + " MWh");
traceln("Energy produced: "+ v_totalEnergyProduced_MWh + " MWh");
traceln("Energy import: "+ v_totalImportedEnergy_MWh + " MWh");
traceln("Energy export: "+ v_totalExportedEnergy_MWh + " MWh");

// Peak model-wide electricity grid loads
v_peakElecExport_kW=Arrays.stream(acc_annualElectricityBalance_kW.getTimeSeries()).min().orElse(-1);
v_peakElecImport_kW=Arrays.stream(acc_annualElectricityBalance_kW.getTimeSeries()).max().orElse(-1);
v_summerWeekPeakElecImport_kW=data_summerWeekNetLoad_kW.getYMax();
v_summerWeekPeakElecExport_kW=-data_summerWeekNetLoad_kW.getYMin();
v_winterWeekPeakElecImport_kW=data_winterWeekNetLoad_kW.getYMax();
v_winterWeekPeakElecExport_kW=-data_winterWeekNetLoad_kW.getYMin();

v_summerWeekTotalImport_MWh = acc_summerTotalImport_kW.getIntegral()/1000; // Arrays.stream( Arrays.copyOfRange(a_annualTotalImport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekTotalExport_MWh = acc_summerTotalExport_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualTotalExport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekEnergyUsed_MWh = acc_summerEnergyConsumption_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyConsumption_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekEnergyProduced_MWh = acc_summerEnergyProduction_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyProduction_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;

v_summerWeekSelfConsumedEnergy_MWh = max(0,v_summerWeekEnergyUsed_MWh - v_summerWeekTotalImport_MWh); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	
double v_summerWeekSelfConsumedEnergyCheck_MWh = v_summerWeekEnergyProduced_MWh - v_summerWeekTotalExport_MWh;
//v_summerWeekEnergyCurtailed_MWh=Arrays.copyOfRange(a_annualEnergyCurtailed_kW, energyModel.p_startHourSummerWeek,roundToInt(24*7/energyModel.p_timeStep_h))*energyModel.p_timeStep_h / 1000;
v_summerWeekMethaneImport_MWh = acc_summerMethaneBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_summerWeekDieselImport_MWh = acc_summerDieselBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_summerWeekHydrogenImport_MWh = acc_summerHydrogenBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_summerWeekHydrogenExport_MWh = -acc_summerHydrogenBalance_kW.getSumNeg() * p_timeStep_h / 1000;
// Electricity selfconsumed
v_summerWeekElectricityImport_MWh = acc_summerElectricityBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_summerWeekElectricityExport_MWh = -acc_summerElectricityBalance_kW.getSumNeg() * p_timeStep_h / 1000;
v_summerWeekElectricityConsumed_MWh = acc_summerElectricityConsumption_kW.getSum() * p_timeStep_h / 1000;
v_summerWeekElectricityProduced_MWh = acc_summerElectricityProduction_kW.getSum() * p_timeStep_h / 1000;

v_summerWeekSelfConsumedElectricity_MWh = max(0,v_summerWeekElectricityConsumed_MWh - v_summerWeekElectricityImport_MWh);

v_winterWeekTotalImport_MWh = acc_winterTotalImport_kW.getIntegral()/1000; // Arrays.stream( Arrays.copyOfRange(a_annualTotalImport_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_winterWeekTotalExport_MWh = acc_winterTotalExport_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualTotalExport_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_winterWeekEnergyUsed_MWh = acc_winterEnergyConsumption_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyConsumption_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_winterWeekEnergyProduced_MWh = acc_winterEnergyProduction_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyProduction_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;

v_winterWeekSelfConsumedEnergy_MWh = max(0,v_winterWeekEnergyUsed_MWh - v_winterWeekTotalImport_MWh); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	
double v_winterWeekSelfConsumedEnergyCheck_MWh = v_winterWeekEnergyProduced_MWh - v_winterWeekTotalExport_MWh;
//v_winterWeekEnergyCurtailed_MWh=Arrays.copyOfRange(a_annualEnergyCurtailed_kW, energyModel.p_startHourSummerWeek,roundToInt(24*7/energyModel.p_timeStep_h))*energyModel.p_timeStep_h / 1000;

v_winterWeekMethaneImport_MWh = acc_winterMethaneBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_winterWeekDieselImport_MWh = acc_winterDieselBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_winterWeekHydrogenImport_MWh = acc_winterHydrogenBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_winterWeekHydrogenExport_MWh = -acc_winterHydrogenBalance_kW.getSumNeg() * p_timeStep_h / 1000;
// Electricity selfconsumed
v_winterWeekElectricityImport_MWh = acc_winterElectricityBalance_kW.getSumPos() * p_timeStep_h / 1000;
v_winterWeekElectricityExport_MWh = -acc_winterElectricityBalance_kW.getSumNeg() * p_timeStep_h / 1000;
v_winterWeekElectricityConsumed_MWh = acc_winterElectricityConsumption_kW.getSum() * p_timeStep_h / 1000;
v_winterWeekElectricityProduced_MWh = acc_winterElectricityProduction_kW.getSum() * p_timeStep_h / 1000;

v_winterWeekSelfConsumedElectricity_MWh = max(0,v_winterWeekElectricityConsumed_MWh - v_winterWeekElectricityImport_MWh);

// Summerweek totals 
/*int startIdx = roundToInt(p_startHourSummerWeek/p_timeStep_h);
int endIdx = startIdx + roundToInt(24*7/p_timeStep_h);
v_summerWeekTotalImport_MWh = Arrays.stream( Arrays.copyOfRange(a_annualTotalImport_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_summerWeekTotalExport_MWh = Arrays.stream( Arrays.copyOfRange(a_annualTotalExport_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_summerWeekElectricityImport_MWh = Arrays.stream(Arrays.copyOfRange(a_annualElectricityBalance_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;
v_summerWeekElectricityExport_MWh = -Arrays.stream(Arrays.copyOfRange(a_annualElectricityBalance_kW, startIdx, endIdx)).filter(m -> m < 0).sum() * p_timeStep_h / 1000;
v_summerWeekMethaneImport_MWh = Arrays.stream(Arrays.copyOfRange(a_annualMethaneBalance_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;
v_summerWeekDieselImport_MWh = Arrays.stream(Arrays.copyOfRange(a_annualDieselBalance_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;
v_summerWeekHydrogenImport_MWh = Arrays.stream(Arrays.copyOfRange(a_annualHydrogenBalance_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;
v_summerWeekHydrogenExport_MWh = -Arrays.stream(Arrays.copyOfRange(a_annualHydrogenBalance_kW, startIdx, endIdx)).filter(m -> m < 0).sum() * p_timeStep_h / 1000;

v_summerWeekEnergyUsed_MWh = Arrays.stream( Arrays.copyOfRange(a_annualEnergyConsumption_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_summerWeekEnergyProduced_MWh = Arrays.stream( Arrays.copyOfRange(a_annualEnergyProduction_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_summerWeekElectricityConsumed_MWh = Arrays.stream(Arrays.copyOfRange(a_annualElectricityConsumption_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;

v_summerWeekSelfConsumedEnergy_MWh = v_summerWeekEnergyUsed_MWh - (v_summerWeekTotalImport_MWh + max(0,-v_deltaThermalEnergySinceStart_MWh)); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	
double v_summerWeekSelfConsumedEnergyCheck_MWh = v_summerWeekEnergyProduced_MWh -( v_summerWeekTotalExport_MWh + max(0,v_deltaThermalEnergySinceStart_MWh));

v_summerWeekSelfConsumedElectricity_MWh = max(0,v_summerWeekElectricityConsumed_MWh - v_summerWeekElectricityImport_MWh);
// Cap selfConsumedEnergy to >=0
v_summerWeekSelfConsumedEnergy_MWh=max(0,v_summerWeekSelfConsumedEnergy_MWh);
v_summerWeekSelfConsumedEnergyCheck_MWh=max(0,v_summerWeekSelfConsumedEnergyCheck_MWh);
traceln("Summerweek selfconsumed use/import based: %s, production/export based: %s", v_summerWeekSelfConsumedEnergy_MWh, v_summerWeekSelfConsumedEnergyCheck_MWh);

// Winterweek totals
startIdx = roundToInt(p_startHourWinterWeek/p_timeStep_h);
endIdx = startIdx + roundToInt(24*7/p_timeStep_h);
v_winterWeekTotalImport_MWh = Arrays.stream( Arrays.copyOfRange(a_annualTotalImport_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_winterWeekTotalExport_MWh = Arrays.stream( Arrays.copyOfRange(a_annualTotalExport_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_winterWeekElectricityImport_MWh = Arrays.stream(Arrays.copyOfRange(a_annualElectricityBalance_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;
v_winterWeekElectricityExport_MWh = -Arrays.stream(Arrays.copyOfRange(a_annualElectricityBalance_kW, startIdx, endIdx)).filter(m -> m < 0).sum() * p_timeStep_h / 1000;
v_winterWeekMethaneImport_MWh = Arrays.stream(Arrays.copyOfRange(a_annualMethaneBalance_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;
v_winterWeekDieselImport_MWh = Arrays.stream(Arrays.copyOfRange(a_annualDieselBalance_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;
v_winterWeekHydrogenImport_MWh = Arrays.stream(Arrays.copyOfRange(a_annualHydrogenBalance_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;
v_winterWeekHydrogenImport_MWh = -Arrays.stream(Arrays.copyOfRange(a_annualHydrogenBalance_kW, startIdx, endIdx)).filter(m -> m < 0).sum() * p_timeStep_h / 1000;

v_winterWeekEnergyUsed_MWh = Arrays.stream( Arrays.copyOfRange(a_annualEnergyConsumption_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_winterWeekEnergyProduced_MWh = Arrays.stream( Arrays.copyOfRange(a_annualEnergyProduction_kW, startIdx, endIdx) ).sum() * p_timeStep_h / 1000;
v_winterWeekElectricityConsumed_MWh = Arrays.stream(Arrays.copyOfRange(a_annualElectricityConsumption_kW, startIdx, endIdx)).filter(m -> m > 0).sum() * p_timeStep_h / 1000;

v_winterWeekSelfConsumedEnergy_MWh = v_winterWeekEnergyUsed_MWh - (v_winterWeekTotalImport_MWh + max(0,-v_deltaThermalEnergySinceStart_MWh)); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	
double v_winterWeekSelfConsumedEnergyCheck_MWh = v_winterWeekEnergyProduced_MWh - (v_winterWeekTotalExport_MWh + max(0,v_deltaThermalEnergySinceStart_MWh));

// Calc selfConsumedElectricity for winterweek
v_winterWeekSelfConsumedElectricity_MWh = max(0,v_winterWeekElectricityConsumed_MWh - v_winterWeekElectricityImport_MWh);
// Cap selfConsumedEnergy to >=0
v_winterWeekSelfConsumedEnergy_MWh=max(0,v_winterWeekSelfConsumedEnergy_MWh);
v_winterWeekSelfConsumedEnergyCheck_MWh=max(0,v_winterWeekSelfConsumedEnergyCheck_MWh);
traceln("winterweek selfconsumed use/import based: %s, production/export based: %s", v_winterWeekSelfConsumedEnergy_MWh, v_winterWeekSelfConsumedEnergyCheck_MWh);
*/
// Nighttime totals: yearly totays minus daytime totals
v_nighttimeEnergyUsed_MWh = v_totalEnergyUsed_MWh - v_daytimeEnergyUsed_MWh;
v_nighttimeEnergyProduced_MWh = v_totalEnergyProduced_MWh - v_daytimeEnergyProduced_MWh;
v_nighttimeElectricityConsumed_MWh = v_totalElectricityConsumed_MWh - v_daytimeElectricityConsumed_MWh;

v_nighttimeTotalExport_MWh = v_totalExportedEnergy_MWh - v_daytimeTotalExport_MWh;
v_nighttimeTotalImport_MWh = v_totalImportedEnergy_MWh - v_daytimeTotalImport_MWh;
v_nighttimeElectricityImport_MWh = v_totalElectricityImport_MWh - v_daytimeElectricityImport_MWh; 
v_nighttimeElectricityExport_MWh = max(0,v_totalElectricityExport_MWh - v_daytimeElectricityExport_MWh); 
v_nighttimeMethaneImport_MWh = v_totalMethaneImport_MWh - v_daytimeMethaneImport_MWh; 
v_nighttimeDieselImport_MWh = v_totalDieselImport_MWh - v_daytimeDieselImport_MWh;
v_nighttimeHydrogenImport_MWh = v_totalHydrogenImport_MWh - v_daytimeHydrogenImport_MWh;
v_nighttimeHydrogenExport_MWh = v_totalHydrogenExport_MWh - v_daytimeHydrogenExport_MWh;

// Weekend totals: yearly totals minus weekday totals
v_weekendEnergyUsed_MWh = v_totalEnergyUsed_MWh - v_weekdayEnergyUsed_MWh;
v_weekendEnergyProduced_MWh = v_totalEnergyProduced_MWh - v_weekdayEnergyProduced_MWh;
v_weekendElectricityConsumed_MWh = v_totalElectricityConsumed_MWh - v_weekdayElectricityConsumed_MWh;

v_weekendTotalExport_MWh = v_totalExportedEnergy_MWh - v_weekdayTotalExport_MWh;
v_weekendTotalImport_MWh = v_totalImportedEnergy_MWh - v_weekdayTotalImport_MWh;
v_weekendElectricityImport_MWh = v_totalElectricityImport_MWh - v_weekdayElectricityImport_MWh; 
v_weekendElectricityExport_MWh = max(0,v_totalElectricityExport_MWh - v_weekdayElectricityExport_MWh); 
v_weekendMethaneImport_MWh = v_totalMethaneImport_MWh - v_weekdayMethaneImport_MWh; 
v_weekendDieselImport_MWh = v_totalDieselImport_MWh - v_weekdayDieselImport_MWh;
v_weekendHydrogenImport_MWh = v_totalHydrogenImport_MWh - v_weekdayHydrogenImport_MWh;
v_weekendHydrogenExport_MWh = v_totalHydrogenExport_MWh - v_weekdayHydrogenExport_MWh;

// Selfconsumption for daytime, nighttime, weekday and weekend
v_daytimeSelfConsumedEnergy_MWh = max(0, v_daytimeEnergyProduced_MWh - v_daytimeTotalExport_MWh);
v_nighttimeSelfConsumedEnergy_MWh =  max(0, v_nighttimeEnergyProduced_MWh - v_nighttimeTotalExport_MWh);
v_weekdaySelfConsumedEnergy_MWh =  max(0, v_weekdayEnergyProduced_MWh - v_weekdayTotalExport_MWh);
v_weekendSelfConsumedEnergy_MWh =  max(0, v_weekendEnergyProduced_MWh - v_weekendTotalExport_MWh);

v_daytimeSelfConsumedElectricity_MWh = max(0, v_daytimeElectricityConsumed_MWh - v_daytimeElectricityImport_MWh);
v_nighttimeSelfConsumedElectricity_MWh = max(0, v_nighttimeElectricityConsumed_MWh - v_nighttimeElectricityImport_MWh);
v_weekdaySelfConsumedElectricity_MWh = max(0, v_weekdayElectricityConsumed_MWh - v_weekdayElectricityImport_MWh);
v_weekendSelfConsumedElectricity_MWh = max(0, v_weekendElectricityConsumed_MWh - v_weekendElectricityImport_MWh);

//v_nighttimePeakElecImport_kW = max(v_nighttimePeakElecImport_kW,v_currentElectricityImport_kW);
//v_nighttimePeakElecExport_kW = max(v_nighttimePeakElecExport_kW,v_currentElectricityExport_kW);


// *** Total energy balance ***
//double electricityProduced_MWh = 0;
//double totalDistanceTrucks_km = 0;
double deltaThermalEnergySinceStart_MWh = 0;
double totalAmbientHeating_MWh = 0;
double totalEnergyCurtailed_MWh = 0;
double totalEnergyProduced_MWh = 0;
double totalEnergyUsed_MWh = 0;
double totalEnergyChargedOutsideModel_MWh = 0;
double totalHeatProduced_MWh = 0;
for (J_EA e : c_energyAssets) {
	if (((GridConnection) e.getParentAgent()).v_isActive ) {
	
		double EnergyUsed_kWh = e.getEnergyUsed_kWh();
		//double electricityProduced_kWh = 0;

		//energyConsumed_MWh += max(0,EnergyUsed_kWh)/1000;
		//energyProduced_MWh +=max(0,-EnergyUsed_kWh)/1000;
		if (EnergyUsed_kWh > 0) {
		
			/*if (e instanceof J_EAConversionCurtailer || e instanceof J_EAConversionCurtailerHeat) {
				totalEnergyProduced_MWh -= EnergyUsed_kWh/1000;
				totalEnergyCurtailed_MWh += EnergyUsed_kWh/1000;
			} else */
			if( e instanceof J_EAConversionGasCHP ) {
				totalEnergyUsed_MWh += EnergyUsed_kWh/1000;
				//electricityProduced_kWh = ((J_EAConversionGasCHP)e).getElectricityProduced_kWh();
				//electricityProduced_MWh += electricityProduced_kWh/1000;
			} else {
				totalEnergyUsed_MWh += EnergyUsed_kWh/1000;
			}		
			if ( e instanceof J_EABuilding ) {
				totalEnergyProduced_MWh += ((J_EABuilding)e).energyAbsorbed_kWh/1000;
				deltaThermalEnergySinceStart_MWh += (((J_EABuilding)e).getCurrentTemperature()-18)*((J_EABuilding)e).getHeatCapacity_JpK()/3.6e9;
			}
		} else {
			/*if( e.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC ||  e.energyAssetType == OL_EnergyAssetType.WINDMILL){
				electricityProduced_MWh -= EnergyUsed_kWh/1000;
			}*/
			totalEnergyProduced_MWh -= EnergyUsed_kWh/1000;
		}
		if (e instanceof J_EABuilding) {
			totalAmbientHeating_MWh += ((J_EABuilding)e).energyAbsorbed_kWh/1000;
			totalHeatProduced_MWh += ((J_EABuilding)e).energyAbsorbed_kWh/1000;						
		}
		if (e instanceof J_EAStorageHeat) {
			totalAmbientHeating_MWh += ((J_EAStorageHeat)e).energyAbsorbed_kWh/1000;
			totalHeatProduced_MWh += ((J_EAStorageHeat)e).energyAbsorbed_kWh/1000;						
		}
		if (e instanceof J_EAEV) {
			totalEnergyChargedOutsideModel_MWh += ((J_EAEV)e).getEnergyChargedOutsideModelArea_kWh()/1000;
		}
		if (e instanceof J_EAConversionHeatPump) {
			totalHeatProduced_MWh -= EnergyUsed_kWh/1000;						
		}
	}
}
traceln("Check energy used from array and from energy assets: %s MWh", ( v_totalEnergyUsed_MWh - totalEnergyUsed_MWh) );
traceln("Check energy producted from array and from energy assets: %s MWh", ( v_totalEnergyProduced_MWh - totalEnergyProduced_MWh) );
//traceln("Trucks have traveled " + totalDistanceTrucks_km + " km");

//Total selfconsumption, selfsufficiency
double v_totalDeltaStoredEnergy_MWh = v_batteryStoredEnergyDeltaSinceStart_MWh + deltaThermalEnergySinceStart_MWh; // Positive number means more energy stored at the end of the simulation. 

v_totalSelfConsumedEnergy_MWh = v_totalEnergyUsed_MWh - (v_totalImportedEnergy_MWh + max(0,-v_totalDeltaStoredEnergy_MWh)); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.
//v_totalSelfConsumedEnergy_MWh = totalEnergyUsed_MWh - (v_totalImportedEnergy_MWh + max(0,-v_totalDeltaStoredEnergy_MWh)); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.
double v_totalSelfConsumedEnergyCheck_MWh = v_totalEnergyProduced_MWh - (v_totalExportedEnergy_MWh + max(0,v_totalDeltaStoredEnergy_MWh)); // Putting positive delta-stored energy here assumes that this energy was self-produced, as opposed to imported! Putting negative delta-stored here assumes that this energy was exported, as opposed to self-consumed!
// Cap selfConsumedEnergy to >=0
v_totalSelfConsumedEnergy_MWh=max(0,v_totalSelfConsumedEnergy_MWh);
v_totalSelfConsumedEnergyCheck_MWh=max(0,v_totalSelfConsumedEnergyCheck_MWh);
traceln("Check self consumed energy based on import, export, consumption and production: " + (v_totalSelfConsumedEnergy_MWh - v_totalSelfConsumedEnergyCheck_MWh) + " MWh error");

// Export and production-based selfconsumption
if ( v_totalEnergyProduced_MWh > 0 ){
	//v_modelSelfConsumption_fr = 1 - (v_totalElectricityExport_MWh + max(0,v_totalMethaneExport_MWh-v_totalMethaneImport_MWh) + max(0,v_totalHydrogenExport_MWh-v_totalHydrogenImport_MWh))/v_totalEnergyProduced_MWh;
	v_modelSelfConsumption_fr = v_totalSelfConsumedEnergy_MWh / v_totalEnergyProduced_MWh;
}

traceln("Total energy absorbed from environment by buildings: %s MWh", totalAmbientHeating_MWh);
traceln("Delta thermal stored energy since start: %s MWh", deltaThermalEnergySinceStart_MWh);
traceln("Total energy from vehicles charging outside the model scope: %s MWh", totalEnergyChargedOutsideModel_MWh);

traceln("Energy selfconsumption: " + v_modelSelfConsumption_fr*100 + "%");
double totalElectricitySelfConsumption_fr = 0;

if ( v_totalElectricityProduced_MWh > 0 ){
	totalElectricitySelfConsumption_fr = 1 - v_totalElectricityExport_MWh/v_totalElectricityProduced_MWh;
}

//v_modelSelfSufficiency_fr = 1 - (v_totalElectricityImport_MWh + max(0,v_totalMethaneImport_MWh - v_totalMethaneExport_MWh) + max(0,v_totalHydrogenImport_MWh - v_totalHydrogenExport_MWh) + v_totalDieselImport_MWh - v_batteryStoredEnergyDeltaSinceStart_MWh - deltaThermalEnergySinceStart_MWh) / v_totalEnergyUsed_MWh;
v_modelSelfSufficiency_fr = v_totalSelfConsumedEnergy_MWh / v_totalEnergyUsed_MWh; // Calculation based on (total_consumption - total_import) / total_consumption. Positive delta-stored energy is contained in v_totalSelfConsumedEnergy_MWh. 
//v_modelSelfSufficiency_fr = v_totalSelfConsumedEnergy_MWh / totalEnergyUsed_MWh; // Calculation based on (total_consumption - total_import) / total_consumption. Positive delta-stored energy is contained in v_totalSelfConsumedEnergy_MWh. 

traceln("Energy selfsufficiency (via import calc): %s %%", v_modelSelfSufficiency_fr*100);
//double totalSelfSufficiency_fr_check = (v_totalEnergyProduced_MWh - (v_totalElectricityExport_MWh + max(0,v_totalMethaneExport_MWh-v_totalMethaneImport_MWh) + max(0,v_totalHydrogenExport_MWh-v_totalHydrogenImport_MWh)))/v_totalEnergyUsed_MWh; // Calculation based on (total_production - total_export) / total_consumption
double totalSelfSufficiency_fr_check = v_totalSelfConsumedEnergyCheck_MWh / v_totalEnergyUsed_MWh; // Calculation based on (total_production - total_export) / total_consumption. Negative delta-stored energy is contained in v_totalSelfConsumedEnergy_MWh. 
//double totalSelfSufficiency_fr_check = v_totalSelfConsumedEnergyCheck_MWh / totalEnergyUsed_MWh; // Calculation based on (total_production - total_export) / total_consumption. Negative delta-stored energy is contained in v_totalSelfConsumedEnergy_MWh. 

traceln("Energy selfsufficiency (via export calc): %s %%", totalSelfSufficiency_fr_check*100);
// Remaining difference due to different temps of houses start vs end?

traceln( "import electricity: " + v_totalElectricityImport_MWh + " MWh");
traceln( "export electricity: " + v_totalElectricityExport_MWh + " MWh");
traceln( "nett import methane: " + (v_totalMethaneImport_MWh-v_totalMethaneExport_MWh) + " MWh");
traceln( "import diesel: " + v_totalDieselImport_MWh + " MWh");
traceln( "nett import hydrogen: " + (v_totalHydrogenImport_MWh-v_totalHydrogenExport_MWh) + " MWh");



/*// intStream.parallel experiment works to extract daytime consumption! Now benchmark performance...
double daytimeEnergyUsed_MWh = IntStream.range(0, a_annualDaytimeIdxs.length).parallel().mapToDouble(idx -> a_annualEnergyConsumption_kW[idx]*a_annualDaytimeIdxs[idx]).sum()*p_timeStep_h/1000;
traceln("v_daytimeEnergyUsed_MWh: %s, daytimeEnergyUsed_MWh: %s", v_daytimeEnergyUsed_MWh, daytimeEnergyUsed_MWh);
*/
/*for (int i = 0; i<365; i++) { // Check if accumulator with signal resolution different from timestep still gives consistent results
	if (abs(data_annualElectricityDemand_MWh.getY(i) - acc_annualDailyElectricityDemand_MWh.getTimeSeries()[i]) > 0.0001) {
		traceln("Dataset and accumulator don't agree about daily electricity demand on day no. %s, dataset value: %s, accumulator value: %s", i, data_annualElectricityDemand_MWh.getY(i), acc_annualDailyElectricityDemand_MWh.getTimeSeries()[i]);
	}
}*/

/*if ( abs(acc_annualElectricityBalanceDownsampled_kW.getIntegral()-acc_annualElectricityBalance_kW.getIntegral()) > 0.1 ) { // Check if reduced resolution accumulator gives same integral result!
	traceln("Accumulators with different signal resolution DON'T agree on integral: full-res integral: %s, low-res integral: %s", acc_annualElectricityBalanceDownsampled_kW.getIntegral(), acc_annualElectricityBalance_kW.getIntegral());
} else {
	traceln("Accumulators with different signal resolution AGREE on integral: full-res integral: %s, low-res integral: %s", acc_annualElectricityBalanceDownsampled_kW.getIntegral(), acc_annualElectricityBalance_kW.getIntegral());
}*/

//double nettElectricityArray_kWh = Arrays.stream( a_annualElectricityBalance_kW ).sum() * p_timeStep_h / 1000;
//double nettElectricityAccumulator_kWh = acc_annualElectricityBalance_kW.getSum() * p_timeStep_h / 1000;
//double importElectricityAccumulator_kWh = acc_annualElectricityBalance_kW.getSumPos() * p_timeStep_h / 1000;
//traceln("Test ZeroAccumulator: importElectricityAccumulator_kWh: %s kWh, nettElectricityAccumulator_kWh: %s kWh", importElectricityAccumulator_kWh, nettElectricityAccumulator_kWh);

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699275323325</Id>
					<Name><![CDATA[f_updateArrays]]></Name>
					<X>557</X><Y>334</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[t_h]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (v_isRapidRun){
	// Store time series in arrays
	/*a_annualMethaneBalance_kW[v_timeStepsElapsed] = v_totalMethanePower_kW;
	a_annualHydrogenBalance_kW[v_timeStepsElapsed] = v_totalHydrogenPower_kW;
	a_annualDieselBalance_kW[v_timeStepsElapsed] = v_totalDieselPower_kW;
	//a_annualHeatBalance_kW[v_timeStepsElapsed] = v_currentPowerHeat_kW;
	a_annualTotalImport_kW[v_timeStepsElapsed] = v_currentEnergyImport_kW;//max(0,v_totalElectricPower_kW) + max(0,v_totalMethanePower_kW) + max(0, v_totalHydrogenPower_kW) + max(0,v_totalDieselPower_kW);
	a_annualTotalExport_kW[v_timeStepsElapsed] = v_currentEnergyExport_kW;//max(0,-v_totalElectricPower_kW) + max(0,-v_totalMethanePower_kW) + max(0, -v_totalHydrogenPower_kW) + max(0,-v_totalDieselPower_kW);
	
	a_annualEnergyProduction_kW[v_timeStepsElapsed] = v_currentEnergyProduction_kW;
	a_annualEnergyConsumption_kW[v_timeStepsElapsed] = v_currentEnergyConsumption_kW;
	a_annualEnergyCurtailed_kW[v_timeStepsElapsed] = v_currentEnergyCurtailed_kW;
	a_annualElectricityProduction_kW[v_timeStepsElapsed] = v_currentElectricityProduction_kW;
	a_annualElectricityConsumption_kW[v_timeStepsElapsed] = v_currentElectricityConsumption_kW;
	a_annualHeatProduction_kW[v_timeStepsElapsed] = v_currentEnergyProductionHeat_kW;
	a_annualNetLoad_kW[v_timeStepsElapsed] = sum(c_gridNodesHSMS, x->x.v_currentLoadElectricity_kW);
	*/

	// Store time series in arrays
	acc_annualElectricityBalance_kW.addStep(t_h,v_totalElectricPower_kW);
	//acc_annualElectricityBalanceDownsampled_kW.addStep(t_h,v_totalElectricPower_kW);
	acc_annualMethaneBalance_kW.addStep(t_h,v_totalMethanePower_kW);
	acc_annualHydrogenBalance_kW.addStep(t_h,v_totalHydrogenPower_kW);
	acc_annualDieselBalance_kW.addStep(t_h,v_totalDieselPower_kW);
	//acc_annualHeatBalance_kW.addStep(t_h,v_currentPowerHeat_kW);
	acc_annualTotalImport_kW.addStep(t_h,v_currentEnergyImport_kW);
	acc_annualTotalExport_kW.addStep(t_h,v_currentEnergyExport_kW);
	
	acc_annualEnergyProduction_kW.addStep(t_h,v_currentEnergyProduction_kW);
	acc_annualEnergyConsumption_kW.addStep(t_h,v_currentEnergyConsumption_kW);
	acc_annualEnergyCurtailed_kW.addStep(t_h,v_currentEnergyCurtailed_kW);
	acc_annualElectricityProduction_kW.addStep(t_h,v_currentElectricityProduction_kW);
	acc_annualElectricityConsumption_kW.addStep(t_h,v_currentElectricityConsumption_kW);
	acc_annualHeatProduction_kW.addStep(t_h,v_currentEnergyProductionHeat_kW);

	//v_peakElecImport_kW = max(v_peakElecImport_kW,v_currentElectricityImport_kW);
	//v_peakElecExport_kW = max(v_peakElecExport_kW,v_currentElectricityExport_kW);
	
	double v_currentBaseloadElectricityDemand_kW = sum(c_gridConnections, x->x.v_fixedConsumptionElectric_kW);
	double v_currentHeatPumpElectricityDemand_kW = sum(c_gridConnections, x->x.v_heatPumpElectricityConsumption_kW);
	double v_currentElectricVehicleDemand_kW = sum(c_gridConnections, x->max(0,x.v_evChargingPowerElectric_kW));
	double v_currentBatteriesDemand_kW = sum(c_gridConnections, x->max(0,x.v_batteryPowerElectric_kW));
	double v_currentNaturalGasDemand_kW = sum(c_gridConnections, x-> max(0, x.v_currentPowerMethane_kW));
	double v_currentDieselDemand_kW = sum(c_gridConnections, x-> max(0, x.v_currentPowerDiesel_kW));
	double v_currentHydrogenDemand_kW = sum(c_gridConnections, x-> max(0, x.v_currentPowerHydrogen_kW));
	
	double v_currentPVGeneration_kW = sum(c_gridConnections, x->x.v_pvProductionElectric_kW);
	double v_currentWindGeneration_kW = sum(c_gridConnections, x->x.v_windProductionElectric_kW);
	double v_currentBatteriesSupply_kW = sum(c_gridConnections, x->max(0,-x.v_batteryPowerElectric_kW));
	double v_currentV2GSupply_kW = sum(c_gridConnections, x-> max(0, -x.v_evChargingPowerElectric_kW));
	double v_currentNaturalGasSupply_kWh = sum(c_gridConnections, x-> max(0, - x.v_currentPowerMethane_kW));
	double v_currentHydrogenSupply_kW = sum(c_gridConnections, x-> max(0, -x.v_currentPowerHydrogen_kW));
	
	
	// Daytime
	if (t_h % 24 > 6 && t_h % 24 < 18) {
		v_daytimeTotalImport_MWh += v_currentEnergyImport_kW / 1000 * p_timeStep_h;
		v_daytimeTotalExport_MWh += v_currentEnergyExport_kW / 1000 * p_timeStep_h;
		v_daytimeElectricityImport_MWh += max(0,v_totalElectricPower_kW) / 1000 * p_timeStep_h;
		v_daytimeElectricityExport_MWh += max(0,-v_totalElectricPower_kW) / 1000 * p_timeStep_h;
		v_daytimeElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * p_timeStep_h;
		
		v_daytimeMethaneImport_MWh += v_totalMethanePower_kW / 1000 * p_timeStep_h;
		v_daytimeDieselImport_MWh += v_totalDieselPower_kW / 1000 * p_timeStep_h;
		v_daytimeHydrogenImport_MWh += max(0, v_totalHydrogenPower_kW) / 1000 * p_timeStep_h;
		v_daytimeHydrogenExport_MWh += max(0, -v_totalHydrogenPower_kW) / 1000 * p_timeStep_h;
		
		v_daytimeEnergyUsed_MWh += v_currentEnergyConsumption_kW / 1000 * p_timeStep_h;
		v_daytimeEnergyProduced_MWh += ( v_currentEnergyProduction_kW/1000 - v_currentEnergyCurtailed_kW/1000 ) * p_timeStep_h;
		v_daytimePeakElecImport_kW = max(v_daytimePeakElecImport_kW,v_currentElectricityImport_kW);
		v_daytimePeakElecExport_kW = max(v_daytimePeakElecExport_kW,v_currentElectricityExport_kW);
		//a_annualDaytimeIdxs[v_timeStepsElapsed] = 1;
	} //else { 
	//	a_annualDaytimeIdxs[v_timeStepsElapsed] = 0;
	//}
	
	/*else { // Nighttime totals calculated after simulation as annualtotals - daytime_totals
		v_nighttimeTotalImport_MWh += v_currentEnergyImport_kW / 1000 * p_timeStep_h;
		v_nighttimeTotalExport_MWh += v_currentEnergyExport_kW / 1000 * p_timeStep_h;
		v_nighttimeElectricityImport_MWh += max(0,v_totalElectricPower_kW) / 1000 * p_timeStep_h;
		v_nighttimeElectricityExport_MWh += max(0,-v_totalElectricPower_kW) / 1000 * p_timeStep_h;
		v_nighttimeElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * p_timeStep_h;
		
		v_nighttimeMethaneImport_MWh += v_totalMethanePower_kW / 1000 * p_timeStep_h;
		v_nighttimeHydrogenImport_MWh += v_totalHydrogenPower_kW / 1000 * p_timeStep_h;
		v_nighttimeDieselImport_MWh += v_totalDieselPower_kW / 1000 * p_timeStep_h;
		
		v_nighttimeEnergyUsed_MWh += v_currentEnergyConsumption_kW / 1000 * p_timeStep_h;
		v_nighttimeEnergyProduced_MWh += ( v_currentEnergyProduction_kW/1000 - v_currentEnergyCurtailed_kW/1000 ) * p_timeStep_h;
		v_nighttimePeakElecImport_kW = max(v_nighttimePeakElecImport_kW,v_currentElectricityImport_kW);
		v_nighttimePeakElecExport_kW = max(v_nighttimePeakElecExport_kW,v_currentElectricityExport_kW);
	}*/
	
	// Weekday
	if ((t_h+(v_dayOfWeek1jan-1)*24) % (24*7) < (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h
		v_weekdayTotalImport_MWh += v_currentEnergyImport_kW / 1000 * p_timeStep_h;
		v_weekdayTotalExport_MWh += v_currentEnergyExport_kW / 1000 * p_timeStep_h;
		v_weekdayElectricityImport_MWh += max(0, v_totalElectricPower_kW) / 1000 * p_timeStep_h;
		v_weekdayElectricityExport_MWh += max(0, -v_totalElectricPower_kW) / 1000 * p_timeStep_h;
		v_weekdayElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * p_timeStep_h;
		
		v_weekdayMethaneImport_MWh += v_totalMethanePower_kW / 1000 * p_timeStep_h;
		v_weekdayDieselImport_MWh += v_totalDieselPower_kW / 1000 * p_timeStep_h;
		v_weekdayHydrogenImport_MWh += max(0, v_totalHydrogenPower_kW) / 1000 * p_timeStep_h;
		v_weekdayHydrogenExport_MWh += max(0, -v_totalHydrogenPower_kW) / 1000 * p_timeStep_h;
		
		v_weekdayEnergyUsed_MWh += v_currentEnergyConsumption_kW / 1000 * p_timeStep_h;
		v_weekdayEnergyProduced_MWh += ( v_currentEnergyProduction_kW/1000 - v_currentEnergyCurtailed_kW/1000 ) * p_timeStep_h;
		v_weekdayPeakElecImport_kW = max(v_weekdayPeakElecImport_kW,v_currentElectricityImport_kW);
		v_weekdayPeakElecExport_kW = max(v_weekdayPeakElecExport_kW,v_currentElectricityExport_kW);
	} /*else { // Weekend totals calculated after simulation as annualtotals - daytime_totals
		v_weekendTotalImport_MWh += v_currentEnergyImport_kW / 1000 * p_timeStep_h;
		v_weekendTotalExport_MWh += v_currentEnergyExport_kW / 1000 * p_timeStep_h;
		v_weekendElectricityImport_MWh += max(0,v_totalElectricPower_kW) / 1000 * p_timeStep_h;
		v_weekendElectricityExport_MWh += max(0,-v_totalElectricPower_kW) / 1000 * p_timeStep_h;
		v_weekendElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * p_timeStep_h;
		
		v_weekendMethaneImport_MWh += v_totalMethanePower_kW / 1000 * p_timeStep_h;
		v_weekendHydrogenImport_MWh += v_totalHydrogenPower_kW / 1000 * p_timeStep_h;
		v_weekendDieselImport_MWh += v_totalDieselPower_kW / 1000 * p_timeStep_h;
		
		v_weekendEnergyUsed_MWh += v_currentEnergyConsumption_kW / 1000 * p_timeStep_h;
		v_weekendEnergyProduced_MWh += ( v_currentEnergyProduction_kW/1000 - v_currentEnergyCurtailed_kW/1000 ) * p_timeStep_h;
		v_weekendPeakElecImport_kW = max(v_weekendPeakElecImport_kW,v_currentElectricityImport_kW);
		v_weekendPeakElecExport_kW = max(v_weekendPeakElecExport_kW,v_currentElectricityExport_kW);
	} */
	
	//Summer week
	if (t_h >= p_startHourSummerWeek && t_h < p_startHourSummerWeek + 24*7){
		acc_summerElectricityBalance_kW.addStep(t_h-p_startHourSummerWeek,v_totalElectricPower_kW);
		acc_summerMethaneBalance_kW.addStep(t_h-p_startHourSummerWeek,v_totalMethanePower_kW);
		acc_summerHydrogenBalance_kW.addStep(t_h-p_startHourSummerWeek,v_totalHydrogenPower_kW);
		acc_summerDieselBalance_kW.addStep(t_h-p_startHourSummerWeek,v_totalDieselPower_kW);
		//acc_summerHeatBalance_kW.addStep(t_h-p_startHourSummerWeek,-v_totalHeatProduced_MWh);
		acc_summerTotalImport_kW.addStep(t_h-p_startHourSummerWeek,v_currentEnergyImport_kW);
		acc_summerTotalExport_kW.addStep(t_h-p_startHourSummerWeek,v_currentEnergyExport_kW);
		
		acc_summerEnergyProduction_kW.addStep(t_h-p_startHourSummerWeek,v_currentEnergyProduction_kW);
		acc_summerEnergyConsumption_kW.addStep(t_h-p_startHourSummerWeek,v_currentEnergyConsumption_kW);
		acc_summerEnergyCurtailed_kW.addStep(t_h-p_startHourSummerWeek,v_currentEnergyCurtailed_kW);
		acc_summerElectricityProduction_kW.addStep(t_h-p_startHourSummerWeek,v_currentElectricityProduction_kW);
		acc_summerElectricityConsumption_kW.addStep(t_h-p_startHourSummerWeek,v_currentElectricityConsumption_kW);
		acc_summerHeatProduction_kW.addStep(t_h-p_startHourSummerWeek,v_currentEnergyProductionHeat_kW);	
	
		data_summerWeekBaseloadElectricityDemand_kW.add(t_h, sum(c_gridConnections, x->x.v_fixedConsumptionElectric_kW));
		data_summerWeekHeatPumpElectricityDemand_kW.add(t_h, v_currentHeatPumpElectricityDemand_kW);
		//data_summerWeekElectricCarsDemand_kW.add(t_h, sum(c_gridConnections, x->x.v_electricCarsDemand_kW));
		data_summerWeekElectricVehicleDemand_kW.add(t_h, v_currentElectricVehicleDemand_kW);
		data_summerWeekBatteriesDemand_kW.add(t_h, v_currentBatteriesDemand_kW);
		data_summerWeekNaturalGasDemand_kW.add(t_h, v_currentNaturalGasDemand_kW);
		data_summerWeekDieselDemand_kW.add(t_h, v_currentDieselDemand_kW);
		data_summerWeekHydrogenDemand_kW.add(t_h, v_currentHydrogenDemand_kW);
		
		data_summerWeekPVGeneration_kW.add(t_h, v_currentPVGeneration_kW);
		data_summerWeekWindGeneration_kW.add(t_h, v_currentWindGeneration_kW);
		data_summerWeekBatteriesSupply_kW.add(t_h, v_currentBatteriesSupply_kW);
		data_summerWeekV2GSupply_kW.add(t_h, v_currentV2GSupply_kW);
		data_summerWeekNaturalGasSupply_kW.add(t_h, v_currentNaturalGasSupply_kWh);
		data_summerWeekHydrogenSupply_kW.add(t_h, v_currentHydrogenSupply_kW);
		
		
		data_summerWeekDemand_kW.add(t_h, sum(c_energyAssets, x->x.electricityConsumption_kW));
		data_summerWeekSupply_kW.add(t_h, -sum(c_energyAssets, x->x.electricityProduction_kW)); 
		data_summerWeekNetLoad_kW.add(t_h, sum(c_gridNodesTopLevel, x->x.v_currentLoadElectricity_kW));
		
		data_summerWeekNetLoad_kW.add(t_h, v_totalElectricPower_kW);
		//v_summerWeekHour++;
		//v_summerWeekPeakElecImport_kW = max(v_summerWeekPeakElecImport_kW,v_currentElectricityImport_kW);
		//v_summerWeekPeakElecExport_kW = max(v_summerWeekPeakElecExport_kW,v_currentElectricityExport_kW);	
	}
	
	//Winter week
	if (t_h >= p_startHourWinterWeek && t_h < p_startHourWinterWeek + 24*7){
		acc_winterElectricityBalance_kW.addStep(t_h-p_startHourWinterWeek,v_totalElectricPower_kW);
		acc_winterMethaneBalance_kW.addStep(t_h-p_startHourWinterWeek,v_totalMethanePower_kW);
		acc_winterHydrogenBalance_kW.addStep(t_h-p_startHourWinterWeek,v_totalHydrogenPower_kW);
		acc_winterDieselBalance_kW.addStep(t_h-p_startHourWinterWeek,v_totalDieselPower_kW);
		//acc_winterHeatBalance_kW.addStep(t_h-p_startHourWinterWeek,v_totalHeatProduced_MWh);
		acc_winterTotalImport_kW.addStep(t_h-p_startHourWinterWeek,v_currentEnergyImport_kW);
		acc_winterTotalExport_kW.addStep(t_h-p_startHourWinterWeek,v_currentEnergyExport_kW);
		
		acc_winterEnergyProduction_kW.addStep(t_h-p_startHourWinterWeek,v_currentEnergyProduction_kW);
		acc_winterEnergyConsumption_kW.addStep(t_h-p_startHourWinterWeek,v_currentEnergyConsumption_kW);
		acc_winterEnergyCurtailed_kW.addStep(t_h-p_startHourWinterWeek,v_currentEnergyCurtailed_kW);
		acc_winterElectricityProduction_kW.addStep(t_h-p_startHourWinterWeek,v_currentElectricityProduction_kW);
		acc_winterElectricityConsumption_kW.addStep(t_h-p_startHourWinterWeek,v_currentElectricityConsumption_kW);
		acc_winterHeatProduction_kW.addStep(t_h-p_startHourWinterWeek,v_currentEnergyProductionHeat_kW);	
	
		data_winterWeekBaseloadElectricityDemand_kW.add(t_h, sum(c_gridConnections, x->x.v_fixedConsumptionElectric_kW));
		data_winterWeekHeatPumpElectricityDemand_kW.add(t_h, v_currentHeatPumpElectricityDemand_kW);
		//data_winterWeekElectricCarsDemand_kW.add(t_h, sum(c_gridConnections, x->x.v_electricCarsDemand_kW));
		data_winterWeekElectricVehicleDemand_kW.add(t_h, v_currentElectricVehicleDemand_kW);
		data_winterWeekBatteriesDemand_kW.add(t_h, v_currentBatteriesDemand_kW);
		data_winterWeekNaturalGasDemand_kW.add(t_h, v_currentNaturalGasDemand_kW);
		data_winterWeekDieselDemand_kW.add(t_h, v_currentDieselDemand_kW);
		data_winterWeekHydrogenDemand_kW.add(t_h, v_currentHydrogenDemand_kW);
		
		data_winterWeekPVGeneration_kW.add(t_h, v_currentPVGeneration_kW);
		data_winterWeekWindGeneration_kW.add(t_h, v_currentWindGeneration_kW);
		data_winterWeekBatteriesSupply_kW.add(t_h, v_currentBatteriesSupply_kW);
		data_winterWeekV2GSupply_kW.add(t_h, v_currentV2GSupply_kW);
		data_winterWeekNaturalGasSupply_kW.add(t_h, v_currentNaturalGasSupply_kWh);	
		data_winterWeekHydrogenSupply_kW.add(t_h, v_currentHydrogenSupply_kW);
		
		data_winterWeekDemand_kW.add(t_h, sum(c_energyAssets, x->x.electricityConsumption_kW));
		data_winterWeekSupply_kW.add(t_h, -sum(c_energyAssets, x->x.electricityProduction_kW)); 
		data_winterWeekNetLoad_kW.add(t_h, sum(c_gridNodesTopLevel, x->x.v_currentLoadElectricity_kW));
		
		data_winterWeekNetLoad_kW.add(t_h, v_totalElectricPower_kW);
		
		//v_winterWeekHour++;
		//v_winterWeekPeakElecImport_kW = max(v_winterWeekPeakElecImport_kW,v_currentElectricityImport_kW);
		//v_winterWeekPeakElecExport_kW = max(v_winterWeekPeakElecExport_kW,v_currentElectricityExport_kW);
	}
	
	v_dailyElectricityConsumptionAvg_kW += v_currentElectricityConsumption_kW; // Not only electricity! Also other energy carriers!!
	v_dailyElectricityProductionAvg_kW += v_currentElectricityProduction_kW; // Not only electricity! Also other energy carriers!!
	//v_currentBusinessParkNetLoad_kWh += sum(c_gridNodesHSMS, x->x.v_currentLoadElectricity_kW)*p_timeStep_h;
	
	v_dailyBaseloadElectricityDemand_kW += v_currentBaseloadElectricityDemand_kW;
	v_dailyHeatPumpElectricityDemand_kW += v_currentHeatPumpElectricityDemand_kW;
	//v_dailyElectricCarsDemand_kWh += sum(c_gridConnections, x->x.v_electricCarsDemand_kW)*p_timeStep_h;
	v_dailyElectricVehicleDemand_kW += v_currentElectricVehicleDemand_kW;
	v_dailyBatteriesDemand_kW += v_currentBatteriesDemand_kW;
	v_dailyNaturalGasDemand_kW += v_currentNaturalGasDemand_kW;
	v_dailyDieselDemand_kW += v_currentDieselDemand_kW;
	v_dailyHydrogenDemand_kW += v_currentHydrogenDemand_kW;
	
	v_dailyPVGeneration_kW += v_currentPVGeneration_kW;
	v_dailyWindGeneration_kW += v_currentWindGeneration_kW;
	v_dailyBatteriesSupply_kW += v_currentBatteriesSupply_kW;
	v_dailyV2GSupply_kW += v_currentV2GSupply_kW;
	v_dailyNaturalGasSupply_kW += v_currentNaturalGasSupply_kWh;
	v_dailyHydrogenSupply_kW += v_currentHydrogenSupply_kW;
	
	//acc_annualDailyElectricityDemand_MWh.addStep(t_h, v_currentElectricityConsumption_kW/1000 * p_timeStep_h);
	
	if (t_h % 24 == (24-p_timeStep_h)){
		data_annualBaseloadElectricityDemand_kW.add(t_h, v_dailyBaseloadElectricityDemand_kW/(24 / p_timeStep_h));
		data_annualHeatPumpElectricityDemand_kW.add(t_h, v_dailyHeatPumpElectricityDemand_kW/(24 / p_timeStep_h));
		//data_annualElectricCarsDemand_MWh.add(t_h, v_dailyElectricCarsDemand_kWh/(24 / p_timeStep_h));
		data_annualElectricVehicleDemand_kW.add(t_h, v_dailyElectricVehicleDemand_kW/(24 / p_timeStep_h));
		data_annualBatteriesDemand_kW.add(t_h, v_dailyBatteriesDemand_kW/(24 / p_timeStep_h));
		data_annualNaturalGasDemand_kW.add(t_h, v_dailyNaturalGasDemand_kW/(24 / p_timeStep_h));
		data_annualDieselDemand_kW.add(t_h, v_dailyDieselDemand_kW/(24 / p_timeStep_h));
		data_annualHydrogenDemand_kW.add(t_h, v_dailyHydrogenDemand_kW/(24 / p_timeStep_h));
		data_annualPVGeneration_kW.add(t_h, v_dailyPVGeneration_kW/(24 / p_timeStep_h));
		data_annualWindGeneration_kW.add(t_h, v_dailyWindGeneration_kW/(24 / p_timeStep_h));
		data_annualBatteriesSupply_kW.add(t_h, v_dailyBatteriesSupply_kW/(24 / p_timeStep_h));
		data_annualV2GSupply_kW.add(t_h, v_dailyV2GSupply_kW/(24 / p_timeStep_h));
		data_annualNaturalGasSupply_kW.add(t_h, v_dailyNaturalGasSupply_kW/(24 / p_timeStep_h));
		data_annualHydrogenSupply_kW.add(t_h, v_dailyHydrogenSupply_kW/(24 / p_timeStep_h));
		
		data_annualElectricityDemand_kW.add(t_h, v_dailyElectricityConsumptionAvg_kW/(24 / p_timeStep_h));
		data_annualElectricitySupply_kW.add(t_h, v_dailyElectricityProductionAvg_kW/(24 / p_timeStep_h)); 
		//data_annualBusinessParkNetLoad_kWh.add(t_h, v_dailyBusinessParkNetLoad_kWh);
			
		v_dailyBaseloadElectricityDemand_kW = 0;
		v_dailyHeatPumpElectricityDemand_kW = 0;
		//v_dailyElectricCarsDemand_kWh = 0;
		v_dailyElectricVehicleDemand_kW = 0;
		v_dailyBatteriesDemand_kW = 0;
		v_dailyNaturalGasDemand_kW = 0;
		v_dailyDieselDemand_kW = 0;
		v_dailyHydrogenDemand_kW = 0;
		
		v_dailyPVGeneration_kW = 0;
		v_dailyWindGeneration_kW = 0;
		v_dailyBatteriesSupply_kW = 0;
		v_dailyV2GSupply_kW = 0;
		v_dailyNaturalGasSupply_kW = 0;
		v_dailyHydrogenSupply_kW = 0;
		
		v_dailyElectricityConsumptionAvg_kW = 0;
		v_dailyElectricityProductionAvg_kW = 0;
		//v_dailyBusinessParkNetLoad_kWh = 0;
	}
} else {
	data_naturalGasDemand_kW.update();
	data_dieselDemand_kW.update();
	data_hydrogenDemand_kW.update();
	data_baseloadElectricityDemand_kW.update();
	data_hydrogenElectricityDemand_kW.update();
	data_heatPumpElectricityDemand_kW.update();
	//data_electricCarsDemand_kW.update();
	data_electricVehicleDemand_kW.update();
	data_batteryCharging_kW.update();	
	data_PVGeneration_kW.update();	
	data_windGeneration_kW.update();	
	data_batteryDischarging_kW.update();
	data_V2GSupply_kW.update();
	data_hydrogenSupply_kW.update();
	data_districtHeatingDemand_kW.update();
	data_cookingElectricityDemand_kW.update();
	
	data_totalDemand_kW.update();
	data_totalSupply_kW.update();
	data_totalNetLoad_kW.update();
	
	data_gridCapacityDemand_kW.update();
	data_gridCapacitySupply_kW.update();
	//if (b_addKpiVisuals) {
	//	pop_UI_EnergyAsset.forEach(agent -> agent.f_updateData());
	//}
} ]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699958741073</Id>
					<Name><![CDATA[f_resetAnnualValues]]></Name>
					<X>790</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[data_annualElectricityDemand_kW.reset();
data_annualElectricitySupply_kW.reset();
//data_annualNetLoad .reset();

data_annualBaseloadElectricityDemand_kW.reset();
data_annualHeatPumpElectricityDemand_kW.reset();
//data_annualElectricCarsDemand_MWh.reset();
data_annualElectricVehicleDemand_kW.reset();
data_annualBatteriesDemand_kW.reset();

data_annualPVGeneration_kW.reset();
data_annualWindGeneration_kW.reset();
data_annualBatteriesSupply_kW.reset();
data_annualV2GSupply_kW.reset();

v_totalElectricityExport_MWh = 0;
v_totalElectricityImport_MWh = 0;
v_totalElectricityConsumed_MWh = 0;
v_totalElectricityProduced_MWh = 0;
v_totalElectricitySelfConsumed_MWh = 0;
v_totalHeatProduced_MWh = 0;

v_daytimeTotalImport_MWh = 0;
v_daytimeTotalExport_MWh = 0;
v_daytimeSelfConsumedEnergy_MWh = 0;
v_daytimeEnergyUsed_MWh = 0;
v_daytimeEnergyProduced_MWh = 0;
v_daytimeElectricityConsumed_MWh = 0;
v_daytimeElectricityExport_MWh = 0;
v_daytimeElectricityImport_MWh = 0;
v_daytimeMethaneImport_MWh = 0;
v_daytimeHydrogenImport_MWh = 0;
v_daytimeHydrogenExport_MWh = 0;
v_daytimeDieselImport_MWh = 0;
v_daytimePeakElecExport_kW = 0;
v_daytimePeakElecImport_kW = 0;

v_nighttimeTotalImport_MWh = 0;
v_nighttimeTotalExport_MWh = 0;
v_nighttimeSelfConsumedEnergy_MWh = 0;
v_nighttimeEnergyUsed_MWh = 0;
v_nighttimeEnergyProduced_MWh = 0;
v_nighttimeElectricityConsumed_MWh = 0;
v_nighttimeElectricityExport_MWh = 0;
v_nighttimeElectricityImport_MWh = 0;
v_nighttimeMethaneImport_MWh = 0;
v_nighttimeHydrogenImport_MWh = 0;
v_nighttimeHydrogenExport_MWh = 0;
v_nighttimeDieselImport_MWh = 0;
v_nighttimePeakElecExport_kW = 0;
v_nighttimePeakElecImport_kW = 0;

v_weekdayTotalImport_MWh = 0;
v_weekdayTotalExport_MWh = 0;
v_weekdaySelfConsumedEnergy_MWh = 0;
v_weekdayEnergyUsed_MWh = 0;
v_weekdayEnergyProduced_MWh = 0;
v_weekdayElectricityConsumed_MWh = 0;
v_weekdayElectricityExport_MWh = 0;
v_weekdayElectricityImport_MWh = 0;
v_weekdayMethaneImport_MWh = 0;
v_weekdayHydrogenImport_MWh = 0;
v_weekdayHydrogenExport_MWh = 0;
v_weekdayDieselImport_MWh = 0;
v_weekdayPeakElecExport_kW = 0;
v_weekdayPeakElecImport_kW = 0;

v_weekendTotalImport_MWh = 0;
v_weekendTotalExport_MWh = 0;
v_weekendSelfConsumedEnergy_MWh = 0;
v_weekendEnergyUsed_MWh = 0;
v_weekendEnergyProduced_MWh = 0;
v_weekendElectricityConsumed_MWh = 0;
v_weekendElectricityExport_MWh = 0;
v_weekendElectricityImport_MWh = 0;
v_weekendMethaneImport_MWh = 0;
v_weekendHydrogenImport_MWh = 0;
v_weekendHydrogenExport_MWh = 0;
v_weekendDieselImport_MWh = 0;
v_weekendPeakElecExport_kW = 0;
v_weekendPeakElecImport_kW = 0;

v_peakElecExport_kW = 0;
v_peakElecImport_kW = 0;

// Reset accumulators
acc_annualElectricityBalance_kW.reset();
acc_annualMethaneBalance_kW.reset();
acc_annualHydrogenBalance_kW.reset();
acc_annualDieselBalance_kW.reset();
//acc_annualHeatBalance_kW.addStep(t_h,v_currentPowerHeat_kW);
acc_annualTotalImport_kW.reset();
acc_annualTotalExport_kW.reset();

acc_annualEnergyProduction_kW.reset();
acc_annualEnergyConsumption_kW.reset();
acc_annualEnergyCurtailed_kW.reset();
acc_annualElectricityProduction_kW.reset();
acc_annualElectricityConsumption_kW.reset();
acc_annualHeatProduction_kW.reset();

acc_summerElectricityBalance_kW.reset();
acc_summerMethaneBalance_kW.reset();
acc_summerHydrogenBalance_kW.reset();
acc_summerDieselBalance_kW.reset();
//acc_summerHeatBalance_kW.addStep(t_h,v_currentPowerHeat_kW);
acc_summerTotalImport_kW.reset();
acc_summerTotalExport_kW.reset();

acc_summerEnergyProduction_kW.reset();
acc_summerEnergyConsumption_kW.reset();
acc_summerEnergyCurtailed_kW.reset();
acc_summerElectricityProduction_kW.reset();
acc_summerElectricityConsumption_kW.reset();
acc_summerHeatProduction_kW.reset();

acc_winterElectricityBalance_kW.reset();
acc_winterMethaneBalance_kW.reset();
acc_winterHydrogenBalance_kW.reset();
acc_winterDieselBalance_kW.reset();
//acc_winterHeatBalance_kW.addStep(t_h,v_currentPowerHeat_kW);
acc_winterTotalImport_kW.reset();
acc_winterTotalExport_kW.reset();

acc_winterEnergyProduction_kW.reset();
acc_winterEnergyConsumption_kW.reset();
acc_winterEnergyCurtailed_kW.reset();
acc_winterElectricityProduction_kW.reset();
acc_winterElectricityConsumption_kW.reset();
acc_winterHeatProduction_kW.reset();

acc_annualDLRfactor_f.reset();]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700560766579</Id>
					<Name><![CDATA[f_duurkrommes]]></Name>
					<X>-830</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (c_gridNodesTopLevel.size() == 1) { // If there is one top-level gridNode, get load duration curves from that one!
	data_netbelastingDuurkromme_kW = c_gridNodesTopLevel.get(0).f_getDuurkromme();
	
	if (b_enableDLR) {
		traceln("Peak relative gridload with DLR, demand: %s %%", data_netbelastingDuurkromme_kW.getY(1) );
		traceln("Peak relative gridload with DLR, supply: %s %%", data_netbelastingDuurkromme_kW.getY(data_netbelastingDuurkromme_kW.size()-1) );
	} else {
		traceln("Peak relative gridload withOUT DLR, demand: %s kW", data_netbelastingDuurkromme_kW.getY(1) );
		traceln("Peak relative gridload withOUT DLR, supply: %s kW", data_netbelastingDuurkromme_kW.getY(data_netbelastingDuurkromme_kW.size()-1) );
	}
	data_netbelastingDuurkrommeVorige_kW = c_gridNodesTopLevel.get(0).data_netbelastingDuurkrommeVorige_kW;
	
	data_winterWeekNetbelastingDuurkromme_kW = c_gridNodesTopLevel.get(0).data_winterWeekNetbelastingDuurkromme_kW;
	data_summerWeekNetbelastingDuurkromme_kW = c_gridNodesTopLevel.get(0).data_summerWeekNetbelastingDuurkromme_kW;
	data_daytimeNetbelastingDuurkromme_kW = c_gridNodesTopLevel.get(0).data_daytimeNetbelastingDuurkromme_kW;
	data_nighttimeNetbelastingDuurkromme_kW = c_gridNodesTopLevel.get(0).data_nighttimeNetbelastingDuurkromme_kW;
	data_weekdayNetbelastingDuurkromme_kW = c_gridNodesTopLevel.get(0).data_weekdayNetbelastingDuurkromme_kW;
	data_weekendNetbelastingDuurkromme_kW = c_gridNodesTopLevel.get(0).data_weekendNetbelastingDuurkromme_kW;
	
} else {
	
	boolean firstRun = true;
	if (data_netbelastingDuurkromme_kW != null) {	
		if (data_netbelastingDuurkrommeVorige_kW != null) { // Not second run either!
			data_netbelastingDuurkrommeVorige_kW.reset();
		} else {
			data_netbelastingDuurkrommeVorige_kW = new DataSet(roundToInt(365*24/p_timeStep_h));
		}
		firstRun = false;
	} else {
		data_netbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/p_timeStep_h));
		data_summerWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/p_timeStep_h));
		data_winterWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/p_timeStep_h));
		data_daytimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/2/p_timeStep_h));
		data_nighttimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/2/p_timeStep_h));
		data_weekdayNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/7*5/p_timeStep_h)+100);
		data_weekendNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/7*2/p_timeStep_h)+100);
	}
	
	/* Obsolete?
	data_netbelastingDuurkrommeVorige_kW.reset();
	boolean notFirstRun = data_netbelastingDuurkromme_kW.size()>0? true : false;
	*/
	
	double[] a_annualNetLoad_kW = acc_annualElectricityBalance_kW.getTimeSeries().clone();
	int arraySize = a_annualNetLoad_kW.length;
	for (int i = 0; i < 5; i++) {
		a_annualNetLoad_kW[i] = 0;
	}
	//double[] netLoadArray_kW = new double[arraySize];
	//double[] netLoadArrayWinter_kW = new double[data_winterWeekNetbelastingDuurkromme_kW.size()];
	//double[] netLoadArraySummer_kW = new double[data_winterWeekNetbelastingDuurkromme_kW.size()];
	double[] netLoadArrayDay_kW = new double[arraySize/2];
	double[] netLoadArrayNight_kW = new double[arraySize/2];
	double[] netLoadArrayWeekday_kW = new double[arraySize];
	double[] netLoadArrayWeekend_kW = new double[arraySize];
	
	double[] netLoadArraySummer_kW = new double[roundToInt(24*7 / p_timeStep_h)];
	double[] netLoadArrayWinter_kW = new double[roundToInt(24*7 / p_timeStep_h)];
	
	
	/*a_annualNetLoad_kW = Arrays.copyOfRange(a_annualNetLoad_kW, 500, 8759);
	arraySize = a_annualNetLoad_kW.length;*/
	
	int i_winter=0;
	int i_summer=0;
	int i_day=0;
	int i_night=0;
	int i_weekday=0;
	int i_weekend=0;
	for(int i=0; i<arraySize ; i++) {
		//netLoadArray_kW[i]=-data_annualBusinessParkNetLoad_kW.getY(i);
		if (!firstRun) {
			data_netbelastingDuurkrommeVorige_kW.add(i*p_timeStep_h,data_netbelastingDuurkromme_kW.getY(i));
		}
		// summer/winter
		if (i*p_timeStep_h > p_startHourSummerWeek && i*p_timeStep_h<= p_startHourSummerWeek+24*7) {
			netLoadArraySummer_kW[i_summer]=-a_annualNetLoad_kW[i];
			i_summer++;
		}
		if (i*p_timeStep_h > p_startHourWinterWeek && i*p_timeStep_h<= p_startHourWinterWeek+24*7) {
			netLoadArrayWinter_kW[i_winter]=-a_annualNetLoad_kW[i];
			i_winter++;
		}
		// day/night
		if (i*p_timeStep_h % 24 > 6 && i*p_timeStep_h % 24 <= 18) { //daytime
			netLoadArrayDay_kW[i_day]=-a_annualNetLoad_kW[i];
			i_day++;
		} else {
			netLoadArrayNight_kW[i_night]=-a_annualNetLoad_kW[i];
			i_night++;
		}
		
		//Weekday/weekend
		if ((i*p_timeStep_h+3*24) % (24*7) < (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h
			netLoadArrayWeekday_kW[i_weekday]=-a_annualNetLoad_kW[i];
			i_weekday++;
		} else {
			netLoadArrayWeekend_kW[i_weekend]=-a_annualNetLoad_kW[i];
			i_weekend++;
		}
		//data_netbelastingshistogram_kW.add(data_annualBusinessParkNetLoad_kW.getY(i));
	}
	//traceln("i_weekday: %s", i_weekday);
	//traceln("i_weekend: %s", i_weekend);
	netLoadArrayWeekday_kW = Arrays.copyOfRange(netLoadArrayWeekday_kW, 0, i_weekday);
	netLoadArrayWeekend_kW = Arrays.copyOfRange(netLoadArrayWeekend_kW, 0, i_weekend);
	//Arrays.sort(data_annualBusinessParkNetLoad_kW); Sort is not a thing for datasets...
	// Sort all arrays
	Arrays.parallelSort(a_annualNetLoad_kW); // Is this array used elsewhere?? Because now it's no longer a time-series!
	Arrays.parallelSort(netLoadArraySummer_kW);
	Arrays.parallelSort(netLoadArrayWinter_kW);
	Arrays.parallelSort(netLoadArrayDay_kW);
	Arrays.parallelSort(netLoadArrayNight_kW);
	Arrays.parallelSort(netLoadArrayWeekday_kW);
	Arrays.parallelSort(netLoadArrayWeekend_kW);
	// Write results to datasets
	data_netbelastingDuurkromme_kW.reset();
	for(int i=0; i< arraySize; i++) {
		data_netbelastingDuurkromme_kW.add(i*p_timeStep_h, a_annualNetLoad_kW[arraySize-i-1]);
	}

	//Netbelastingduurkromme winter
	data_winterWeekNetbelastingDuurkromme_kW.reset();
	arraySize = data_winterWeekNetLoad_kW.size();
	for(int i=0; i< arraySize; i++) {
		data_winterWeekNetbelastingDuurkromme_kW.add(i*p_timeStep_h, -netLoadArrayWinter_kW[i]);
	}
	
	//Netbelastingduurkromme summer
	arraySize = data_summerWeekNetLoad_kW.size();
	data_summerWeekNetbelastingDuurkromme_kW.reset();
	for(int i=0; i< arraySize; i++) {
		data_summerWeekNetbelastingDuurkromme_kW.add(i*p_timeStep_h, -netLoadArraySummer_kW[i]);
	}
	
	//Netbelastingduurkromme dag
	arraySize = roundToInt(8760/2/p_timeStep_h);
	data_daytimeNetbelastingDuurkromme_kW.reset();
	for(int i=0; i< arraySize; i++) {
		data_daytimeNetbelastingDuurkromme_kW.add(i*p_timeStep_h, -netLoadArrayDay_kW[i]);
	}
	
	//Netbelastingduurkromme nacht
	data_nighttimeNetbelastingDuurkromme_kW.reset();
	for(int i=0; i< arraySize; i++) {
		data_nighttimeNetbelastingDuurkromme_kW.add(i*p_timeStep_h, -netLoadArrayNight_kW[i]);
	}
	
	//Netbelastingduurkromme weekday
	arraySize = netLoadArrayWeekday_kW.length;
	data_weekdayNetbelastingDuurkromme_kW.reset();
	for(int i=0; i< arraySize; i++) {
		data_weekdayNetbelastingDuurkromme_kW.add(i*p_timeStep_h, -netLoadArrayWeekday_kW[i]);
	}
	
	//Netbelastingduurkromme weekend
	arraySize = netLoadArrayWeekend_kW.length;
	data_weekendNetbelastingDuurkromme_kW.reset();
	for(int i=0; i< arraySize; i++) {
		data_weekendNetbelastingDuurkromme_kW.add(i*p_timeStep_h, -netLoadArrayWeekend_kW[i]);
	}

}
int arraySize = data_netbelastingDuurkromme_kW.size();
data_HSMScapacity_kW.add(0, v_topLevelGridCapacity_kW);
data_HSMScapacity_kW.add(data_netbelastingDuurkromme_kW.getX(arraySize-1), v_topLevelGridCapacity_kW);
data_HSMScapacitySupply_kW.add(0, -v_topLevelGridCapacity_kW);
data_HSMScapacitySupply_kW.add(data_netbelastingDuurkromme_kW.getX(arraySize-1), -v_topLevelGridCapacity_kW);
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1701162826549</Id>
					<Name><![CDATA[f_runTimestep]]></Name>
					<X>790</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Update tijdreeksen in leesbare variabelen
t_h = (v_timeStepsElapsed * p_timeStep_h + v_hourOfYearStart);// % 8760;

f_updateTimeseries(t_h);

// Operate assets on each gridConnection
f_calculateGridConnectionFlows(t_h);

// Calculate grid node flows
f_calculateGridnodeFlows(t_h);

// Financial accounting of energy flows
f_calculateFinancialFlows(t_h);

// Update elektriciteitsprijzen
f_updatePricesForNextTimestep(t_h);

f_updateArrays(t_h);

v_timeStepsElapsed ++;
]]></Body>
				</Function>
				<Function AccessType="private" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1716884712799</Id>
					<Name><![CDATA[f_buildGridNodeTree]]></Name>
					<X>590</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// First make all links between GridNodes
v_topLevelGridCapacity_kW = 0;

for( GridNode GN : pop_gridNodes ) {
	GN.f_connectToParentNode();
}

// Then build execution order list
for( GridNode GN : pop_gridNodes ) {
	GridNode parentNode = findFirst(pop_gridNodes, p->p.p_gridNodeID.equals(GN.p_parentNodeID)); // Works as long as p_gridNodeID is not null. p_parentNodeID can be null no problemo.
	//if (GN.p_parentNodeID == null) {
	if (parentNode == null) {
		f_gridNodeRecursiveAdd(GN);
		c_gridNodesTopLevel.add(GN);
		v_topLevelGridCapacity_kW+=GN.p_capacity_kW;
	} else {		
		c_gridNodesNotTopLevel.add(GN);	
		if (GN.p_gridNodeID.equals(parentNode.p_parentNodeID)) {
			traceln("Throwing exception because of circular dependency between gridNodes! GridNode %s and parentNode %s", GN.p_gridNodeID, parentNode.p_gridNodeID);
			throw new RuntimeException("Exception: circular GridNode dependency, only tree-topology supported");
		}
	}
}
c_gridNodeExecutionListReverse = c_gridNodeExecutionList;
Collections.reverse(c_gridNodeExecutionList);

//traceln("Grid Node execution list: %s", c_gridNodeExecutionList );]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1716886716306</Id>
					<Name><![CDATA[f_gridNodeRecursiveAdd]]></Name>
					<X>610</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GN]]></Name>
						<Type><![CDATA[GridNode]]></Type>
					</Parameter>
					<Body><![CDATA[c_gridNodeExecutionList.add(GN);
for (GridNode GNchild : GN.c_connectedGridNodes) {
	f_gridNodeRecursiveAdd(GNchild);
}

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<GridConnection>]]></ReturnType>
					<Id>1716890117265</Id>
					<Name><![CDATA[f_getGridConnections]]></Name>
					<X>1280</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return c_gridConnections;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1716893898501</Id>
					<Name><![CDATA[f_initializeEngine]]></Name>
					<X>560</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// What if this function is accidently called twice? Need to start with a clean sheet?

// Initialize all agents in the correct order, creating all connections. What about setting initial values? And how about repeated simulations?
pop_connectionOwners.forEach(CO -> CO.f_initialize());
// pop_energyCoops.forEach(EC -> EC.f_initialize()); // Not yet robust when there is no supplier initialized!

f_buildGridNodeTree();
c_gridConnections.forEach(GC -> GC.f_initialize());

// Loop over populations to check v_ispaused
f_initializePause();

for (GridNode GN : c_gridNodeExecutionList) {
	GN.f_initializeGridnode();
}

f_initializeForecasts();

// Use parallelisation?
if (pop_connectionOwners.size() > 500 && b_parallelizeGridConnections) {
	b_parallelizeConnectionOwners = true;
}
if (c_gridConnections.size() < 100) {
	b_parallelizeGridConnections = true;
}

// set initial values
f_setInitialValues();

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<ConnectionOwner>]]></ReturnType>
					<Id>1716897568717</Id>
					<Name><![CDATA[f_getConnectionOwners]]></Name>
					<X>1280</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return c_connectionOwners;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1716899946694</Id>
					<Name><![CDATA[f_getTopLevelGridCapacity_kW]]></Name>
					<X>1280</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return v_topLevelGridCapacity_kW;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<J_EA>]]></ReturnType>
					<Id>1717058801652</Id>
					<Name><![CDATA[f_getEnergyAssets]]></Name>
					<X>1280</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return c_energyAssets;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<GridNode>]]></ReturnType>
					<Id>1718289616227</Id>
					<Name><![CDATA[f_getGridNodesTopLevel]]></Name>
					<X>1280</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return this.c_gridNodesTopLevel;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<GridNode>]]></ReturnType>
					<Id>1718289761647</Id>
					<Name><![CDATA[f_getGridNodesNotTopLevel]]></Name>
					<X>1280</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return this.c_gridNodesNotTopLevel;]]></Body>
				</Function>
				<Function AccessType="private" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722853692644</Id>
					<Name><![CDATA[f_setInitialValues]]></Name>
					<Description><![CDATA[Function to set initial states at start of simulation.]]></Description>
					<X>590</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_totalInstalledPVPower_kW = 0;
v_totalInstalledWindPower_kW = 0;
for (J_EA ea : c_energyAssets) {
	if (ea.energyAssetType == OL_EnergyAssetType.WINDMILL && ((GridConnection)ea.getParentAgent()).v_isActive ) {
		v_totalInstalledWindPower_kW += ea.getElectricCapacity_kW();
	}
	if (ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC && ((GridConnection)ea.getParentAgent()).v_isActive ) {
		v_totalInstalledPVPower_kW += ea.getElectricCapacity_kW();
	}
}

// Total installed battery capacity
v_totalBatteryInstalledCapacity_MWh = sumWhere(c_energyAssets, j_ea -> ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh(), j_ea -> j_ea instanceof J_EAStorageElectric && (((GridConnection)j_ea.getParentAgent()).v_isActive))/1000;
traceln("Total installed battery capacity: %s MWh", v_totalBatteryInstalledCapacity_MWh);

// Starting prices
c_gridConnections.forEach(GC -> GC.v_electricityPriceLowPassed_eurpkWh = c_gridNodesTopLevel.get(0).v_currentParentNodalPrice_eurpkWh); // Initialize filtered prices for gridConnections, hoping to prevent or reduce initial settling excursions

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722590514591</Id>
					<Name><![CDATA[f_initializePause]]></Name>
					<Description><![CDATA[Function to initialize the paused gridconnections.]]></Description>
					<X>590</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (GridConnection GC : EnergyProductionSites) {
	if (!GC.v_isActive) {
		GC.f_setActive(false);
	}
}
for (GridConnection GC : EnergyConversionSites) {
	if (!GC.v_isActive) {
		GC.f_setActive(false);
	}
}
for (GridConnection GC : GridBatteries) {
	if (!GC.v_isActive) {
		GC.f_setActive(false);
	}
}
for (GridConnection GC : PublicChargers) {
	if (!GC.v_isActive) {
		GC.f_setActive(false);
	}
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724575401400</Id>
					<Name><![CDATA[f_writeGridNodeTimeseriesToExcel]]></Name>
					<Description><![CDATA[This function writes the load on each gridnode for each timestep to excel]]></Description>
					<X>1280</X><Y>740</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[traceln("Start writing trafoloads to excel!");

int columnIndex = 2;
//int rowIndex = roundToInt(4 * t_h ) + 2;

int arraySize = acc_annualElectricityBalance_kW.getTimeSeries().length;
traceln("ArraySize: %s", arraySize);
for (int i = 0; i < arraySize ; i++) {
	p_gridNodeTimeSeriesExcel.setCellValue((i) * p_timeStep_h, "Sheet1", i+2, 1);
}

for(GridNode gn : pop_gridNodes){
	
	double[] loadArray = gn.acc_annualElectricityBalance_kW.getTimeSeries();
	for (int i = 0; i < arraySize ; i++ ) {		
		p_gridNodeTimeSeriesExcel.setCellValue(loadArray[i], "Sheet1", i+2, columnIndex);
	}
	columnIndex++;
}

traceln("Finished writing trafoloads to excel!");]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727106160366</Id>
					<Name><![CDATA[f_addProfile]]></Name>
					<X>-670</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[profile]]></Name>
						<Type><![CDATA[J_profilePointer]]></Type>
					</Parameter>
					<Body><![CDATA[c_profiles.add(profile);]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<GridConnection>]]></ReturnType>
					<Id>1727167397666</Id>
					<Name><![CDATA[f_getPausedGridConnections]]></Name>
					<X>1280</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return c_pausedGridConnections;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[J_profilePointer]]></ReturnType>
					<Id>1727193246625</Id>
					<Name><![CDATA[f_findProfile]]></Name>
					<X>-670</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[assetName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[J_profilePointer profilePointer = findFirst(c_profiles, p -> p.name.equals(assetName));
//traceln("J_EAConsumption with name %s found profile asset: %s", assetName, profilePointer);
if (profilePointer == null) {    		
	throw new RuntimeException(String.format("Consumption or production asset without valid profile!") );
}
return profilePointer;]]></Body>
				</Function>
			</Functions>
			<TableFunctions>
				<TableFunction AccessType="public" StaticFunction="false">
					<Id>1659337941636</Id>
					<Name><![CDATA[tf_p_wind_e_normalized]]></Name>
					<Description><![CDATA[Genormaliseerde tijdreeksdata per uur voor productie van wind-energie, ingelezen vanuit externe (aanpasbare) database.

@source: ETM-curves genormaliseerd met opgesteld vermogen
@since: Sprint 6
@author: Jorrit]]></Description>
					<X>-671</X><Y>79</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<InterpolationMethod>LINEAR</InterpolationMethod>
					<OutOfRangeBehaviour>NEAREST</OutOfRangeBehaviour>
					<OutOfRangeCustomValue><![CDATA[0.0]]></OutOfRangeCustomValue>
					<ApproximationOrder><![CDATA[1]]></ApproximationOrder>
					<LoadFromDatabase><![CDATA[false]]></LoadFromDatabase>
					<ValuesQuery>
						<TableReference>
						</TableReference>
							<ArgumentColumnReference>
							</ArgumentColumnReference>
							<ValueColumnReference>
							</ValueColumnReference>
					</ValuesQuery>
// arguments and values
					<Argument><![CDATA[0.0]]></Argument>
					<Value><![CDATA[0.0]]></Value>
				</TableFunction>
				<TableFunction AccessType="public" StaticFunction="false">
					<Id>1659337995740</Id>
					<Name><![CDATA[tf_p_solar_e_normalized]]></Name>
					<Description><![CDATA[Genormaliseerde tijdreeksdata per uur voor productie van zonne-energie (pv en thermisch), ingelezen vanuit externe (aanpasbare) database.

@source: ETM-curves genormaliseerd met opgesteld vermogen
@since: Sprint 6
@author: Jorrit]]></Description>
					<X>-671</X><Y>99</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<InterpolationMethod>LINEAR</InterpolationMethod>
					<OutOfRangeBehaviour>NEAREST</OutOfRangeBehaviour>
					<OutOfRangeCustomValue><![CDATA[0.0]]></OutOfRangeCustomValue>
					<ApproximationOrder><![CDATA[1]]></ApproximationOrder>
					<LoadFromDatabase><![CDATA[false]]></LoadFromDatabase>
					<ValuesQuery>
						<TableReference>
						</TableReference>
							<ArgumentColumnReference>
							</ArgumentColumnReference>
							<ValueColumnReference>
							</ValueColumnReference>
					</ValuesQuery>
// arguments and values
					<Argument><![CDATA[0.0]]></Argument>
					<Value><![CDATA[0.0]]></Value>
				</TableFunction>
				<TableFunction AccessType="public" StaticFunction="false">
					<Id>1659364114491</Id>
					<Name><![CDATA[tf_ambientTemperature_degC]]></Name>
					<Description><![CDATA[Genormaliseerde tijdreeksdata per uur voor buitentemperatuur.

@since: Sprint 6
@author: Jorrit]]></Description>
					<X>-671</X><Y>119</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<InterpolationMethod>LINEAR</InterpolationMethod>
					<OutOfRangeBehaviour>NEAREST</OutOfRangeBehaviour>
					<OutOfRangeCustomValue><![CDATA[0.0]]></OutOfRangeCustomValue>
					<ApproximationOrder><![CDATA[1]]></ApproximationOrder>
					<LoadFromDatabase><![CDATA[false]]></LoadFromDatabase>
					<ValuesQuery>
						<TableReference>
						</TableReference>
							<ArgumentColumnReference>
							</ArgumentColumnReference>
							<ValueColumnReference>
							</ValueColumnReference>
					</ValuesQuery>
// arguments and values
					<Argument><![CDATA[0.0]]></Argument>
					<Value><![CDATA[0.0]]></Value>
				</TableFunction>
				<TableFunction AccessType="public" StaticFunction="false">
					<Id>1706010064113</Id>
					<Name><![CDATA[tf_dayAheadElectricityPricing_eurpMWh]]></Name>
					<X>-670</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<InterpolationMethod>LINEAR</InterpolationMethod>
					<OutOfRangeBehaviour>REPEATING</OutOfRangeBehaviour>
					<OutOfRangeCustomValue><![CDATA[0.0]]></OutOfRangeCustomValue>
					<ApproximationOrder><![CDATA[1]]></ApproximationOrder>
					<LoadFromDatabase><![CDATA[false]]></LoadFromDatabase>
					<ValuesQuery>
						<TableReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[profiles]]></ClassName>
						</TableReference>
							<ArgumentColumnReference>
								<PackageName><![CDATA[zero_engine]]></PackageName>
								<ClassName><![CDATA[profiles]]></ClassName>
								<ItemName><![CDATA[t_h]]></ItemName>
							</ArgumentColumnReference>
							<ValueColumnReference>
								<PackageName><![CDATA[zero_engine]]></PackageName>
								<ClassName><![CDATA[profiles]]></ClassName>
								<ItemName><![CDATA[day_ahead_price_eur_mwh]]></ItemName>
							</ValueColumnReference>
					</ValuesQuery>
// arguments and values
					<Argument><![CDATA[0.0]]></Argument>
					<Value><![CDATA[0.0]]></Value>
				</TableFunction>
				<TableFunction AccessType="public" StaticFunction="false">
					<Id>1726146744634</Id>
					<Name><![CDATA[tf_cooking_demand]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-670</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<InterpolationMethod>LINEAR</InterpolationMethod>
					<OutOfRangeBehaviour>REPEATING</OutOfRangeBehaviour>
					<OutOfRangeCustomValue><![CDATA[0.0]]></OutOfRangeCustomValue>
					<ApproximationOrder><![CDATA[1]]></ApproximationOrder>
					<LoadFromDatabase><![CDATA[false]]></LoadFromDatabase>
					<ValuesQuery>
						<TableReference>
						</TableReference>
							<ArgumentColumnReference>
							</ArgumentColumnReference>
							<ValueColumnReference>
							</ValueColumnReference>
					</ValuesQuery>
// arguments and values
					<Argument><![CDATA[0.0]]></Argument>
					<Value><![CDATA[0.0]]></Value>
				</TableFunction>
			</TableFunctions>
			<AnalysisData>
    			<DataSet>
					<Id>1699275048264</Id>
					<Name><![CDATA[data_naturalGasDemand_kW]]></Name>
					<X>80</X><Y>1250</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x->x.v_currentPowerMethane_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048281</Id>
					<Name><![CDATA[data_heatPumpElectricityDemand_kW]]></Name>
					<X>80</X><Y>1330</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x->x.v_heatPumpElectricityConsumption_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048295</Id>
					<Name><![CDATA[data_windGeneration_kW]]></Name>
					<X>80</X><Y>1450</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections,x->x.v_windProductionElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048309</Id>
					<Name><![CDATA[data_V2GSupply_kW]]></Name>
					<X>80</X><Y>1490</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections,x->max(0,-x.v_evChargingPowerElectric_kW))]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048324</Id>
					<Name><![CDATA[data_PVGeneration_kW]]></Name>
					<X>80</X><Y>1430</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x->x.v_pvProductionElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048339</Id>
					<Name><![CDATA[data_batteryCharging_kW]]></Name>
					<X>80</X><Y>1390</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x -> max(0, x.v_batteryPowerElectric_kW))]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048354</Id>
					<Name><![CDATA[data_baseloadElectricityDemand_kW]]></Name>
					<X>80</X><Y>1310</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x->x.v_fixedConsumptionElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048369</Id>
					<Name><![CDATA[data_totalDemand_kW]]></Name>
					<X>80</X><Y>1530</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentEnergyConsumption_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048383</Id>
					<Name><![CDATA[data_dieselDemand_kW]]></Name>
					<X>80</X><Y>1269</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x->x.v_currentPowerDiesel_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048398</Id>
					<Name><![CDATA[data_electricVehicleDemand_kW]]></Name>
					<X>80</X><Y>1370</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x -> max(0,x.v_evChargingPowerElectric_kW))]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048412</Id>
					<Name><![CDATA[data_batteryDischarging_kW]]></Name>
					<X>80</X><Y>1470</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x -> max(0, -x.v_batteryPowerElectric_kW))]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048425</Id>
					<Name><![CDATA[data_totalSupply_kW]]></Name>
					<X>80</X><Y>1550</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentEnergyProduction_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048440</Id>
					<Name><![CDATA[data_totalNetLoad_kW]]></Name>
					<X>80</X><Y>1570</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridNodesTopLevel, x->x.v_currentLoadElectricity_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048551</Id>
					<Name><![CDATA[data_summerWeekDemand_kW]]></Name>
					<X>830</X><Y>2790</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048605</Id>
					<Name><![CDATA[data_summerWeekSupply_kW]]></Name>
					<X>830</X><Y>2810</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048713</Id>
					<Name><![CDATA[data_winterWeekDemand_kW]]></Name>
					<X>1280</X><Y>2790</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048768</Id>
					<Name><![CDATA[data_winterWeekSupply_kW]]></Name>
					<X>1280</X><Y>2810</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048878</Id>
					<Name><![CDATA[data_annualElectricityDemand_kW]]></Name>
					<X>390</X><Y>2790</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1699275048932</Id>
					<Name><![CDATA[data_annualElectricitySupply_kW]]></Name>
					<X>390</X><Y>2810</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1700478038239</Id>
					<Name><![CDATA[data_HSMScapacity_kW]]></Name>
					<X>80</X><Y>2530</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>2</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1702537713723</Id>
					<Name><![CDATA[data_HSMScapacitySupply_kW]]></Name>
					<X>260</X><Y>2530</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>2</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708507900127</Id>
					<Name><![CDATA[data_hydrogenDemand_kW]]></Name>
					<X>80</X><Y>1290</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x-> max(0, x.v_currentPowerHydrogen_kW))]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336405</Id>
					<Name><![CDATA[data_annualHeatPumpElectricityDemand_kW]]></Name>
					<X>390</X><Y>2850</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336413</Id>
					<Name><![CDATA[data_annualWindGeneration_kW]]></Name>
					<X>390</X><Y>3030</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336419</Id>
					<Name><![CDATA[data_annualV2GSupply_kW]]></Name>
					<X>390</X><Y>3070</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336425</Id>
					<Name><![CDATA[data_annualPVGeneration_kW]]></Name>
					<X>390</X><Y>3010</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336432</Id>
					<Name><![CDATA[data_annualBatteriesDemand_kW]]></Name>
					<X>390</X><Y>2890</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336438</Id>
					<Name><![CDATA[data_annualBaseloadElectricityDemand_kW]]></Name>
					<X>390</X><Y>2830</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336445</Id>
					<Name><![CDATA[data_annualElectricVehicleDemand_kW]]></Name>
					<X>390</X><Y>2870</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336451</Id>
					<Name><![CDATA[data_annualBatteriesSupply_kW]]></Name>
					<X>390</X><Y>3050</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336473</Id>
					<Name><![CDATA[data_annualDieselDemand_kW]]></Name>
					<X>390</X><Y>2930</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336480</Id>
					<Name><![CDATA[data_annualHydrogenDemand_kW]]></Name>
					<X>390</X><Y>2950</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336486</Id>
					<Name><![CDATA[data_annualDisctricHeatDemand_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>390</X><Y>2970</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336493</Id>
					<Name><![CDATA[data_annualNaturalGasSupply_kW]]></Name>
					<X>390</X><Y>3090</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336499</Id>
					<Name><![CDATA[data_annualDistrictHeatSupply_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>390</X><Y>3130</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246336506</Id>
					<Name><![CDATA[data_annualNaturalGasDemand_kW]]></Name>
					<X>390</X><Y>2910</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378181</Id>
					<Name><![CDATA[data_summerWeekHeatPumpElectricityDemand_kW]]></Name>
					<X>830</X><Y>2850</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378188</Id>
					<Name><![CDATA[data_summerWeekWindGeneration_kW]]></Name>
					<X>830</X><Y>3030</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378194</Id>
					<Name><![CDATA[data_summerWeekV2GSupply_kW]]></Name>
					<X>830</X><Y>3070</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378199</Id>
					<Name><![CDATA[data_summerWeekPVGeneration_kW]]></Name>
					<X>830</X><Y>3010</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378204</Id>
					<Name><![CDATA[data_summerWeekBatteriesDemand_kW]]></Name>
					<X>830</X><Y>2890</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378210</Id>
					<Name><![CDATA[data_summerWeekBaseloadElectricityDemand_kW]]></Name>
					<X>830</X><Y>2830</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378214</Id>
					<Name><![CDATA[data_summerWeekElectricVehicleDemand_kW]]></Name>
					<X>830</X><Y>2870</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378219</Id>
					<Name><![CDATA[data_summerWeekBatteriesSupply_kW]]></Name>
					<X>830</X><Y>3050</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378224</Id>
					<Name><![CDATA[data_summerWeekNaturalGasDemand_kW]]></Name>
					<X>830</X><Y>2910</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378229</Id>
					<Name><![CDATA[data_summerWeekDieselDemand_kW]]></Name>
					<X>830</X><Y>2930</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378234</Id>
					<Name><![CDATA[data_summerWeekHydrogenDemand_kW]]></Name>
					<X>830</X><Y>2950</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378239</Id>
					<Name><![CDATA[data_summerWeekNaturalGasSupply_kW]]></Name>
					<X>830</X><Y>3090</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378244</Id>
					<Name><![CDATA[data_winterWeekHeatPumpElectricityDemand_kW]]></Name>
					<X>1280</X><Y>2850</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378248</Id>
					<Name><![CDATA[data_winterWeekWindGeneration_kW]]></Name>
					<X>1280</X><Y>3030</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378254</Id>
					<Name><![CDATA[data_winterWeekV2GSupply_kW]]></Name>
					<X>1280</X><Y>3070</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378259</Id>
					<Name><![CDATA[data_winterWeekPVGeneration_kW]]></Name>
					<X>1280</X><Y>3010</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378264</Id>
					<Name><![CDATA[data_winterWeekBatteriesDemand_kW]]></Name>
					<X>1280</X><Y>2890</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378269</Id>
					<Name><![CDATA[data_winterWeekBaseloadElectricityDemand_kW]]></Name>
					<X>1280</X><Y>2830</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378274</Id>
					<Name><![CDATA[data_winterWeekElectricVehicleDemand_kW]]></Name>
					<X>1280</X><Y>2870</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378279</Id>
					<Name><![CDATA[data_winterWeekBatteriesSupply_kW]]></Name>
					<X>1280</X><Y>3050</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378283</Id>
					<Name><![CDATA[data_winterWeekNaturalGasDemand_kW]]></Name>
					<X>1280</X><Y>2910</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378290</Id>
					<Name><![CDATA[data_winterWeekDieselDemand_kW]]></Name>
					<X>1280</X><Y>2930</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378295</Id>
					<Name><![CDATA[data_winterWeekHydrogenDemand_kW]]></Name>
					<X>1280</X><Y>2950</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715246378299</Id>
					<Name><![CDATA[data_winterWeekNaturalGasSupply_kW]]></Name>
					<X>1280</X><Y>3090</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715671189730</Id>
					<Name><![CDATA[data_annualHydrogenSupply_kW]]></Name>
					<X>390</X><Y>3110</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1715673600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715671280183</Id>
					<Name><![CDATA[data_winterWeekHydrogenSupply_kW]]></Name>
					<X>1280</X><Y>3110</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715671308107</Id>
					<Name><![CDATA[data_summerWeekHydrogenSupply_kW]]></Name>
					<X>830</X><Y>3110</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715671336391</Id>
					<Name><![CDATA[data_hydrogenSupply_kW]]></Name>
					<X>80</X><Y>1510</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x-> max(0, -x.v_currentPowerHydrogen_kW))]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1717417117555</Id>
					<Name><![CDATA[data_hydrogenElectricityDemand_kW]]></Name>
					<X>80</X><Y>1350</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1717488000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x->x.v_hydrogenElectricityConsumption_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1720447715226</Id>
					<Name><![CDATA[data_electricityCurtailment_kW]]></Name>
					<X>80</X><Y>1410</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x->x.v_currentEnergyCurtailed_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1721120077353</Id>
					<Name><![CDATA[data_gridCapacityDemand_kW]]></Name>
					<X>560</X><Y>2530</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1712736000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridNodesTopLevel, x -> x.p_capacity_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1721120077360</Id>
					<Name><![CDATA[data_gridCapacitySupply_kW]]></Name>
					<X>840</X><Y>2530</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1712736000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridNodesTopLevel, x -> -x.p_capacity_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1721134096132</Id>
					<Name><![CDATA[data_summerWeekNetLoad_kW]]></Name>
					<X>830</X><Y>3140</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1721134140759</Id>
					<Name><![CDATA[data_winterWeekNetLoad_kW]]></Name>
					<X>1280</X><Y>3140</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1726292585769</Id>
					<Name><![CDATA[data_districtHeatingDemand_kW]]></Name>
					<X>80</X><Y>1590</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1717488000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x -> x.v_districtHeatDelivery_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1726292590669</Id>
					<Name><![CDATA[data_cookingElectricityDemand_kW]]></Name>
					<X>80</X><Y>1610</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[sum(c_gridConnections, x-> x.v_electricHobConsumption_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<AgentLinks>
				<AgentLink>
					<Id>1658477103135</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1696520909218</Id>
					<Name><![CDATA[connections1]]></Name>
					<X>40</X><Y>-180</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1658477403183</Id>
					<Name><![CDATA[pop_gridNodes]]></Name>
					<X>300</X><Y>50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GridNode]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GridNode]]></ClassName>
							<ItemName><![CDATA[1658477288306]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gridNodeID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_nodeType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_capacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_transportBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerGridOperator]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridNodeOwnerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[b_transportBufferValid]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[gisRegion]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_description]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_realCapacityAvailable]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_nodeStatus]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_uniqueColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_localNodalPricingFactor_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultFillColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_localNodalPricingTreshold_fr]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_originalCapacity_kW]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[p_latitude]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[p_longitude]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1658477403184</Id>
					<Name><![CDATA[pop_gridConnections]]></Name>
					<X>90</X><Y>45</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GridConnection]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GridConnection]]></ClassName>
							<ItemName><![CDATA[1658499438201]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1658499722957</Id>
					<Name><![CDATA[pop_UI_EnergyAsset]]></Name>
					<X>297</X><Y>362</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[UI_EnergyAsset]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[UI_EnergyAsset]]></ClassName>
							<ItemName><![CDATA[1658499506318]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[j_ea]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentAgent]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_assetName]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1658752704931</Id>
					<Name><![CDATA[pop_subTenants]]></Name>
					<Description><![CDATA[Optionele visualisatie-agent met eenvoudige visuals voor model inspectie, monitoring en debugging. Kan aangezet worden met de parameter b_addKpiVisuals, maar model draait ook zonder.

@since: Sprint 6
@author: Jorrit]]></Description>
					<X>90</X><Y>450</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[A_SubTenant]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[A_SubTenant]]></ClassName>
							<ItemName><![CDATA[1658752695709]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_mainTenantID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorGroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorSubgroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_connectedGridConnection]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1660730126216</Id>
					<Name><![CDATA[pop_connectionOwners]]></Name>
					<X>90</X><Y>350</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[ConnectionOwner]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[ConnectionOwner]]></ClassName>
							<ItemName><![CDATA[1660224852392]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_coopParent]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorContractList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_capacityTariffApplicable]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_capacityPrice_eur]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_capacityLevel_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_congestionTariffApplicable]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_connectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electricitySupplier]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_nfatoStart_h]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_nfatoEnd_h]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_nfatoLvl_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridOperator]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_methaneSupplier]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_hydrogenSupplier]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatSupplier]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorSubgroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorGroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_connectionOwnerType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_connectionOwnerIndexNr]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_detailedCompany]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[b_hasPrivateUI]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energySupplierID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyCoopID]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1660731786332</Id>
					<Name><![CDATA[pop_energySuppliers]]></Name>
					<X>90</X><Y>370</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergySupplier]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[EnergySupplier]]></ClassName>
							<ItemName><![CDATA[1660731377982]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_actorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentActorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentActor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_fixedElectricityPrice_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_fixedHeatPrice_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_fixedMethanePrice_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_fixedHydrogenPrice_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_variableElectricityPriceOverNational_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_fixedFeedinTariff_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_salderenActive]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorSubgroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorGroup]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1660731820965</Id>
					<Name><![CDATA[pop_energyCoops]]></Name>
					<X>90</X><Y>390</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyCoop]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[EnergyCoop]]></ClassName>
							<ItemName><![CDATA[1660731375014]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_actorContractList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_connectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridNodeUnderResponsibility]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentActorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electricitySupplier]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_CoopParent]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridOperator]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_methaneSupplier]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_hydrogenSupplier]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatSupplier]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_yearlyOperationalCosts_eur]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_applyKostprijsPlus]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorSubgroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorGroup]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1660731850501</Id>
					<Name><![CDATA[pop_gridOperators]]></Name>
					<X>90</X><Y>430</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GridOperator]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GridOperator]]></ClassName>
							<ItemName><![CDATA[1660731380913]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_actorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentActorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentActor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_capacitypricing_households_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_capacitypricing_households_eur]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_hasCapacityPricing]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_hasCongestionPricing]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorSubgroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorGroup]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[1]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1660731876775</Id>
					<Name><![CDATA[nationalEnergyMarket]]></Name>
					<X>90</X><Y>590</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[NationalEnergyMarket]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[NationalEnergyMarket]]></ClassName>
							<ItemName><![CDATA[1660731384413]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_actorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorSubgroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorGroup]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>false</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialSpeedCode Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
					</InitialSpeedCode>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1660731999276</Id>
					<Name><![CDATA[pop_governmentLayer]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>90</X><Y>410</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GovernmentLayer]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GovernmentLayer]]></ClassName>
							<ItemName><![CDATA[1660731364523]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_actorID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorSubgroup]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_actorGroup]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1663772677806</Id>
					<Name><![CDATA[Houses]]></Name>
					<X>90</X><Y>65</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCHouse]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCHouse]]></ClassName>
							<ItemName><![CDATA[1663772408665]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_minEVChargeTarget_fr]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_householdEV]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_minChargingPower_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_smartChargingPowerAttenuation_fr]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_hasElectricHob]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_smartHeatingEnabled]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_pricelevelLowDifFromAvg_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_pricelevelHighDifFromAvg_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingKickinTreshold_degC]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_bouwjaar]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_nageisoleerd]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_eigenOprit]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingMethod]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1663774441970</Id>
					<Name><![CDATA[DistrictHeatingSystems]]></Name>
					<X>90</X><Y>105</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCDistrictHeating]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCDistrictHeating]]></ClassName>
							<ItemName><![CDATA[1663773810343]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_residualHeatLTSource]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHheatStorage]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1663774461816</Id>
					<Name><![CDATA[EnergyProductionSites]]></Name>
					<X>90</X><Y>145</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCEnergyProduction]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCEnergyProduction]]></ClassName>
							<ItemName><![CDATA[1663773842877]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1663774484695</Id>
					<Name><![CDATA[EnergyConversionSites]]></Name>
					<X>90</X><Y>185</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCEnergyConversion]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCEnergyConversion]]></ClassName>
							<ItemName><![CDATA[1663773857866]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_conversionEfficiency]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_productionNominal_Nm3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_conversionEfficiencyFC]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_productionNominalFC_Nm3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_productionMinimumFC_Nm3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_powerNominalFC_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyProductionNominalFC_kWh_Nm3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_inputPressureFC_Bar]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_loadChangeTimeMinMaxFC_s]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_startUpTimeIdleFC_s]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_startUpTimeShutdownFC_s]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electricityPriceMinForProfitFC_eurpkWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_minProductionRatio]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[b_forecast_lastWeekBased]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1663774484696</Id>
					<Name><![CDATA[UtilityConnections]]></Name>
					<X>90</X><Y>165</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCUtility]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCUtility]]></ClassName>
							<ItemName><![CDATA[1672138285225]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1665480562790</Id>
					<Name><![CDATA[Industries]]></Name>
					<X>90</X><Y>85</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCIndustry]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCIndustry]]></ClassName>
							<ItemName><![CDATA[1665480522862]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1666957373353</Id>
					<Name><![CDATA[GridBatteries]]></Name>
					<X>90</X><Y>125</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCGridBattery]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCGridBattery]]></ClassName>
							<ItemName><![CDATA[1666956363817]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1676382641979</Id>
					<Name><![CDATA[pop_GIS_Buildings]]></Name>
					<X>297</X><Y>422</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GIS_Building]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GIS_Building]]></ClassName>
							<ItemName><![CDATA[1676382560900]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_status]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_useType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_buildingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_buildingYear]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floors]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_pandcluster_nr]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_uniek_pand]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_pand_nr]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_pandNaam]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[gisRegion]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISObjectType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISRegion_coords]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_id]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultFillColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineWidth]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineStyle]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_pandNaam]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_annotation]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1676382641980</Id>
					<Name><![CDATA[pop_GIS_Objects]]></Name>
					<X>297</X><Y>382</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GIS_Object]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GIS_Object]]></ClassName>
							<ItemName><![CDATA[1667726338855]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[gisRegion]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISObjectType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISRegion_coords]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_id]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultFillColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineWidth]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineStyle]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_annotation]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1676382641981</Id>
					<Name><![CDATA[pop_GIS_Parcels]]></Name>
					<X>297</X><Y>400</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GIS_Parcel]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GIS_Parcel]]></ClassName>
							<ItemName><![CDATA[1660572036694]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[gisRegion]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISObjectType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISRegion_coords]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_id]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultFillColor]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineWidth]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_defaultLineStyle]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_annotation]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1717960182623</Id>
					<Name><![CDATA[PublicChargers]]></Name>
					<X>90</X><Y>205</Y>
					<Label><X>16</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCPublicCharger]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCPublicCharger]]></ClassName>
							<ItemName><![CDATA[1717956409512]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gisregion]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_nbOfChargers]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_maxChargingPower_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingVehicleType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_CPOName]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_isInitialCharger]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingProfileName]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1718797587108</Id>
					<Name><![CDATA[Neighborhoods]]></Name>
					<X>90</X><Y>226</Y>
					<Label><X>15</X><Y>-1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[GCNeighborhood]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[GCNeighborhood]]></ClassName>
							<ItemName><![CDATA[1718724980089]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_gisRegion]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionCategory]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeElectricID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridConnectionID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_parentNodeHeatID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_BuildingThermalAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_primaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ownerID]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatingType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyAssetList]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_batteryAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_electrolyserOperationMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_heatBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasBuffer]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingTracker]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_energyLabel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_DHWAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_GISPoint]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_owner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_purposeBAG]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_name]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_curtailmentMode]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_thresholdCOP_hybridHeatpump]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_address]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1658477103139</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1665052211228</Id>
					<Name><![CDATA[rectangle]]></Name>
					<X>-700</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16744448</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>540</Width>
					<Height>340</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1659709739366</Id>
					<Name><![CDATA[text]]></Name>
					<X>-681</X><Y>45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Tijdreeksdata:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1659709765242</Id>
					<Name><![CDATA[text1]]></Name>
					<X>-441</X><Y>49</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Parameters:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1665052264314</Id>
					<Name><![CDATA[rectangle1]]></Name>
					<X>-880</X><Y>480</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-3308225</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>720</Width>
					<Height>660</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1665052603927</Id>
					<Name><![CDATA[rectangle2]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-700</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16744448</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>359</Width>
					<Height>39</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1665052191319</Id>
					<Name><![CDATA[text3]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-665</X><Y>7</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16744448</Color>
					<Text><![CDATA[Parameters and generic profiles/data]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1665052678662</Id>
					<Name><![CDATA[rectangle3]]></Name>
					<X>-880</X><Y>480</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-3308225</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>149</Width>
					<Height>40</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1665052678664</Id>
					<Name><![CDATA[text5]]></Name>
					<X>-845</X><Y>487</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-3308225</Color>
					<Text><![CDATA[Output
]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1668602188368</Id>
					<Name><![CDATA[text4]]></Name>
					<X>80</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gridconnections]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1668602188372</Id>
					<Name><![CDATA[line2]]></Name>
					<X>60</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>190</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1668602207232</Id>
					<Name><![CDATA[text6]]></Name>
					<X>340</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Infra & assets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1668602207235</Id>
					<Name><![CDATA[line3]]></Name>
					<X>280</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>180</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1668602284894</Id>
					<Name><![CDATA[line4]]></Name>
					<X>60</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>190</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1668602284900</Id>
					<Name><![CDATA[text7]]></Name>
					<X>130</X><Y>310</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Actors]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1668602384222</Id>
					<Name><![CDATA[line5]]></Name>
					<X>60</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>190</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1668602384225</Id>
					<Name><![CDATA[text8]]></Name>
					<X>150</X><Y>540</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Other populations]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Line>
					<Id>1668602513058</Id>
					<Name><![CDATA[line6]]></Name>
					<X>1104</X><Y>64</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>460</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1668602513060</Id>
					<Name><![CDATA[text9]]></Name>
					<X>1344</X><Y>44</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Variables]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1671703651139</Id>
					<Name><![CDATA[line7]]></Name>
					<X>777</X><Y>242</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>190</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1671703651141</Id>
					<Name><![CDATA[text10]]></Name>
					<X>867</X><Y>222</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Forecasts]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Line>
					<Id>1690205003572</Id>
					<Name><![CDATA[line8]]></Name>
					<X>557</X><Y>62</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>430</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1690205003577</Id>
					<Name><![CDATA[text11]]></Name>
					<X>767</X><Y>42</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Simulation engine]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Line>
					<Id>1693309354364</Id>
					<Name><![CDATA[line9]]></Name>
					<X>281</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>180</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1693309354506</Id>
					<Name><![CDATA[text13]]></Name>
					<X>307</X><Y>322</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[UI & Visualisation agents]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1697557019965</Id>
					<Name><![CDATA[rapidSimButton]]></Name>
					<X>787</X><Y>162</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_runRapidSimulation();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Run Rapid Simulation]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Line>
					<Id>1716890105093</Id>
					<Name><![CDATA[line10]]></Name>
					<X>1260</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>190</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1716890105095</Id>
					<Name><![CDATA[text12]]></Name>
					<X>1350</X><Y>480</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Getters]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Level>
				<Level>
					<Id>1699290897134</Id>
					<Name><![CDATA[level1]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1696520909213</Id>
					<Name><![CDATA[va_engine]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1658477288308</Id>
			<Name><![CDATA[GridNode]]></Name>
			<Import><![CDATA[import com.fasterxml.jackson.databind.JsonNode;

import zeroPackage.ZeroMath;
import zeroPackage.ZeroAccumulator;]]></Import>
			<StartupCode><![CDATA[/*
if (p_energyType.equals(OL_EnergyCarrierType.HEAT)) {
	double capacityHeat_kW = 1000;
	double lossFactor_WpK = 100;
	double InitialStateOfCharge_degC = 60;
	double heatCapacity_JpK = 1e7;
	double soilTemperature_degC = main.p_undergroundTemperature_degC;
	p_transportBuffer = new J_EAStorageHeat(null, capacityHeat_kW, lossFactor_WpK, energyModel.p_timeStep_h, InitialStateOfCharge_degC, 10, 90, heatCapacity_JpK);
	p_transportBuffer.updateAmbientTemperature(soilTemperature_degC);
}*/]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1658477288306</Id>
				<Name><![CDATA[1658477288306]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1658477288304</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1658477288307</CurrentLevel>
			<ConnectionsId>1658477288303</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1658497430333</Id>
					<Name><![CDATA[v_currentLoadElectricity_kW]]></Name>
					<X>50</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1658497443523</Id>
					<Name><![CDATA[v_currentPowerLost_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1260</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660122738711</Id>
					<Name><![CDATA[v_currentLoadMethane_kW]]></Name>
					<X>50</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660122738713</Id>
					<Name><![CDATA[v_currentLoadHeat_kW]]></Name>
					<X>50</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660122738715</Id>
					<Name><![CDATA[v_currentLoadHydrogen_kW]]></Name>
					<X>50</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660216693601</Id>
					<Name><![CDATA[v_electricityDrawn_kWh]]></Name>
					<X>640</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660216693603</Id>
					<Name><![CDATA[v_methaneDrawn_kWh]]></Name>
					<X>640</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660216693605</Id>
					<Name><![CDATA[v_heatDrawn_kWh]]></Name>
					<X>640</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660216693607</Id>
					<Name><![CDATA[v_hydrogenDrawn_kWh]]></Name>
					<X>640</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660216693609</Id>
					<Name><![CDATA[v_electricityDelivered_kWh]]></Name>
					<X>820</X><Y>499</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660216693611</Id>
					<Name><![CDATA[v_methaneDelivered_kWh]]></Name>
					<X>820</X><Y>519</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660216693613</Id>
					<Name><![CDATA[v_heatDelivered_kWh]]></Name>
					<X>820</X><Y>559</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660216693615</Id>
					<Name><![CDATA[v_hydrogenDelivered_kWh]]></Name>
					<X>820</X><Y>539</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1665061187538</Id>
					<Name><![CDATA[v_congested]]></Name>
					<X>50</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666594510176</Id>
					<Name><![CDATA[v_congestionMode]]></Name>
					<X>50</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA["No congestion atm"]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666878219776</Id>
					<Name><![CDATA[v_peakLoadAbsoluteElectricity_kW]]></Name>
					<Description><![CDATA[Houdt de piekbelasting in kW over de modelrun bij (absolute waarde) voor kostenberekeningen netverzwaringen (totale gebiedskosten). Geupdate in f_calculateEnergyBalance.

@author: Jorrit
@since: 27-10-2022]]></Description>
					<X>400</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666878695816</Id>
					<Name><![CDATA[v_loadFactor_fr]]></Name>
					<Description><![CDATA[In electrical engineering the load factor is defined as the average load divided by the peak load in a specified time period.[1] It is a measure of the utilization rate, or efficiency.
geupdate vanuit

@author: Jorrit
@since: 27-10-2022]]></Description>
					<X>400</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666878761221</Id>
					<Name><![CDATA[v_averageAbsoluteLoadElectricity_kW]]></Name>
					<Description><![CDATA[Average load over model runtime in kW.

@author: Jorrit
@since: 27-10-2022]]></Description>
					<X>400</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667553127377</Id>
					<Name><![CDATA[v_timeOfPeakPosLoadFiltered_h]]></Name>
					<X>400</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668600984923</Id>
					<Name><![CDATA[v_currentLoadElectricityLowPassed_kW]]></Name>
					<X>50</X><Y>591</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668603168061</Id>
					<Name><![CDATA[v_lowPassFactor_fr]]></Name>
					<X>50</X><Y>571</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[min(1, 0.8 * energyModel.p_timeStep_h) //0.2 ]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670404847922</Id>
					<Name><![CDATA[v_peakLoadFilteredElectricity_kW]]></Name>
					<Description><![CDATA[Houdt de piekbelasting in kW over de modelrun bij (absolute waarde) voor kostenberekeningen netverzwaringen (totale gebiedskosten). Geupdate in f_calculateEnergyBalance.

@author: Jorrit
@since: 27-10-2022]]></Description>
					<X>400</X><Y>660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670405904360</Id>
					<Name><![CDATA[v_timeOfPeakLoadFiltered_h]]></Name>
					<X>400</X><Y>680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1672304003577</Id>
					<Name><![CDATA[v_peakPosLoadElectricity_kW]]></Name>
					<Description><![CDATA[Houdt de piekbelasting in kW over de modelrun bij (absolute waarde) voor kostenberekeningen netverzwaringen (totale gebiedskosten). Geupdate in f_calculateEnergyBalance.

@author: Jorrit
@since: 27-10-2022]]></Description>
					<X>400</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1672304030993</Id>
					<Name><![CDATA[v_peakNegLoadElectricity_kW]]></Name>
					<Description><![CDATA[Houdt de piekbelasting in kW over de modelrun bij (absolute waarde) voor kostenberekeningen netverzwaringen (totale gebiedskosten). Geupdate in f_calculateEnergyBalance.

@author: Jorrit
@since: 27-10-2022]]></Description>
					<X>400</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1672304151508</Id>
					<Name><![CDATA[v_timeOfPeakNegLoadFiltered_h]]></Name>
					<X>400</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1675683578599</Id>
					<Name><![CDATA[v_currentCongestionPrice_eurpkWh]]></Name>
					<X>50</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689233711411</Id>
					<Name><![CDATA[v_filteredLoadCongestionPricing_kW]]></Name>
					<X>50</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689234315318</Id>
					<Name><![CDATA[v_lowPassFactorCongestionPricing_fr]]></Name>
					<X>50</X><Y>710</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[min(1, 0.25 * energyModel.p_timeStep_h) // smaller value results in more filtering]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696857656646</Id>
					<Name><![CDATA[v_totalTimeOverloaded_h]]></Name>
					<X>400</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713272859203</Id>
					<Name><![CDATA[v_annualElectricityDrawn_MWh]]></Name>
					<X>670</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713272862480</Id>
					<Name><![CDATA[v_annualElectricityDelivered_MWh]]></Name>
					<X>670</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715007701783</Id>
					<Name><![CDATA[v_annualExcessImport_MWh]]></Name>
					<X>670</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715007721718</Id>
					<Name><![CDATA[v_annualExcessExport_MWh]]></Name>
					<X>670</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715016274483</Id>
					<Name><![CDATA[v_summerWeekElectricityDrawn_MWh]]></Name>
					<X>990</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715016274485</Id>
					<Name><![CDATA[v_summerWeekElectricityDelivered_MWh]]></Name>
					<X>990</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715016274487</Id>
					<Name><![CDATA[v_summerWeekExcessImport_MWh]]></Name>
					<X>990</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715016274489</Id>
					<Name><![CDATA[v_summerWeekExcessExport_MWh]]></Name>
					<X>990</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715016405650</Id>
					<Name><![CDATA[v_winterWeekElectricityDrawn_MWh]]></Name>
					<X>990</X><Y>880</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715016405652</Id>
					<Name><![CDATA[v_winterWeekElectricityDelivered_MWh]]></Name>
					<X>990</X><Y>900</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715016405654</Id>
					<Name><![CDATA[v_winterWeekExcessImport_MWh]]></Name>
					<X>990</X><Y>840</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715016405656</Id>
					<Name><![CDATA[v_winterWeekExcessExport_MWh]]></Name>
					<X>990</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066563202</Id>
					<Name><![CDATA[v_daytimeElectricityDrawn_MWh]]></Name>
					<X>1330</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066563204</Id>
					<Name><![CDATA[v_daytimeElectricityDelivered_MWh]]></Name>
					<X>1330</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066563206</Id>
					<Name><![CDATA[v_daytimeExcessImport_MWh]]></Name>
					<X>1330</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066563208</Id>
					<Name><![CDATA[v_daytimeExcessExport_MWh]]></Name>
					<X>1330</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066563210</Id>
					<Name><![CDATA[v_nighttimeElectricityDrawn_MWh]]></Name>
					<X>1330</X><Y>880</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066563212</Id>
					<Name><![CDATA[v_nighttimeElectricityDelivered_MWh]]></Name>
					<X>1330</X><Y>900</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066563214</Id>
					<Name><![CDATA[v_nighttimeExcessImport_MWh]]></Name>
					<X>1330</X><Y>840</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066563216</Id>
					<Name><![CDATA[v_nighttimeExcessExport_MWh]]></Name>
					<X>1330</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066576717</Id>
					<Name><![CDATA[v_weekdayElectricityDrawn_MWh]]></Name>
					<X>1640</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066576719</Id>
					<Name><![CDATA[v_weekdayElectricityDelivered_MWh]]></Name>
					<X>1640</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066576721</Id>
					<Name><![CDATA[v_weekdayExcessImport_MWh]]></Name>
					<X>1640</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066576723</Id>
					<Name><![CDATA[v_weekdayExcessExport_MWh]]></Name>
					<X>1640</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066576725</Id>
					<Name><![CDATA[v_weekendElectricityDrawn_MWh]]></Name>
					<X>1640</X><Y>880</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066576727</Id>
					<Name><![CDATA[v_weekendElectricityDelivered_MWh]]></Name>
					<X>1640</X><Y>900</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066576729</Id>
					<Name><![CDATA[v_weekendExcessImport_MWh]]></Name>
					<X>1640</X><Y>840</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715066576731</Id>
					<Name><![CDATA[v_weekendExcessExport_MWh]]></Name>
					<X>1640</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111623480</Id>
					<Name><![CDATA[data_netbelastingDuurkromme_kW]]></Name>
					<X>37</X><Y>1010</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111623645</Id>
					<Name><![CDATA[data_netbelastingDuurkrommeVorige_kW]]></Name>
					<X>37</X><Y>1030</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111623647</Id>
					<Name><![CDATA[data_summerWeekNetbelastingDuurkromme_kW]]></Name>
					<X>37</X><Y>1050</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111623649</Id>
					<Name><![CDATA[data_winterWeekNetbelastingDuurkromme_kW]]></Name>
					<X>37</X><Y>1070</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111623651</Id>
					<Name><![CDATA[data_daytimeNetbelastingDuurkromme_kW]]></Name>
					<X>37</X><Y>1090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111623653</Id>
					<Name><![CDATA[data_nighttimeNetbelastingDuurkromme_kW]]></Name>
					<X>37</X><Y>1110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111623655</Id>
					<Name><![CDATA[data_weekdayNetbelastingDuurkromme_kW]]></Name>
					<X>37</X><Y>1130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111623657</Id>
					<Name><![CDATA[data_weekendNetbelastingDuurkromme_kW]]></Name>
					<X>37</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718111648009</Id>
					<Name><![CDATA[acc_annualElectricityBalance_kW]]></Name>
					<X>400</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760);]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718895936296</Id>
					<Name><![CDATA[v_currentLocalNodalPrice_eurpkWh]]></Name>
					<X>50</X><Y>780</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718895937973</Id>
					<Name><![CDATA[v_currentTotalNodalPrice_eurpkWh]]></Name>
					<X>50</X><Y>800</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718896257049</Id>
					<Name><![CDATA[v_currentParentNodalPrice_eurpkWh]]></Name>
					<Description><![CDATA[Given a default value for 'top' agents, this can be seen as average market price of electricity.]]></Description>
					<X>50</X><Y>760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719300900648</Id>
					<Name><![CDATA[v_totalInstalledWindPower_kW]]></Name>
					<X>1044</X><Y>344</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719300900650</Id>
					<Name><![CDATA[v_totalInstalledPVPower_kW]]></Name>
					<X>1044</X><Y>364</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719301262027</Id>
					<Name><![CDATA[v_electricityYieldForecast_fr]]></Name>
					<X>1044</X><Y>392</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721228582916</Id>
					<Name><![CDATA[acc_DLR_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>400</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760);]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722498291003</Id>
					<Name><![CDATA[v_currentCapacityElectric_kW]]></Name>
					<X>50</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722508380897</Id>
					<Name><![CDATA[v_annualHeatImport_MWh]]></Name>
					<X>1620</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1658477613290</Id>
					<Name><![CDATA[p_gridNodeID]]></Name>
					<X>50</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658477613288</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658480610309</Id>
					<Name><![CDATA[p_parentNodeID]]></Name>
					<X>50</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658480610307</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658492575878</Id>
					<Name><![CDATA[p_nodeType]]></Name>
					<X>50</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridNodeType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658492575876</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658492864101</Id>
					<Name><![CDATA[p_energyType]]></Name>
					<X>50</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_EnergyCarrierType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658492864099</Id>
							<Label><![CDATA[p_energyType]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658493496878</Id>
					<Name><![CDATA[p_capacity_kW]]></Name>
					<X>50</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1658493496876</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660635056957</Id>
					<Name><![CDATA[p_transportBuffer]]></Name>
					<X>50</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAStorageHeat]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1660635056955</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1664465663237</Id>
					<Name><![CDATA[p_ownerGridOperator]]></Name>
					<X>50</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[GridOperator]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1664465663235</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1664466130593</Id>
					<Name><![CDATA[p_gridNodeOwnerID]]></Name>
					<X>50</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1664466130591</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1683816606479</Id>
					<Name><![CDATA[b_transportBufferValid]]></Name>
					<X>50</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1683816606477</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1698752314374</Id>
					<Name><![CDATA[p_longitude]]></Name>
					<X>50</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1698752314372</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1698752314385</Id>
					<Name><![CDATA[p_latitude]]></Name>
					<X>50</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1698752314383</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1705581809373</Id>
					<Name><![CDATA[gisRegion]]></Name>
					<X>50</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[GISRegion]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1705581809371</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1705586150313</Id>
					<Name><![CDATA[p_description]]></Name>
					<X>50</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1705586150311</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1707680312891</Id>
					<Name><![CDATA[p_realCapacityAvailable]]></Name>
					<Description><![CDATA[This value is set at 'true' if the provided input file of the trafos has a postitive value. If the real world capacity is unknown, the excel input should denote -1. And p_capacity_kW is set at a default value provided bij de excel list.]]></Description>
					<X>50</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1707680312889</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709911209033</Id>
					<Name><![CDATA[p_nodeStatus]]></Name>
					<Description><![CDATA[Shows if the node is active or not active]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709911209031</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1718566355120</Id>
					<Name><![CDATA[p_uniqueColor]]></Name>
					<X>70</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Color]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[randomColor()]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1718566355118</Id>
							<EditorContolType>COLOR_PICKER</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1718896438696</Id>
					<Name><![CDATA[p_localNodalPricingFactor_eurpkWh]]></Name>
					<X>50</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.20]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1718896438694</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721994587455</Id>
					<Name><![CDATA[p_defaultLineColor]]></Name>
					<X>70</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Color]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="LengthUnits"><![CDATA[METER]]></UnitOfValue>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[green.brighter()]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1721994587453</Id>
							<EditorContolType>COLOR_PICKER</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721994587458</Id>
					<Name><![CDATA[p_defaultFillColor]]></Name>
					<X>70</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Color]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="LengthUnits"><![CDATA[METER]]></UnitOfValue>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[green]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1721994587456</Id>
							<EditorContolType>COLOR_PICKER</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1722268330646</Id>
					<Name><![CDATA[p_localNodalPricingTreshold_fr]]></Name>
					<X>50</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.5]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1722268330644</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726583647250</Id>
					<Name><![CDATA[p_originalCapacity_kW]]></Name>
					<X>170</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726583647248</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1658751320739</Id>
					<Name><![CDATA[c_electricityFlows]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1100</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1660122738701</Id>
					<Name><![CDATA[c_heatFlows]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1100</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1660122738703</Id>
					<Name><![CDATA[c_methaneFlows]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1100</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1660122738705</Id>
					<Name><![CDATA[c_hydrogenFlows]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1100</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1664536960213</Id>
					<Name><![CDATA[c_connectedEnergyAssets]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>290</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1664536960219</Id>
					<Name><![CDATA[c_connectedStorageAssets]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>300</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAStorage]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1664536960221</Id>
					<Name><![CDATA[c_connectedConsumptionAssets]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>300</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAConsumption]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1664536960223</Id>
					<Name><![CDATA[c_connectedProductionAssets]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>300</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAProduction]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1664536960226</Id>
					<Name><![CDATA[c_connectedConversionAssets]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>300</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAConversion]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666560357503</Id>
					<Name><![CDATA[c_connectedGridConnections]]></Name>
					<X>540</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1676567375230</Id>
					<Name><![CDATA[c_energyCoops]]></Name>
					<X>540</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[EnergyCoop]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1716885463799</Id>
					<Name><![CDATA[c_connectedGridNodes]]></Name>
					<X>540</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1658495336616</Id>
					<Name><![CDATA[f_connectToParentNode]]></Name>
					<X>780</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[GridNode myParentNode = findFirst(energyModel.pop_gridNodes, p->p.p_gridNodeID.equals(p_parentNodeID));
if( myParentNode instanceof GridNode ) {
	//superConnection.connectTo(myParentNode);
	myParentNode.f_connectToChild(this);
}

GridOperator myParentGridOperator = findFirst(energyModel.pop_gridOperators, p->p.p_actorID.equals(p_gridNodeOwnerID)) ;
if( myParentGridOperator instanceof GridOperator) {
	p_ownerGridOperator = myParentGridOperator;
	//superConnection.connectTo(myParentGridOperator);
	myParentGridOperator.f_connectToChild(this, p_energyType);
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1658495630251</Id>
					<Name><![CDATA[f_connectToChild]]></Name>
					<X>780</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingChildNode]]></Name>
						<Type><![CDATA[Agent]]></Type>
					</Parameter>
					<Body><![CDATA[//subConnections.connectTo(ConnectingChildNode);

if ( ConnectingChildNode instanceof GridNode) {
	 c_connectedGridNodes.add( (GridNode)ConnectingChildNode );
}

if ( ConnectingChildNode instanceof GridConnection) {
	 c_connectedGridConnections.add( (GridConnection)ConnectingChildNode );
}

if ( ConnectingChildNode instanceof EnergyCoop) {
	 c_energyCoops.add( (EnergyCoop)ConnectingChildNode );
}

/*if( ConnectingChildNode instanceof EnergyAsset ) {
	J_EA j_ea = (J_EA) ConnectingChildNode;
	c_connectedEnergyAssets.add(j_ea);
	if (j_ea instanceof J_EAConsumption) {
		c_connectedConsumptionAssets.add((J_EAConsumption)j_ea);
	} else if (j_ea instanceof J_EAProduction ) {
		c_connectedProductionAssets.add((J_EAProduction)j_ea);
	} else if (j_ea instanceof J_EAStorage ) {
		c_connectedStorageAssets.add((J_EAStorage)j_ea);
		if (j_ea instanceof J_EAStorageHeat) {
			p_transportBuffer = (J_EAStorageHeat)j_ea;
		}
	} else if (j_ea instanceof J_EAConversion) {
		c_connectedConversionAssets.add((J_EAConversion)j_ea);
//	if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet ) {
	//	p_HeatingAsset = EA;
//		//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());
//	}
	} else {
		traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingChildNode.getId() + " is of unknown type or null! ");
	}
}*/
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1658751236578</Id>
					<Name><![CDATA[f_calculateEnergyBalance]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1260</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// clear energy-balance for the next timestep
c_electricityFlows.clear();
v_currentLoadElectricity_kW = 0;

// determine the net electricity flow from all subconnections
for( Agent a : subConnections.getConnections() )
{
	if( a instanceof NetConnection )
	{
		//traceln("NetConnection!");
		a = (NetConnection)a;
		c_electricityFlows.put(a, ((NetConnection) a).v_currentPowerElectricity_kW);
		v_currentLoadElectricity_kW += ((NetConnection) a).v_currentPowerElectricity_kW;
	}
	else if( a instanceof EnergyAsset )
	{
		//traceln("EnergyAsset!");
		a = (EnergyAsset)a;
		c_electricityFlows.put(a, ((EnergyAsset) a).v_currentProductionElectricity_kW);
		v_currentLoadElectricity_kW += ((EnergyAsset) a).v_currentProductionElectricity_kW;
	}
	else if( a instanceof NetNode )
	{
		//traceln("NetNode!");
		a = (NetNode)a;
		c_electricityFlows.put(a,((NetNode) a).v_currentLoadElectricity_kW);
		v_currentLoadElectricity_kW += ((NetNode) a).v_currentLoadElectricity_kW;
	}
}

//traceln( "total load: "+v_currentPower_kW );]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660122738707</Id>
					<Name><![CDATA[f_sumLoads]]></Name>
					<X>780</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_currentLoadElectricity_kW = 0;
v_currentLoadMethane_kW = 0;
v_currentLoadHydrogen_kW = 0;
v_currentLoadHeat_kW = 0;

// determine the net energy flows from all subconnections by nodetype

for( GridNode GN : c_connectedGridNodes ) {
	switch(p_energyType) {
		case ELECTRICITY:
			v_currentLoadElectricity_kW += GN.v_currentLoadElectricity_kW;
		break;
		case METHANE:
			v_currentLoadMethane_kW += GN.v_currentLoadMethane_kW;
		break;
		case HYDROGEN:
			v_currentLoadHydrogen_kW += GN.v_currentLoadHydrogen_kW;
		break;
		case HEAT:
			v_currentLoadHeat_kW += GN.v_currentLoadHeat_kW;
		break;
		default:
			//
		break;
	}
}

for( GridConnection GC : c_connectedGridConnections) {
	switch(p_energyType) {
		case ELECTRICITY:
			//if (((GridConnection) a).p_gridConnectionCategory != OL_GridConnectionCategory.GRIDBATTERY){
				v_currentLoadElectricity_kW += GC.v_currentPowerElectricity_kW;
			//}
		break;
		case METHANE:
			v_currentLoadMethane_kW += GC.v_currentPowerMethane_kW;
		break;
		case HYDROGEN:
			v_currentLoadHydrogen_kW += GC.v_currentPowerHydrogen_kW;
		break;
		case HEAT:
			v_currentLoadHeat_kW += GC.v_currentPowerHeat_kW;
		break;
		default:
		break;
	}
}


/*if( p_energyType == OL_EnergyCarrierType.ELECTRICITY ){
	v_electricLoadRatioExclBattery = v_currentLoadElectricity_kW / p_capacity_kW;
}*/

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660216693598</Id>
					<Name><![CDATA[f_nodeMetering]]></Name>
					<X>780</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_electricityDrawn_kWh += max(v_currentLoadElectricity_kW, 0)*energyModel.p_timeStep_h;
v_electricityDelivered_kWh += max(-v_currentLoadElectricity_kW, 0)*energyModel.p_timeStep_h;

v_methaneDrawn_kWh += max(v_currentLoadMethane_kW, 0)*energyModel.p_timeStep_h;
v_methaneDelivered_kWh += max(-v_currentLoadMethane_kW, 0)*energyModel.p_timeStep_h;

v_hydrogenDrawn_kWh += max(v_currentLoadHydrogen_kW, 0)*energyModel.p_timeStep_h;
v_hydrogenDelivered_kWh += max(-v_currentLoadHydrogen_kW, 0)*energyModel.p_timeStep_h;

v_heatDrawn_kWh += max(v_currentLoadHeat_kW, 0)*energyModel.p_timeStep_h;
v_heatDelivered_kWh += max(-v_currentLoadHeat_kW, 0)*energyModel.p_timeStep_h;

v_averageAbsoluteLoadElectricity_kW = ( v_electricityDrawn_kWh + v_electricityDelivered_kWh ) / energyModel.t_h;
v_loadFactor_fr = v_averageAbsoluteLoadElectricity_kW / abs(v_peakLoadAbsoluteElectricity_kW);

if (energyModel.v_isRapidRun){
	//v_maxConnectionLoad_fr = max(v_maxConnectionLoad_fr, abs(v_currentPowerElectricity_kW / v_allowedCapacity_kW ));
	
	/*if (energyModel.b_enableDLR) {
		acc_annualElectricityBalance_kW.addStep(energyModel.t_h,100*v_currentLoadElectricity_kW/ (p_capacity_kW * energyModel.v_currentDLRfactor_fr));
		//acc_DLR_kW.addStep(energyModel.t_h, p_capacity_kW * energyModel.v_currentDLRfactor_fr);
	} else {
		acc_annualElectricityBalance_kW.addStep(energyModel.t_h,v_currentLoadElectricity_kW;
	}*/
	//acc_annualElectricityBalance_kW.addStep(energyModel.t_h,v_currentLoadElectricity_kW);
	acc_annualElectricityBalance_kW.addStep(energyModel.t_h, v_currentLoadElectricity_kW);
	if ( ((Double)v_currentLoadElectricity_kW).isNaN() ){
		traceln("v_currentLoadElectricity_kW is NaN! On GridNode %s, time %s h", this, energyModel.t_h);
		pauseSimulation();
		
	}
	
	
	v_annualElectricityDrawn_MWh += max(v_currentLoadElectricity_kW, 0) * energyModel.p_timeStep_h / 1000; // replace with acc.getSumPos(); in KPI function!
	v_annualElectricityDelivered_MWh += max(-v_currentLoadElectricity_kW, 0) * energyModel.p_timeStep_h / 1000; // replace with acc.getSumNeg(); in KPI function!
	double currentExcessExport_MWh = max(0,v_currentLoadElectricity_kW-p_capacity_kW) / 1000 * energyModel.p_timeStep_h;
	double currentExcessImport_MWh = max(0,-v_currentLoadElectricity_kW-p_capacity_kW) / 1000 * energyModel.p_timeStep_h;
	v_annualExcessExport_MWh += currentExcessExport_MWh;
	v_annualExcessImport_MWh += currentExcessImport_MWh;
	
	//Heatnode (grid)
	v_annualHeatImport_MWh += max(v_currentLoadHeat_kW, 0) * energyModel.p_timeStep_h / 1000; 
	
	// Daytime
	if (energyModel.t_h % 24 > 6 && energyModel.t_h % 24 < 18) {
		v_daytimeExcessExport_MWh += currentExcessExport_MWh; //a_totalExcessExport_kW[energyModel.v_timeStepsElapsed] / 1000 * energyModel.p_timeStep_h;
		v_daytimeExcessImport_MWh += currentExcessImport_MWh; //a_totalExcessImport_kW[energyModel.v_timeStepsElapsed] / 1000 * energyModel.p_timeStep_h;
		v_daytimeElectricityDrawn_MWh += max(v_currentLoadElectricity_kW, 0) * energyModel.p_timeStep_h / 1000;
		v_daytimeElectricityDelivered_MWh += max(-v_currentLoadElectricity_kW, 0) * energyModel.p_timeStep_h / 1000;
	}
	// Weekdays
	if ((energyModel.t_h+(energyModel.v_dayOfWeek1jan-1)*24) % (24*7) < (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h
		v_weekdayExcessExport_MWh += currentExcessExport_MWh;//a_totalExcessExport_kW[energyModel.v_timeStepsElapsed] / 1000 * energyModel.p_timeStep_h;
		v_weekdayExcessImport_MWh += currentExcessImport_MWh;//a_totalExcessImport_kW[energyModel.v_timeStepsElapsed] / 1000 * energyModel.p_timeStep_h;
		v_weekdayElectricityDrawn_MWh += max(v_currentLoadElectricity_kW, 0) * energyModel.p_timeStep_h / 1000;
		v_weekdayElectricityDelivered_MWh += max(-v_currentLoadElectricity_kW, 0) * energyModel.p_timeStep_h / 1000;
	}
	
	// Profile Data
	// Year
	if (energyModel.t_h % 1 == 0) {
		data_electricityLoadYear_kW.add(energyModel.t_h, v_currentLoadElectricity_kW);
	}
	// SummerWeek
	if (energyModel.t_h > energyModel.p_startHourSummerWeek && energyModel.t_h <= energyModel.p_startHourSummerWeek+24*7) {
		data_electricityLoadSummerWeek_kW.add(energyModel.t_h, v_currentLoadElectricity_kW);
	}
	// Winterweek
	if (energyModel.t_h > energyModel.p_startHourWinterWeek && energyModel.t_h <= energyModel.p_startHourWinterWeek+24*7) {
		data_electricityLoadWinterWeek_kW.add(energyModel.t_h, v_currentLoadElectricity_kW);
	}
} else {
	//data_liveElectricityBalance_kW.add(energyModel.t_h, v_currentLoadElectricity_kW);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666556555538</Id>
					<Name><![CDATA[f_setCongestionTariff]]></Name>
					<X>780</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[price_eurpkWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[for (GridConnection gc: c_connectedGridConnections){
	//traceln("Gc "+ gc.toString() + ", price "+ price_eurpkWh + ", allowance "+ allowance_kW +".");
	ConnectionOwner owner = ((ConnectionOwner)gc.l_ownerActor.getConnectedAgent());
	owner.v_currentNodalPrice_eurpkWh = price_eurpkWh;
}
for (EnergyCoop e: c_energyCoops){
	e.v_currentNodalPrice_eurpkWh = price_eurpkWh;
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666556578433</Id>
					<Name><![CDATA[f_setProductionCongestionTariff]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1100</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[price_eurpkWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[allowance_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[for (GridConnection gc: c_electricityGridConnections){
	// we gaan nu nog even uit van vaste congestietarieven en limiten
	ConnectionOwner owner = ((ConnectionOwner)gc.l_ownerActor.getConnectedAgent());
	//if( !owner.v_congestionTariff_b ) {
		owner.v_currentCongestionTariffWhenSelling_eurpkWh = price_eurpkWh;
		owner.v_congestionTariffAllowance_kW = -allowance_kW;
		//owner.v_congestionTariff_b = true; // This is controlled by the contract between connectionOwner and GridOperator! Do not overwrite from here!
		//owner.v_updatePriceBands_b = true;
		owner.v_currentCongestionType = v_congestionMode;
	//}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666560316436</Id>
					<Name><![CDATA[f_resetCongestionTariffs]]></Name>
					<Description><![CDATA[Gridoperator roept deze functie alleen aan als deze node vorige tijdstap congested was maar nu niet meer.]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>780</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (GridConnection gc: c_connectedGridConnections){
	ConnectionOwner owner = ((ConnectionOwner)gc.l_ownerActor.getConnectedAgent());
	owner.v_currentNodalPrice_eurpkWh = 0;
}
for (EnergyCoop e: c_energyCoops){
	e.v_currentNodalPrice_eurpkWh = 0;
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1676387466304</Id>
					<Name><![CDATA[f_instantiateEnergyAssets]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>780</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//traceln("asset " + p_energyAssetList);

if( p_energyAssetList != null) {
	for( JsonNode l : p_energyAssetList ) {
		OL_EACategories assetCategory = OL_EACategories.valueOf(l.required( "category" ).textValue());
		switch( assetCategory )  {		
			case STORAGE:
				//EnergyAsset storageAsset = main.add_pop_energyAssets();
				//storageAsset.set_p_parentAgentID( this.p_gridNodeID );
				OL_EnergyAssetType assetType = ( OL_EnergyAssetType.valueOf(l.required( "type" ).textValue()));
				//storageAsset.set_p_defaultEnergyAssetPresetName(l.required( "name" ).textValue());
				if( assetType == OL_EnergyAssetType.STORAGE_HEAT){
				    double capacityHeat_kW = l.path( "capacityHeat_kW").doubleValue();
					double lossFactor_WpK = l.path( "lossFactor_WpK" ).doubleValue();
					double heatCapacity_JpK = l.path( "heatCapacity_JpK" ).doubleValue();
					double minTemperature_degC = l.path( "minTemp_degC" ).asDouble(40.0); // provide default values
					double maxTemperature_degC = l.path( "maxTemp_degC" ).asDouble(90.0);
					double setTemperature_degC = l.path( "setTemp_degC" ).asDouble(60.0);
					double initialTemperature_degC = l.path( "initialTemperature_degC" ).doubleValue();
					String ambientTempType2 = l.path( "ambientTempType" ).textValue();
					
					// minTemperature_degC = 35; // TO DELETE TEMP FIX
					// setTemperature_degC = uniform_discr(38, 45); // TO DELETE TEMP FIX
					// initialTemperature_degC = uniform_discr(70,80) * 1.0; // TO DELETE TEMP FIX
					// heatCapacity_JpK = heatCapacity_JpK * uniform(0.7, 1.3); // TO DELETE TEMP FIX
					traceln("heatstorage asset initialisation check! minTemp = "+minTemperature_degC+", maxTemperature_degC = "+maxTemperature_degC+", setTemp_degC = "+ setTemperature_degC+", initialTemperature_degC = "+initialTemperature_degC);
					
					//traceln("Heat Storage init: minTemperature = "+minTemperature_degC+", maxTemperature_degC = "+maxTemperature_degC+", setTemperature_degC = "+setTemperature_degC+", initialTemperature_degC = "+initialTemperature_degC);
					
					
					p_transportBuffer = new J_EAStorageHeat((Agent)this, OL_EAStorageTypes.HEATBUFFER, capacityHeat_kW, lossFactor_WpK, energyModel.p_timeStep_h, initialTemperature_degC, minTemperature_degC, maxTemperature_degC, setTemperature_degC, heatCapacity_JpK, ambientTempType2);	
					//J_EAStorageHeat(Agent parentAgent, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType ) {
					//p_transportBuffer = storageAsset.j_ea;
					p_transportBuffer.updateAmbientTemperature( energyModel.p_undergroundTemperature_degC );
					if(heatCapacity_JpK > 0 & capacityHeat_kW > 0) {
						b_transportBufferValid = true;
					}
				}
				else{
					traceln("F_instantiateEnergyAssets: ERROR, storage asset type not available");
				}
				//storageAsset.f_connectToParentNode( this );
				//main.c_storageAssets.add(storageAsset);

			break;
			default:
				traceln("not a valid energy asset category." + assetCategory);
			break;
		}
	}
//traceln("GridConnection "+this.p_gridNodeID+" has finished initializing its energyAssets!");
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1688370981599</Id>
					<Name><![CDATA[f_calculateEnergyBalance]]></Name>
					<X>780</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[f_sumLoads();
// Low-pass filtered grid load
//double lowPassFraction = min(1,1*1.2*energyModel.p_timeStep_h); // smaller value results in more filtering
v_currentLoadElectricityLowPassed_kW += v_lowPassFactor_fr * ( v_currentLoadElectricity_kW - v_currentLoadElectricityLowPassed_kW );
v_filteredLoadCongestionPricing_kW += v_lowPassFactorCongestionPricing_fr * ( v_currentLoadElectricity_kW - v_filteredLoadCongestionPricing_kW);
//v_currentLocalNodalPrice_eurpkWh = v_filteredLoadCongestionPricing_kW / p_capacity_kW * p_localNodalPricingFactor_eurpkWh;
v_currentCapacityElectric_kW = energyModel.v_currentDLRfactor_fr * p_capacity_kW;
v_currentLocalNodalPrice_eurpkWh = signum(v_filteredLoadCongestionPricing_kW) * max(0,abs(v_filteredLoadCongestionPricing_kW)-v_currentCapacityElectric_kW*p_localNodalPricingTreshold_fr) / ((1-p_localNodalPricingTreshold_fr) * v_currentCapacityElectric_kW) * p_localNodalPricingFactor_eurpkWh;

//v_currentLocalNodalPrice_eurpkWh = (abs(v_filteredLoadCongestionPricing_kW / currentNodeCapacity_kW) - p_localNodalPricingTreshold_fr) / (1-p_localNodalPricingTreshold_fr) * p_localNodalPricingFactor_eurpkWh;

if (energyModel.v_isRapidRun) {
	if (abs(v_currentLoadElectricityLowPassed_kW) > p_capacity_kW) {
		//traceln("Overloaded gridNode %s! %s kW", p_gridNodeID, abs(v_currentLoadElectricityLowPassed_kW));
		v_totalTimeOverloaded_h	+= energyModel.p_timeStep_h;
	}
	
	if( abs( v_currentLoadElectricity_kW ) > abs(v_peakLoadAbsoluteElectricity_kW) ) { // store maximum absolute load, but retain sign!
		v_peakLoadAbsoluteElectricity_kW = ( v_currentLoadElectricity_kW );
		//v_timeOfPeakLoad_h = energyModel.t_h;
	}
	
	if( abs( v_currentLoadElectricityLowPassed_kW ) > abs(v_peakLoadFilteredElectricity_kW) ) { // store maximum absolute load, but retain sign!
		v_peakLoadFilteredElectricity_kW = ( v_currentLoadElectricityLowPassed_kW );
		v_timeOfPeakLoadFiltered_h = energyModel.t_h;
	}
	
	if( v_currentLoadElectricityLowPassed_kW < v_peakNegLoadElectricity_kW ) { // store peak negative load and time
		v_peakNegLoadElectricity_kW = v_currentLoadElectricityLowPassed_kW ;
		v_timeOfPeakNegLoadFiltered_h = energyModel.t_h;
	}
	
	if( v_currentLoadElectricityLowPassed_kW > v_peakPosLoadElectricity_kW ) { // store peak positive load and time
		v_peakPosLoadElectricity_kW = v_currentLoadElectricityLowPassed_kW ;
		v_timeOfPeakPosLoadFiltered_h = energyModel.t_h;
	}
	
}
else {
	if(p_energyType == OL_EnergyCarrierType.ELECTRICITY){
		data_liveElectricityLoad_kW.update();
		data_gridCapacityDemand_kW.update();
		data_gridCapacitySupply_kW.update();
	}
	else if(p_energyType == OL_EnergyCarrierType.HEAT){
		data_liveHeatLoad_kW.update();
	}
}
/*
if (p_energyType.equals(OL_EnergyCarrierType.HEAT) & b_transportBufferValid ) { // Thermal load unbalance goes into transportBuffer
//	double v_powerFraction_fr = Double.isNaN( -v_currentLoadHeat_kW / p_transportBuffer.getHeatCapacity_kW() )? 0 : -v_currentLoadHeat_kW / p_transportBuffer.getHeatCapacity_kW();
	//traceln("GridNode Heat v_currentLoadHeat_kW: %s", v_currentLoadHeat_kW);
	double v_powerFraction_fr = -v_currentLoadHeat_kW / p_transportBuffer.getHeatCapacity_kW();
	
	//p_transportBuffer.operate(v_powerFraction_fr);
	//traceln("DistrictHeating network heatcapacity = "+ p_transportBuffer.getHeatCapacity_kW()+" kW, water temperature " + p_transportBuffer.getCurrentTemperature() + " deg C, buffer power fraction " + v_powerFraction_fr * 100 + " %, transportbuffer HeatCapacity_kW " + p_transportBuffer.getHeatCapacity_kW());
	p_transportBuffer.f_updateAllFlows(v_powerFraction_fr);
	//traceln("DistrictHeating Grid temperature: %s degC", p_transportBuffer.getCurrentTemperature());
	//traceln("DistrictHeating network water temperature " + p_transportBuffer.getCurrentTemperature() + " deg C, buffer power fraction " + v_powerFraction_fr * 100 + " %, transportbuffer HeatCapacity_kW " + p_transportBuffer.getHeatCapacity_kW());
} else if(abs(v_currentLoadHeat_kW)>0.001) {
	traceln("Non-zero heat-load on district heating network without valid transport buffer!");
}
*/
//traceln("GridNode " + p_gridNodeID + " update at time " + time(HOUR));
f_nodeMetering();
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1688372319365</Id>
					<Name><![CDATA[f_addGridBatteryLoad]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>780</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
for( Agent a : subConnections.getConnections() ) {
	if ( a instanceof GCGridBattery){
		v_currentLoadElectricity_kW += ((GCGridBattery)a).v_currentPowerElectricity_kW;
	}	
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1698919552330</Id>
					<Name><![CDATA[f_resetStates]]></Name>
					<X>780</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Current status
v_currentLoadElectricityLowPassed_kW = 0;
v_congested = false;
v_currentCongestionPrice_eurpkWh = 0;
v_filteredLoadCongestionPricing_kW = 0;

// Performance variables
v_peakLoadAbsoluteElectricity_kW = 0;
v_averageAbsoluteLoadElectricity_kW = 0;
v_loadFactor_fr = 0;
v_timeOfPeakLoadFiltered_h = 0;
v_timeOfPeakNegLoadFiltered_h = 0;
v_timeOfPeakPosLoadFiltered_h = 0;
v_peakPosLoadElectricity_kW = 0;
v_peakNegLoadElectricity_kW = 0;
v_peakLoadFilteredElectricity_kW = 0;
v_timeOfPeakLoadFiltered_h = 0;
v_totalTimeOverloaded_h = 0;
v_annualExcessExport_MWh = 0;
v_annualExcessImport_MWh = 0;
v_summerWeekExcessExport_MWh = 0;
v_summerWeekExcessImport_MWh = 0;
v_winterWeekExcessExport_MWh = 0;
v_winterWeekExcessImport_MWh = 0;
v_daytimeExcessExport_MWh = 0;
v_daytimeExcessImport_MWh = 0;
v_nighttimeExcessExport_MWh = 0;
v_nighttimeExcessImport_MWh = 0;
v_weekdayExcessExport_MWh = 0;
v_weekdayExcessImport_MWh = 0;
v_weekendExcessExport_MWh = 0;
v_weekendExcessImport_MWh = 0;
// Energy flows
v_electricityDrawn_kWh = 0;
v_electricityDelivered_kWh = 0;
v_methaneDrawn_kWh = 0;
v_methaneDelivered_kWh = 0;
v_hydrogenDrawn_kWh = 0;
v_hydrogenDelivered_kWh = 0;
v_heatDrawn_kWh = 0;
v_heatDelivered_kWh = 0;
v_annualElectricityDrawn_MWh = 0;
v_annualElectricityDelivered_MWh = 0;
v_summerWeekElectricityDrawn_MWh = 0;
v_summerWeekElectricityDelivered_MWh = 0;
v_winterWeekElectricityDrawn_MWh = 0;
v_winterWeekElectricityDelivered_MWh = 0;
v_daytimeElectricityDrawn_MWh = 0;
v_daytimeElectricityDelivered_MWh = 0;
v_nighttimeElectricityDrawn_MWh = 0;
v_nighttimeElectricityDelivered_MWh = 0;
v_weekdayElectricityDrawn_MWh = 0;
v_weekdayElectricityDelivered_MWh = 0;
v_weekendElectricityDrawn_MWh = 0;
v_weekendElectricityDelivered_MWh = 0;

// Reset Accumulators
acc_annualElectricityBalance_kW.reset();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713181018774</Id>
					<Name><![CDATA[f_calculateKPIs]]></Name>
					<X>780</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//f_duurkrommes();

// AnnualElectricityDrawn and Delivered was done during the year simulation as it would otherwise require a filter here
//v_annualExcessImport_MWh = Arrays.stream(a_totalExcessImport_kW).sum() * energyModel.p_timeStep_h / 1000;
//v_annualExcessExport_MWh = Arrays.stream(a_totalExcessExport_kW).sum() * energyModel.p_timeStep_h / 1000;

// Winter/summer week totals
// Calcs summerweek
int startIdx = roundToInt(energyModel.p_startHourSummerWeek/energyModel.p_timeStep_h);
int endIdx = startIdx + roundToInt(24*7/energyModel.p_timeStep_h);

v_summerWeekExcessImport_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m > p_capacity_kW).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekExcessExport_MWh = -Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m < -p_capacity_kW).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityDrawn_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m > 0).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityDelivered_MWh = -Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m < 0).sum() * energyModel.p_timeStep_h / 1000;

// Calcs winterweek
startIdx = roundToInt(energyModel.p_startHourWinterWeek/energyModel.p_timeStep_h);
endIdx = startIdx + roundToInt(24*7/energyModel.p_timeStep_h);

v_winterWeekExcessImport_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m > p_capacity_kW).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekExcessExport_MWh = -Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m < -p_capacity_kW).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityDrawn_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m > 0).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityDelivered_MWh = -Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m < 0).sum() * energyModel.p_timeStep_h / 1000;


// Calcs nighttime
v_nighttimeExcessImport_MWh = v_annualExcessImport_MWh - v_daytimeExcessImport_MWh;
v_nighttimeExcessExport_MWh = v_annualExcessExport_MWh - v_daytimeExcessExport_MWh;
v_nighttimeElectricityDrawn_MWh = v_annualElectricityDrawn_MWh - v_daytimeElectricityDrawn_MWh;
v_nighttimeElectricityDelivered_MWh = v_annualElectricityDelivered_MWh - v_daytimeElectricityDelivered_MWh;

// Calcs weekend
v_weekendExcessImport_MWh = v_annualExcessImport_MWh - v_weekdayExcessImport_MWh;
v_weekendExcessExport_MWh = v_annualExcessExport_MWh - v_weekdayExcessExport_MWh;
v_weekendElectricityDrawn_MWh = v_annualElectricityDrawn_MWh - v_weekdayElectricityDrawn_MWh;
v_weekendElectricityDelivered_MWh = v_annualElectricityDelivered_MWh - v_weekdayElectricityDelivered_MWh;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[DataSet]]></ReturnType>
					<Id>1718111675053</Id>
					<Name><![CDATA[f_getDuurkromme]]></Name>
					<X>800</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[boolean firstRun = true;
if (data_netbelastingDuurkromme_kW != null) {	
	if (data_netbelastingDuurkrommeVorige_kW != null) { // Not second run either!
		data_netbelastingDuurkrommeVorige_kW.reset();
	} else {
		data_netbelastingDuurkrommeVorige_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));
	}
	firstRun = false;
} else {
	data_netbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));
	data_summerWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));
	data_winterWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));
	data_daytimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/2/energyModel.p_timeStep_h));
	data_nighttimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/2/energyModel.p_timeStep_h));
	data_weekdayNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/7*5/energyModel.p_timeStep_h)+100);
	data_weekendNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/7*2/energyModel.p_timeStep_h)+100);
}

// We copy our annual array to preserve it as a time-series and make new arrays for the others
double[] netLoadArrayAnnual_kW = acc_annualElectricityBalance_kW.getTimeSeries().clone(); 

int arraySize = netLoadArrayAnnual_kW.length;

if (energyModel.b_enableDLR) {
	double[] annualDLRarray = energyModel.acc_annualDLRfactor_f.getTimeSeries().clone();
	for (int i = 0; i < arraySize; i++) {
		netLoadArrayAnnual_kW[i] = 100 * netLoadArrayAnnual_kW[i] / (p_capacity_kW * max(energyModel.v_minDLRfactor_fr,annualDLRarray[i]));
	}
}
//traceln("annaualElectricityBalance first element: %s, last element: %s", netLoadArrayAnnual_kW[0], netLoadArrayAnnual_kW[arraySize-1]);

double[] netLoadArraySummerweek_kW = new double[roundToInt(24*7 / energyModel.p_timeStep_h)];
double[] netLoadArrayWinterweek_kW= new double[roundToInt(24*7 / energyModel.p_timeStep_h)];
double[] netLoadArrayDaytime_kW = new double[arraySize/2];
double[] netLoadArrayNighttime_kW = new double[arraySize/2];
// For different years the amount of weekdays and weekend days may be different, so the size will be variable for now
ArrayList<Double> listNetLoadArrayWeekday_kW = new ArrayList<>(); 
ArrayList<Double> listNetLoadArrayWeekend_kW = new ArrayList<>();

int i_winter=0;
int i_summer=0;
int i_day=0;
int i_night=0;
int i_weekday=0;
int i_weekend=0;

//double[] annualElectricityBalanceTimeSeries_kW = acc_annualElectricityBalance_kW.getTimeSeries();

for(int i=0; i<arraySize ; i++) {
	if (!firstRun) {
		// First we make sure to store our previous Load Curve
		data_netbelastingDuurkrommeVorige_kW.add(i*energyModel.p_timeStep_h,data_netbelastingDuurkromme_kW.getY(i));		
	}
	// summer/winter
	if (i*energyModel.p_timeStep_h > energyModel.p_startHourSummerWeek && i*energyModel.p_timeStep_h<= energyModel.p_startHourSummerWeek+24*7) {
		netLoadArraySummerweek_kW[i_summer]=-netLoadArrayAnnual_kW[i];
		i_summer++;
	}
	if (i*energyModel.p_timeStep_h > energyModel.p_startHourWinterWeek && i*energyModel.p_timeStep_h<= energyModel.p_startHourWinterWeek+24*7) {
		netLoadArrayWinterweek_kW[i_winter]=-netLoadArrayAnnual_kW[i];
		i_winter++;
	}
	// day/night
	if (i*energyModel.p_timeStep_h % 24 > 6 && i*energyModel.p_timeStep_h % 24 <= 18) { //daytime
		netLoadArrayDaytime_kW[i_day]=-netLoadArrayAnnual_kW[i];
		i_day++;
	} else {
		netLoadArrayNighttime_kW[i_night]=-netLoadArrayAnnual_kW[i];
		i_night++;
	}
	//Weekday/weekend
	if (((i*energyModel.p_timeStep_h+ 24*(energyModel.v_dayOfWeek1jan-1)) % (24*7)) < (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h
		listNetLoadArrayWeekday_kW.add(-netLoadArrayAnnual_kW[i]);
		i_weekday++;
	} else {
		listNetLoadArrayWeekend_kW.add(-netLoadArrayAnnual_kW[i]);
		i_weekend++;
	}
	
}

// Now we have the size of the weekday & weekend arrays.
double[] netLoadArrayWeekday_kW = new double[listNetLoadArrayWeekday_kW.size()];
double[] netLoadArrayWeekend_kW = new double[listNetLoadArrayWeekend_kW.size()];
for (int i = 0; i < listNetLoadArrayWeekday_kW.size(); i++) {
	netLoadArrayWeekday_kW[i] = listNetLoadArrayWeekday_kW.get(i);
}
for (int i = 0; i < listNetLoadArrayWeekend_kW.size(); i++) {
	netLoadArrayWeekend_kW[i] = listNetLoadArrayWeekend_kW.get(i);
}


// Sort all arrays
Arrays.parallelSort(netLoadArrayAnnual_kW);
Arrays.parallelSort(netLoadArraySummerweek_kW);
Arrays.parallelSort(netLoadArrayWinterweek_kW);
Arrays.parallelSort(netLoadArrayDaytime_kW);
Arrays.parallelSort(netLoadArrayNighttime_kW);
Arrays.parallelSort(netLoadArrayWeekday_kW);
Arrays.parallelSort(netLoadArrayWeekend_kW);

// Write results to datasets
// Netbelastingduurkromme year
//if (!firstRun) {
	data_netbelastingDuurkromme_kW.reset();
	data_summerWeekNetbelastingDuurkromme_kW.reset();	
	data_winterWeekNetbelastingDuurkromme_kW.reset();
	data_daytimeNetbelastingDuurkromme_kW.reset();
	data_nighttimeNetbelastingDuurkromme_kW.reset();
	data_weekdayNetbelastingDuurkromme_kW.reset();
	data_weekendNetbelastingDuurkromme_kW.reset();
//}

//traceln("annaualElectricityBalance first element: %s, last element: %s", netLoadArrayAnnual_kW[0], netLoadArrayAnnual_kW[arraySize-1]);
for(int i=0; i< arraySize; i++) {
	//traceln("netloadloop iterator: %s", i);
	data_netbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, netLoadArrayAnnual_kW[arraySize-i-1]);
}
// Netbelastingduurkromme summer / winter

arraySize = netLoadArraySummerweek_kW.length;
for(int i=0; i< arraySize; i++) {
	data_summerWeekNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArraySummerweek_kW[i]);
}

arraySize = netLoadArrayWinterweek_kW.length;
for(int i=0; i< arraySize; i++) {
	data_winterWeekNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWinterweek_kW[i]);
}
// Netbelastingduurkromme day / night

arraySize = netLoadArrayDaytime_kW.length;
for(int i=0; i< arraySize; i++) {
	data_daytimeNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayDaytime_kW[i]);
}

arraySize = netLoadArrayNighttime_kW.length;
for(int i=0; i< arraySize; i++) {
	data_nighttimeNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayNighttime_kW[i]);
}
// Netbelastingduurkromme weekday / weekend

arraySize = netLoadArrayWeekday_kW.length;
for(int i=0; i< arraySize; i++) {
	data_weekdayNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekday_kW[i]);
}

arraySize = netLoadArrayWeekend_kW.length;
for(int i=0; i< arraySize; i++) {
	data_weekendNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekend_kW[i]);
}

return data_netbelastingDuurkromme_kW;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<GridNode>]]></ReturnType>
					<Id>1718290223518</Id>
					<Name><![CDATA[f_getConnectedGridNodes]]></Name>
					<Description><![CDATA[Function that gets all the directly connected grid nodes]]></Description>
					<X>1110</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return this.c_connectedGridNodes;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<GridConnection>]]></ReturnType>
					<Id>1718290606581</Id>
					<Name><![CDATA[f_getConnectedGridConnections]]></Name>
					<Description><![CDATA[Function that gets all the directly connected grid connections]]></Description>
					<X>1110</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return this.c_connectedGridConnections;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1718896086734</Id>
					<Name><![CDATA[f_propagateNodalPricing]]></Name>
					<X>780</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_currentTotalNodalPrice_eurpkWh = v_currentParentNodalPrice_eurpkWh + v_currentLocalNodalPrice_eurpkWh;
for (GridNode GN : c_connectedGridNodes ) {
	GN.v_currentParentNodalPrice_eurpkWh = v_currentTotalNodalPrice_eurpkWh;
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1719300860382</Id>
					<Name><![CDATA[f_initializeGridnode]]></Name>
					<X>780</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_totalInstalledWindPower_kW = 0;
v_totalInstalledPVPower_kW = 0;

for (GridConnection GC : c_connectedGridConnections) {
	if (GC.v_isActive) {
		v_totalInstalledWindPower_kW += GC.v_totalInstalledWindPower_kW;
		v_totalInstalledPVPower_kW += GC.v_totalInstalledPVPower_kW;
	}
}

for (GridNode GN : c_connectedGridNodes) {
	v_totalInstalledWindPower_kW += GN.v_totalInstalledWindPower_kW;
	v_totalInstalledPVPower_kW += GN.v_totalInstalledPVPower_kW;
}

/*
if ( p_energyType == OL_EnergyCarrierType.HEAT ) {
	double capacityHeat_kW = 1000000;
	double lossFactor_WpK = 10000;
	double heatCapacity_JpK = 10000 * 3.6e6;	
	double InitialStateOfCharge_degC = 60;
	double soilTemperature_degC = energyModel.p_undergroundTemperature_degC;
	p_transportBuffer = new J_EAStorageHeat(null, OL_EAStorageTypes.HEATBUFFER, capacityHeat_kW, lossFactor_WpK, energyModel.p_timeStep_h, InitialStateOfCharge_degC, 10.0, 90.0, InitialStateOfCharge_degC, heatCapacity_JpK, "AIR" );
	p_transportBuffer.updateAmbientTemperature(soilTemperature_degC);
	b_transportBufferValid = true;
	energyModel.c_energyAssets.add(p_transportBuffer);
	energyModel.c_storageAssets.add(p_transportBuffer);
}*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1719302290904</Id>
					<Name><![CDATA[f_updateForecasts]]></Name>
					<X>780</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_electricityYieldForecast_fr = (energyModel.v_SolarYieldForecast_fr * v_totalInstalledPVPower_kW + energyModel.v_WindYieldForecast_fr * v_totalInstalledWindPower_kW) / (v_totalInstalledPVPower_kW + v_totalInstalledWindPower_kW);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722591244558</Id>
					<Name><![CDATA[f_updateTotalInstalledProductionAssets]]></Name>
					<X>1040</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[energyAssetType]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[power_kw]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[increase]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[if (energyAssetType == OL_EnergyAssetType.WINDMILL) {
	if (increase) {
		v_totalInstalledWindPower_kW += power_kw;
	}
	else {
		v_totalInstalledWindPower_kW -= power_kw;
	}
}
else if (energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {
	if (increase) {
		v_totalInstalledPVPower_kW += power_kw;
	}
	else {
		v_totalInstalledPVPower_kW -= power_kw;
	}
}
else {
	throw new IllegalStateException("Wrong energy asset type");
}

if (p_parentNodeID != null) {
	GridNode myParentNode = findFirst(energyModel.pop_gridNodes, p->p.p_gridNodeID.equals(p_parentNodeID));
	if (myParentNode != null) {
		myParentNode.f_updateTotalInstalledProductionAssets(energyAssetType, power_kw, increase);
	}
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[List<GridNode>]]></ReturnType>
					<Id>1725964027407</Id>
					<Name><![CDATA[f_getLowerLVLConnectedGridNodes]]></Name>
					<Description><![CDATA[Function that gets all grid nodes and the children of those grid nodes, etc. All the way to the bottom node.]]></Description>
					<X>1110</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return f_getAllConnectedGridNodes_recursion(new ArrayList<GridNode>());]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[List<GridNode>]]></ReturnType>
					<Id>1725966618828</Id>
					<Name><![CDATA[f_getAllConnectedGridNodes_recursion]]></Name>
					<Description><![CDATA[Recursion Function that gets all grid nodes and the children of those grid nodes, etc. All the way to the bottom node. For basic use should be called with an empty list!]]></Description>
					<X>1150</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[allConnectedGridNodes]]></Name>
						<Type><![CDATA[List<GridNode>]]></Type>
					</Parameter>
					<Body><![CDATA[//Add to collection
allConnectedGridNodes.add(this);

//Recursive loop (repeat this function till bottom)
if(c_connectedGridNodes.size() == 0){
	return allConnectedGridNodes;
}
else{
	for(GridNode GN : c_connectedGridNodes){
		GN.f_getAllConnectedGridNodes_recursion(allConnectedGridNodes);
		//allConnectedGridNodes.addAll(GN.f_getAllConnectedGridNodes(allConnectedGridNodes));
	}
	return allConnectedGridNodes;
}
]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1705919330576</Id>
					<Name><![CDATA[data_liveElectricityLoad_kW]]></Name>
					<X>40</X><Y>870</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentLoadElectricity_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1712668669449</Id>
					<Name><![CDATA[data_gridCapacityDemand_kW]]></Name>
					<X>40</X><Y>850</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1712736000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[p_capacity_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1712673776914</Id>
					<Name><![CDATA[data_gridCapacitySupply_kW]]></Name>
					<X>320</X><Y>850</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1712736000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[-p_capacity_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715167370828</Id>
					<Name><![CDATA[data_electricityLoadYear_kW]]></Name>
					<X>40</X><Y>890</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1715241600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>true</FreezeXAxis>
					<SamplesToKeep>8760</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715167392629</Id>
					<Name><![CDATA[data_electricityLoadSummerWeek_kW]]></Name>
					<X>40</X><Y>910</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1715241600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>true</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715167408643</Id>
					<Name><![CDATA[data_electricityLoadWinterWeek_kW]]></Name>
					<X>40</X><Y>930</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1715241600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>true</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1722508470625</Id>
					<Name><![CDATA[data_liveHeatLoad_kW]]></Name>
					<X>1620</X><Y>80</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1712736000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentLoadElectricity_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<AgentLinks>
				<AgentLink>
					<Id>1658477288303</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<OnReceive><![CDATA[//v_gridNodePriceBands = msg;
subConnections.sendToAllConnected(msg);]]></OnReceive>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[TreeMap<Double, Double>]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1658495297995</Id>
					<Name><![CDATA[superConnection]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>200</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>SINGLE_LINK</AgentLinkType>
					<AgentReferenceId>1658477288308</AgentReferenceId>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1658495597148</Id>
					<Name><![CDATA[subConnections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>200</X><Y>-20</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1658477403925</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1658477288307</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Line>
					<Id>1670316940459</Id>
					<Name><![CDATA[line]]></Name>
					<X>10</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1670316940469</Id>
					<Name><![CDATA[text]]></Name>
					<X>40</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Parameters]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1670316967152</Id>
					<Name><![CDATA[text4]]></Name>
					<X>820</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1670316967156</Id>
					<Name><![CDATA[line4]]></Name>
					<X>770</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1670316972887</Id>
					<Name><![CDATA[text5]]></Name>
					<X>840</X><Y>450</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Cumulative delivery]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1670316972890</Id>
					<Name><![CDATA[line5]]></Name>
					<X>820</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1670317000926</Id>
					<Name><![CDATA[text6]]></Name>
					<X>652</X><Y>450</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Cumulative consumption]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1670317000929</Id>
					<Name><![CDATA[line6]]></Name>
					<X>640</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1670317019803</Id>
					<Name><![CDATA[line7]]></Name>
					<X>400</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1670317019806</Id>
					<Name><![CDATA[text7]]></Name>
					<X>450</X><Y>450</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Performance]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1670317049666</Id>
					<Name><![CDATA[line1]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>300</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1670317049669</Id>
					<Name><![CDATA[text1]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>350</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Assets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1670317065284</Id>
					<Name><![CDATA[line2]]></Name>
					<X>50</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1670317065286</Id>
					<Name><![CDATA[text2]]></Name>
					<X>80</X><Y>440</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Current status]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<TimePlot>
					<Id>1670317113685</Id>
					<Name><![CDATA[plot]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>270</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1670400000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[0.25]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>470</Width>
					<Height>270</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>390</Width>
						<Height>180</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>DAY</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[- p_capacity_kW - p_capacity_kW *0.1]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[p_capacity_kW + p_capacity_kW * 0.1]]></VerScaleToExpression>
					<VerScaleType>FIXED</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Node capacity]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-65536</Color>
					<Expression2><![CDATA[p_capacity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Current load on grid [kW]]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset2]]></Expression>
					<Color>-12004916</Color>
					<Expression2><![CDATA[v_currentLoadElectricity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset1]]></Expression>
					<Color>-65536</Color>
					<Expression2><![CDATA[- p_capacity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Filtered load on grid [kW]]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset3]]></Expression>
					<Color>-8097537</Color>
					<Expression2><![CDATA[v_currentLoadElectricityLowPassed_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>1000</SamplesToKeep>
					<TimeWindowExpression><![CDATA[3]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
				<Rectangle>
					<Id>1722508339145</Id>
					<Name><![CDATA[rectangle]]></Name>
					<X>1600</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-65536</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>260</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722508355362</Id>
					<Name><![CDATA[text3]]></Name>
					<X>1610</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Accumulator heat (grid) import (RES model)]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1698759398568</Id>
					<Name><![CDATA[va_gridNode]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1658499438203</Id>
			<Name><![CDATA[GridConnection]]></Name>
			<Import><![CDATA[/*import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.NumericNode;
import com.fasterxml.jackson.core.json.JsonReadFeature;
*/
import java.io.IOException;
import java.util.Scanner;
import java.util.*;
import java.util.stream.Collectors;
import java.io.*;

import zeroPackage.ZeroMath;
import zeroPackage.ZeroAccumulator;]]></Import>
			<StartupCode><![CDATA[energyModel.c_gridConnections.add(this);]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1658499438201</Id>
				<Name><![CDATA[1658499438201]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1658499438199</Id>
				<Name><![CDATA[scale]]></Name>
				<X>30</X><Y>-260</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1658499438202</CurrentLevel>
			<ConnectionsId>1658499438198</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1658499590783</Id>
					<Name><![CDATA[v_currentPowerElectricity_kW]]></Name>
					<X>150</X><Y>1280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659355078476</Id>
					<Name><![CDATA[v_currentPowerMethane_kW]]></Name>
					<X>460</X><Y>1310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659355091165</Id>
					<Name><![CDATA[v_currentPowerHeat_kW]]></Name>
					<X>450</X><Y>990</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659513167233</Id>
					<Name><![CDATA[v_currentPowerHydrogen_kW]]></Name>
					<X>460</X><Y>1350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660212770046</Id>
					<Name><![CDATA[v_electricityDrawnFromGrid_kWh]]></Name>
					<X>820</X><Y>1170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660212770048</Id>
					<Name><![CDATA[v_methaneDrawn_kWh]]></Name>
					<X>820</X><Y>1210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660212770050</Id>
					<Name><![CDATA[v_heatDrawn_kWh]]></Name>
					<X>450</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660212770052</Id>
					<Name><![CDATA[v_hydrogenDrawn_kWh]]></Name>
					<X>820</X><Y>1250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660212876474</Id>
					<Name><![CDATA[v_methaneDelivered_kWh]]></Name>
					<X>460</X><Y>1480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660212876476</Id>
					<Name><![CDATA[v_heatDelivered_kWh]]></Name>
					<X>450</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660212876478</Id>
					<Name><![CDATA[v_hydrogenDelivered_kWh]]></Name>
					<X>460</X><Y>1520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660561907004</Id>
					<Name><![CDATA[v_totalEnergyConsumed_MWh]]></Name>
					<X>820</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660561920117</Id>
					<Name><![CDATA[v_totalEnergyProduced_MWh]]></Name>
					<X>820</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660567920170</Id>
					<Name><![CDATA[v_totalSelfConsumedEnergy_MWh]]></Name>
					<X>820</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660567920172</Id>
					<Name><![CDATA[v_totalImport_MWh]]></Name>
					<X>820</X><Y>1000</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666282164534</Id>
					<Name><![CDATA[v_previousPowerElectricity_kW]]></Name>
					<X>1230</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667746610980</Id>
					<Name><![CDATA[v_vehicleIndex]]></Name>
					<Description><![CDATA[Wordt gebruikt om voertuigen aan assets te koppelen tijden initialisatie.]]></Description>
					<X>-190</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667902447354</Id>
					<Name><![CDATA[v_evChargingPowerElectric_kW]]></Name>
					<X>150</X><Y>1110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668359062406</Id>
					<Name><![CDATA[v_allowedCapacity_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1230</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668370002883</Id>
					<Name><![CDATA[v_additionalTimeSpreadCharging_MIN]]></Name>
					<Description><![CDATA[In the charging attitude MAX_SPREAD the vehicles can be planned to be full some time before their actual departure. ]]></Description>
					<X>270</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[30]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668610729237</Id>
					<Name><![CDATA[v_fixedConsumptionElectric_kW]]></Name>
					<X>150</X><Y>980</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668610741368</Id>
					<Name><![CDATA[v_pvProductionElectric_kW]]></Name>
					<X>150</X><Y>1200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668610757391</Id>
					<Name><![CDATA[v_batteryPowerElectric_kW]]></Name>
					<X>150</X><Y>1130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668611038479</Id>
					<Name><![CDATA[v_conversionPowerElectric_kW]]></Name>
					<X>150</X><Y>1030</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668605322171</Id>
					<Name><![CDATA[v_currentPowerDiesel_kW]]></Name>
					<X>460</X><Y>1330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668605338517</Id>
					<Name><![CDATA[v_dieselDrawn_kWh]]></Name>
					<X>820</X><Y>1230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668605479367</Id>
					<Name><![CDATA[v_dieselDelivered_kWh]]></Name>
					<X>460</X><Y>1500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668695288481</Id>
					<Name><![CDATA[v_electricityPriceLowPassed_eurpkWh]]></Name>
					<X>1230</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.15]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668695288483</Id>
					<Name><![CDATA[v_lowPassFactor_fr]]></Name>
					<X>1230</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[min(1, 0.001)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668695288485</Id>
					<Name><![CDATA[v_batterySOC_fr]]></Name>
					<X>1230</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.7]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669725778092</Id>
					<Name><![CDATA[v_maxConnectionLoad_fr]]></Name>
					<X>1230</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671027786040</Id>
					<Name><![CDATA[v_windProductionElectric_kW]]></Name>
					<X>150</X><Y>1220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028145282</Id>
					<Name><![CDATA[v_electricityProducedPV_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028164395</Id>
					<Name><![CDATA[v_electricityProducedWind_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028183310</Id>
					<Name><![CDATA[v_electricityConsumedFixedProfile_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028204660</Id>
					<Name><![CDATA[v_electricityConvertedToX_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028232758</Id>
					<Name><![CDATA[v_electricityChargedByEVs_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028253782</Id>
					<Name><![CDATA[v_electricityDischargedByEVs_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028344848</Id>
					<Name><![CDATA[v_electricityDeliveredToGrid_kWh]]></Name>
					<X>820</X><Y>1190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028416277</Id>
					<Name><![CDATA[v_xConvertedToElectricity_kWh]]></Name>
					<Description><![CDATA[This is the amount of kWh produced. So not the amount of kWh that goes in!]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028484635</Id>
					<Name><![CDATA[v_electricityChargedByBattery_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1671028484651</Id>
					<Name><![CDATA[v_electricityDischargedByBattery_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1673870786520</Id>
					<Name><![CDATA[v_electricHobConsumption_kW]]></Name>
					<Description><![CDATA[This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information]]></Description>
					<X>180</X><Y>1050</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1673949346167</Id>
					<Name><![CDATA[v_hotwaterDemand_kW]]></Name>
					<X>450</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1674329641809</Id>
					<Name><![CDATA[v_currentElectricityPriceConsumption_eurpkWh]]></Name>
					<X>1230</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1674396166866</Id>
					<Name><![CDATA[v_WTPCharging_eurpkWh]]></Name>
					<X>1230</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676468216301</Id>
					<Name><![CDATA[v_residualHeatGasPit_kW]]></Name>
					<X>450</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677495410857</Id>
					<Name><![CDATA[v_electricityTotalsCheck_kWh]]></Name>
					<Description><![CDATA[Should always be zero]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677585426154</Id>
					<Name><![CDATA[v_currentAveraged7kWElectricityPrice_eurpkWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1230</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1678710234324</Id>
					<Name><![CDATA[v_lowPassFactorLoad_fr]]></Name>
					<X>1230</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1678710234329</Id>
					<Name><![CDATA[v_currentLoadLowPassed_kW]]></Name>
					<X>1230</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692972667627</Id>
					<Name><![CDATA[v_hasPV]]></Name>
					<X>270</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1695824940090</Id>
					<Name><![CDATA[v_WTRV2G_eurpkWh]]></Name>
					<X>1230</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837525849</Id>
					<Name><![CDATA[v_heatPumpElectricityConsumption_kW]]></Name>
					<Description><![CDATA[This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information]]></Description>
					<X>180</X><Y>1070</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366089</Id>
					<Name><![CDATA[v_summerWeekTotalImport_MWh]]></Name>
					<X>1060</X><Y>1000</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366092</Id>
					<Name><![CDATA[v_summerWeekTotalExport_MWh]]></Name>
					<X>1060</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366094</Id>
					<Name><![CDATA[v_summerWeekEnergyConsumed_MWh]]></Name>
					<X>1060</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366096</Id>
					<Name><![CDATA[v_summerWeekEnergyProduced_MWh]]></Name>
					<X>1060</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366098</Id>
					<Name><![CDATA[v_summerWeekSelfConsumedEnergy_MWh]]></Name>
					<X>1060</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366100</Id>
					<Name><![CDATA[v_winterWeekTotalImport_MWh]]></Name>
					<X>1350</X><Y>1000</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366102</Id>
					<Name><![CDATA[v_winterWeekTotalExport_MWh]]></Name>
					<X>1350</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366104</Id>
					<Name><![CDATA[v_winterWeekEnergyConsumed_MWh]]></Name>
					<X>1350</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366106</Id>
					<Name><![CDATA[v_winterWeekEnergyProduced_MWh]]></Name>
					<X>1350</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182366108</Id>
					<Name><![CDATA[v_winterWeekSelfConsumedEnergy_MWh]]></Name>
					<X>1350</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701182480106</Id>
					<Name><![CDATA[v_totalExport_MWh]]></Name>
					<X>820</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701700372068</Id>
					<Name><![CDATA[v_currentEnergyConsumption_kW]]></Name>
					<X>150</X><Y>1620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701700372070</Id>
					<Name><![CDATA[v_currentEnergyProduction_kW]]></Name>
					<X>150</X><Y>1640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701700372072</Id>
					<Name><![CDATA[v_currentEnergyCurtailed_kW]]></Name>
					<X>150</X><Y>1660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701704923531</Id>
					<Name><![CDATA[v_daytimeTotalImport_MWh]]></Name>
					<X>1610</X><Y>1000</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701704923533</Id>
					<Name><![CDATA[v_daytimeTotalExport_MWh]]></Name>
					<X>1610</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701704923535</Id>
					<Name><![CDATA[v_daytimeEnergyConsumed_MWh]]></Name>
					<X>1610</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701704923537</Id>
					<Name><![CDATA[v_daytimeEnergyProduced_MWh]]></Name>
					<X>1610</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701704923539</Id>
					<Name><![CDATA[v_daytimeSelfConsumedEnergy_MWh]]></Name>
					<X>1610</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705027417</Id>
					<Name><![CDATA[v_nighttimeTotalImport_MWh]]></Name>
					<X>1900</X><Y>998</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705027419</Id>
					<Name><![CDATA[v_nighttimeTotalExport_MWh]]></Name>
					<X>1900</X><Y>1018</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705027421</Id>
					<Name><![CDATA[v_nighttimeEnergyConsumed_MWh]]></Name>
					<X>1900</X><Y>1038</Y>
					<Label><X>10</X><Y>-3</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705027423</Id>
					<Name><![CDATA[v_nighttimeEnergyProduced_MWh]]></Name>
					<X>1900</X><Y>1058</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705027425</Id>
					<Name><![CDATA[v_nighttimeSelfConsumedEnergy_MWh]]></Name>
					<X>1900</X><Y>1078</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149014</Id>
					<Name><![CDATA[v_weekdayTotalImport_MWh]]></Name>
					<X>2170</X><Y>1000</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149016</Id>
					<Name><![CDATA[v_weekdayTotalExport_MWh]]></Name>
					<X>2170</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149018</Id>
					<Name><![CDATA[v_weekdayEnergyConsumed_MWh]]></Name>
					<X>2170</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149020</Id>
					<Name><![CDATA[v_weekdayEnergyProduced_MWh]]></Name>
					<X>2170</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149022</Id>
					<Name><![CDATA[v_weekdaySelfConsumedEnergy_MWh]]></Name>
					<X>2170</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149024</Id>
					<Name><![CDATA[v_weekendTotalImport_MWh]]></Name>
					<X>2460</X><Y>998</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149026</Id>
					<Name><![CDATA[v_weekendTotalExport_MWh]]></Name>
					<X>2460</X><Y>1018</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149028</Id>
					<Name><![CDATA[v_weekendEnergyConsumed_MWh]]></Name>
					<X>2460</X><Y>1038</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149030</Id>
					<Name><![CDATA[v_weekendEnergyProduced_MWh]]></Name>
					<X>2460</X><Y>1058</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701705149032</Id>
					<Name><![CDATA[v_weekendSelfConsumedEnergy_MWh]]></Name>
					<X>2460</X><Y>1078</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704797243486</Id>
					<Name><![CDATA[v_totalElectricityConsumed_MWh]]></Name>
					<X>820</X><Y>1110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704797243488</Id>
					<Name><![CDATA[v_totalElectricityProduced_MWh]]></Name>
					<X>820</X><Y>1130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704815198376</Id>
					<Name><![CDATA[v_totalElectricitySelfConsumed_MWh]]></Name>
					<X>820</X><Y>1149</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705337871083</Id>
					<Name><![CDATA[v_totalHeatProduced_MWh]]></Name>
					<X>820</X><Y>1305</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705421898378</Id>
					<Name><![CDATA[v_currentEnergyProductionHeat_kW]]></Name>
					<X>150</X><Y>1680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706547862958</Id>
					<Name><![CDATA[v_summerWeekElectricityConsumed_MWh]]></Name>
					<X>1060</X><Y>1110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706547896028</Id>
					<Name><![CDATA[v_winterWeekElectricityConsumed_MWh]]></Name>
					<X>1350</X><Y>1110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706548049113</Id>
					<Name><![CDATA[v_daytimeElectricityConsumed_MWh]]></Name>
					<X>1610</X><Y>1108</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706548049115</Id>
					<Name><![CDATA[v_nighttimeElectricityConsumed_MWh]]></Name>
					<X>1900</X><Y>1108</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549154276</Id>
					<Name><![CDATA[v_weekdayElectricityConsumed_MWh]]></Name>
					<X>2170</X><Y>1107</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706549154278</Id>
					<Name><![CDATA[v_weekendElectricityConsumed_MWh]]></Name>
					<X>2460</X><Y>1106</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602023052</Id>
					<Name><![CDATA[v_currentElectricityConsumption_kW]]></Name>
					<X>150</X><Y>1700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706602029421</Id>
					<Name><![CDATA[v_currentElectricityProduction_kW]]></Name>
					<X>150</X><Y>1720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706869577753</Id>
					<Name><![CDATA[acc_annualElectricityBalance_kW]]></Name>
					<X>820</X><Y>1340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870781440</Id>
					<Name><![CDATA[acc_annualMethaneBalance_kW]]></Name>
					<X>820</X><Y>1360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870782481</Id>
					<Name><![CDATA[acc_annualHydrogenBalance_kW]]></Name>
					<X>820</X><Y>1380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870783704</Id>
					<Name><![CDATA[acc_annualDieselBalance_kW]]></Name>
					<X>820</X><Y>1400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870784612</Id>
					<Name><![CDATA[acc_annualHeatBalance_kW]]></Name>
					<X>820</X><Y>1420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870786556</Id>
					<Name><![CDATA[acc_annualEnergyProduction_kW]]></Name>
					<X>820</X><Y>1480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870787556</Id>
					<Name><![CDATA[acc_annualEnergyConsumption_kW]]></Name>
					<X>820</X><Y>1500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870788656</Id>
					<Name><![CDATA[acc_annualEnergyCurtailed_kW]]></Name>
					<X>820</X><Y>1520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870789828</Id>
					<Name><![CDATA[acc_annualElectricityProduction_kW]]></Name>
					<X>820</X><Y>1540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870791997</Id>
					<Name><![CDATA[acc_annualElectricityConsumption_kW]]></Name>
					<X>820</X><Y>1560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706870793141</Id>
					<Name><![CDATA[acc_annualHeatProduction_kW]]></Name>
					<X>820</X><Y>1580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706893451051</Id>
					<Name><![CDATA[acc_annualTotalImport_kW]]></Name>
					<X>820</X><Y>1440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706893451053</Id>
					<Name><![CDATA[acc_annualTotalExport_kW]]></Name>
					<X>820</X><Y>1460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952022790</Id>
					<Name><![CDATA[v_summerWeekElectricityProduced_MWh]]></Name>
					<X>1060</X><Y>1130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952041112</Id>
					<Name><![CDATA[v_summerWeekElectricitySelfConsumed_MWh]]></Name>
					<X>1060</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952121358</Id>
					<Name><![CDATA[v_summerWeekElectricityImport_MWh]]></Name>
					<X>1060</X><Y>1170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952121360</Id>
					<Name><![CDATA[v_summerWeekElectricityExport_MWh]]></Name>
					<X>1060</X><Y>1190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952294292</Id>
					<Name><![CDATA[v_winterWeekElectricityProduced_MWh]]></Name>
					<X>1350</X><Y>1130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952294294</Id>
					<Name><![CDATA[v_winterWeekElectricitySelfConsumed_MWh]]></Name>
					<X>1350</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952294296</Id>
					<Name><![CDATA[v_winterWeekElectricityImport_MWh]]></Name>
					<X>1350</X><Y>1170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952294298</Id>
					<Name><![CDATA[v_winterWeekElectricityExport_MWh]]></Name>
					<X>1350</X><Y>1190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952430965</Id>
					<Name><![CDATA[v_summerWeekMethaneImport_MWh]]></Name>
					<X>1060</X><Y>1210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952436528</Id>
					<Name><![CDATA[v_summerWeekHydrogenImport_MWh]]></Name>
					<X>1060</X><Y>1249</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952437713</Id>
					<Name><![CDATA[v_summerWeekDieselImport_MWh]]></Name>
					<X>1060</X><Y>1228</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952468037</Id>
					<Name><![CDATA[v_winterWeekMethaneImport_MWh]]></Name>
					<X>1350</X><Y>1210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952468039</Id>
					<Name><![CDATA[v_winterWeekHydrogenImport_MWh]]></Name>
					<X>1350</X><Y>1249</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706952468041</Id>
					<Name><![CDATA[v_winterWeekDieselImport_MWh]]></Name>
					<X>1350</X><Y>1228</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081723</Id>
					<Name><![CDATA[v_daytimeElectricityProduced_MWh]]></Name>
					<X>1610</X><Y>1127</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081725</Id>
					<Name><![CDATA[v_daytimeElectricitySelfConsumed_MWh]]></Name>
					<X>1610</X><Y>1147</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081727</Id>
					<Name><![CDATA[v_daytimeElectricityImport_MWh]]></Name>
					<X>1610</X><Y>1167</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081729</Id>
					<Name><![CDATA[v_daytimeElectricityExport_MWh]]></Name>
					<X>1610</X><Y>1187</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081731</Id>
					<Name><![CDATA[v_nighttimeElectricityProduced_MWh]]></Name>
					<X>1900</X><Y>1127</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081733</Id>
					<Name><![CDATA[v_nighttimeElectricitySelfConsumed_MWh]]></Name>
					<X>1900</X><Y>1147</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081735</Id>
					<Name><![CDATA[v_nighttimeElectricityImport_MWh]]></Name>
					<X>1900</X><Y>1167</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081737</Id>
					<Name><![CDATA[v_nighttimeElectricityExport_MWh]]></Name>
					<X>1900</X><Y>1187</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081739</Id>
					<Name><![CDATA[v_daytimeMethaneImport_MWh]]></Name>
					<X>1610</X><Y>1207</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081741</Id>
					<Name><![CDATA[v_daytimeHydrogenImport_MWh]]></Name>
					<X>1610</X><Y>1246</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081743</Id>
					<Name><![CDATA[v_daytimeDieselImport_MWh]]></Name>
					<X>1610</X><Y>1225</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081745</Id>
					<Name><![CDATA[v_nighttimeMethaneImport_MWh]]></Name>
					<X>1900</X><Y>1207</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081747</Id>
					<Name><![CDATA[v_nighttimeHydrogenImport_MWh]]></Name>
					<X>1900</X><Y>1246</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123081749</Id>
					<Name><![CDATA[v_nighttimeDieselImport_MWh]]></Name>
					<X>1900</X><Y>1225</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091557</Id>
					<Name><![CDATA[v_weekdayElectricityProduced_MWh]]></Name>
					<X>2170</X><Y>1127</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091559</Id>
					<Name><![CDATA[v_weekdayElectricitySelfConsumed_MWh]]></Name>
					<X>2170</X><Y>1147</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091561</Id>
					<Name><![CDATA[v_weekdayElectricityImport_MWh]]></Name>
					<X>2170</X><Y>1167</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091563</Id>
					<Name><![CDATA[v_weekdayElectricityExport_MWh]]></Name>
					<X>2170</X><Y>1187</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091565</Id>
					<Name><![CDATA[v_weekendElectricityProduced_MWh]]></Name>
					<X>2460</X><Y>1127</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091567</Id>
					<Name><![CDATA[v_weekendElectricitySelfConsumed_MWh]]></Name>
					<X>2460</X><Y>1147</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091569</Id>
					<Name><![CDATA[v_weekendElectricityImport_MWh]]></Name>
					<X>2460</X><Y>1167</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091571</Id>
					<Name><![CDATA[v_weekendElectricityExport_MWh]]></Name>
					<X>2460</X><Y>1187</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091573</Id>
					<Name><![CDATA[v_weekdayMethaneImport_MWh]]></Name>
					<X>2170</X><Y>1207</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091575</Id>
					<Name><![CDATA[v_weekdayHydrogenImport_MWh]]></Name>
					<X>2170</X><Y>1246</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091577</Id>
					<Name><![CDATA[v_weekdayDieselImport_MWh]]></Name>
					<X>2170</X><Y>1225</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091579</Id>
					<Name><![CDATA[v_weekendMethaneImport_MWh]]></Name>
					<X>2460</X><Y>1207</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091581</Id>
					<Name><![CDATA[v_weekendHydrogenImport_MWh]]></Name>
					<X>2460</X><Y>1246</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707123091583</Id>
					<Name><![CDATA[v_weekendDieselImport_MWh]]></Name>
					<X>2460</X><Y>1225</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086685641</Id>
					<Name><![CDATA[v_dailyBaseloadElectricityDemand_kW]]></Name>
					<X>740</X><Y>2110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086685643</Id>
					<Name><![CDATA[v_dailyHeatPumpElectricityDemand_kW]]></Name>
					<X>740</X><Y>2130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086685647</Id>
					<Name><![CDATA[v_dailyElectricVehicleDemand_kW]]></Name>
					<X>740</X><Y>2150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086685649</Id>
					<Name><![CDATA[v_dailyBatteriesDemand_kW]]></Name>
					<X>740</X><Y>2170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086685651</Id>
					<Name><![CDATA[v_dailyPVGeneration_kW]]></Name>
					<X>740</X><Y>2290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086685653</Id>
					<Name><![CDATA[v_dailyWindGeneration_kW]]></Name>
					<X>740</X><Y>2310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086685655</Id>
					<Name><![CDATA[v_dailyBatteriesSupply_kW]]></Name>
					<X>740</X><Y>2330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086685657</Id>
					<Name><![CDATA[v_dailyV2GSupply_kW]]></Name>
					<X>740</X><Y>2350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086756834</Id>
					<Name><![CDATA[v_dailyElectricitySupply_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>740</X><Y>2090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715086759851</Id>
					<Name><![CDATA[v_dailyElectricityDemand_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>740</X><Y>2070</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715241326356</Id>
					<Name><![CDATA[v_dailyDieselDemand_kW]]></Name>
					<X>740</X><Y>2210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715241380139</Id>
					<Name><![CDATA[v_dailyHydrogenDemand_kW]]></Name>
					<X>740</X><Y>2230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715241396934</Id>
					<Name><![CDATA[v_dailyNaturalGasDemand_kW]]></Name>
					<X>740</X><Y>2190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715241684044</Id>
					<Name><![CDATA[v_dailyDistrictHeatDemand_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>740</X><Y>2250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715241688653</Id>
					<Name><![CDATA[v_dailyDistrictHeatSupply_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>740</X><Y>2410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715241757962</Id>
					<Name><![CDATA[v_dailyNaturalGasSupply_kW]]></Name>
					<X>740</X><Y>2370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715673589196</Id>
					<Name><![CDATA[v_dailyHydrogenSupply_kW]]></Name>
					<X>740</X><Y>2390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715674079792</Id>
					<Name><![CDATA[v_summerWeekHydrogenExport_MWh]]></Name>
					<X>1060</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715674099582</Id>
					<Name><![CDATA[v_winterWeekHydrogenExport_MWh]]></Name>
					<X>1350</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715674949390</Id>
					<Name><![CDATA[v_daytimeHydrogenExport_MWh]]></Name>
					<X>1610</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715674963768</Id>
					<Name><![CDATA[v_nighttimeHydrogenExport_MWh]]></Name>
					<X>1900</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715674981936</Id>
					<Name><![CDATA[v_weekdayHydrogenExport_MWh]]></Name>
					<X>2170</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715674990936</Id>
					<Name><![CDATA[v_weekendHydrogenExport_MWh]]></Name>
					<X>2460</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182010</Id>
					<Name><![CDATA[acc_summerElectricityBalance_kW]]></Name>
					<X>1110</X><Y>1340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182012</Id>
					<Name><![CDATA[acc_summerMethaneBalance_kW]]></Name>
					<X>1110</X><Y>1360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182014</Id>
					<Name><![CDATA[acc_summerHydrogenBalance_kW]]></Name>
					<X>1110</X><Y>1380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182016</Id>
					<Name><![CDATA[acc_summerDieselBalance_kW]]></Name>
					<X>1110</X><Y>1400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182018</Id>
					<Name><![CDATA[acc_summerHeatBalance_kW]]></Name>
					<X>1110</X><Y>1420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182020</Id>
					<Name><![CDATA[acc_summerEnergyProduction_kW]]></Name>
					<X>1110</X><Y>1480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182022</Id>
					<Name><![CDATA[acc_summerEnergyConsumption_kW]]></Name>
					<X>1110</X><Y>1500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182024</Id>
					<Name><![CDATA[acc_summerEnergyCurtailed_kW]]></Name>
					<X>1110</X><Y>1520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182026</Id>
					<Name><![CDATA[acc_summerElectricityProduction_kW]]></Name>
					<X>1110</X><Y>1540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182028</Id>
					<Name><![CDATA[acc_summerElectricityConsumption_kW]]></Name>
					<X>1110</X><Y>1560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182030</Id>
					<Name><![CDATA[acc_summerHeatProduction_kW]]></Name>
					<X>1110</X><Y>1580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182032</Id>
					<Name><![CDATA[acc_summerTotalImport_kW]]></Name>
					<X>1110</X><Y>1440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715861182034</Id>
					<Name><![CDATA[acc_summerTotalExport_kW]]></Name>
					<X>1110</X><Y>1460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862972988</Id>
					<Name><![CDATA[acc_winterElectricityBalance_kW]]></Name>
					<X>1420</X><Y>1340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862972990</Id>
					<Name><![CDATA[acc_winterMethaneBalance_kW]]></Name>
					<X>1420</X><Y>1360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862972992</Id>
					<Name><![CDATA[acc_winterHydrogenBalance_kW]]></Name>
					<X>1420</X><Y>1380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862972994</Id>
					<Name><![CDATA[acc_winterDieselBalance_kW]]></Name>
					<X>1420</X><Y>1400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862972996</Id>
					<Name><![CDATA[acc_winterHeatBalance_kW]]></Name>
					<X>1420</X><Y>1420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862972998</Id>
					<Name><![CDATA[acc_winterEnergyProduction_kW]]></Name>
					<X>1420</X><Y>1480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862973000</Id>
					<Name><![CDATA[acc_winterEnergyConsumption_kW]]></Name>
					<X>1420</X><Y>1500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862973002</Id>
					<Name><![CDATA[acc_winterEnergyCurtailed_kW]]></Name>
					<X>1420</X><Y>1520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862973004</Id>
					<Name><![CDATA[acc_winterElectricityProduction_kW]]></Name>
					<X>1420</X><Y>1540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862973006</Id>
					<Name><![CDATA[acc_winterElectricityConsumption_kW]]></Name>
					<X>1420</X><Y>1560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862973008</Id>
					<Name><![CDATA[acc_winterHeatProduction_kW]]></Name>
					<X>1420</X><Y>1580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862973010</Id>
					<Name><![CDATA[acc_winterTotalImport_kW]]></Name>
					<X>1420</X><Y>1440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715862973012</Id>
					<Name><![CDATA[acc_winterTotalExport_kW]]></Name>
					<X>1420</X><Y>1460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1717414924763</Id>
					<Name><![CDATA[v_hydrogenElectricityConsumption_kW]]></Name>
					<X>180</X><Y>1090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718104519140</Id>
					<Name><![CDATA[data_netbelastingDuurkromme_kW]]></Name>
					<X>150</X><Y>2150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718104563816</Id>
					<Name><![CDATA[data_netbelastingDuurkrommeVorige_kW]]></Name>
					<X>150</X><Y>2170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718104599790</Id>
					<Name><![CDATA[data_summerWeekNetbelastingDuurkromme_kW]]></Name>
					<X>150</X><Y>2190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718104616362</Id>
					<Name><![CDATA[data_winterWeekNetbelastingDuurkromme_kW]]></Name>
					<X>150</X><Y>2210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718104645642</Id>
					<Name><![CDATA[data_daytimeNetbelastingDuurkromme_kW]]></Name>
					<X>150</X><Y>2230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718104655057</Id>
					<Name><![CDATA[data_nighttimeNetbelastingDuurkromme_kW]]></Name>
					<X>150</X><Y>2250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718104682963</Id>
					<Name><![CDATA[data_weekdayNetbelastingDuurkromme_kW]]></Name>
					<X>150</X><Y>2270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718104746038</Id>
					<Name><![CDATA[data_weekendNetbelastingDuurkromme_kW]]></Name>
					<X>150</X><Y>2290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720442507543</Id>
					<Name><![CDATA[v_enableCurtailment]]></Name>
					<X>270</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720447120435</Id>
					<Name><![CDATA[v_curtailmentPowerElectric_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>150</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719407798845</Id>
					<Name><![CDATA[v_totalInstalledWindPower_kW]]></Name>
					<X>580</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719407798847</Id>
					<Name><![CDATA[v_totalInstalledPVPower_kW]]></Name>
					<X>580</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720435316099</Id>
					<Name><![CDATA[v_nfatoWeekendDeliveryCapacity_kW]]></Name>
					<Description><![CDATA[Capacities for Non-Firm ATO per hour of the day ]]></Description>
					<X>270</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[24]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720435335143</Id>
					<Name><![CDATA[v_nfatoWeekDeliveryCapacity_kW]]></Name>
					<Description><![CDATA[Capacities for Non-Firm ATO per hour of the day ]]></Description>
					<X>270</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[24]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720520594279</Id>
					<Name><![CDATA[v_enableNFato]]></Name>
					<X>270</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721833484396</Id>
					<Name><![CDATA[v_previousPowerHeat_kW]]></Name>
					<Description><![CDATA[Heat balance of previous timestep]]></Description>
					<X>1230</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721122517382</Id>
					<Name><![CDATA[acc_summerDeliveryCapacity_kW]]></Name>
					<X>1110</X><Y>1610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721122539722</Id>
					<Name><![CDATA[acc_winterDeliveryCapacity_kW]]></Name>
					<X>1420</X><Y>1610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721821764640</Id>
					<Name><![CDATA[v_hasQuarterHourlyValues]]></Name>
					<X>270</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722584654288</Id>
					<Name><![CDATA[v_isActive]]></Name>
					<X>270</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725959590506</Id>
					<Name><![CDATA[acc_summerFeedinCapacity_kW]]></Name>
					<X>1110</X><Y>1630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725959604557</Id>
					<Name><![CDATA[acc_winterFeedinCapacity_kW]]></Name>
					<X>1420</X><Y>1630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725968910310</Id>
					<Name><![CDATA[v_nfatoWeekendFeedinCapacity_kW]]></Name>
					<Description><![CDATA[Capacities for Non-Firm ATO per hour of the day ]]></Description>
					<X>270</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[24]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725968910312</Id>
					<Name><![CDATA[v_nfatoWeekFeedinCapacity_kW]]></Name>
					<Description><![CDATA[Capacities for Non-Firm ATO per hour of the day ]]></Description>
					<X>270</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[24]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726238237441</Id>
					<Name><![CDATA[v_districtHeatDelivery_kW]]></Name>
					<X>470</X><Y>1010</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1727099238699</Id>
					<Name><![CDATA[v_totalOverloadDurationDelivery_hr]]></Name>
					<X>150</X><Y>2270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726425994811</Id>
					<Name><![CDATA[v_heatpumpDelivery_kW]]></Name>
					<X>470</X><Y>1030</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1727101009735</Id>
					<Name><![CDATA[v_totalOverloadDurationFeedin_hr]]></Name>
					<X>150</X><Y>2290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1658499438204</Id>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>270</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridConnectionCategory]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<Label><![CDATA[p_netConnectionCategory]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658500076242</Id>
					<Name><![CDATA[p_gridConnectionType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>270</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridConnectionType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658500076240</Id>
							<Label><![CDATA[p_netConnectionType]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658500465208</Id>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
					<X>50</X><Y>235</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658500465206</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658752146271</Id>
					<Name><![CDATA[p_gridConnectionID]]></Name>
					<X>50</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658752146269</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660053984881</Id>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
					<X>50</X><Y>255</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660053984879</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660115328584</Id>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
					<X>580</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EABuilding]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1660115328582</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>SEPARATOR</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660115363643</Id>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
					<X>580</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAConversion]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1660115363641</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660229326795</Id>
					<Name><![CDATA[p_ownerID]]></Name>
					<X>50</X><Y>215</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660229326793</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1665486155689</Id>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
					<X>580</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAConversion]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1665486155687</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1665487815862</Id>
					<Name><![CDATA[p_heatingType]]></Name>
					<X>270</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridConnectionHeatingType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1665487815860</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1668180047824</Id>
					<Name><![CDATA[p_energyAssetList]]></Name>
					<X>1070</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[com.fasterxml.jackson.databind.node.ArrayNode]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1668180047822</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1668693393498</Id>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
					<X>270</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_ChargingAttitude]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_ChargingAttitude.SIMPLE]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1668693393496</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1668693418082</Id>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
					<X>270</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_BatteryOperationMode]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_BatteryOperationMode.BALANCE]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1668693418080</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1668695364192</Id>
					<Name><![CDATA[p_batteryAsset]]></Name>
					<X>600</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAStorageElectric]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1668695364190</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1671459091954</Id>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
					<X>270</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_ElectrolyserOperationMode]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_ElectrolyserOperationMode.BALANCE]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1671459091952</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676965009213</Id>
					<Name><![CDATA[p_curtailer]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>620</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAConversionCurtailer]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1676965009211</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676449763319</Id>
					<Name><![CDATA[p_heatBuffer]]></Name>
					<X>600</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAStorageHeat]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1676449763317</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1684919785784</Id>
					<Name><![CDATA[p_gasBuffer]]></Name>
					<X>600</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAStorageGas]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1684919785782</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1692878211840</Id>
					<Name><![CDATA[p_cookingTracker]]></Name>
					<X>740</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_ActivityTrackerCooking]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1692878211838</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1692890035894</Id>
					<Name><![CDATA[p_energyLabel]]></Name>
					<X>50</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridConnectionIsolationLabel]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1692890035892</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1692973005119</Id>
					<Name><![CDATA[p_DHWAsset]]></Name>
					<X>741</X><Y>178</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAConsumption]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1692973005117</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1697021029662</Id>
					<Name><![CDATA[p_longitude]]></Name>
					<X>50</X><Y>295</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1697021029660</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1697021029674</Id>
					<Name><![CDATA[p_latitude]]></Name>
					<X>50</X><Y>315</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1697021029672</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1698935198538</Id>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
					<X>50</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1698935198536</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1700492967648</Id>
					<Name><![CDATA[p_GISPoint]]></Name>
					<X>50</X><Y>275</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[GISPoint]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1700492967646</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1704985428470</Id>
					<Name><![CDATA[p_owner]]></Name>
					<X>50</X><Y>195</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[ConnectionOwner]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1704985428468</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1714137460172</Id>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
					<X>50</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1714137460170</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1718887078133</Id>
					<Name><![CDATA[p_purposeBAG]]></Name>
					<X>50</X><Y>389</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1718887078131</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1722513783034</Id>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
					<X>580</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAConversion]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1722513783032</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1722411169263</Id>
					<Name><![CDATA[p_curtailmentMode]]></Name>
					<X>270</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_CurtailmentMode]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_CurtailmentMode.CAPACITY]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1722411169261</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1722429053561</Id>
					<Name><![CDATA[p_name]]></Name>
					<X>50</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1722429053559</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1725884764193</Id>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
					<X>270</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1725884764191</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1725884780832</Id>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
					<X>270</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1725884780830</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1725884795200</Id>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
					<X>270</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1725884795198</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726146956845</Id>
					<Name><![CDATA[p_address]]></Name>
					<Description><![CDATA[A Java class that contains all the relevant information about the grid connection address. The class contains a method .getAddress() which returns a formatted String of the address.]]></Description>
					<X>50</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_Address]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726146956843</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1659962626903</Id>
					<Name><![CDATA[c_energyAssets]]></Name>
					<X>580</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1659962626907</Id>
					<Name><![CDATA[c_storageAssets]]></Name>
					<X>600</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAStorage]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1659962626909</Id>
					<Name><![CDATA[c_consumptionAssets]]></Name>
					<X>600</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAConsumption]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1659962626911</Id>
					<Name><![CDATA[c_productionAssets]]></Name>
					<X>600</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAProduction]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1659962626913</Id>
					<Name><![CDATA[c_conversionAssets]]></Name>
					<X>600</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAConversion]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1667746389220</Id>
					<Name><![CDATA[c_vehicleAssets]]></Name>
					<X>600</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAVehicle]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1668359033654</Id>
					<Name><![CDATA[c_vehiclesAvailableForCharging]]></Name>
					<X>620</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAEV]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1669115948280</Id>
					<Name><![CDATA[c_dieselVehicles]]></Name>
					<X>620</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EADieselVehicle]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1692864624612</Id>
					<Name><![CDATA[c_tripTrackers]]></Name>
					<X>720</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_ActivityTrackerTrips]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1700044359363</Id>
					<Name><![CDATA[c_profileAssets]]></Name>
					<X>740</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAProfile]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1704895219414</Id>
					<Name><![CDATA[c_connectedGISObjects]]></Name>
					<X>50</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GIS_Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1711012701187</Id>
					<Name><![CDATA[c_hydrogenVehicles]]></Name>
					<X>620</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAHydrogenVehicle]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1715082351013</Id>
					<Name><![CDATA[c_heatingTypes]]></Name>
					<X>-200</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[OL_GridConnectionHeatingType]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722516437894</Id>
					<Name><![CDATA[c_fixedConsumptionElectricAssets]]></Name>
					<X>-120</X><Y>980</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722516468629</Id>
					<Name><![CDATA[c_electricHobAssets]]></Name>
					<X>-120</X><Y>1050</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722516515981</Id>
					<Name><![CDATA[c_conversionElectricAssets]]></Name>
					<X>-120</X><Y>1030</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722516532968</Id>
					<Name><![CDATA[c_electricHeatpumpAssets]]></Name>
					<X>-120</X><Y>1070</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722516544883</Id>
					<Name><![CDATA[c_electrolyserAssets]]></Name>
					<X>-120</X><Y>1090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722516559744</Id>
					<Name><![CDATA[c_EvAssets]]></Name>
					<X>-120</X><Y>1110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722516579645</Id>
					<Name><![CDATA[c_pvAssets]]></Name>
					<X>-120</X><Y>1200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722516597938</Id>
					<Name><![CDATA[c_windAssets]]></Name>
					<X>-120</X><Y>1220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722517079192</Id>
					<Name><![CDATA[c_batteryAssets]]></Name>
					<X>-120</X><Y>1130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1675011317461</Id>
					<Name><![CDATA[e_initializeLowPassEprice]]></Name>
					<Description><![CDATA[Make sure this is correct, so after the first official timestep has passed]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1230</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="occuresOnce">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_HOUR]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1675065600000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[energyModel.p_timeStep_h*60+1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[v_electricityPriceLowPassed_eurpkWh = v_currentElectricityPriceConsumption_eurpkWh;
v_currentLoadLowPassed_kW = v_currentPowerElectricity_kW;]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1658500398176</Id>
					<Name><![CDATA[f_connectToParents]]></Name>
					<X>911</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[GridNode myParentNodeElectric = findFirst(energyModel.pop_gridNodes, p->p.p_gridNodeID.equals(p_parentNodeElectricID)) ;
if( myParentNodeElectric instanceof GridNode ) {
	l_parentNodeElectric.connectTo(myParentNodeElectric);
	myParentNodeElectric.f_connectToChild(this);
	//p_parentNodeElectric = myParentNodeElectric;
}

GridNode myParentNodeHeat = findFirst(energyModel.pop_gridNodes, p->p.p_gridNodeID.equals(p_parentNodeHeatID)) ;
if( myParentNodeHeat instanceof GridNode ) {
	l_parentNodeHeat.connectTo(myParentNodeHeat);
	myParentNodeHeat.f_connectToChild(this);
	//p_parentNodeHeat = myParentNodeHeat;
}

ConnectionOwner myParentConnectionOwner = findFirst(energyModel.pop_connectionOwners, p->p.p_actorID.equals(p_ownerID)) ;
if( myParentConnectionOwner instanceof ConnectionOwner) {
	//p_ownerActor = myParentConnectionOwner;
	l_ownerActor.connectTo(myParentConnectionOwner);
	myParentConnectionOwner.f_connectToChild(this);
}

/*EnergySupplier myParentEnergySupplier = findFirst(main.pop_energySuppliers, p->p.p_actorID.equals(p_ownerID)) ;
if( myParentEnergySupplier instanceof EnergySupplier) {
	//p_ownerActor = myParentEnergySupplier;
	l_ownerActor.connectTo(myParentEnergySupplier);
	myParentEnergySupplier.f_connectToChild(this);
}
EnergyCoop myParentEnergyCoop = findFirst(main.pop_energyCoops, p->p.p_actorID.equals(p_ownerID)) ;
if( myParentEnergyCoop instanceof EnergyCoop) {
	//p_ownerActor = myParentEnergyCoop;
	l_ownerActor.connectTo(myParentEnergyCoop);
	myParentEnergyCoop.f_connectToChild(this);
}*/]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1658752229618</Id>
					<Name><![CDATA[f_connectToChild]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>750</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingEnergyAsset]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[//assetLinks.connectTo(ConnectingChildNode);
J_EA j_ea = ConnectingEnergyAsset;

//dont add asset to list if it is not a tangible asset (i.e. a heating model for buildings)
if( ! (j_ea instanceof J_EAStorageHeat)) {
	c_energyAssets.add(j_ea);
}
if (j_ea instanceof J_EAConsumption ) {
	if (j_ea instanceof J_EADieselVehicle) {
		//c_vehicleAssets.add( EA );
		//c_dieselVehicles.add( EA );
		//c_vehicleAssets.get( v_vehicleIndex ).v_powerFraction_fr = 1;
		/*MobilityTracker m = main.add_mobilityTrackers();
		c_mobilityTrackers.add( m );
		m.p_vehicleIndex = v_vehicleIndex;
		m.p_gridConnection = this;
		m.p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );
		m.p_vehicleInstance = (J_EADieselVehicle)m.p_energyAsset.j_ea;
		m.p_vehicleInstance = (J_EADieselVehicle)m.p_vehicleInstance;
		m.p_mobilityPatternType = OL_MobilityPatternType.TRUCK;
		((J_EADieselVehicle)m.p_vehicleInstance).setMobilityTracker( m );
		m.f_getData();*/
		//v_vehicleIndex ++;
	}
	//c_consumptionAssets.add(EA);
} 
else if (j_ea instanceof J_EAProduction ) {
	c_productionAssets.add((J_EAProduction)j_ea);
} 
else if (j_ea instanceof J_EAStorage ) {
	if ( j_ea instanceof J_EAStorageHeat) {
		if ( ((J_EAStorageHeat)j_ea).heatStorageType == OL_EAStorageTypes.HEATMODEL_BUILDING ) {
			//p_BuildingThermalAsset = EA; // Obsolete
		}
		else if ( ((J_EAStorageHeat)j_ea).heatStorageType == OL_EAStorageTypes.HEATBUFFER ) {
			//c_storageAssets.add(EA);
			//p_heatBuffer = EA;
		}
	} 
	else if (j_ea instanceof J_EAStorageElectric) {
		if(j_ea instanceof J_EAEV && ((J_EAEV)j_ea).getStorageCapacity_kWh() !=0) {
			//c_storageAssets.add(EA);
			//c_vehicleAssets.add( EA );
			//EA.v_powerFraction_fr = 1; //Waarom staat dit op 1? 29-01-23 PH
			/*MobilityTracker m = main.add_mobilityTrackers();
			c_mobilityTrackers.add( m );
			m.p_vehicleIndex = v_vehicleIndex;
			m.p_gridConnection = this;
			m.p_energyAsset = EA;
			m.p_vehicleInstance = (J_EAEV)m.p_energyAsset.j_ea;
 			m.p_mobilityPatternType = OL_MobilityPatternType.TRUCK;
			((J_EAEV)m.p_vehicleInstance).setMobilityTracker( m );
			m.f_getData();*/
			//v_vehicleIndex ++;
		}
		else if (((J_EAStorageElectric)j_ea).getStorageCapacity_kWh() != 0) {
			//c_storageAssets.add(EA);
			//p_batteryAsset = EA;
		}		
		else{
			traceln(getName() + "storage asset create that cannot be identified (i.e. its not an EV and not an heatstorage");
		}
	}
} 
else if (j_ea instanceof J_EAConversion) {
	c_conversionAssets.add((J_EAConversion)j_ea);
	if (j_ea instanceof J_EAConversionGasBurner|| j_ea instanceof J_EAConversionHeatPump || j_ea instanceof J_EAConversionHeatDeliverySet ) {
		if (p_primaryHeatingAsset == null) {
			p_primaryHeatingAsset = (J_EAConversion)j_ea;
		} else if (p_secondaryHeatingAsset == null) {
			p_secondaryHeatingAsset = (J_EAConversion)j_ea;
		} else {
			traceln("House " + p_gridConnectionID + " already has two heating systems!");
		}
		//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());
	}
	else if (j_ea instanceof J_EAConversionCurtailer || j_ea instanceof J_EAConversionCurtailerHeat) {
		p_curtailer = (J_EAConversionCurtailer)j_ea;
	} 
}
else {
	traceln("f_connectToChild in GC: Exception! EnergyAsset " + ConnectingEnergyAsset + " is of unknown type: " + j_ea.energyAssetType);
	traceln( "TEST");
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660212665961</Id>
					<Name><![CDATA[f_connectionMetering]]></Name>
					<X>910</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( abs(v_currentPowerHeat_kW) > 0.1 && l_parentNodeHeat == null ) {
	traceln(v_currentPowerHeat_kW);
	traceln("Heat unbalance in gridConnection: " + p_gridConnectionID);
	pauseSimulation();
}

if (energyModel.v_isRapidRun){
	f_fillAnnualDatasets();
} else {
	f_fillLiveDatasets();
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1664961435385</Id>
					<Name><![CDATA[f_operateFlexAssets]]></Name>
					<X>910</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Must be overwritten in child agent]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1668181559833</Id>
					<Name><![CDATA[f_instantiateEnergyAssets]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>750</X><Y>-40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//traceln("asset " + p_energyAssetList);
if( p_energyAssetList != null) {
	for( JsonNode l : p_energyAssetList ) {
		OL_EACategories assetCategory = OL_EACategories.valueOf(l.required( "category" ).textValue());
		OL_EnergyAssetType assetType = OL_EnergyAssetType.valueOf(l.required( "type" ).textValue()) ;
		String assetName = l.required( "name" ).textValue();	
		switch( assetCategory )  {
			case CONSUMPTION:							
				if ( p_gridConnectionCategory == OL_GridConnectionCategory.HOUSE) {
					if( assetType.equals("ELECTRICITY_DEMAND") && assetName.contains("TEMPLATE House other electricity demand") ) {
						assetName = "House_other_electricity"; 
					} else if (assetType.equals("HOT_WATER_CONSUMPTION")) {				
						assetName = "House_hot_water";
					} 
				}
											
				double yearlyDemandElectricity_kWh = l.path( "yearlyDemandElectricity_kWh").doubleValue();
				double yearlyDemandHeat_kWh = l.path( "yearlyDemandHeat_kWh").doubleValue();
				double yearlyDemandHydrogen_kWh = l.path( "yearlyDemandHydrogen_kWh").doubleValue();
				double yearlyDemandMethane_kWh = l.path( "yearlyDemandMethane_kWh").doubleValue();
				double yearlyDemandDiesel_kWh = l.path( "yearlyDemandDiesel_kWh").doubleValue();
				double energyConsumption_kWhpkm = l.path( "energyConsumption_kWhpkm" ).doubleValue();
				double vehicleScaling = l.path("vehicleScaling").asDouble(1.0);
	
				if (assetType == OL_EnergyAssetType.DIESEL_VEHICLE) {
					//traceln("Adding diesel vehicle asset without EnergyAsset agent!");
					J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(this, energyConsumption_kWhpkm, energyModel.p_timeStep_h, vehicleScaling);
					f_connectToJ_EA(dieselVehicle);					
				} else {
					J_EAConsumption consumptionAsset = new J_EAConsumption(this,assetType,assetName,yearlyDemandElectricity_kWh,yearlyDemandHeat_kWh,yearlyDemandHydrogen_kWh,yearlyDemandMethane_kWh,yearlyDemandDiesel_kWh,energyModel.p_timeStep_h);
					f_connectToJ_EA(consumptionAsset);						
				}
			break;
			
			case PRODUCTION:								
				double capacityElectricity_kW = l.path( "capacityElectricity_kW").doubleValue();
				double capacityHeat_kW = l.path( "capacityHeat_kW").doubleValue();
				double yearlyProductionHydrogen_kWh = l.path( "yearlyProductionHydrogen_kWh").doubleValue();
				double yearlyProductionMethane_kWh = l.path( "yearlyProductionMethane_kWh").doubleValue();
				double outputTemperature_degC = l.path( "deliveryTemp_degC").doubleValue();
				
				J_EAProduction productionAsset = new J_EAProduction ( this, assetType, assetName, capacityElectricity_kW, capacityHeat_kW, yearlyProductionMethane_kWh, yearlyProductionHydrogen_kWh, energyModel.p_timeStep_h, outputTemperature_degC );
				f_connectToJ_EA(productionAsset);
			
				// Determine residual heat delivery temperature from coldest connected asset
				/*if(this instanceof GCResidualHeat) {					
					traceln("Residual heat delivery temperature = "+outputTemperature_degC);
					((GCResidualHeat)this).p_deliveryTemp_degC = outputTemperature_degC < ((GCResidualHeat)this).p_deliveryTemp_degC? outputTemperature_degC : ((GCResidualHeat)this).p_deliveryTemp_degC;
				}*/
			break;
			
			case CONVERSION:
				if ( assetType == OL_EnergyAssetType.GAS_PIT || assetType == OL_EnergyAssetType.GAS_BURNER || assetType == OL_EnergyAssetType.METHANE_FURNACE ){
					// traceln("Adding gaspit!");
					double capacityHeat_kW1 = l.required( "capacityHeat_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					double deliveryTemp_degC1 = 0.0;
					J_EAConversionGasBurner gasburner = new J_EAConversionGasBurner(this, assetType, capacityHeat_kW1, eta_r, energyModel.p_timeStep_h, deliveryTemp_degC1);
					f_connectToJ_EA(gasburner);
				} else if ( assetType == OL_EnergyAssetType.ELECTRIC_HOB){
					//traceln("Adding electric HOB!");
					double capacityHeat_kW1 = l.required( "capacityHeat_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					double deliveryTemp_degC1 = 0.0;
					J_EAElectricHob eHOB = new J_EAElectricHob(this, capacityHeat_kW1, eta_r, energyModel.p_timeStep_h, deliveryTemp_degC1);
					f_connectToJ_EA(eHOB);
				} else if ( assetType == OL_EnergyAssetType.HEAT_PUMP_AIR || assetType == OL_EnergyAssetType.HEAT_PUMP_GROUND || assetType == OL_EnergyAssetType.HEAT_PUMP_WATER){
					double capacityElectric_kW = l.path( "capacityElectricity_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					double deliveryTemp_degC = l.path( "deliveryTemp_degC" ).doubleValue();
					String ambientTempType = l.path( "ambientTempType" ).asText();
					double belowZeroHeatpumpEtaReductionFactor = l.path( "etaReduction_r" ).asDouble(1.0);
					J_EAConversionHeatPump	heatpump = new J_EAConversionHeatPump( this, energyModel.p_timeStep_h, capacityElectric_kW, eta_r, main.v_currentAmbientTemperature_degC, deliveryTemp_degC, ambientTempType, 0, belowZeroHeatpumpEtaReductionFactor );
					main.c_ambientAirDependentAssets.add(heatpump);
					f_connectToJ_EA(heatpump);
				} else if ( assetType == OL_EnergyAssetType.ELECTRIC_HEATER){
					double capacityElectric_kW = l.path( "capacityElectricity_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					double deliveryTemp_degC = l.path( "deliveryTemp_degC" ).doubleValue();
					J_EAConversionElectricHeater electricHeater = new J_EAConversionElectricHeater( this, capacityElectric_kW, eta_r, energyModel.p_timeStep_h, deliveryTemp_degC);
					f_connectToJ_EA(electricHeater);
				} else if ( assetType == OL_EnergyAssetType.HEAT_DELIVERY_SET){
					double capacityHeat_kW1 = l.required( "capacityHeat_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					double deliveryTemp_degC = l.path( "deliveryTemp_degC" ).doubleValue();
					J_EAConversionHeatDeliverySet deliverySet = new J_EAConversionHeatDeliverySet( this, capacityHeat_kW1, eta_r, deliveryTemp_degC, energyModel.p_timeStep_h );
					f_connectToJ_EA(deliverySet);
				} else if ( assetType == OL_EnergyAssetType.HYDROGEN_FURNACE){
					double capacityHeat_kW1 = l.required( "capacityHeat_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					double deliveryTemp_degC = 0.0;
					J_EAConversionHydrogenBurner hydrogenBurner = new J_EAConversionHydrogenBurner( this, capacityHeat_kW1, eta_r, energyModel.p_timeStep_h, deliveryTemp_degC );
					f_connectToJ_EA(hydrogenBurner);
				} else if ( assetType == OL_EnergyAssetType.ELECTROLYSER){
					double capacityElectric_kW = l.path( "capacityElectricity_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					J_EAConversionElektrolyser electrolyser = new J_EAConversionElektrolyser( this, capacityElectric_kW, eta_r, energyModel.p_timeStep_h );
					f_connectToJ_EA(electrolyser);
				} else if ( assetType == OL_EnergyAssetType.CURTAILER){
					double capacityElectric_kW = l.path( "capacityElectricity_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					J_EAConversionCurtailer curtailer = new J_EAConversionCurtailer( this, capacityElectric_kW, eta_r, energyModel.p_timeStep_h );
					f_connectToJ_EA(curtailer);
				} else if ( assetType == OL_EnergyAssetType.CURTAILER_HEAT){
					double capacityHeat_kW1 = l.required( "capacityHeat_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					J_EAConversionCurtailerHeat curtailerHeat = new J_EAConversionCurtailerHeat( this, capacityHeat_kW1, eta_r, energyModel.p_timeStep_h );
					f_connectToJ_EA(curtailerHeat);
				} else if ( assetType == OL_EnergyAssetType.METHANE_CHP){
					double capacityHeat_kW1 = l.required( "capacityHeat_kW").doubleValue();
					double capacityElectric_kW = l.path( "capacityElectricity_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					double deliveryTemp_degC = 0.0;
					J_EAConversionGasCHP GasCHP = new J_EAConversionGasCHP(this, capacityElectric_kW, capacityHeat_kW1, eta_r, energyModel.p_timeStep_h, deliveryTemp_degC);
					f_connectToJ_EA(GasCHP);
				} else if ( assetType == OL_EnergyAssetType.BIOGAS_METHANE_CONVERTER){
					double capacityMethane_kW = l.required( "capacityMethane_kW").doubleValue();
					double eta_r = l.required( "eta_r").doubleValue();
					J_EAConversionBiogasMethane biogasMethaneConverter = new J_EAConversionBiogasMethane(this, capacityMethane_kW, eta_r, energyModel.p_timeStep_h);
					f_connectToJ_EA(biogasMethaneConverter);
				} else {
					traceln("Unknown conversion energy asset! Skipping instantiation!");

				} 
			break;				
			case STORAGE:
				if ( assetType == OL_EnergyAssetType.ELECTRIC_VEHICLE){
					double capacityElectric_kW1 = l.path( "capacityElectricity_kW").doubleValue();
					double storageCapacity_kWh = l.path( "storageCapacity_kWh" ).doubleValue();
					double initialStateOfCharge_r = l.path( "stateOfCharge_r" ).doubleValue();
					double energyConsumption_kWhpkm2 = l.path( "energyConsumption_kWhpkm" ).doubleValue();
					double vehicleScalingElectric = l.path("vehicleScaling").asDouble(1.0);
					//storageAsset.j_ea = new J_EAEV(storageAsset, capacityElectric_kW1, storageCapacity_kWh, initialStateOfCharge_r, energyModel.p_timeStep_h, energyConsumption_kWhpkm2, vehicleScalingElectric );  
					
					J_EAEV ev= new J_EAEV(this, capacityElectric_kW1, storageCapacity_kWh, initialStateOfCharge_r, energyModel.p_timeStep_h, energyConsumption_kWhpkm2, vehicleScalingElectric );  
					f_connectToJ_EA(ev);	
					
				} else if ( assetType == OL_EnergyAssetType.BUILDINGTHERMALS) {										
					double capacityHeat_kW3 = l.path( "capacityHeat_kW").doubleValue();
			
					double lossFactor_WpK2 = l.path( "lossFactor_WpK" ).doubleValue() * uniform(0.8, 1.2);
					double heatCapacity_JpK2 = l.path( "heatCapacity_JpK" ).doubleValue() * uniform(0.7, 1.3);
									
					double minTemperature_degC2 = l.path( "minTemp_degC" ).asDouble(1.0);
					double maxTemperature_degC2 = l.path( "maxTemp_degC" ).asDouble(90.0);
					double initialTemperature_degC2 = l.path( "initialTemperature_degC" ).doubleValue();
					String ambientTempType3 = l.path( "ambientTempType" ).asText("AIR"); //ALWAYS AIR!
					double setTemperature_degC2 = 10.0; // this value does nothing for a heatmodel. But it is required to initialize the J_instance
					double solarAbsorptionFactor_m2 = l.path("solarAbsorptionFactor_m2").asDouble(1.0);

					J_EABuilding buildingThermals = new J_EABuilding(this, OL_EAStorageTypes.HEATMODEL_BUILDING, capacityHeat_kW3, lossFactor_WpK2, energyModel.p_timeStep_h, initialTemperature_degC2, minTemperature_degC2, maxTemperature_degC2, setTemperature_degC2, heatCapacity_JpK2, ambientTempType3, solarAbsorptionFactor_m2);
					f_connectToJ_EA(buildingThermals);
							
				} else if (assetType == OL_EnergyAssetType.STORAGE_ELECTRIC) {
					double capacityElectric_kW1 = l.path( "capacityElectricity_kW").doubleValue();
					double storageCapacity_kWh = l.path( "storageCapacity_kWh" ).doubleValue();
					double initialStateOfCharge_r = l.path( "stateOfCharge_r" ).doubleValue();
					J_EAStorageElectric storageAsset = new J_EAStorageElectric(this, capacityElectric_kW1, storageCapacity_kWh, initialStateOfCharge_r, energyModel.p_timeStep_h);						
					f_connectToJ_EA(storageAsset);
					p_batteryAsset=storageAsset;
					c_storageAssets.add(storageAsset);
					v_batterySOC_fr = storageAsset.getCurrentStateOfCharge();
			
				} else if (assetType == OL_EnergyAssetType.STORAGE_GAS) {
					double capacityGas_kW = l.path( "capacityGas_kW").doubleValue();
					double storageCapacity_kWh = l.path( "storageCapacity_kWh" ).doubleValue();
					double initialStateOfCharge_r = l.path( "stateOfCharge_r" ).doubleValue();
					J_EAStorageGas storageAsset = new J_EAStorageGas(this, capacityGas_kW, storageCapacity_kWh, initialStateOfCharge_r, energyModel.p_timeStep_h);
					f_connectToJ_EA(storageAsset);
					c_storageAssets.add(storageAsset);
					p_gasBuffer = storageAsset;
					//traceln("gasBuffer gasCapacity_kW: " + p_gasBuffer.j_ea.getGasCapacity_kW() + " kW");
				
				} else if( assetType == OL_EnergyAssetType.STORAGE_HEAT) {
					
				    double capacityHeat_kW2 = l.path( "capacityHeat_kW").doubleValue();
					double lossFactor_WpK = l.path( "lossFactor_WpK" ).doubleValue() * uniform(0.7, 1.3);
					double heatCapacity_JpK = l.path( "heatCapacity_JpK" ).doubleValue();
					double minTemperature_degC = l.path( "minTemp_degC" ).asDouble(44.0); // provide default values
					double maxTemperature_degC = l.path( "maxTemp_degC" ).asDouble(99.0);
					double setTemperature_degC = l.path( "setTemp_degC" ).asDouble(66.0);
					double initialTemperature_degC = l.path( "initialTemperature_degC" ).doubleValue();
					String ambientTempType2 = l.path( "ambientTempType" ).asText();
					
					if (this instanceof GCHouse ) {
						heatCapacity_JpK = heatCapacity_JpK * uniform(0.7, 1.3);
						initialTemperature_degC = initialTemperature_degC * uniform(0.7, 1.3);
					}
					
					//traceln("gridconnection heatstorage asset initialisation check! minTemp = "+minTemperature_degC+", maxTemperature_degC = "+maxTemperature_degC+", setTemp_degC = "+ setTemperature_degC+", initialTemperature_degC = "+initialTemperature_degC);
					J_EAStorageHeat storageAsset = new J_EAStorageHeat(this, OL_EAStorageTypes.HEATBUFFER, capacityHeat_kW2, lossFactor_WpK, energyModel.p_timeStep_h, initialTemperature_degC, minTemperature_degC, maxTemperature_degC, setTemperature_degC, heatCapacity_JpK, ambientTempType2);	
					
					f_connectToJ_EA(storageAsset);
					c_storageAssets.add(storageAsset);
				} else {
					traceln("F_instantiateEnergyAssets: ERROR, storage asset type not available");		
					
				}
			break;
			default:
				traceln("not a valid energy asset category." + assetCategory);
			break;
		}
	}
//traceln("GridConnection "+this.p_gridConnectionID+" has finished initializing its energyAssets!");
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1668528273163</Id>
					<Name><![CDATA[f_calculateEnergyBalance]]></Name>
					<X>890</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_previousPowerElectricity_kW = v_currentPowerElectricity_kW;
v_previousPowerHeat_kW = v_currentPowerHeat_kW;
v_currentPowerElectricity_kW = 0;
v_currentPowerMethane_kW = 0;
v_currentPowerHydrogen_kW = 0;
v_currentPowerHeat_kW = 0;
v_currentPowerDiesel_kW = 0;

v_currentElectricityConsumption_kW = 0;
v_currentElectricityProduction_kW = 0;
v_currentEnergyConsumption_kW = 0;
v_currentEnergyProduction_kW = 0;
v_currentEnergyCurtailed_kW = 0;
v_currentEnergyProductionHeat_kW = 0;

// Categorical power flows
v_fixedConsumptionElectric_kW = 0;
v_electricHobConsumption_kW = 0;
v_heatPumpElectricityConsumption_kW = 0;
v_hydrogenElectricityConsumption_kW = 0;
v_evChargingPowerElectric_kW = 0;
v_batteryPowerElectric_kW = 0;
v_windProductionElectric_kW = 0;
v_pvProductionElectric_kW = 0;
v_conversionPowerElectric_kW = 0;

if (v_enableNFato) {
	f_nfatoUpdateConnectionCapacity();
}

c_tripTrackers.forEach(t -> t.manageActivities(energyModel.t_h*60));

f_operateFixedAssets();
f_operateFlexAssets();

if (v_enableCurtailment) {
	f_curtailment();
}

f_connectionMetering();

//if (!Double.isFinite(v_currentPowerElectricity_kW)) {
//	traceln("Gridconnection %s with connection_id %s has NaN or infinite v_currentPowerElectricity_kW at time %s!", p_gridConnectionID, p_company_connection_id, energyModel.t_h);
//}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1668528300576</Id>
					<Name><![CDATA[f_operateFixedAssets]]></Name>
					<X>910</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[c_dieselVehicles.forEach(v -> v.f_updateAllFlows(0));
c_hydrogenVehicles.forEach(v -> v.f_updateAllFlows(0));
c_consumptionAssets.forEach(c -> c.f_updateAllFlows(0));
c_productionAssets.forEach(p -> p.f_updateAllFlows(0));
c_profileAssets.forEach(p -> p.f_updateAllFlows(energyModel.t_h));

/*
for(J_EAProfile e : c_profileAssets) {
		double[] flowsArray = e.f_updateAllFlows( energyModel.t_h );		
}

for(J_EAProduction e : c_productionAssets) {
	e.f_updateAllFlows(0.0); // 0.0 since it has its own profilePointer, but this function still requires a double input
	
	if( e.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {
		double[] flowsArray = e.f_updateAllFlows( energyModel.v_currentSolarPowerNormalized_r );
		//v_pvProductionElectric_kW += flowsArray[0];	
	} else if(e.energyAssetType == OL_EnergyAssetType.WINDMILL) {
		double[] flowsArray = e.f_updateAllFlows( energyModel.v_currentWindPowerNormalized_r );
		//v_windProductionElectric_kW += flowsArray[0];	
	} else if( e.energyAssetType == OL_EnergyAssetType.RESIDUALHEATHT ) {
		e.v_powerFraction_fr = 1;
		e.f_updateAllFlows( e.v_powerFraction_fr );
	} else if( e.energyAssetType == OL_EnergyAssetType.RESIDUALHEATLT ) {
		//e.v_powerFraction_fr = 0;
		e.f_updateAllFlows( 0 );
	} else if( e.energyAssetType == OL_EnergyAssetType.LIVESTOCK ) {
		e.v_powerFraction_fr = 1.0/8760;
		e.f_updateAllFlows( e.v_powerFraction_fr );
		//traceln("Methane production of livestock: " + e.v_currentProductionMethane_kW);
	} else {
		traceln("ProductionAsset with unknown type, cannot operate!! Type: " + e.energyAssetType);
		e.v_powerFraction_fr = 0;
		throw new IllegalStateException("ProductionAsset with unknown type, cannot operate!! Type: " + e.energyAssetType);
	}
	
}

for(J_EAConsumption e : c_consumptionAssets) {
	e.f_updateAllFlows(0.0); 
	/*if( e.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ) { // TODO: Replace with more descriptive EnergyAssetType, don't switch based on GridConnectionCategory!		
		
		double[] flowsArray;		
		if (e.energyAssetName != null) {
			switch(e.energyAssetName) {
				case "INDUSTRY_OTHER_ELECTRICITY_DEMAND":
					flowsArray = e.f_updateAllFlows( energyModel.v_currentIndustryOtherElectricityDemand_fr );
				break;
				case "Industry_other_electricity":
					flowsArray = e.f_updateAllFlows( energyModel.v_currentIndustryOtherElectricityDemand_fr );
				break;
				case "LOGISTICS_FLEET_HGV_E" :
					flowsArray = e.f_updateAllFlows( energyModel.v_currentLogisticsFleetEDemand_fr );
				break;
				case "INDUSTRY_STEEL_ELECTRICITY_DEMAND" :
					flowsArray = e.f_updateAllFlows( energyModel.v_currentIndustrySteelElectricityDemand_fr );
				break;
				case "House_other_electricity":
					//traceln("WRONG!! " + e.p_defaultEnergyAssetPresetName);
					//double randomizer = 0.7 + uniform(0.0, 0.6);
					//flowsArray = e.f_updateAllFlows( energyModel.pp_currentHouseHoldOtherElectricityDemand_fr.getValue() * randomizer );
					e.f_updateAllFlows(0.0); // 0.0 since it has its own profilePointer, but this function still requires a double input
				break;
				case "Office_other_electricity":
					//flowsArray = e.f_updateAllFlows( energyModel.v_currentBuildingOtherElectricityDemand_fr );
					e.f_updateAllFlows(0.0); // 0.0 since it has its own profilePointer, but this function still requires a double input
				break;
				case "Store_other_electricity":
					flowsArray = e.f_updateAllFlows( energyModel.v_currentBuildingOtherElectricityDemand_fr );
				break;
				default:
					traceln("ConsumptionAsset with unknown type, cannot operate!! Type: " + e.energyAssetType);
					throw new IllegalStateException("ELECTRICITY_DEMAND with unknown name, cannot operate!! Name: " + e.energyAssetName);
					// Try if the energyAssetName matches with one of the names in comp_elec_consumption
			}
			//v_fixedConsumptionElectric_kW += flowsArray[4];
		}
		else {
			throw new RuntimeException("ELECTRICITY_DEMAND with unknown name in GC: " + this.p_gridConnectionID);
		}			
	} 
	else if( e.energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION ){	
		e.f_updateAllFlows( energyModel.v_currentHouseHoldHotWaterDemand_fr );
		//v_currentPowerHeat_kW += e.v_currentConsumptionHeat_kW - e.v_currentProductionHeat_kW; // PowerFlows van consumption assets worden al in f_calculateEnergyBalance opgeteld, dus dit is dubbel!
	}
	else if( e.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND ) {
		//traceln("Heat demand asset ID: " + e.getName());
		switch(e.energyAssetName) {
			case "INDUSTRY_OTHER_HEAT_DEMAND":
				e.f_updateAllFlows( energyModel.v_currentIndustryOtherHeatDemand_fr );
				//e.v_powerFraction_fr = 1.0/8760;
				//e.f_updateAllFlows( e.v_powerFraction_fr );	
			break;
			case "Industry_steel_heat":
				e.f_updateAllFlows( energyModel.v_currentIndustrySteelHeatDemand_fr );
			break;
			case "Building_heat_demand":
				e.f_updateAllFlows( energyModel.v_currentBuildingHeatDemand_fr );
			break;
			// Ugly hack for 'removing' energy consumption when using residual heat; just don't run the heatdemand!
			case "Residual_heat_consumption":
				e.f_updateAllFlows(0);
			break;
			
			default:
				traceln("ConsumptionAsset with unknown type, cannot operate!! Type: " + e.energyAssetType);
				throw new IllegalStateException("HEAT_DEMAND with unknown name, cannot operate!! Name: " + e.energyAssetName);
		}
		//v_currentPowerHeat_kW += e.v_currentConsumptionHeat_kW - e.v_currentProductionHeat_kW;
	} 

	else if( e.energyAssetType == OL_EnergyAssetType.HYDROGEN_DEMAND ) {
		switch(e.energyAssetName) {
			case "INDUSTRY_OTHER_HYDROGEN_DEMAND":
				e.f_updateAllFlows( energyModel.v_currentIndustryOtherHeatDemand_fr ); // TODO: Get actual hydrogen-demand curve from ETM!
			break;
			default:
				traceln("ConsumptionAsset with unknown type, cannot operate!! Type: " + e.energyAssetType);
				throw new IllegalStateException("HEAT_DEMAND with unknown name, cannot operate!! Name: " + e.energyAssetName);
		}
		//v_currentPowerHydrogen_kW += e.v_currentConsumptionHydrogen_kW - e.v_currentProductionHydrogen_kW;
	} 
	else if( e.energyAssetType == OL_EnergyAssetType.DIESEL_DEMAND ) {
		e.v_powerFraction_fr = 1.0/8760;
		e.f_updateAllFlows( e.v_powerFraction_fr );	
	}	
	else if( e.energyAssetType == OL_EnergyAssetType.METHANE_DEMAND ) {
		e.v_powerFraction_fr = 1.0/8760;
		e.f_updateAllFlows( e.v_powerFraction_fr );	
	}
	else if (  e.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB || e.energyAssetType == OL_EnergyAssetType.GAS_PIT){
		e.f_updateAllFlows( energyModel.v_currentCookingDemand_fr );
	}
	else {
		traceln("ConsumptionAsset with unknown type, cannot operate!! Type: " + e.energyAssetType);
		e.v_powerFraction_fr = 0;
		throw new IllegalStateException("ConsumptionAsset with unknown type, cannot operate!! Type: " + e.energyAssetType);
	}
}
*/


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1668983912731</Id>
					<Name><![CDATA[f_resetStates]]></Name>
					<X>1230</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_maxConnectionLoad_fr = 0;

v_previousPowerElectricity_kW = 0;
v_previousPowerHeat_kW = 0;
v_electricityPriceLowPassed_eurpkWh = 0;
v_batterySOC_fr = 0;//(p_batteryAsset == null) ? 0 : p_batteryAsset.getCurrentStateOfCharge();
v_currentElectricityPriceConsumption_eurpkWh  = 0;
v_currentLoadLowPassed_kW = 0;
//v_currentIndoorTemp_degC = (p_BuildingThermalAsset == null) ? 0 : p_BuildingThermalAsset.getCurrentTemperature();

// Reset energytotals
/*if (b_useHydrogenLocally) {
	v_hydrogenInStorage_kWh = 1000000;
}
else {
	v_hydrogenInStorage_kWh = 0;
}*/
//v_totalHydrogenUsed_MWh = 0;

v_totalEnergyProduced_MWh = 0;
v_totalEnergyConsumed_MWh = 0;
v_totalHeatProduced_MWh = 0;
v_totalImport_MWh = 0;
v_totalExport_MWh = 0;
v_totalEnergyConsumed_MWh = 0;

v_totalElectricityConsumed_MWh = 0;
v_totalElectricityProduced_MWh = 0;

//Overload
v_totalOverloadDurationDelivery_hr = 0;
v_totalOverloadDurationFeedin_hr = 0;

//Summer/winter week and day 
v_summerWeekTotalImport_MWh = 0;
v_summerWeekTotalExport_MWh = 0;
v_summerWeekEnergyConsumed_MWh = 0;
v_summerWeekEnergyProduced_MWh = 0;
v_summerWeekElectricityConsumed_MWh = 0;
v_summerWeekElectricityProduced_MWh = 0;
v_summerWeekMethaneImport_MWh = 0;
v_summerWeekHydrogenImport_MWh = 0;
v_summerWeekDieselImport_MWh = 0;
v_summerWeekElectricityImport_MWh = 0;
v_summerWeekElectricityExport_MWh = 0;

v_winterWeekTotalImport_MWh = 0;
v_winterWeekTotalExport_MWh = 0;
v_winterWeekEnergyConsumed_MWh = 0;
v_winterWeekEnergyProduced_MWh = 0;
v_winterWeekElectricityConsumed_MWh = 0;
v_winterWeekElectricityProduced_MWh = 0;
v_winterWeekMethaneImport_MWh = 0;
v_winterWeekHydrogenImport_MWh = 0;
v_winterWeekDieselImport_MWh = 0;
v_winterWeekElectricityImport_MWh = 0;
v_winterWeekElectricityExport_MWh = 0;

v_daytimeTotalImport_MWh = 0;
v_daytimeTotalExport_MWh = 0;
v_daytimeEnergyConsumed_MWh = 0;
v_daytimeEnergyProduced_MWh = 0;
v_daytimeElectricityConsumed_MWh = 0;
v_daytimeElectricityProduced_MWh = 0;
v_daytimeMethaneImport_MWh = 0;
v_daytimeHydrogenImport_MWh = 0;
v_daytimeDieselImport_MWh = 0;
v_daytimeElectricityImport_MWh = 0;
v_daytimeElectricityExport_MWh = 0;


v_nighttimeTotalImport_MWh = 0;
v_nighttimeTotalExport_MWh = 0;
v_nighttimeEnergyConsumed_MWh = 0;
v_nighttimeEnergyProduced_MWh = 0;
v_nighttimeElectricityConsumed_MWh = 0;
v_nighttimeElectricityProduced_MWh = 0;
v_nighttimeMethaneImport_MWh = 0;
v_nighttimeHydrogenImport_MWh = 0;
v_nighttimeDieselImport_MWh = 0;
v_nighttimeElectricityImport_MWh = 0;
v_nighttimeElectricityExport_MWh = 0;

v_weekdayTotalImport_MWh = 0;
v_weekdayTotalExport_MWh = 0;
v_weekdayEnergyConsumed_MWh = 0;
v_weekdayEnergyProduced_MWh = 0;
v_weekdayElectricityConsumed_MWh = 0;
v_weekdayElectricityProduced_MWh = 0;
v_weekdayMethaneImport_MWh = 0;
v_weekdayHydrogenImport_MWh = 0;
v_weekdayDieselImport_MWh = 0;
v_weekdayElectricityImport_MWh = 0;
v_weekdayElectricityExport_MWh = 0;

v_weekendTotalImport_MWh = 0;
v_weekendTotalExport_MWh = 0;
v_weekendEnergyConsumed_MWh = 0;
v_weekendEnergyProduced_MWh = 0;
v_weekendElectricityConsumed_MWh = 0;
v_weekendElectricityProduced_MWh = 0;
v_weekendMethaneImport_MWh = 0;
v_weekendHydrogenImport_MWh = 0;
v_weekendDieselImport_MWh = 0;
v_weekendElectricityImport_MWh = 0;
v_weekendElectricityExport_MWh = 0;


// Daily totals
v_dailyBaseloadElectricityDemand_kW = 0;
v_dailyHeatPumpElectricityDemand_kW = 0;
v_dailyElectricVehicleDemand_kW = 0;
v_dailyBatteriesDemand_kW = 0;
v_dailyPVGeneration_kW = 0;
v_dailyWindGeneration_kW = 0;
v_dailyBatteriesSupply_kW = 0;
v_dailyV2GSupply_kW = 0;

data_annualBaseloadElectricityDemand_kW.reset();
data_annualHeatPumpElectricityDemand_kW.reset();
data_annualElectricVehicleDemand_kW.reset();
data_annualBatteriesDemand_kW.reset();
data_annualPVGeneration_kW.reset();
data_annualWindGeneration_kW.reset();
data_annualBatteriesSupply_kW.reset();
data_annualV2GSupply_kW.reset();

// Summer / Winterweek profile data
/*
data_summerWeekBaseloadElectricityDemand_kW.reset();
data_summerWeekHeatPumpElectricityDemand_kW.reset();
data_summerWeekElectricTrucksDemand_kW.reset();
data_summerWeekBatteriesDemand_kW.reset();
data_summerWeekPVGeneration_kW.reset();
data_summerWeekWindGeneration_kW.reset();
data_summerWeekBatteriesSupply_kW.reset();
data_summerWeekV2GSupply_kW.reset();
data_winterWeekBaseloadElectricityDemand_kW.reset();
data_winterWeekHeatPumpElectricityDemand_kW.reset();
data_winterWeekElectricTrucksDemand_kW.reset();
data_winterWeekBatteriesDemand_kW.reset();
data_winterWeekPVGeneration_kW.reset();
data_winterWeekWindGeneration_kW.reset();
data_winterWeekBatteriesSupply_kW.reset();
data_winterWeekV2GSupply_kW.reset();
*/
//Reset gridconnections flows:
v_electricityDrawnFromGrid_kWh = 0;
v_electricityDeliveredToGrid_kWh = 0;
v_methaneDrawn_kWh = 0;
v_methaneDelivered_kWh = 0;
v_dieselDrawn_kWh = 0;
v_dieselDelivered_kWh = 0;
v_hydrogenDrawn_kWh = 0;
v_hydrogenDelivered_kWh = 0;
v_heatDrawn_kWh = 0;
v_heatDelivered_kWh = 0;

// Reset accumulators
acc_annualElectricityBalance_kW.reset();
acc_annualMethaneBalance_kW.reset();
acc_annualHydrogenBalance_kW.reset();
acc_annualDieselBalance_kW.reset();
acc_annualHeatBalance_kW.reset();
acc_annualTotalImport_kW.reset();
acc_annualTotalExport_kW.reset();

acc_annualEnergyProduction_kW.reset();
acc_annualEnergyConsumption_kW.reset();
acc_annualEnergyCurtailed_kW.reset();
acc_annualElectricityProduction_kW.reset();
acc_annualElectricityConsumption_kW.reset();
acc_annualHeatProduction_kW.reset();

acc_summerElectricityBalance_kW.reset();
acc_summerMethaneBalance_kW.reset();
acc_summerHydrogenBalance_kW.reset();
acc_summerDieselBalance_kW.reset();
acc_summerHeatBalance_kW.reset();
acc_summerTotalImport_kW.reset();
acc_summerTotalExport_kW.reset();

acc_summerEnergyProduction_kW.reset();
acc_summerEnergyConsumption_kW.reset();
acc_summerEnergyCurtailed_kW.reset();
acc_summerElectricityProduction_kW.reset();
acc_summerElectricityConsumption_kW.reset();
acc_summerHeatProduction_kW.reset();

acc_summerDeliveryCapacity_kW.reset();
acc_summerFeedinCapacity_kW.reset();

acc_winterElectricityBalance_kW.reset();
acc_winterMethaneBalance_kW.reset();
acc_winterHydrogenBalance_kW.reset();
acc_winterDieselBalance_kW.reset();
acc_winterHeatBalance_kW.reset();
acc_winterTotalImport_kW.reset();
acc_winterTotalExport_kW.reset();

acc_winterEnergyProduction_kW.reset();
acc_winterEnergyConsumption_kW.reset();
acc_winterEnergyCurtailed_kW.reset();
acc_winterElectricityProduction_kW.reset();
acc_winterElectricityConsumption_kW.reset();
acc_winterHeatProduction_kW.reset();

acc_winterDeliveryCapacity_kW.reset();
acc_winterFeedinCapacity_kW.reset();

/*// Not sure these are still used...
v_electricityConsumedFixedProfile_kWh = 0;
v_electricityProducedPV_kWh = 0;
v_electricityProducedWind_kWh = 0;
v_electricityConvertedToX_kWh = 0;
v_xConvertedToElectricity_kWh = 0;
v_electricityChargedByEVs_kWh = 0;
v_electricityDischargedByEVs_kWh = 0;
v_electricityChargedByBattery_kWh = 0;
v_electricityDischargedByBattery_kWh = 0;
*/

/*// Reset datasets (is this really needed?)
data_annualElectricityBalance_kW.reset();
data_annualMethaneBalance_kW.reset();
data_annualHydrogenBalance_kW.reset();
data_annualDieselBalance_kW.reset();
data_annualHeatBalance_kW.reset();
data_annualEnergyProduction_kW.reset();
data_annualEnergyConsumption_kW.reset();
data_annualEnergyCurtailed_kW.reset();
data_annualElectricityProduction_kW.reset();
data_annualElectricityConsumption_kW.reset();
data_annualHeatProduction_kW.reset();*/

//Reset specific variables/collections in specific GC types (GCProduction, GConversion, etc.)
f_resetSpecificGCStates();
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669022552777</Id>
					<Name><![CDATA[f_batteryManagementBalance]]></Name>
					<X>920</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[batterySOC]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//traceln("Battery storage capacity: " + ((J_EAStorageElectric)p_batteryAsset.j_ea).getStorageCapacity_kWh());
if (p_batteryAsset.getStorageCapacity_kWh() != 0){
	double electricitySurplus_kW = - v_currentPowerElectricity_kW; // still excludes battery power
	//traceln("electricitySuprlus_kW: " + electricitySurplus_kW);
	//v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( electricitySurplus_kW - v_electricityPriceLowPassed_eurpkWh );
	double v_allowedDeliveryCapacity_kW = p_contractedDeliveryCapacity_kW*0.9;
	double v_allowedFeedinCapacity_kW = p_contractedFeedinCapacity_kW*0.9;
	//double connectionCapacity_kW = v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay
	double availableChargePower_kW = v_allowedDeliveryCapacity_kW + electricitySurplus_kW; // Max battery charging power within grid capacity
	double availableDischargePower_kW = electricitySurplus_kW - v_allowedFeedinCapacity_kW; // Max discharging power within grid capacity

	double SOC_setp_fr = 0.5;
	//traceln("Current price is " + currentElectricityPriceCharge_eurpkWh + " eurpkWh, between " + currentPricePowerBandNeg_kW + " kW and " + currentPricePowerBandPos_kW + " kW");
	if (!c_vehicleAssets.isEmpty()) {
		SOC_setp_fr = 0.6 + 0.25 * Math.sin(2*Math.PI*(energyModel.t_h-12)/24); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. 
	} else if (energyModel.v_totalInstalledWindPower_kW > 0 ) { // Look at weather forecast to charge/discharge battery
			SOC_setp_fr = 0.9 - 0.8 * energyModel.v_WindYieldForecast_fr;
			//traceln("Forecast-based SOC setpoint: " + SOC_setp_fr + " %");
	}
	//traceln("SOC setpoint at " + getHourOfDay() + " h is " + SOC_setp_fr*100 + "%");
	double FeedbackGain_kWpSOC = 1.5 * p_batteryAsset.getElectricCapacity_kW(); // How strongly to aim for SOC setpoint
	double FeedforwardGain_kWpKw = 0.8; // Feedforward based on current surpluss in Coop
	double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.
	double chargeSetpoint_kW = 0;
	chargeSetpoint_kW = FeedforwardGain_kWpKw * (electricitySurplus_kW + chargeOffset_kW) + (SOC_setp_fr - batterySOC) * FeedbackGain_kWpSOC;
	chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
	//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669022552780</Id>
					<Name><![CDATA[f_batteryManagementPrice]]></Name>
					<X>920</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentBatteryStateOfCharge]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (p_batteryAsset.getStorageCapacity_kWh() != 0){
	//double willingnessToPayDefault_eurpkWh = 0.3;
	double chargeDischarge_offset_eurpkWh = 0.0;
	double WTPfeedbackGain_eurpSOC = 0.5; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh
	double priceGain_kWhpeur = 2; // How strongly to ramp up power with price-delta's
	//double congestionTariffCoop_eurpkWh = -(((ConnectionOwner)p_ownerActor).p_CoopParent.v_electricitySurplus_kW + v_previousPowerElectricity_kW)/1200*0.1;
	
	double chargeSetpoint_kW = 0;
	
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();
		//traceln("Initial Mappings are: " + ((ConnectionOwner)p_ownerActor).v_currentPriceBands);
		double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(v_currentPowerElectricity_kW+100.0); // query price at 100kW charging
		double currentElectricityPriceDischarge_eurpkWh = ownerActor.f_getElectricityPrice(v_currentPowerElectricity_kW-100.0); // query price at -100kW charging
		//double lowPassFraction = min(1,1*1.2*energyModel.p_timeStep_h); // smaller value results in more filtering
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
		
		//double currentPricePowerBandPos_kW = ownerActor.v_priceBandsDelivery.ceilingKey(100.0); // Up to what power does this price hold?
		//double currentPricePowerBandNeg_kW = ownerActor.v_priceBandsDelivery.floorKey(100.0); // Down to what power does this price hold?
		
		double SOC_setp_fr = 0.5;
		//traceln("Current price is " + currentElectricityPriceCharge_eurpkWh + " eurpkWh, between " + currentPricePowerBandNeg_kW + " kW and " + currentPricePowerBandPos_kW + " kW");
		if (!c_vehicleAssets.isEmpty()) {
			SOC_setp_fr = 0.5 + 0.25 * Math.sin(2*Math.PI*(energyModel.t_h-12)/24); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. 
		} else if (energyModel.v_totalInstalledWindPower_kW > 0 ) { 
			SOC_setp_fr = 0.9 - 0.8 * energyModel.v_WindYieldForecast_fr;
			//traceln("Forecast-based SOC setpoint: " + SOC_setp_fr + " %");
		}
		double SOC_deficit_fr = SOC_setp_fr - currentBatteryStateOfCharge; // How far away from desired SOC? SOC too LOW is a POSITIVE deficit
		
		// Define WTP price for charging and discharging!
		double WTP_charge_eurpkWh = v_electricityPriceLowPassed_eurpkWh - chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		double WTP_discharge_eurpkWh = v_electricityPriceLowPassed_eurpkWh + chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		
		//traceln("WTP charge is " + WTP_charge_eurpkWh + " eurpkWh, discharge is " + WTP_discharge_eurpkWh + " eurpkWh");
		// Choose charging power based on prices and desired SOC level
		if ( WTP_charge_eurpkWh > currentElectricityPriceCharge_eurpkWh ) { // if willingness to pay higher than current electricity price
			//chargeSetpoint_kW = min(p_batteryAsset.getElectricCapacity_kW()*(WTP_charge_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain, currentPricePowerBandPos_kW)  ;
			chargeSetpoint_kW = p_batteryAsset.getElectricCapacity_kW()*(WTP_charge_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_kWhpeur;
			//traceln("WTP charge " + WTP_charge_eurpkWh + " eurpkWh is high than electricity price " + currentElectricityPriceCharge_eurpkWh + " eurpkWh, so charge!") ;
		} else if (WTP_discharge_eurpkWh < currentElectricityPriceDischarge_eurpkWh) {
			//chargeSetpoint_kW = -min(p_batteryAsset.getElectricCapacity_kW()*(currentElectricityPriceDischarge_eurpkWh - WTP_discharge_eurpkWh)*priceGain, currentPricePowerBandPos_kW);
			chargeSetpoint_kW = -p_batteryAsset.getElectricCapacity_kW()*(currentElectricityPriceDischarge_eurpkWh - WTP_discharge_eurpkWh)*priceGain_kWhpeur;
			//traceln("WTP discharge " + WTP_discharge_eurpkWh + " eurpkWh is lower than electricity price " + currentElectricityPriceCharge_eurpkWh + " eurpkWh, so discharge!") ;
		}	
		
		// limit charging power to available connection capacity
		boolean b_stayWithinConnectionLimits = true;
		if( b_stayWithinConnectionLimits ) {		
			double electricitySurplus_kW = - v_currentPowerElectricity_kW; 
			
			double availableChargePower_kW = electricitySurplus_kW + p_contractedDeliveryCapacity_kW; // Max battery charging power within grid capacity
			double availableDischargePower_kW = electricitySurplus_kW - p_contractedFeedinCapacity_kW; // Max discharging power within grid capacity
			chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
		}			
	
		p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
	}
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669025846794</Id>
					<Name><![CDATA[f_manageHeatingAssets]]></Name>
					<X>920</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// TODO: This only works for fixed heat demands; also need to implement heating of a building modeled as a ThermalStorageAsset! [GH 21/11/2022]
double powerDemand_kW = v_currentPowerHeat_kW;

if ( p_BuildingThermalAsset == null ) {
	if ( p_secondaryHeatingAsset == null ) { // Just one heating asset
		if ( p_primaryHeatingAsset== null ) {
			if (powerDemand_kW > 0) {
				traceln("No heating assets for GridConnection " + p_gridConnectionID);
			}
		} else {
			if ( p_primaryHeatingAsset instanceof J_EAConversionGasBurner || p_primaryHeatingAsset instanceof J_EAConversionHeatDeliverySet || p_primaryHeatingAsset instanceof J_EAConversionHydrogenBurner || p_primaryHeatingAsset instanceof J_EAConversionHeatPump) { // when there is only a gas burner or DH set
					p_primaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW());
					//traceln("Running manageHeatingAsset for single heating asset");
			} else {
				traceln("GridConnection " + p_gridConnectionID + " has a single unsupported heating asset!");
			}
		}
	} else { // Two heating assets
		if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump && p_secondaryHeatingAsset instanceof J_EAConversionGasBurner) { // Heatpump and gasburner, switch based on heatpump COP)
			//((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! <-- waarom dit gebeurt al in de main (peter 21-02-23)
			double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset).getCOP();
			double COP_tres = 3.5; // TODO: Make data agnostic! Also, this line doesn't have to be evaluated every timestep.
			if ( HP_COP < COP_tres ) { // switch to gasburner when HP COP is below treshold
				//traceln("Hybrid HP: Switching to gas burner");
				p_primaryHeatingAsset.v_powerFraction_fr = 0;
				p_secondaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_secondaryHeatingAsset.getHeatCapacity_kW());
			} else { // heatpump when COP is above treshold
				//traceln("Hybrid HP: Using heatpump with COP " + HP_COP);
				p_primaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW());
				p_secondaryHeatingAsset.v_powerFraction_fr = 0;//min(1,currentDHWdemand_kW / p_secondaryHeatingAsset.j_ea.getHeatCapacity_kW());
			}
		} else {
			traceln("**** EXCEPTION ****: Unsupported combination of heatings systems in house " + p_gridConnectionID);
			p_primaryHeatingAsset.v_powerFraction_fr = 0;
			p_secondaryHeatingAsset.v_powerFraction_fr = 0;
			//p_BuildingThermalAsset.v_powerFraction_fr = 0;
		}
		p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);
		//v_conversionPowerElectric_kW += p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;//			traceln("heatpump electricity consumption: " + (p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW));
		/*if (p_secondaryHeatingAsset instanceof J_EAConversionHeatPump) {
			v_heatPumpElectricityConsumption_kW += p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;
		}*/
	}
	if (p_primaryHeatingAsset != null) {
		double[] flowsArray = p_primaryHeatingAsset.f_updateAllFlows(p_primaryHeatingAsset.v_powerFraction_fr);
		//v_conversionPowerElectric_kW += flowsArray[4] - flowsArray[0]; //p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;
		/*if (p_primaryHeatingAsset instanceof J_EAConversionHeatPump) {
			v_heatPumpElectricityConsumption_kW += flowsArray[4] - flowsArray[0];
		}*/
	}
} else { // TODO: Implement thermostat functionality for thermal storage asset. Where to get temp setpoint?
	traceln("No thermostat functionality available to manage p_BuildingThermalAsset!!");
	double[] flowsArray = p_primaryHeatingAsset.f_updateAllFlows(0);
	/*	v_conversionPowerElectric_kW += flowsArray[4] - flowsArray[0]; //p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;
	if (p_primaryHeatingAsset instanceof J_EAConversionHeatPump) {
		v_heatPumpElectricityConsumption_kW += flowsArray[4] - flowsArray[0]; 
	}*/
	flowsArray = p_secondaryHeatingAsset.f_updateAllFlows(0);	
	/*v_conversionPowerElectric_kW += flowsArray[4] - flowsArray[0]; //p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;
	if (p_secondaryHeatingAsset instanceof J_EAConversionHeatPump) {
		v_heatPumpElectricityConsumption_kW += flowsArray[4] - flowsArray[0];
	}*/
	p_BuildingThermalAsset.f_updateAllFlows(0);
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669193537955</Id>
					<Name><![CDATA[f_setAllowedCapacity]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>750</X><Y>-60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_allowedCapacity_kW = p_connectionCapacity_kW;
//if(p_nfatoLvl_kW == 0 && p_nfatoStart_h == 0 && p_nfatoEnd_h == 0){
if(!v_enable_nfATO_b){
	e_startNonFirmATO.reset();
	e_endNonFirmATO.reset();			
}
else {
	e_startNonFirmATO.restartTo(p_nfatoStart_h, HOUR);
	e_endNonFirmATO.restartTo(p_nfatoEnd_h, HOUR);
	if(p_nfatoLvl_kW == 0.0) { p_nfatoLvl_kW = p_connectionCapacity_kW; }
}
//}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1671095995172</Id>
					<Name><![CDATA[f_manageCharging]]></Name>
					<X>920</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double availableCapacityFromBatteries = p_batteryAsset == null ? 0 : p_batteryAsset.getCapacityAvailable_kW(); 
//double availableChargingCapacity = v_allowedCapacity_kW + availableCapacityFromBatteries - v_currentPowerElectricity_kW;
double availableChargingCapacity = p_contractedDeliveryCapacity_kW + availableCapacityFromBatteries - v_currentPowerElectricity_kW;
switch (p_chargingAttitudeVehicles) {
	case SIMPLE:
		f_simpleCharging();
	break;
	case MAX_SPREAD:
		f_maxSpreadCharging();
	break;
	case MAX_POWER:
		f_maxPowerCharging( max(0, availableChargingCapacity));
	break;
	case CHEAP:
		v_currentElectricityPriceConsumption_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getElectricityPrice(p_contractedDeliveryCapacity_kW); 
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_currentElectricityPriceConsumption_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
		f_chargeOnPrice( v_currentElectricityPriceConsumption_eurpkWh, max(0, availableChargingCapacity));
	break;
	case V2G:
		v_currentElectricityPriceConsumption_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getElectricityPrice(p_contractedDeliveryCapacity_kW); 
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_currentElectricityPriceConsumption_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
		f_chargeOnPrice_V2G( v_currentElectricityPriceConsumption_eurpkWh, max(0, availableChargingCapacity));
	break;
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1671095995175</Id>
					<Name><![CDATA[f_simpleCharging]]></Name>
					<Description><![CDATA[Charging when arriving home, not taking grid limits into account]]></Description>
					<X>940</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Removing items while going through a loop, so we do so in reverse order

ArrayList<J_EAEV> copiedVehicleList = new ArrayList<J_EAEV>(c_vehiclesAvailableForCharging);
int countDeletedItems = 0;

for ( int i = 0; i < copiedVehicleList.size(); i++ ) {
	J_EAEV ev = copiedVehicleList.get(i);
	if (ev.vehicleScaling != 0) {
		if( !ev.getAvailability() || ev.getCurrentStateOfCharge() == 1 ) {
			ev.f_updateAllFlows( 0.0 );
			c_vehiclesAvailableForCharging.remove( i - countDeletedItems );
			countDeletedItems ++;
		}
		else {
			ev.f_updateAllFlows( 1.0 );
		}
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1671095995177</Id>
					<Name><![CDATA[f_maxSpreadCharging]]></Name>
					<X>940</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[ArrayList<J_EAEV> copiedVehicleList = new ArrayList<J_EAEV>(c_vehiclesAvailableForCharging);
int countDeletedItems = 0;

for ( int i = 0; i < copiedVehicleList.size(); i++ ){
	J_EAEV ev = copiedVehicleList.get(i);
	if (ev.vehicleScaling != 0) {
		if(!ev.getAvailability() || ev.getCurrentStateOfCharge() == 1) {
			ev.f_updateAllFlows( 0.0 );
			c_vehiclesAvailableForCharging.remove( i - countDeletedItems );
			countDeletedItems ++;
		}
		else {
			double chargeNeedForNextTrip_kWh = max(0, ev.getEnergyNeedForNextTrip_kWh() - ev.getStorageCapacity_kWh()*ev.getCurrentStateOfCharge());
			double maxChargingPower_kW = ev.getElectricCapacity_kW();
			double chargeDeadline_h = floor((ev.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * energyModel.p_timeStep_h;
			
			double emptyKWhInBattery = ev.getStorageCapacity_kWh() * (1 - ev.getCurrentStateOfCharge());
			double timeToNextTrip_h = ev.tripTracker.v_nextEventStartTime_min / 60 - energyModel.t_h;			
			// At the end of the simulation the triptracker returns back to the start of the year, so we make sure the timeToNextTrip is not negative
			timeToNextTrip_h = (timeToNextTrip_h % 8760 + 8760) % 8760;
			
			double chargingPower_kW;		
			if ( energyModel.t_h >= chargeDeadline_h && chargeNeedForNextTrip_kWh > 0) { // Must-charge time at max charging power
				//traceln("Urgency charging! May exceed connection capacity!");
				chargingPower_kW = maxChargingPower_kW / 2 ;	// delen door 2 als quickfix doordat HAVI trucks anders mega pieken veroorzaken in de middag waardoor 'slim' laden beetje nutteloos lijkt
			}
			else {
				chargingPower_kW = emptyKWhInBattery / timeToNextTrip_h;
			}
			
			chargingPower_kW = min(chargingPower_kW, maxChargingPower_kW); // cap the charging speed at the electric capacity
			double ratio_fr = chargingPower_kW / maxChargingPower_kW;
			ev.f_updateAllFlows( ratio_fr );
		}
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1671095995179</Id>
					<Name><![CDATA[f_maxPowerCharging]]></Name>
					<Description><![CDATA[Charge at max power taking grid constaints into account]]></Description>
					<X>940</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[availableCapacityForCharging_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double remainingChargingPower_kW = availableCapacityForCharging_kW;

ArrayList<J_EAEV> copiedVehicleList = new ArrayList<J_EAEV>(c_vehiclesAvailableForCharging);
int countDeletedItems = 0;

// Sort vehicles by time until charge deadline
copiedVehicleList.sort((ev1, ev2) -> Double.compare(f_getChargeDeadline(ev1), f_getChargeDeadline(ev2)));
c_vehiclesAvailableForCharging = copiedVehicleList;

for ( int i = 0; i < copiedVehicleList.size(); i++ ){
	J_EAEV ev = copiedVehicleList.get(i);
	if (ev.vehicleScaling != 0) {
		if( !ev.getAvailability() || ev.getCurrentStateOfCharge() == 1 ) {
			ev.f_updateAllFlows( 0.0 );
			c_vehiclesAvailableForCharging.remove( i - countDeletedItems );
			countDeletedItems ++;
		}
		else {
			//traceln("current time: " + energyModel.t_h);
			//traceln("ev: " + ev);
			//traceln("dist: " + ev.getTripTracker().v_tripDist_km);
			double chargeNeedForNextTrip_kWh = max(0, ev.getEnergyNeedForNextTrip_kWh() - ev.getStorageCapacity_kWh()*ev.getCurrentStateOfCharge());
			//traceln("chargeNeedForNextTrip_kWh: " + chargeNeedForNextTrip_kWh);
			double maxChargingPower_kW = ev.getElectricCapacity_kW();
			double chargeDeadline_h = floor((ev.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * energyModel.p_timeStep_h;
			
			//double starttime = ev.tripTracker.v_nextEventStartTime_min / 60;
			//traceln("starttime: " + starttime);
			//traceln("chargeDeadline_h: " + chargeDeadline_h);
			
			double chargingPower_kW;
			if ( energyModel.t_h >= chargeDeadline_h && chargeNeedForNextTrip_kWh > 0) { // Must-charge time at max charging power
				//traceln("Urgency charging! May exceed connection capacity!");
				chargingPower_kW = maxChargingPower_kW;	
			}
			else {
				chargingPower_kW = remainingChargingPower_kW;
			}
			
			chargingPower_kW = min(chargingPower_kW, maxChargingPower_kW);
			remainingChargingPower_kW = max(0, remainingChargingPower_kW - chargingPower_kW);
			double ratio_fr = chargingPower_kW / maxChargingPower_kW;
			double[] flowsArray = ev.f_updateAllFlows( ratio_fr );
			//gridConnection.v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];
			
			//double x = flowsArray[4] - flowsArray[0];
			//traceln("flow: " + x);
			//traceln("ev: " + ev);
			
		}
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1671095995181</Id>
					<Name><![CDATA[f_chargeOnPrice]]></Name>
					<X>940</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentElectricityPriceConsumption_eurpkWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[availableChargingPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[ArrayList<J_EAEV> copiedVehicleList = new ArrayList<J_EAEV>(c_vehiclesAvailableForCharging);
int countDeletedItems = 0;

double remainingChargePower_kW = availableChargingPower_kW;

for ( int i = 0; i < copiedVehicleList.size(); i++ ){
	J_EAEV vehicle = copiedVehicleList.get(i);
	
	if (vehicle.getVehicleScaling() == 0) {
		continue;
	}
	
	if(!vehicle.getAvailability() ){
		vehicle.f_updateAllFlows( 0 );
		c_vehiclesAvailableForCharging.remove( i - countDeletedItems );
		countDeletedItems ++;
	} else {
		//double availableChargingPower_kW = v_allowedCapacity_kW - v_currentPowerElectricity_kW - v_chargingPower_kW;
		double chargeNeedForNextTrip_kWh = max(0, vehicle.energyNeedForNextTrip_kWh - vehicle.getStorageCapacity_kWh()*vehicle.getCurrentStateOfCharge());
		//double timeToNexTrip_min = vehicle.getMobilityTracker().v_nextTripStartTime_min - energyModel.t_h*60;
		double maxChargingPower_kW = vehicle.getElectricCapacity_kW();
		double timeToNextTrip_min = vehicle.tripTracker.v_nextEventStartTime_min - energyModel.t_h*60;
		double chargeDeadline_min = floor((vehicle.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * 60 * energyModel.p_timeStep_h;

		double priceGain_kWhpeur = 1; // When WTP is higher than current electricity price, ramp up charging power with this gain based on the price-delta.
		double urgencyGain_eurpkWh = 0.4; // How strongly WTP-price shifts based on charging flexibility
		double maxSpreadChargingPower_kW = min(chargeNeedForNextTrip_kWh / (max(1, timeToNextTrip_min - v_additionalTimeSpreadCharging_MIN) / 60), maxChargingPower_kW);
		//traceln("maxSpreadChargingPower_kW" + maxSpreadChargingPower_kW);
		double WTPoffset_eurpkWh = 0.05*(1-energyModel.v_WindYieldForecast_fr);//0.15; // Adds an offset to the WTP price; this value is very much context specific, depending on market conditions during charging periods
		
		double chargeSetpoint_kW = 0;

		if ( energyModel.t_h*60 >= chargeDeadline_min & chargeNeedForNextTrip_kWh > 0) { // Must-charge time at max charging power
			//traceln("Urgency charging! May exceed connection capacity!");
			chargeSetpoint_kW = maxChargingPower_kW;				
		} else if ( vehicle.getCurrentStateOfCharge() < 0.15 ) {
			chargeSetpoint_kW = min(remainingChargePower_kW, maxChargingPower_kW);
		} else {
			//double WTPprice_eurpkWh = v_electricityPriceLowPassed_eurpkWh - flexibilityGain_eurph * (chargeDeadline_min - energyModel.t_h*60 - 600);
			v_WTPCharging_eurpkWh = WTPoffset_eurpkWh + v_electricityPriceLowPassed_eurpkWh + urgencyGain_eurpkWh * ( maxSpreadChargingPower_kW / maxChargingPower_kW ); // Scale WTP based on flexibility expressed in terms of power-fraction
			//WTPprice_eurpkWh = WTPoffset_eurpkWh + (main.v_epexNext24hours_eurpkWh+v_electricityPriceLowPassed_eurpkWh)/2 + flexibilityGain_eurpkWh * sqrt(maxSpreadChargingPower_kW/maxChargingPower_kW); // Scale WTP based on flexibility expressed in terms of power-fraction
			chargeSetpoint_kW = max(0, maxChargingPower_kW * (v_WTPCharging_eurpkWh / currentElectricityPriceConsumption_eurpkWh - 1) * priceGain_kWhpeur);
			chargeSetpoint_kW = min(remainingChargePower_kW, chargeSetpoint_kW);
			//traceln("Trying to charge cheaply, time " + energyModel.t_h*60 + " minutes, charge setpoint: " + chargeSetpoint_kW + " kW");
			/*if (this.getIndex() == 0){
				traceln("wtp = " + v_WTPCharging_eurpkWh);
				traceln("remainingChargePower_kW: " + remainingChargePower_kW + "charge setpoint kW: " + chargeSetpoint_kW);
			}*/
		}
		//}
		//traceln("Hello! Charge setpoint: " + chargeSetpoint_kW);
		double[] flowsArray = vehicle.f_updateAllFlows( chargeSetpoint_kW / maxChargingPower_kW );
		v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];
		//v_evChargingPowerElectric_kW += vehicle.electricityConsumption_kW - vehicle.electricityProduction_kW;
		remainingChargePower_kW = availableChargingPower_kW - v_evChargingPowerElectric_kW;
		
	}
	if( this instanceof GCHouse){
	((GCHouse)this).v_vehicleSOC_fr = vehicle.getCurrentStateOfCharge();
}
}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1677512714652</Id>
					<Name><![CDATA[f_setOperatingSwitches]]></Name>
					<X>910</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if( this instanceof GCDistrictHeating ) { // Temporarily disabled while transfering to class-based energy assets!
	((GCDistrictHeating)this).f_setConfigurationBooleans();
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1692799608559</Id>
					<Name><![CDATA[f_connectToJ_EA_default]]></Name>
					<X>1070</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[j_ea]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[energyModel.c_energyAssets.add(j_ea);
c_energyAssets.add(j_ea);

if (j_ea instanceof J_EAVehicle) {
	J_EAVehicle vehicle = (J_EAVehicle)j_ea;
	if (vehicle instanceof J_EADieselVehicle) {
		c_dieselVehicles.add( (J_EADieselVehicle)vehicle );		
	} else if (vehicle instanceof J_EAHydrogenVehicle) {
		c_hydrogenVehicles.add((J_EAHydrogenVehicle)vehicle);		
	} else if (vehicle instanceof J_EAEV) {
		c_vehiclesAvailableForCharging.add((J_EAEV)vehicle);
		energyModel.c_EVs.add((J_EAEV)vehicle);	
		c_EvAssets.add(j_ea);
	}
	c_vehicleAssets.add(vehicle);		
	J_ActivityTrackerTrips tripTracker = vehicle.getTripTracker();
	if (tripTracker == null) { // Only provide tripTracker when vehicle doesn't have it yet!
		if (vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK) {
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, rowIndex, energyModel.t_h*60, vehicle);
		} else if (vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_VAN || vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN) {// No mobility pattern for business vans available yet!! Falling back to truck mobility pattern
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, rowIndex, energyModel.t_h*60, vehicle);
		} else {
			//traceln("Adding passenger vehicle to gridconnection %s", this);
			int rowIndex = uniform_discr(0, 200);//getIndex() % 200;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsExcel, rowIndex, energyModel.t_h*60, vehicle);
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsExcel, 18, energyModel.t_h*60, vehicle);
			//int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, 2, energyModel.t_h*60, vehicle);
		}
		
		vehicle.tripTracker = tripTracker;	
	}
	c_tripTrackers.add( tripTracker );
	v_vehicleIndex ++;
} else if (j_ea instanceof J_EAConsumption) {
	c_consumptionAssets.add((J_EAConsumption)j_ea);	
	if (j_ea.energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION) {
		p_DHWAsset = (J_EAConsumption)j_ea;	
	}
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ) {
		c_fixedConsumptionElectricAssets.add(j_ea);
	}
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB ) {
		c_electricHobAssets.add(j_ea);
	}
} else if (j_ea instanceof J_EAProduction) {
	c_productionAssets.add((J_EAProduction)j_ea);
	//energyModel.c_productionAssets.add((J_EAProduction)j_ea);
	
	if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {
		v_hasPV = true;
		v_totalInstalledPVPower_kW += j_ea.getElectricCapacity_kW();
		if (l_parentNodeElectric.getConnectedAgent() != null) {
			l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, j_ea.getElectricCapacity_kW(), true);
		}
		energyModel.v_totalInstalledPVPower_kW += j_ea.getElectricCapacity_kW();
		c_pvAssets.add(j_ea);
	}
	else if (j_ea.energyAssetType == OL_EnergyAssetType.WINDMILL) {
		v_totalInstalledWindPower_kW += j_ea.getElectricCapacity_kW();
		if (l_parentNodeElectric.getConnectedAgent() != null) {
			l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, j_ea.getElectricCapacity_kW(), true);
		}
		energyModel.v_totalInstalledWindPower_kW += j_ea.getElectricCapacity_kW();
		c_windAssets.add(j_ea);
	}
} else if (j_ea instanceof J_EAConversion) {
	c_conversionAssets.add((J_EAConversion)j_ea);
	if ( j_ea.energyAssetType == OL_EnergyAssetType.GAS_PIT || j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB){
		if (j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB) {
			c_electricHobAssets.add(j_ea);
			c_conversionElectricAssets.add(j_ea);
		}
		if (p_cookingTracker == null) {
			int rowIndex = uniform_discr(2, 300); 
			p_cookingTracker = new J_ActivityTrackerCooking(energyModel.p_cookingPatternExcel, rowIndex, energyModel.t_h*60, (J_EAConversion)j_ea );			
		} else {
			p_cookingTracker.HOB = (J_EAConversion)j_ea;
		}
	} else if (j_ea instanceof J_EAConversionGasBurner) {
		p_primaryHeatingAsset = (J_EAConversion)j_ea;
	} else if (j_ea instanceof J_EAConversionHeatPump) {
		energyModel.c_ambientAirDependentAssets.add(j_ea);
		c_electricHeatpumpAssets.add(j_ea);
		c_conversionElectricAssets.add(j_ea);
		//traceln("added heatpump to the GC as primary heating asset.");
		p_primaryHeatingAsset = (J_EAConversion)j_ea;
	} else if (j_ea instanceof J_EAConversionHydrogenBurner) {
		p_primaryHeatingAsset = (J_EAConversion)j_ea;
	} else if (j_ea instanceof J_EAConversionElectrolyser) {
		c_electrolyserAssets.add(j_ea);
	}
} else if  (j_ea instanceof J_EAStorage) {
	c_storageAssets.add((J_EAStorage)j_ea);
	energyModel.c_storageAssets.add((J_EAStorage)j_ea);
	if (j_ea.energyAssetType == OL_EnergyAssetType.BUILDINGTHERMALS) {
		//traceln("Adding buildingThermals to gridconnection");	
		p_BuildingThermalAsset = (J_EABuilding)j_ea;
			/*if ( p_energyLabel != null & p_gridConnectionType != null){ // Get building thermals from lookup table when isolation label and house type are available
				double lossFactor_WpK2 = energyModel.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_energyLabel.name()).path("lossFactor_WpK").doubleValue();
				double heatCapacity_JpK2 = energyModel.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_energyLabel.name()).path("heatCapacity_JpK").doubleValue();
				p_BuildingThermalAsset.lossFactor_WpK = lossFactor_WpK2;
				p_BuildingThermalAsset.heatCapacity_JpK = heatCapacity_JpK2;
				traceln("House thermal model updated!");
				traceln("House type: %s, energy label: %s", p_gridConnectionType, p_energyLabel);
				traceln("lossfactor %s, heatcapacity %s", lossFactor_WpK2, heatCapacity_JpK2);
			}*/ // Deprecated get lossfactor and heatcapacity from json-input. Replace with other datasource!
		p_BuildingThermalAsset.updateAmbientTemperature( energyModel.v_currentAmbientTemperature_degC );
		//v_tempSetpoint_degC = p_BuildingThermalAsset.setTemperature_degC;		
		energyModel.c_ambientAirDependentAssets.add(p_BuildingThermalAsset);
	} else if (j_ea instanceof J_EAStorageGas) {
		p_gasBuffer = (J_EAStorageGas)j_ea;
	} else if (j_ea instanceof J_EAStorageElectric) {
		p_batteryAsset = (J_EAStorageElectric)j_ea;
		c_batteryAssets.add(j_ea);
	} else if (j_ea instanceof J_EAStorageHeat) {
		energyModel.c_ambientAirDependentAssets.add(j_ea);
	}
} else if  (j_ea instanceof J_EAProfile) {
	//p_energyProfile = (J_EAProfile)j_ea;
	c_profileAssets.add((J_EAProfile)j_ea);
	if (((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.CHARGING){
			//v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];
			c_EvAssets.add(j_ea);
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.ELECTRICITYBASELOAD){
			//v_fixedConsumptionElectric_kW += flowsArray[4] - flowsArray[0];
			c_fixedConsumptionElectricAssets.add(j_ea);
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.WINDTURBINE){
			//v_windProductionElectric_kW += flowsArray[0];
			c_windAssets.add(j_ea);
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.HEATDEMAND){
			//Do nothing
		} else {
			traceln( "Unrecognized profile type!");
		}
} else {
	traceln("Unrecognized energy asset %s in gridconnection %s", j_ea, this);
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1693307881182</Id>
					<Name><![CDATA[f_connectToJ_EA]]></Name>
					<X>911</X><Y>92</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[j_ea]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[f_connectToJ_EA_default(j_ea);
// Abstract method to be used call GC-subtype specific functions]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1695822607494</Id>
					<Name><![CDATA[f_chargeOnPrice_V2G]]></Name>
					<X>940</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentElectricityPriceConsumption_eurpkWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[availableChargingPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[ArrayList<J_EAEV> copiedVehicleList = new ArrayList<J_EAEV>(c_vehiclesAvailableForCharging);
int countDeletedItems = 0;

double remainingChargePower_kW = availableChargingPower_kW;

for ( int i = 0; i < copiedVehicleList.size(); i++ ){
	J_EAEV vehicle = copiedVehicleList.get(i);
	
	if (vehicle.getVehicleScaling() == 0) {
		continue;
	}
	
	if(!vehicle.getAvailability() ){
		vehicle.f_updateAllFlows( 0 );
		c_vehiclesAvailableForCharging.remove( i - countDeletedItems );
		countDeletedItems ++;
	} else {
		//double availableChargingPower_kW = v_allowedCapacity_kW - v_currentPowerElectricity_kW - v_chargingPower_kW;
		double chargeNeedForNextTrip_kWh = vehicle.energyNeedForNextTrip_kWh - vehicle.getStorageCapacity_kWh()*vehicle.getCurrentStateOfCharge();
		//double timeToNexTrip_min = vehicle.getMobilityTracker().v_nextTripStartTime_min - energyModel.t_h*60;
		double maxChargingPower_kW = vehicle.getElectricCapacity_kW();
		double timeToNextTrip_min = vehicle.tripTracker.v_nextEventStartTime_min - energyModel.t_h*60;
		double chargeDeadline_min = floor((vehicle.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * 60 * energyModel.p_timeStep_h;

		double priceGain_kWhpeur = 1; // When WTP is higher than current electricity price, ramp up charging power with this gain based on the price-delta.
		double urgencyGain_eurpkWh = 0.4; // How strongly WTP-price shifts based on charging flexibility
		double maxSpreadChargingPower_kW = min(chargeNeedForNextTrip_kWh / (max(1, timeToNextTrip_min - v_additionalTimeSpreadCharging_MIN) / 60), maxChargingPower_kW);
		//traceln("maxSpreadChargingPower_kW" + maxSpreadChargingPower_kW);
		double WTPoffset_eurpkWh = 0;
		if (energyModel.v_totalInstalledWindPower_kW > 499) {
			WTPoffset_eurpkWh = 0.05*(1-energyModel.v_WindYieldForecast_fr);//0.15; // Adds an offset to the WTP price; this value is very much context specific, depending on market conditions during charging periods
		} else {
			WTPoffset_eurpkWh = 0.02;
		}
		double V2G_WTR_offset_eurpkWh = 0.05;
		double chargeSetpoint_kW = 0;

		if ( energyModel.t_h*60 >= chargeDeadline_min & chargeNeedForNextTrip_kWh > 0) { // Must-charge time at max charging power
			//traceln("Urgency charging! May exceed connection capacity!");
			chargeSetpoint_kW = maxChargingPower_kW;				
		} else if ( vehicle.getCurrentStateOfCharge() < 0.15 ) {
			chargeSetpoint_kW = min(remainingChargePower_kW, maxChargingPower_kW);
		} else {
			//double WTPprice_eurpkWh = v_electricityPriceLowPassed_eurpkWh - flexibilityGain_eurph * (chargeDeadline_min - energyModel.t_h*60 - 600);
			v_WTPCharging_eurpkWh = WTPoffset_eurpkWh + v_electricityPriceLowPassed_eurpkWh + urgencyGain_eurpkWh * ( max(0,maxSpreadChargingPower_kW) / maxChargingPower_kW ); // Scale WTP based on flexibility expressed in terms of power-fraction
			//WTPprice_eurpkWh = WTPoffset_eurpkWh + (main.v_epexNext24hours_eurpkWh+v_electricityPriceLowPassed_eurpkWh)/2 + flexibilityGain_eurpkWh * sqrt(maxSpreadChargingPower_kW/maxChargingPower_kW); // Scale WTP based on flexibility expressed in terms of power-fraction
			chargeSetpoint_kW = max(0, maxChargingPower_kW * (v_WTPCharging_eurpkWh / currentElectricityPriceConsumption_eurpkWh - 1) * priceGain_kWhpeur);
			chargeSetpoint_kW = min(remainingChargePower_kW, chargeSetpoint_kW);
			
			if ( chargeNeedForNextTrip_kWh < -maxChargingPower_kW*energyModel.p_timeStep_h && chargeSetpoint_kW == 0 ) { // Surpluss SOC and high energy price			
				v_WTRV2G_eurpkWh  = V2G_WTR_offset_eurpkWh + v_electricityPriceLowPassed_eurpkWh; // Scale WTP based on flexibility expressed in terms of power-fraction
				chargeSetpoint_kW = min(0, -maxChargingPower_kW * (currentElectricityPriceConsumption_eurpkWh / v_WTRV2G_eurpkWh - 1) * priceGain_kWhpeur);
				/*if (chargeSetpoint_kW < 0) {
					traceln(" V2G Active! Power: " + chargeSetpoint_kW );
				}*/
				
			}
			//traceln("Trying to charge cheaply, time " + energyModel.t_h*60 + " minutes, charge setpoint: " + chargeSetpoint_kW + " kW");
			/*if (this.getIndex() == 0){
				traceln("wtp = " + v_WTPCharging_eurpkWh);
				traceln("remainingChargePower_kW: " + remainingChargePower_kW + "charge setpoint kW: " + chargeSetpoint_kW);
			}*/
		}
		double[] flowsArray = vehicle.f_updateAllFlows( chargeSetpoint_kW / maxChargingPower_kW );
		v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];
		//v_evChargingPowerElectric_kW += vehicle.electricityConsumption_kW - vehicle.electricityProduction_kW;
		remainingChargePower_kW = availableChargingPower_kW - v_evChargingPowerElectric_kW;
		
	}
	if( this instanceof GCHouse){
		((GCHouse)this).v_vehicleSOC_fr = vehicle.getCurrentStateOfCharge();
	}
}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1698854861644</Id>
					<Name><![CDATA[f_initialize]]></Name>
					<X>900</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (p_physicalConnectionCapacity_kW < 0) {
	throw new RuntimeException("Exception: GridConnection " + p_gridConnectionID + " has negative physical connection capacity!");
} else if (p_contractedDeliveryCapacity_kW < 0) {
	throw new RuntimeException("Exception: GridConnection " + p_gridConnectionID + " has negative contracted delivery capacity!");
} else if (p_contractedFeedinCapacity_kW < 0) {
	throw new RuntimeException("Exception: GridConnection " + p_gridConnectionID + " has negative contracted feed in capacity!");
}

if(v_isActive){
	if (p_contractedDeliveryCapacity_kW == 0.0 && p_contractedFeedinCapacity_kW == 0.0 && p_physicalConnectionCapacity_kW == 0.0) { // If no contracted or physical capacity is given, throw error.
	throw new RuntimeException("Exception: GridConnection " + p_gridConnectionID + " has 0.0 physical and contracted capacity! Not a valid state of for this agent");
	} else {
		if (p_contractedDeliveryCapacity_kW == 0.0 && p_contractedFeedinCapacity_kW == 0.0) { // If no contracted capacity is given, use physical capacity
		p_contractedDeliveryCapacity_kW = p_physicalConnectionCapacity_kW;
		p_contractedFeedinCapacity_kW = p_physicalConnectionCapacity_kW;
	} else if ( p_physicalConnectionCapacity_kW == 0 ) { // if no physical capacity is given, use max of delivery and feedin contracted capacities
			p_physicalConnectionCapacity_kW = max(p_contractedDeliveryCapacity_kW, p_contractedFeedinCapacity_kW);
		}
	}
}

if ( c_connectedGISObjects.size()>0) { // can this go into initialisation function?
	//p_floorSurfaceArea_m2 = totalSurfaceAreaGC_m2;
	p_longitude = c_connectedGISObjects.get(0).p_longitude; // Get longitude of first building (only used to get nearest trafo)
	p_latitude = c_connectedGISObjects.get(0).p_latitude; // Get latitude of first building (only used to get nearest trafo)
	setLatLon(p_latitude, p_longitude);  
			
	//If GC has no assigned trafo_id --> Assign to nearest trafo
	if (p_parentNodeElectricID == null){
		//Set nearest agent as trafo
		GridNode nearestLVStation = getNearestAgent(energyModel.c_gridNodesNotTopLevel);
		//nearestLVStation.c_electricityGridConnections.add(companyGC); // this should be taken care of in GC.f_initialize()!
		if (nearestLVStation!=null) {
			p_parentNodeElectricID = nearestLVStation.p_gridNodeID;
		}
	}		
}

if (p_parentNodeElectricID == null) {
	p_parentNodeElectricID = findFirst(energyModel.pop_gridNodes, GN->GN.p_energyType.equals(OL_EnergyCarrierType.ELECTRICITY)).p_gridNodeID;
	traceln("GridConnection %s wasn't assigned a GridNodeElectric! Using first gridNode Electric in pop_gridNodes", this);
}

f_connectToParents();
if (!l_parentNodeElectric.isConnected()) {
	traceln("GC: %s with id %s and name %s", this, p_gridConnectionID, p_name);
	traceln("GN id %s", p_parentNodeElectricID);
	throw new RuntimeException("Exception: GridConnection not connected to GridNodeElectric!");
}
else {
	// Calculate the Wind and PV Installed under the parent gridnode
	double PV_kW = 0;
	double Wind_kW = 0;
	for (J_EAProduction j_ea : c_productionAssets) {
		if (j_ea.getEAType() == OL_EnergyAssetType.PHOTOVOLTAIC) {
			PV_kW += j_ea.getElectricCapacity_kW();
		}
		else if (j_ea.getEAType() == OL_EnergyAssetType.WINDMILL) {
			Wind_kW += j_ea.getElectricCapacity_kW();
		}
	}
	l_parentNodeElectric.getConnectedAgent().v_totalInstalledPVPower_kW += PV_kW;
	l_parentNodeElectric.getConnectedAgent().v_totalInstalledWindPower_kW += Wind_kW;
}

f_setOperatingSwitches();
f_initializeAccumulators();
//v_allowedCapacity_kW = p_connectionCapacity_kW;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1701956274181</Id>
					<Name><![CDATA[f_calculateKPIs]]></Name>
					<X>890</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//f_duurkrommes();
//double nettElectricityImport_kW = Arrays.stream( a_annualElectricityBalance_kW ).sum() * energyModel.p_timeStep_h;

// Get import/export from balance arrays. This is apparently quite costly to calculate with the .filter operator! Minimize use!
v_electricityDrawnFromGrid_kWh = acc_annualElectricityBalance_kW.getSumPos() * energyModel.p_timeStep_h;
v_electricityDeliveredToGrid_kWh = -(acc_annualElectricityBalance_kW.getSum() * energyModel.p_timeStep_h - v_electricityDrawnFromGrid_kWh);
//v_electricityDeliveredToGrid_kWh = -Arrays.stream(a_annualElectricityBalance_kW).filter(m -> m < 0).sum() * energyModel.p_timeStep_h;

v_methaneDrawn_kWh = acc_annualMethaneBalance_kW.getSumPos() * energyModel.p_timeStep_h; //Arrays.stream(a_annualMethaneBalance_kW).sum() * energyModel.p_timeStep_h;
v_methaneDelivered_kWh = -acc_annualMethaneBalance_kW.getSumNeg() * energyModel.p_timeStep_h; 

v_hydrogenDrawn_kWh = acc_annualHydrogenBalance_kW.getSumPos() * energyModel.p_timeStep_h; //Arrays.stream(a_annualHydrogenBalance_kW).filter(m -> m > 0).sum() * energyModel.p_timeStep_h;
v_hydrogenDelivered_kWh = -acc_annualHydrogenBalance_kW.getSumNeg() * energyModel.p_timeStep_h; //-(Arrays.stream(a_annualHydrogenBalance_kW).sum() * energyModel.p_timeStep_h - v_hydrogenDrawn_kWh);

v_dieselDrawn_kWh = acc_annualDieselBalance_kW.getSum() * energyModel.p_timeStep_h;// Arrays.stream(a_annualDieselBalance_kW).sum() * energyModel.p_timeStep_h;
v_dieselDelivered_kWh = 0;

v_heatDrawn_kWh = acc_annualHeatBalance_kW.getSumPos() * energyModel.p_timeStep_h;// Arrays.stream(a_annualHeatBalance_kW).sum() * energyModel.p_timeStep_h;
v_heatDelivered_kWh = -acc_annualHeatBalance_kW.getSumNeg() * energyModel.p_timeStep_h;

v_totalImport_MWh = (v_electricityDrawnFromGrid_kWh + v_methaneDrawn_kWh + v_hydrogenDrawn_kWh + v_dieselDrawn_kWh + v_heatDrawn_kWh)/1000;
v_totalExport_MWh = (v_electricityDeliveredToGrid_kWh + v_methaneDelivered_kWh+ v_hydrogenDelivered_kWh + v_dieselDelivered_kWh + v_heatDelivered_kWh)/1000;


// Yeartotals from arrays
v_totalEnergyProduced_MWh = acc_annualEnergyProduction_kW.getSum() * energyModel.p_timeStep_h / 1000;
v_totalEnergyConsumed_MWh = acc_annualEnergyConsumption_kW.getSum() * energyModel.p_timeStep_h / 1000;

v_totalSelfConsumedEnergy_MWh = max(0, v_totalEnergyConsumed_MWh - v_totalImport_MWh); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	

v_totalElectricityConsumed_MWh = acc_annualElectricityConsumption_kW.getSum() * energyModel.p_timeStep_h / 1000;
v_totalElectricityProduced_MWh= acc_annualElectricityProduction_kW.getSum() * energyModel.p_timeStep_h / 1000;
v_totalHeatProduced_MWh = acc_annualHeatProduction_kW.getSum() * energyModel.p_timeStep_h / 1000;

//Yeartotal overload duration
for(double electricityBalance_kW : acc_annualElectricityBalance_kW.getTimeSeries()){
	
	if(electricityBalance_kW > p_contractedDeliveryCapacity_kW){
		v_totalOverloadDurationDelivery_hr += energyModel.p_timeStep_h;
	}
	else if(electricityBalance_kW < - p_contractedFeedinCapacity_kW){
		v_totalOverloadDurationFeedin_hr += energyModel.p_timeStep_h;
	}
}

// Electricity self consumption
v_totalElectricitySelfConsumed_MWh = max(0, v_totalElectricityConsumed_MWh - v_electricityDrawnFromGrid_kWh/1000);

//// Winter/summer week totals
// Calcs summerweek
//int startIdx = roundToInt(energyModel.p_startHourSummerWeek/energyModel.p_timeStep_h);
//int endIdx = startIdx + roundToInt(24*7/energyModel.p_timeStep_h);
v_summerWeekTotalImport_MWh = acc_summerTotalImport_kW.getIntegral()/1000; // Arrays.stream( Arrays.copyOfRange(a_annualTotalImport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekTotalExport_MWh = acc_summerTotalExport_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualTotalExport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekEnergyConsumed_MWh = acc_summerEnergyConsumption_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyConsumption_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekEnergyProduced_MWh = acc_summerEnergyProduction_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyProduction_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;

v_summerWeekSelfConsumedEnergy_MWh = max(0, v_summerWeekEnergyConsumed_MWh - v_summerWeekTotalImport_MWh); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	
double v_summerWeekSelfConsumedEnergyCheck_MWh = v_summerWeekEnergyProduced_MWh - v_summerWeekTotalExport_MWh;
//v_summerWeekEnergyCurtailed_MWh=Arrays.copyOfRange(a_annualEnergyCurtailed_kW, energyModel.p_startHourSummerWeek,roundToInt(24*7/energyModel.p_timeStep_h))*energyModel.p_timeStep_h / 1000;

v_summerWeekMethaneImport_MWh = acc_summerMethaneBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_summerWeekDieselImport_MWh = acc_summerDieselBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_summerWeekHydrogenImport_MWh = acc_summerHydrogenBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_summerWeekHydrogenExport_MWh = -acc_summerHydrogenBalance_kW.getSumNeg() * energyModel.p_timeStep_h / 1000;
// Electricity selfconsumed
v_summerWeekElectricityImport_MWh = acc_summerElectricityBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityExport_MWh = -acc_summerElectricityBalance_kW.getSumNeg() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityConsumed_MWh = acc_summerElectricityConsumption_kW.getSum() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityProduced_MWh = acc_summerElectricityProduction_kW.getSum() * energyModel.p_timeStep_h / 1000;

v_summerWeekElectricitySelfConsumed_MWh = max(0,v_summerWeekElectricityConsumed_MWh - v_summerWeekElectricityImport_MWh);v_summerWeekElectricitySelfConsumed_MWh = max(0,v_summerWeekElectricityConsumed_MWh - v_summerWeekElectricityImport_MWh);

// Calcs winterweek

v_winterWeekTotalImport_MWh = acc_winterTotalImport_kW.getIntegral()/1000; // Arrays.stream( Arrays.copyOfRange(a_annualTotalImport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekTotalExport_MWh = acc_winterTotalExport_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualTotalExport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekEnergyConsumed_MWh = acc_winterEnergyConsumption_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyConsumption_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekEnergyProduced_MWh = acc_winterEnergyProduction_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyProduction_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;

v_winterWeekSelfConsumedEnergy_MWh = max(0,v_winterWeekEnergyConsumed_MWh - v_winterWeekTotalImport_MWh); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	
double v_winterWeekSelfConsumedEnergyCheck_MWh = v_winterWeekEnergyProduced_MWh - v_winterWeekTotalExport_MWh;
//v_winterWeekEnergyCurtailed_MWh=Arrays.copyOfRange(a_annualEnergyCurtailed_kW, energyModel.p_startHourSummerWeek,roundToInt(24*7/energyModel.p_timeStep_h))*energyModel.p_timeStep_h / 1000;

v_winterWeekMethaneImport_MWh = acc_winterMethaneBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_winterWeekDieselImport_MWh = acc_winterDieselBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_winterWeekHydrogenImport_MWh = acc_winterHydrogenBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_winterWeekHydrogenExport_MWh = -acc_winterHydrogenBalance_kW.getSumNeg() * energyModel.p_timeStep_h / 1000;

// Electricity selfconsumed
v_winterWeekElectricityImport_MWh = acc_winterElectricityBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityExport_MWh = -acc_winterElectricityBalance_kW.getSumNeg() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityConsumed_MWh = acc_winterElectricityConsumption_kW.getSum() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityProduced_MWh = acc_winterElectricityProduction_kW.getSum() * energyModel.p_timeStep_h / 1000;

v_winterWeekElectricitySelfConsumed_MWh = max(0,v_winterWeekElectricityConsumed_MWh - v_winterWeekElectricityImport_MWh);v_winterWeekElectricitySelfConsumed_MWh = max(0,v_winterWeekElectricityConsumed_MWh - v_winterWeekElectricityImport_MWh);

// Daytime selfconsumption
v_daytimeSelfConsumedEnergy_MWh = max(0, v_daytimeEnergyProduced_MWh - v_daytimeTotalExport_MWh);
v_daytimeElectricitySelfConsumed_MWh = max(0, v_daytimeElectricityConsumed_MWh - v_daytimeElectricityImport_MWh);
// Nighttime totals: yearly totays minus daytime totals
v_nighttimeTotalExport_MWh = v_totalExport_MWh - v_daytimeTotalExport_MWh;
v_nighttimeTotalImport_MWh = v_totalImport_MWh - v_daytimeTotalImport_MWh;
v_nighttimeEnergyConsumed_MWh = v_totalEnergyConsumed_MWh - v_daytimeEnergyConsumed_MWh;
v_nighttimeEnergyProduced_MWh = v_totalEnergyProduced_MWh - v_daytimeEnergyProduced_MWh;

v_nighttimeElectricityConsumed_MWh = v_totalElectricityConsumed_MWh - v_daytimeElectricityConsumed_MWh;
v_nighttimeElectricityProduced_MWh = v_totalElectricityProduced_MWh - v_daytimeElectricityProduced_MWh;
v_nighttimeElectricityImport_MWh = v_electricityDrawnFromGrid_kWh/1000 - v_daytimeElectricityImport_MWh;
v_nighttimeElectricityExport_MWh = v_electricityDeliveredToGrid_kWh/1000 - v_daytimeElectricityExport_MWh;
v_nighttimeMethaneImport_MWh = v_methaneDrawn_kWh/1000 - v_daytimeMethaneImport_MWh;
v_nighttimeDieselImport_MWh = v_dieselDrawn_kWh/1000 - v_daytimeDieselImport_MWh;
v_nighttimeHydrogenImport_MWh = v_hydrogenDrawn_kWh/1000 - v_daytimeHydrogenImport_MWh;
v_nighttimeHydrogenExport_MWh = v_hydrogenDelivered_kWh/1000 - v_daytimeHydrogenExport_MWh;

v_nighttimeSelfConsumedEnergy_MWh = max(0, v_nighttimeEnergyProduced_MWh - v_nighttimeTotalExport_MWh);
v_nighttimeElectricitySelfConsumed_MWh = max(0,v_nighttimeElectricityConsumed_MWh - v_nighttimeElectricityImport_MWh);

// Weekday selfconsumption
v_weekdaySelfConsumedEnergy_MWh = max(0, v_weekdayEnergyProduced_MWh - v_weekdayTotalExport_MWh);
v_weekdayElectricitySelfConsumed_MWh = max(0,v_weekdayElectricityConsumed_MWh - v_weekdayElectricityImport_MWh);
// Weekend totals: yearly totals minus weekday totals
v_weekendTotalExport_MWh = v_totalExport_MWh - v_weekdayTotalExport_MWh;
v_weekendTotalImport_MWh = v_totalImport_MWh - v_weekdayTotalImport_MWh;
v_weekendEnergyConsumed_MWh = v_totalEnergyConsumed_MWh - v_weekdayEnergyConsumed_MWh;
v_weekendEnergyProduced_MWh = v_totalEnergyProduced_MWh - v_weekdayEnergyProduced_MWh;
v_weekendSelfConsumedEnergy_MWh = max(0, v_weekendEnergyProduced_MWh - v_weekendTotalExport_MWh);

v_weekendElectricityConsumed_MWh = v_totalElectricityConsumed_MWh - v_weekdayElectricityConsumed_MWh;
v_weekendElectricityProduced_MWh = v_totalElectricityProduced_MWh - v_weekdayElectricityProduced_MWh;
v_weekendElectricityImport_MWh = v_electricityDrawnFromGrid_kWh/1000 - v_weekdayElectricityImport_MWh;
v_weekendElectricityExport_MWh = v_electricityDeliveredToGrid_kWh/1000 - v_weekdayElectricityExport_MWh;
v_weekendMethaneImport_MWh = v_methaneDrawn_kWh/1000 - v_weekdayMethaneImport_MWh;
v_weekendDieselImport_MWh = v_dieselDrawn_kWh/1000 - v_weekdayDieselImport_MWh;
v_weekendHydrogenImport_MWh = v_hydrogenDrawn_kWh/1000 - v_weekdayHydrogenImport_MWh;
v_weekendHydrogenExport_MWh = v_hydrogenDelivered_kWh/1000 - v_weekdayHydrogenExport_MWh;

v_weekendSelfConsumedEnergy_MWh = max(0, v_weekendEnergyProduced_MWh - v_weekendTotalExport_MWh);
v_weekendElectricitySelfConsumed_MWh = max(0,v_weekendElectricityConsumed_MWh - v_weekendElectricityImport_MWh);








/*v_totalImport_MWh=(v_electricityDrawnFromGrid_kWh + v_methaneDrawn_kWh + v_hydrogenDrawn_kWh + v_dieselDrawn_kWh)/1000;
v_totalExport_MWh=(v_electricityDeliveredToGrid_kWh + v_methaneDelivered_kWh + v_hydrogenDelivered_kWh)/1000;
double totalEnergyProduced_MWh=0;
double totalEnergyUsed_MWh=0;
double totalEnergyCurtailed_MWh=0;
double totalHeatProduced_MWh=0;
for (J_EA e : c_energyAssets) {
	double EnergyUsed_kWh = e.getEnergyUsed_kWh();			
	if (EnergyUsed_kWh > 0) {			
		if (e instanceof J_EAConversionCurtailer || e instanceof J_EAConversionCurtailerHeat) {
			totalEnergyProduced_MWh -= EnergyUsed_kWh/1000;
			totalEnergyCurtailed_MWh += EnergyUsed_kWh/1000;
		} else if( e instanceof J_EAConversionGasCHP ) {
			totalEnergyUsed_MWh += EnergyUsed_kWh/1000;					
		} else {
			totalEnergyUsed_MWh += EnergyUsed_kWh/1000;
		}		
		if ( e instanceof J_EABuilding ) {
			totalEnergyProduced_MWh += ((J_EABuilding)e).energyAbsorbed_kWh/1000;						
			totalHeatProduced_MWh += ((J_EABuilding)e).energyAbsorbed_kWh/1000;						
		}
	} else {				
		totalEnergyProduced_MWh -= EnergyUsed_kWh/1000;
		if (e instanceof J_EAConversionHeatPump) {
			totalHeatProduced_MWh -= EnergyUsed_kWh/1000;						
		}
	}	
}
v_totalEnergyUsed_MWh = totalEnergyUsed_MWh;
v_totalEnergyProduced_MWh = totalEnergyProduced_MWh;*/		

//v_electricityTotalsCheck_kWh = v_electricityConsumedFixedProfile_kWh + v_electricityConvertedToX_kWh + v_electricityChargedByEVs_kWh  + v_electricityDeliveredToGrid_kWh 
//- v_electricityProducedPV_kWh - v_electricityProducedWind_kWh - v_electricityDrawnFromGrid_kWh - v_xConvertedToElectricity_kWh;

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1702373771433</Id>
					<Name><![CDATA[f_addFlows]]></Name>
					<X>930</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[arr]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[caller]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[// This function is called from each energy asset when its method f_updateAllFlows() is called!
// {0: electricityProduction_kW, 1: methaneProduction_kW, 2: hydrogenProduction_kW, 3: heatProduction_kW, 4: electricityConsumption_kW, 5: methaneConsumption_kW,
// 6: hydrogenConsumption_kW, 7: heatConsumption_kW, 8: dieselConsumption_kW, 9: energyUse_kW };    	
 	
v_currentPowerElectricity_kW += arr[4] - arr[0];
v_currentPowerMethane_kW += arr[5] - arr[1];
v_currentPowerHydrogen_kW += arr[6] - arr[2];
v_currentPowerHeat_kW += arr[7] - arr[3];
v_currentPowerDiesel_kW += arr[8];

if (caller instanceof J_EAStorageElectric) { // Only allocate battery losses as consumption. Charging/discharging is neither production nor consumption. Do we need a 10th element in arr indicating power into storage??
	v_currentEnergyConsumption_kW += max(0,arr[9]);
	v_currentElectricityConsumption_kW += max(0,arr[9]);
/*} else if (caller instanceof J_EAProduction) {
	v_currentEnergyProduction_kW += -arr[9]; // This enables J_EAProduction to use curtailer method and 'cancel' production! 
//	v_currentEnergyCurtailed_kW += max(0,arr[9]);
	v_currentElectricityProduction_kW += arr[0];
} else if (caller instanceof J_EAConsumption) {
	v_currentEnergyConsumption_kW += arr[9]; // This enables J_EAConsumption to use curtailer method and 'cancel' consumption! 
	//v_currentLoadLoad_kW += max(0,arr[9]); // lostLoad is not yet a thing
	v_currentElectricityConsumption_kW += arr[4];
*/
} else {
	v_currentEnergyProduction_kW += max(0,-arr[9]);
	v_currentEnergyConsumption_kW += max(0,arr[9]);		
	v_currentElectricityConsumption_kW += arr[4];
	v_currentElectricityProduction_kW += arr[0];
}

//if ( arr[4] > 0 && arr[3] > arr[4]) {
if ( caller instanceof J_EAConversionHeatPump ) {
	//v_totalHeatProduced_MWh += max(0,(arr[3]-arr[4]) * energyModel.p_timeStep_h / 1000); // This should only be non-zero for heatpumps!! But this is method is highly unsafe...
	v_currentEnergyProductionHeat_kW = -arr[9];
	//v_totalHeatProduced_MWh += max(0,v_currentEnergyProductionHeat_kW/1000 * energyModel.p_timeStep_h);
}
	
/*if ( caller instanceof J_EAEV) {
	if (arr[9]>0) {
		traceln("EnergyUse_kW %s from J_EAEV being added to gridConnection %s", arr[9], this);
	}
}*/
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[DataSet]]></ReturnType>
					<Id>1708520215192</Id>
					<Name><![CDATA[f_getDuurkromme]]></Name>
					<X>910</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[boolean firstRun = true;
if (data_netbelastingDuurkromme_kW != null) {	
	if (data_netbelastingDuurkrommeVorige_kW != null) { // Not second run either!
		data_netbelastingDuurkrommeVorige_kW.reset();
	} else {
		data_netbelastingDuurkrommeVorige_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));
	}
	firstRun = false;
} else {
	data_netbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));
	data_summerWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));
	data_winterWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));
	data_daytimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/2/energyModel.p_timeStep_h));
	data_nighttimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/2/energyModel.p_timeStep_h));
	data_weekdayNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/7*5/energyModel.p_timeStep_h)+100);
	data_weekendNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/7*2/energyModel.p_timeStep_h)+100);
}

// We copy our annual array to preserve it as a time-series and make new arrays for the others
double[] netLoadArrayAnnual_kW = acc_annualElectricityBalance_kW.getTimeSeries().clone(); 
int arraySize = netLoadArrayAnnual_kW.length;
double[] netLoadArraySummerweek_kW = new double[roundToInt(168 / energyModel.p_timeStep_h)];
double[] netLoadArrayWinterweek_kW= new double[roundToInt(168 / energyModel.p_timeStep_h)];
double[] netLoadArrayDaytime_kW = new double[arraySize/2];
double[] netLoadArrayNighttime_kW = new double[arraySize/2];
// For different years the amount of weekdays and weekend days may be different, so the size will be variable for now
ArrayList<Double> listNetLoadArrayWeekday_kW = new ArrayList<>();
ArrayList<Double> listNetLoadArrayWeekend_kW = new ArrayList<>();
 
int i_winter=0;
int i_summer=0;
int i_day=0;
int i_night=0;
int i_weekday=0;
int i_weekend=0;

//double[] annualElectricityBalanceTimeSeries_kW = acc_annualElectricityBalance_kW.getTimeSeries();

for(int i=0; i<arraySize ; i++) {
	if (!firstRun) {
		// First we make sure to store our previous Load Curve
		data_netbelastingDuurkrommeVorige_kW.add(i*energyModel.p_timeStep_h,data_netbelastingDuurkromme_kW.getY(i));		
	}
	// summer/winter
	if (i*energyModel.p_timeStep_h > energyModel.p_startHourSummerWeek && i*energyModel.p_timeStep_h<= energyModel.p_startHourSummerWeek+24*7) {
		netLoadArraySummerweek_kW[i_summer]=-netLoadArrayAnnual_kW[i];
		i_summer++;
	}
	if (i*energyModel.p_timeStep_h > energyModel.p_startHourWinterWeek && i*energyModel.p_timeStep_h<= energyModel.p_startHourWinterWeek+24*7) {
		netLoadArrayWinterweek_kW[i_winter]=-netLoadArrayAnnual_kW[i];
		i_winter++;
	}
	// day/night
	if (i*energyModel.p_timeStep_h % 24 > 6 && i*energyModel.p_timeStep_h % 24 <= 18) { //daytime
		netLoadArrayDaytime_kW[i_day]=-netLoadArrayAnnual_kW[i];
		i_day++;
	} else {
		netLoadArrayNighttime_kW[i_night]=-netLoadArrayAnnual_kW[i];
		i_night++;
	}
	//Weekday/weekend
	if (((i*energyModel.p_timeStep_h+ 24*(energyModel.v_dayOfWeek1jan-1)) % (24*7)) < (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h
		listNetLoadArrayWeekday_kW.add(-netLoadArrayAnnual_kW[i]);
		i_weekday++;
	} else {
		listNetLoadArrayWeekend_kW.add(-netLoadArrayAnnual_kW[i]);
		i_weekend++;
	}
	
}
 
// Now we have the size of the weekday & weekend arrays.
double[] netLoadArrayWeekday_kW = new double[listNetLoadArrayWeekday_kW.size()];
double[] netLoadArrayWeekend_kW = new double[listNetLoadArrayWeekend_kW.size()];
for (int i = 0; i < listNetLoadArrayWeekday_kW.size(); i++) {
	netLoadArrayWeekday_kW[i] = listNetLoadArrayWeekday_kW.get(i);
}
for (int i = 0; i < listNetLoadArrayWeekend_kW.size(); i++) {
	netLoadArrayWeekend_kW[i] = listNetLoadArrayWeekend_kW.get(i);
}
 
 
// Sort all arrays
Arrays.parallelSort(netLoadArrayAnnual_kW);
Arrays.parallelSort(netLoadArraySummerweek_kW);
Arrays.parallelSort(netLoadArrayWinterweek_kW);
Arrays.parallelSort(netLoadArrayDaytime_kW);
Arrays.parallelSort(netLoadArrayNighttime_kW);
Arrays.parallelSort(netLoadArrayWeekday_kW);
Arrays.parallelSort(netLoadArrayWeekend_kW);
 
// Write results to datasets
// Netbelastingduurkromme year
//if (!firstRun) {
	data_netbelastingDuurkromme_kW.reset();
	data_summerWeekNetbelastingDuurkromme_kW.reset();	
	data_winterWeekNetbelastingDuurkromme_kW.reset();
	data_daytimeNetbelastingDuurkromme_kW.reset();
	data_nighttimeNetbelastingDuurkromme_kW.reset();
	data_weekdayNetbelastingDuurkromme_kW.reset();
	data_weekendNetbelastingDuurkromme_kW.reset();
//}
for(int i=0; i< arraySize; i++) {
	data_netbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, netLoadArrayAnnual_kW[arraySize-i-1]);
}
// Netbelastingduurkromme summer / winter
arraySize = netLoadArraySummerweek_kW.length;
for(int i=0; i< arraySize; i++) {
	data_summerWeekNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArraySummerweek_kW[i]);
}
arraySize = netLoadArrayWinterweek_kW.length;
for(int i=0; i< arraySize; i++) {
	data_winterWeekNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWinterweek_kW[i]);
}
// Netbelastingduurkromme day / night
arraySize = netLoadArrayDaytime_kW.length;
for(int i=0; i< arraySize; i++) {
	data_daytimeNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayDaytime_kW[i]);
}
arraySize = netLoadArrayNighttime_kW.length;
for(int i=0; i< arraySize; i++) {
	data_nighttimeNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayNighttime_kW[i]);
}
// Netbelastingduurkromme weekday / weekend
arraySize = netLoadArrayWeekday_kW.length;
for(int i=0; i< arraySize; i++) {
	data_weekdayNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekday_kW[i]);
}
arraySize = netLoadArrayWeekend_kW.length;
for(int i=0; i< arraySize; i++) {
	data_weekendNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekend_kW[i]);
}
 
return data_netbelastingDuurkromme_kW;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714646521271</Id>
					<Name><![CDATA[f_removeTheJ_EA]]></Name>
					<X>910</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[j_ea]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[f_removeTheJ_EA_default(j_ea);
// Abstract method to be used call GC-subtype specific functions]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714646913998</Id>
					<Name><![CDATA[f_removeTheJ_EA_default]]></Name>
					<X>1070</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[j_ea]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[c_energyAssets.remove(j_ea);
energyModel.c_energyAssets.remove(j_ea);

if (j_ea instanceof J_EAVehicle) {
	J_EAVehicle vehicle = (J_EAVehicle)j_ea;
	if (vehicle instanceof J_EADieselVehicle) {
		c_dieselVehicles.remove( (J_EADieselVehicle)vehicle );		
	} else if (vehicle instanceof J_EAHydrogenVehicle) {
		c_hydrogenVehicles.remove((J_EAHydrogenVehicle)vehicle);		
	} else if (vehicle instanceof J_EAEV) {
		c_vehiclesAvailableForCharging.remove((J_EAEV)vehicle);
		energyModel.c_EVs.remove((J_EAEV)vehicle);
		c_EvAssets.remove(j_ea);
	}
	c_vehicleAssets.remove(j_ea);
		
	J_ActivityTrackerTrips tripTracker = vehicle.tripTracker;
	c_tripTrackers.remove( tripTracker );
	vehicle.tripTracker = null;
	v_vehicleIndex --;
} else if (j_ea instanceof J_EAConsumption) {
	c_consumptionAssets.remove((J_EAConsumption)j_ea);	
	if (j_ea.energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION) {
		p_DHWAsset = null;	
	}
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ) {
		c_fixedConsumptionElectricAssets.remove(j_ea);
	}
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB ) {
		c_electricHobAssets.remove(j_ea);
	}
} else if (j_ea instanceof J_EAProduction) {
	c_productionAssets.remove((J_EAProduction)j_ea);
	//energyModel.c_productionAssets.remove((J_EAProduction)j_ea);
	if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {
		J_EAProduction otherPV = findFirst(c_productionAssets, x -> x.getEAType() == OL_EnergyAssetType.PHOTOVOLTAIC);
		if (otherPV == null) {
			v_hasPV = false;
		}
		v_totalInstalledPVPower_kW -= j_ea.getElectricCapacity_kW();
		if (l_parentNodeElectric.getConnectedAgent() != null) {
			l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, j_ea.getElectricCapacity_kW(), false);
		}
		energyModel.v_totalInstalledPVPower_kW -= j_ea.getElectricCapacity_kW();
		c_pvAssets.remove(j_ea);
	}
	else if (j_ea.energyAssetType == OL_EnergyAssetType.WINDMILL) {
		v_totalInstalledWindPower_kW -= j_ea.getElectricCapacity_kW();
		if (l_parentNodeElectric.getConnectedAgent() != null) {
			l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, j_ea.getElectricCapacity_kW(), false);
		}
		energyModel.v_totalInstalledWindPower_kW -= j_ea.getElectricCapacity_kW();
		c_windAssets.remove(j_ea);
	}
} else if (j_ea instanceof J_EAConversion) {
	c_conversionAssets.remove((J_EAConversion)j_ea);
	if (j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB) {
		c_electricHobAssets.remove(j_ea);
		c_conversionElectricAssets.remove(j_ea);
	}	
	if ( j_ea.energyAssetType == OL_EnergyAssetType.GAS_PIT | j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB){
		p_cookingTracker = null;
	} else if (j_ea instanceof J_EAConversionGasBurner) {
		p_primaryHeatingAsset = null;
	} else if (j_ea instanceof J_EAConversionHeatPump) {
		p_primaryHeatingAsset = null;
		energyModel.c_ambientAirDependentAssets.remove(j_ea);
		c_electricHeatpumpAssets.remove(j_ea);
		c_conversionElectricAssets.remove(j_ea);
	} else if (j_ea instanceof J_EAConversionHydrogenBurner) {
		p_primaryHeatingAsset = null;
	} else if (j_ea instanceof J_EAConversionElectrolyser) {
		c_electrolyserAssets.remove(j_ea);
	}
} else if  (j_ea instanceof J_EAStorage) {
	c_storageAssets.remove((J_EAStorage)j_ea);
	energyModel.c_storageAssets.remove((J_EAStorage)j_ea);
	if (j_ea.energyAssetType == OL_EnergyAssetType.BUILDINGTHERMALS) {
		energyModel.c_ambientAirDependentAssets.remove(j_ea);
		p_BuildingThermalAsset = null;
	} else if (j_ea instanceof J_EAStorageGas) {
		p_gasBuffer = null;
	} else if (j_ea instanceof J_EAStorageElectric) {
		p_batteryAsset = null;
		c_batteryAssets.remove(j_ea);
		
	}
} else if  (j_ea instanceof J_EAProfile) {
	//p_energyProfile = null;
	c_profileAssets.remove((J_EAProfile)j_ea);
} else {
	traceln("Unrecognized energy asset %s in gridconnection %s", j_ea, this);
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1716282675260</Id>
					<Name><![CDATA[f_initializeAccumulators]]></Name>
					<X>910</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[acc_annualElectricityBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760);
acc_annualMethaneBalance_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualHydrogenBalance_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualDieselBalance_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualHeatBalance_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualTotalImport_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualTotalExport_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualEnergyProduction_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualEnergyConsumption_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h,8760);
acc_annualEnergyCurtailed_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualElectricityProduction_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualElectricityConsumption_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_annualHeatProduction_kW = new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760);
acc_summerElectricityBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerMethaneBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerHydrogenBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerHeatBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerTotalImport_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerTotalExport_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerDieselBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerEnergyProduction_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerEnergyConsumption_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerEnergyCurtailed_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerElectricityProduction_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerElectricityConsumption_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerHeatProduction_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerDeliveryCapacity_kW =  new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_summerFeedinCapacity_kW =  new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterElectricityBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterMethaneBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterHydrogenBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterDieselBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterHeatBalance_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterTotalImport_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterTotalExport_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterEnergyProduction_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterEnergyConsumption_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterEnergyCurtailed_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterElectricityProduction_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterElectricityConsumption_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterHeatProduction_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterDeliveryCapacity_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);
acc_winterFeedinCapacity_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717060111619</Id>
					<Name><![CDATA[f_resetSpecificGCStates]]></Name>
					<X>1250</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717068094093</Id>
					<Name><![CDATA[f_resetStatesAfterRapidRun]]></Name>
					<X>1230</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Reset dataset after rapid run

//v_hydrogenInStorage_kWh = 0;

//Reset specificGC states after rapid run
f_resetSpecificGCStatesAfterRapidRun();




]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717068167776</Id>
					<Name><![CDATA[f_resetSpecificGCStatesAfterRapidRun]]></Name>
					<X>1250</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// to be overwritten by child GCs!]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720442672576</Id>
					<Name><![CDATA[f_curtailment]]></Name>
					<X>910</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[switch(p_curtailmentMode) {
	case CAPACITY:
	// Keep feedin power within connection capacity
	if (v_currentPowerElectricity_kW < - p_contractedFeedinCapacity_kW) { // overproduction!
		for (J_EAProduction j_ea : c_productionAssets) {
			j_ea.curtailElectricityProduction(-v_currentPowerElectricity_kW - p_contractedFeedinCapacity_kW);
			if (!(v_currentPowerElectricity_kW < - p_contractedFeedinCapacity_kW)) {
				break;
			}
		}
	}
	break;
	case PRICE:
	// Prevent feedin when nodal price is negative
	double priceTreshold_eur = -0.0;
	if(l_parentNodeElectric.getConnectedAgent().v_currentTotalNodalPrice_eurpkWh < priceTreshold_eur) {
	
		double v_currentPowerElectricitySetpoint_kW = v_currentPowerElectricity_kW * max(0,1+(l_parentNodeElectric.getConnectedAgent().v_currentTotalNodalPrice_eurpkWh-priceTreshold_eur)*5);
		for (J_EAProduction j_ea : c_productionAssets) {
			j_ea.curtailElectricityProduction(v_currentPowerElectricitySetpoint_kW-v_currentPowerElectricity_kW);
			if (!(v_currentPowerElectricity_kW < v_currentPowerElectricitySetpoint_kW)) {
				break;
			}
		}
	}
	break;
	default:
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720430481154</Id>
					<Name><![CDATA[f_nfatoUpdateConnectionCapacity]]></Name>
					<Description><![CDATA[Updates the Connection Capacity of the GC depending on the time of day / day of week.]]></Description>
					<X>890</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int dayOfWeek = (int) ((energyModel.t_h / 24 + energyModel.v_dayOfWeek1jan) % 7);

double timeOfDay = energyModel.t_h % 24;
int hourOfDay = (int) timeOfDay;

if (timeOfDay == hourOfDay) {
	int previousHour = ((hourOfDay - 1) % 24 + 24) % 24;
	if (dayOfWeek == 0 || dayOfWeek == 6) {
		if (dayOfWeek == 6 && hourOfDay == 0) { // Friday night we need to subtract the previous week capacity
			p_contractedDeliveryCapacity_kW += v_nfatoWeekendDeliveryCapacity_kW[hourOfDay] - v_nfatoWeekDeliveryCapacity_kW[previousHour];
			p_contractedFeedinCapacity_kW += v_nfatoWeekendFeedinCapacity_kW[hourOfDay] - v_nfatoWeekFeedinCapacity_kW[previousHour];
		}
		else {
			p_contractedDeliveryCapacity_kW += v_nfatoWeekendDeliveryCapacity_kW[hourOfDay] - v_nfatoWeekendDeliveryCapacity_kW[previousHour];
			p_contractedFeedinCapacity_kW += v_nfatoWeekendFeedinCapacity_kW[hourOfDay] - v_nfatoWeekendFeedinCapacity_kW[previousHour];
		}
	}
	else {
		if (dayOfWeek == 1 && hourOfDay == 0) { // Sunday night we need to subtract the previous weekend capacity
			p_contractedDeliveryCapacity_kW += v_nfatoWeekDeliveryCapacity_kW[hourOfDay] - v_nfatoWeekendDeliveryCapacity_kW[previousHour];
			p_contractedFeedinCapacity_kW += v_nfatoWeekFeedinCapacity_kW[hourOfDay] - v_nfatoWeekendFeedinCapacity_kW[previousHour];
		}
		else {
			p_contractedDeliveryCapacity_kW += v_nfatoWeekDeliveryCapacity_kW[hourOfDay] - v_nfatoWeekDeliveryCapacity_kW[previousHour];
			p_contractedFeedinCapacity_kW += v_nfatoWeekFeedinCapacity_kW[hourOfDay] - v_nfatoWeekFeedinCapacity_kW[previousHour];
		}
	}
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720431721926</Id>
					<Name><![CDATA[f_nfatoSetConnectionCapacity]]></Name>
					<Description><![CDATA[When changing the NFATO settings this function sets the GC capacity to the correct value. When reset is true the capacity is restored back to its original value.]]></Description>
					<X>890</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[reset]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[int mult = reset == true ? -1 : 1; // When reset is true we need to subtract the capacity, else we add

int dayOfWeek = (int) ((energyModel.t_h / 24 + energyModel.v_dayOfWeek1jan) % 7);
double timeOfDay = energyModel.t_h % 24;
int hourOfDay = (int) timeOfDay;

if (dayOfWeek == 0 || dayOfWeek == 6) {
	if (dayOfWeek == 6 && hourOfDay == 0) { // Friday night we need to subtract the previous week capacity
		p_contractedDeliveryCapacity_kW += mult * v_nfatoWeekDeliveryCapacity_kW[hourOfDay];
		p_contractedFeedinCapacity_kW += mult * v_nfatoWeekFeedinCapacity_kW[hourOfDay];
	}
	else {
		p_contractedDeliveryCapacity_kW += mult * v_nfatoWeekendDeliveryCapacity_kW[hourOfDay];
		p_contractedFeedinCapacity_kW += mult * v_nfatoWeekendFeedinCapacity_kW[hourOfDay];
	}
}
else {
	if (dayOfWeek == 1 && hourOfDay == 0) { // Sunday night we need to subtract the previous week capacity
		p_contractedDeliveryCapacity_kW += mult * v_nfatoWeekendDeliveryCapacity_kW[hourOfDay];
		p_contractedFeedinCapacity_kW += mult * v_nfatoWeekendFeedinCapacity_kW[hourOfDay];
	}
	else {
		p_contractedDeliveryCapacity_kW += mult * v_nfatoWeekDeliveryCapacity_kW[hourOfDay];
		p_contractedFeedinCapacity_kW += mult * v_nfatoWeekFeedinCapacity_kW[hourOfDay];
	}
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720537137235</Id>
					<Name><![CDATA[f_batteryManagementNodalPricing]]></Name>
					<Description><![CDATA[Regeling voor prijsgestuurd balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>920.6</X><Y>319.4</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentBatteryStateOfCharge_fr]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (p_batteryAsset.getStorageCapacity_kWh() != 0){
	//double willingnessToPayDefault_eurpkWh = 0.3;
	double WTPfeedbackGain_eurpSOC = 0.5; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh
	double priceGain_kWhpeur = 1.5; // How strongly to ramp up power with price-delta's. Increasing this gain too far leads to instability!
	//double congestionTariffCoop_eurpkWh = -(((ConnectionOwner)p_ownerActor).p_CoopParent.v_electricitySurplus_kW + v_previousPowerElectricity_kW)/1200*0.1;
	
	double chargeSetpoint_kW = 0;	
	double currentElectricityPriceCharge_eurpkWh;
	GridNode GN = l_parentNodeElectric.getConnectedAgent();
	//double currentElectricityPriceDischarge_eurpkWh;
	//currentElectricityPriceCharge_eurpkWh = energyModel.nationalEnergyMarket.f_getNationalElectricityPrice_eurpMWh()/1000 + GN.v_currentTotalNodalPrice_eurpkWh;
	currentElectricityPriceCharge_eurpkWh = GN.v_currentTotalNodalPrice_eurpkWh;
	
	v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );

	
	double SOC_setp_fr = 0.9 - 3*GN.v_electricityYieldForecast_fr;	
	//double SOC_setp_fr = 0.9 - 2*energyModel.v_WindYieldForecast_fr;	
	//SOC_setp_fr = (0.5 + 0.4 * Math.cos(2*Math.PI*(energyModel.t_h-18)/24))*(1-3*GN.v_electricityYieldForecast_fr); // Sinusoidal setpoint: aim for high SOC at 18:00h		
	//SOC_setp_fr = 0.6 + 0.25 * Math.sin(2*Math.PI*(energyModel.t_h-12)/24); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. 
	
	double SOC_deficit_fr = SOC_setp_fr - currentBatteryStateOfCharge_fr;

	//double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + 1.0*(energyModel.v_epexForecast_eurpkWh - v_electricityPriceLowPassed_eurpkWh) + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
	double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + 0.0*(energyModel.v_epexForecast_eurpkWh - v_electricityPriceLowPassed_eurpkWh) + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
	chargeSetpoint_kW = p_batteryAsset.getElectricCapacity_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_kWhpeur ;
					
	//chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	//p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
	boolean b_stayWithinConnectionLimits = true;
	if( b_stayWithinConnectionLimits ) {	
		double maxBatteryPower_kW = p_contractedDeliveryCapacity_kW - v_currentPowerElectricity_kW; // Max battery charging power within grid capacity
		double minBatteryPower_kW = - (p_contractedFeedinCapacity_kW + v_currentPowerElectricity_kW); // Max discharging power within grid capacity (this number is usually negative!)
		chargeSetpoint_kW = min(max(chargeSetpoint_kW, minBatteryPower_kW),maxBatteryPower_kW); // Don't allow too much (dis)charging!
		/*if (minBatteryPower_kW>0) {
			traceln("Battery must charge to prevent curtailment! minBatteryPower_kW: %s, chargeSetpoint_kW: %s, battery SOC: %s", minBatteryPower_kW, chargeSetpoint_kW, currentBatteryStateOfCharge_fr);
		}*/
	}			

	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
}

//traceln("Hello!");
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722512642645</Id>
					<Name><![CDATA[f_removeFlows]]></Name>
					<X>1020</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[arr]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[caller]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[// This function is called from each energy asset when curtailment or 'lostLoad' methods are called
// {electricityProduction_kW, methaneProduction_kW, hydrogenProduction_kW, heatProduction_kW, electricityConsumption_kW, methaneConsumption_kW, hydrogenConsumption_kW, heatConsumption_kW, dieselConsumption_kW };    	
v_currentPowerElectricity_kW += arr[4] - arr[0];
v_currentPowerMethane_kW += arr[5] - arr[1];
v_currentPowerHydrogen_kW += arr[6] - arr[2];
v_currentPowerHeat_kW += arr[7] - arr[3];
v_currentPowerDiesel_kW += arr[8];

if (caller instanceof J_EAStorageElectric) { // Only allocate battery losses as consumption. Charging/discharging is neither production nor consumption. Do we need a 10th element in arr indicating power into storage??
	v_currentEnergyConsumption_kW += min(0,arr[9]);
	v_currentElectricityConsumption_kW += min(0,arr[9]);
/*} else if (caller instanceof J_EAProduction) {
	v_currentEnergyProduction_kW += -max(0,arr[9]); // This enables J_EAProduction to use curtailer method and 'cancel' production! 
	
	v_currentElectricityProduction_kW += arr[0];
} else if (caller instanceof J_EAConsumption) {
	v_currentEnergyConsumption_kW += min(0,arr[9]); // This enables J_EAConsumption to use curtailer method and 'cancel' consumption! 
	//v_currentLoadLoad_kW += max(0,arr[9]); // lostLoad is not yet a thing
	v_currentElectricityConsumption_kW += arr[4];*/
} else {
	double curtailment_kW = max(0,arr[9]); // In the removeFlows function, positive energyUse is 'curtailed' production 
	double lostLoad_kW = max(0,-arr[9]); // In the removeFlows function, negative energyUse is 'removed' consumption
	v_currentEnergyCurtailed_kW += curtailment_kW;
	v_currentEnergyProduction_kW -= curtailment_kW; 
	v_currentEnergyConsumption_kW -= lostLoad_kW; 
	
	v_currentElectricityConsumption_kW += arr[4];
	v_currentElectricityProduction_kW += arr[0];
}

if ( caller instanceof J_EAConversionHeatPump ) {
	//v_totalHeatProduced_MWh += max(0,(arr[3]-arr[4]) * energyModel.p_timeStep_h / 1000); // This should only be non-zero for heatpumps!! But this is method is highly unsafe...
	v_currentEnergyProductionHeat_kW = -arr[9];
	//v_totalHeatProduced_MWh += max(0,v_currentEnergyProductionHeat_kW/1000 * energyModel.p_timeStep_h);
}
	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722518225504</Id>
					<Name><![CDATA[f_fillLiveDatasets]]></Name>
					<X>930</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[data_liveElectricityBalance_kW.add(energyModel.t_h, v_currentPowerElectricity_kW);

data_naturalGasDemand_kW.update();
data_dieselDemand_kW.update();
data_hydrogenDemand_kW.update();
data_hydrogenSupply_kW.update();

data_totalDemand_kW.update();
data_totalSupply_kW.update();

data_gridCapacityDemand_kW.update();
data_gridCapacitySupply_kW.update();
// Gather specific electricity flows from corresponding energy assets
v_fixedConsumptionElectric_kW = 0;
for (J_EA j_ea : c_fixedConsumptionElectricAssets) {
	v_fixedConsumptionElectric_kW += j_ea.getLastFlows()[4];
}
data_baseloadElectricityDemand_kW.update();

v_electricHobConsumption_kW = 0;
for (J_EA j_ea : c_electricHobAssets) {
	v_electricHobConsumption_kW += j_ea.getLastFlows()[4];
}
data_electricHobDemand_kW.update();

v_hydrogenElectricityConsumption_kW = 0;
for (J_EA j_ea : c_electrolyserAssets) {
	v_hydrogenElectricityConsumption_kW += j_ea.getLastFlows()[4];
}
data_hydrogenElectricityDemand_kW.update();

v_heatPumpElectricityConsumption_kW = 0;
for (J_EA j_ea : c_electricHeatpumpAssets) {
	v_heatPumpElectricityConsumption_kW += j_ea.getLastFlows()[4];
}
data_heatPumpElectricityDemand_kW.update();

//data_electricCarsDemand_kW.update();
v_evChargingPowerElectric_kW = 0;
for (J_EA j_ea : c_EvAssets) {
	if (j_ea instanceof J_EAEV) {
		if (((J_EAEV)j_ea).vehicleScaling == 0) {
			continue;
		}
	}
	v_evChargingPowerElectric_kW += j_ea.getLastFlows()[4] - j_ea.getLastFlows()[0];
}
data_electricVehicleDemand_kW.update();
data_V2GSupply_kW.update();

v_batteryPowerElectric_kW = 0;

for (J_EA j_ea : c_batteryAssets) {
	//if (j_ea.getElectricCapacity_kW() != 0 && ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh() != 0) {
		v_batteryPowerElectric_kW += j_ea.getLastFlows()[4] - j_ea.getLastFlows()[0];
	//}
}
data_batteryCharging_kW.update();	
data_batteryDischarging_kW.update();	

v_pvProductionElectric_kW = 0;
for (J_EA j_ea : c_pvAssets) {
	v_pvProductionElectric_kW += j_ea.getLastFlows()[0];
}
if (v_pvProductionElectric_kW < 0) {
	traceln("Negative v_pvProductionElectric_kW! Curtailment error? Value: %s", v_pvProductionElectric_kW);
	pauseSimulation();
}
data_PVGeneration_kW.update();	

v_windProductionElectric_kW = 0;
for (J_EA j_ea : c_windAssets) {
	v_windProductionElectric_kW += j_ea.getLastFlows()[0];
}
data_windGeneration_kW.update();	

data_districtHeatDelivery_kW.update();

//data_totalNetLoad_kW.update();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722518905501</Id>
					<Name><![CDATA[f_fillAnnualDatasets]]></Name>
					<X>930</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_maxConnectionLoad_fr = max(v_maxConnectionLoad_fr, abs(v_currentPowerElectricity_kW / p_contractedDeliveryCapacity_kW ));

double currentImport_kW = (max(0,v_currentPowerElectricity_kW) + max(0,v_currentPowerHeat_kW) + max(0,v_currentPowerMethane_kW) + max(0,v_currentPowerHydrogen_kW) + max(0,v_currentPowerDiesel_kW));
double currentExport_kW = (max(0,-v_currentPowerElectricity_kW) + max(0,-v_currentPowerHeat_kW) + max(0,-v_currentPowerMethane_kW) + max(0,-v_currentPowerHydrogen_kW) + max(0,-v_currentPowerDiesel_kW));

if(energyModel.t_h % 24 > 6 && energyModel.t_h % 24 < 18) { 
// Daytime totals. Use overal-total minus daytime total to get nighttime totals.
	v_daytimeTotalImport_MWh += currentImport_kW/1000 * energyModel.p_timeStep_h;
	v_daytimeTotalExport_MWh += currentExport_kW/1000 * energyModel.p_timeStep_h;
	
	v_daytimeElectricityImport_MWh += max(0,v_currentPowerElectricity_kW) /1000 * energyModel.p_timeStep_h;
	v_daytimeElectricityExport_MWh += max(0,-v_currentPowerElectricity_kW) /1000 * energyModel.p_timeStep_h;
	v_daytimeMethaneImport_MWh += v_currentPowerMethane_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeDieselImport_MWh += v_currentPowerDiesel_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeHydrogenImport_MWh += max(0, v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;
	v_daytimeHydrogenExport_MWh += max(0, -v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;
	
	v_daytimeEnergyConsumed_MWh += v_currentEnergyConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeEnergyProduced_MWh += v_currentEnergyProduction_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeElectricityProduced_MWh += v_currentElectricityProduction_kW / 1000 * energyModel.p_timeStep_h;		
}  /*else { // Nighttime
	v_nighttimeTotalImport_MWh += currentImport_MWh * energyModel.p_timeStep_h;
	v_nighttimeTotalExport_MWh += currentExport_MWh * energyModel.p_timeStep_h;
	v_nighttimeEnergyUsed_MWh += v_currentEnergyConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_nighttimeEnergyProduced_MWh += ( v_currentEnergyProduction_kW/1000 - v_currentEnergyCurtailed_kW/1000 ) * energyModel.p_timeStep_h;
	//v_nighttimePeakElecImport_kW = max(v_nighttimePeakElecImport_kW,v_currentElectricityImport_kW);
	//v_nighttimePeakElecExport_kW = max(v_nighttimePeakElecExport_kW,v_currentElectricityExport_kW);
}  */ // This is done 'cheaper' i f_calculateKPIs as a single calculation at the end of the run, by taking the difference of total yearly quantities and daytime quantities

// Weekday totals. Use overal-totals minus weekday totals to get weekend totals.
if ((energyModel.t_h+(energyModel.v_dayOfWeek1jan - 1)*24) % (24*7) < (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h
	v_weekdayTotalImport_MWh += currentImport_kW/1000 * energyModel.p_timeStep_h;
	v_weekdayTotalExport_MWh += currentExport_kW/1000 * energyModel.p_timeStep_h;
	
	v_weekdayElectricityImport_MWh += max(0,v_currentPowerElectricity_kW) /1000 * energyModel.p_timeStep_h;
	v_weekdayElectricityExport_MWh += max(0,-v_currentPowerElectricity_kW) /1000 * energyModel.p_timeStep_h;
	v_weekdayMethaneImport_MWh += v_currentPowerMethane_kW / 1000 * energyModel.p_timeStep_h;
	v_weekdayDieselImport_MWh += v_currentPowerDiesel_kW / 1000 * energyModel.p_timeStep_h;
	v_weekdayHydrogenImport_MWh += max(0, v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;
	v_weekdayHydrogenExport_MWh += max(0, -v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;
	
	v_weekdayEnergyConsumed_MWh += v_currentEnergyConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_weekdayEnergyProduced_MWh += v_currentEnergyProduction_kW / 1000 * energyModel.p_timeStep_h;
	v_weekdayElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_weekdayElectricityProduced_MWh += v_currentElectricityProduction_kW / 1000 * energyModel.p_timeStep_h;		
} /*else { // Weekend
	v_weekendTotalImport_MWh += currentImport_MWh * energyModel.p_timeStep_h;
	v_weekendTotalExport_MWh += currentExport_MWh * energyModel.p_timeStep_h;
	v_weekendEnergyUsed_MWh += v_currentEnergyConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_weekendEnergyProduced_MWh += ( v_currentEnergyProduction_kW/1000 - v_currentEnergyCurtailed_kW/1000 ) * energyModel.p_timeStep_h;
	//v_nighttimePeakElecImport_kW = max(v_nighttimePeakElecImport_kW,v_currentElectricityImport_kW);
	//v_nighttimePeakElecExport_kW = max(v_nighttimePeakElecExport_kW,v_currentElectricityExport_kW);
} */ // This is done 'cheaper' i f_calculateKPIs as a single calculation at the end of the run, by taking the difference of total yearly quantities and daytime quantities

if (energyModel.t_h > energyModel.p_startHourSummerWeek & energyModel.t_h < energyModel.p_startHourSummerWeek + 24*7) {
	acc_summerElectricityBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerElectricity_kW);
	acc_summerMethaneBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerMethane_kW);
	acc_summerHydrogenBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerHydrogen_kW);
	acc_summerDieselBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerDiesel_kW);
	acc_summerHeatBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerHeat_kW);
	acc_summerTotalImport_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,currentImport_kW);
	acc_summerTotalExport_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,currentExport_kW);
	
	acc_summerEnergyProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentEnergyProduction_kW);
	acc_summerEnergyConsumption_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentEnergyConsumption_kW);
	acc_summerEnergyCurtailed_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentEnergyCurtailed_kW);
	acc_summerElectricityProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentElectricityProduction_kW);
	acc_summerElectricityConsumption_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentElectricityConsumption_kW);
	acc_summerHeatProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentEnergyProductionHeat_kW);	

	acc_summerDeliveryCapacity_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek, p_contractedDeliveryCapacity_kW);
	acc_summerFeedinCapacity_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek, p_contractedFeedinCapacity_kW);
}	

if (energyModel.t_h > energyModel.p_startHourWinterWeek & energyModel.t_h < energyModel.p_startHourWinterWeek + 24*7) {
	acc_winterElectricityBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerElectricity_kW);
	acc_winterMethaneBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerMethane_kW);
	acc_winterHydrogenBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerHydrogen_kW);
	acc_winterDieselBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerDiesel_kW);
	acc_winterHeatBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerHeat_kW);
	acc_winterTotalImport_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,currentImport_kW);
	acc_winterTotalExport_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,currentExport_kW);
	
	acc_winterEnergyProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentEnergyProduction_kW);
	acc_winterEnergyConsumption_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentEnergyConsumption_kW);
	acc_winterEnergyCurtailed_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentEnergyCurtailed_kW);
	acc_winterElectricityProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentElectricityProduction_kW);
	acc_winterElectricityConsumption_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentElectricityConsumption_kW);
	acc_winterHeatProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentEnergyProductionHeat_kW);	

	acc_winterDeliveryCapacity_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek, p_contractedDeliveryCapacity_kW);
	acc_winterFeedinCapacity_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek, p_contractedFeedinCapacity_kW);

}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

v_fixedConsumptionElectric_kW = 0;
for (J_EA j_ea : c_fixedConsumptionElectricAssets) {
	v_fixedConsumptionElectric_kW += j_ea.getLastFlows()[4];
}
//data_baseloadElectricityDemand_kW.update();

v_hydrogenElectricityConsumption_kW = 0;
for (J_EA j_ea : c_electrolyserAssets) {
	v_hydrogenElectricityConsumption_kW += j_ea.getLastFlows()[4];
}
//data_hydrogenElectricityDemand_kW.update();

v_heatPumpElectricityConsumption_kW = 0;
for (J_EA j_ea : c_electricHeatpumpAssets) {
	v_heatPumpElectricityConsumption_kW += j_ea.getLastFlows()[4];
}
//data_heatPumpElectricityDemand_kW.update();

//data_electricCarsDemand_kW.update();
v_evChargingPowerElectric_kW = 0;
for (J_EA j_ea : c_EvAssets) {
	if (j_ea instanceof J_EAEV) {
		if (((J_EAEV)j_ea).vehicleScaling == 0) {
			continue;
		}
	}
	v_evChargingPowerElectric_kW += j_ea.getLastFlows()[4] - j_ea.getLastFlows()[0];
}
//data_electricTrucksDemand_kW.update();
//data_V2GSupply_kW.update();

v_batteryPowerElectric_kW = 0;

for (J_EA j_ea : c_batteryAssets) {
	v_batteryPowerElectric_kW += j_ea.getLastFlows()[4] - j_ea.getLastFlows()[0];
}
//data_neighborhoodBatteryDemand_kW.update();	
//data_neighborhoodBatterySupply_kW.update();	

v_pvProductionElectric_kW = 0;
for (J_EA j_ea : c_pvAssets) {
	v_pvProductionElectric_kW += j_ea.getLastFlows()[0];
}

//data_PVGeneration_kW.update();	

v_windProductionElectric_kW = 0;
for (J_EA j_ea : c_windAssets) {
	v_windProductionElectric_kW += j_ea.getLastFlows()[0];
}
//data_windGeneration_kW.update();	

//Summer week
if (energyModel.t_h >= energyModel.p_startHourSummerWeek && energyModel.t_h < energyModel.p_startHourSummerWeek + 24*7+1){
	data_summerWeekBaseloadElectricityDemand_kW.add(energyModel.t_h, v_fixedConsumptionElectric_kW);
	data_summerWeekHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_heatPumpElectricityConsumption_kW);
	data_summerWeekElectricVehicleDemand_kW.add(energyModel.t_h, max(0,v_evChargingPowerElectric_kW));
	data_summerWeekBatteriesDemand_kW.add(energyModel.t_h, max(0,v_batteryPowerElectric_kW));
	data_summerWeekNaturalGasDemand_kW.add(energyModel.t_h, max(0, v_currentPowerMethane_kW));
	data_summerWeekDieselDemand_kW.add(energyModel.t_h, max(0, v_currentPowerDiesel_kW));
	data_summerWeekHydrogenDemand_kW.add(energyModel.t_h, max(0, v_currentPowerHydrogen_kW));
	
	data_summerWeekPVGeneration_kW.add(energyModel.t_h, v_pvProductionElectric_kW);
	data_summerWeekWindGeneration_kW.add(energyModel.t_h, v_windProductionElectric_kW);
	data_summerWeekBatteriesSupply_kW.add(energyModel.t_h, max(0,-v_batteryPowerElectric_kW));
	data_summerWeekV2GSupply_kW.add(energyModel.t_h, max(0, -v_evChargingPowerElectric_kW));
	data_summerWeekNaturalGasSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerMethane_kW));
	data_summerWeekHydrogenSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerHydrogen_kW));
}

//Winter week
if (energyModel.t_h >= energyModel.p_startHourWinterWeek && energyModel.t_h < energyModel.p_startHourWinterWeek + 24*7+1){
	data_winterWeekBaseloadElectricityDemand_kW.add(energyModel.t_h, v_fixedConsumptionElectric_kW);
	data_winterWeekHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_heatPumpElectricityConsumption_kW);
	data_winterWeekElectricVehicleDemand_kW.add(energyModel.t_h, max(0, v_evChargingPowerElectric_kW));
	data_winterWeekBatteriesDemand_kW.add(energyModel.t_h, max(0, v_batteryPowerElectric_kW));
	data_winterWeekNaturalGasDemand_kW.add(energyModel.t_h, max(0, v_currentPowerMethane_kW));
	data_winterWeekDieselDemand_kW.add(energyModel.t_h, max(0, v_currentPowerDiesel_kW));
	data_winterWeekHydrogenDemand_kW.add(energyModel.t_h, max(0, v_currentPowerHydrogen_kW));
	
	data_winterWeekPVGeneration_kW.add(energyModel.t_h, v_pvProductionElectric_kW);
	data_winterWeekWindGeneration_kW.add(energyModel.t_h, v_windProductionElectric_kW);
	data_winterWeekBatteriesSupply_kW.add(energyModel.t_h, max(0, -v_batteryPowerElectric_kW));
	data_winterWeekV2GSupply_kW.add(energyModel.t_h, max(0, -v_evChargingPowerElectric_kW));
	data_winterWeekNaturalGasSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerMethane_kW));
	data_winterWeekHydrogenSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerHydrogen_kW));
}

// Demand
v_dailyBaseloadElectricityDemand_kW += v_fixedConsumptionElectric_kW;
v_dailyHeatPumpElectricityDemand_kW += v_heatPumpElectricityConsumption_kW;
v_dailyElectricVehicleDemand_kW += max(0,v_evChargingPowerElectric_kW);
v_dailyBatteriesDemand_kW += max(0,v_batteryPowerElectric_kW);
v_dailyNaturalGasDemand_kW += max(0, v_currentPowerMethane_kW);
v_dailyDieselDemand_kW += max(0, v_currentPowerDiesel_kW);
v_dailyHydrogenDemand_kW += max(0, v_currentPowerHydrogen_kW);
//v_dailyDistrictHeatDemand_kWh += 
// Supply
v_dailyPVGeneration_kW += v_pvProductionElectric_kW;
v_dailyWindGeneration_kW += v_windProductionElectric_kW;
v_dailyBatteriesSupply_kW += max(0,-v_batteryPowerElectric_kW);
v_dailyV2GSupply_kW += -min(0,v_evChargingPowerElectric_kW);
v_dailyNaturalGasSupply_kW += max(0, -v_currentPowerMethane_kW);
v_dailyHydrogenSupply_kW += max(0, -v_currentPowerHydrogen_kW);

//v_dailyDistrictHeatSupply_kWh += 

if (energyModel.t_h % 24 == 24-energyModel.p_timeStep_h) {
	//data_annualElectricityDemand_MWh.add(energyModel.t_h, v_dailyElectricityDemand_kWh/(24 / energyModel.p_timeStep_h));
	//data_annualElectricitySupply_MWh.add(energyModel.t_h, v_dailyElectricitySupply_kWh/(24 / energyModel.p_timeStep_h)); 
	// Demand
	data_annualBaseloadElectricityDemand_kW.add(energyModel.t_h, v_dailyBaseloadElectricityDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_dailyHeatPumpElectricityDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualElectricVehicleDemand_kW.add(energyModel.t_h, v_dailyElectricVehicleDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualBatteriesDemand_kW.add(energyModel.t_h, v_dailyBatteriesDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualNaturalGasDemand_kW.add(energyModel.t_h, v_dailyNaturalGasDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualDieselDemand_kW.add(energyModel.t_h, v_dailyDieselDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualHydrogenDemand_kW.add(energyModel.t_h, v_dailyHydrogenDemand_kW/(24 / energyModel.p_timeStep_h));
	//data_annualDistrictHeatSupply_MWh.add(energyModel.t_h, v_dailyDistrictHeatDemand_kWh/(24 / energyModel.p_timeStep_h));
	// Supply
	data_annualPVGeneration_kW.add(energyModel.t_h, v_dailyPVGeneration_kW/(24 / energyModel.p_timeStep_h));
	data_annualWindGeneration_kW.add(energyModel.t_h, v_dailyWindGeneration_kW/(24 / energyModel.p_timeStep_h));
	data_annualBatteriesSupply_kW.add(energyModel.t_h, v_dailyBatteriesSupply_kW/(24 / energyModel.p_timeStep_h));
	data_annualV2GSupply_kW.add(energyModel.t_h, v_dailyV2GSupply_kW/(24 / energyModel.p_timeStep_h));
	data_annualNaturalGasSupply_kW.add(energyModel.t_h, v_dailyNaturalGasSupply_kW/(24 / energyModel.p_timeStep_h));
	data_annualHydrogenSupply_kW.add(energyModel.t_h, v_dailyHydrogenSupply_kW/(24 / energyModel.p_timeStep_h));
	//data_annualDistrictHeatSupply_MWh.add(energyModel.t_h, v_dailyDistrictHeatSupply_kWh/(24 / energyModel.p_timeStep_h));

	// Resetting the daily values
	//v_dailyElectricityDemand_kWh = 0;
	//v_dailyElectricitySupply_kWh = 0;
	v_dailyBaseloadElectricityDemand_kW = 0;
	v_dailyHeatPumpElectricityDemand_kW = 0;
	v_dailyElectricVehicleDemand_kW = 0;
	v_dailyBatteriesDemand_kW = 0;
	v_dailyNaturalGasDemand_kW = 0;
	v_dailyDieselDemand_kW = 0;
	v_dailyHydrogenDemand_kW = 0;
	//v_dailyDistrictHeatDemand_kWh = 0;
	v_dailyPVGeneration_kW = 0;
	v_dailyWindGeneration_kW = 0;
	v_dailyBatteriesSupply_kW = 0;
	v_dailyV2GSupply_kW = 0;
	v_dailyNaturalGasSupply_kW = 0;
	v_dailyHydrogenSupply_kW = 0;
	//v_dailyDistrictHeatSupply_kWh = 0;
}

// Store time series in arrays
acc_annualElectricityBalance_kW.addStep(energyModel.t_h,v_currentPowerElectricity_kW);
acc_annualMethaneBalance_kW.addStep(energyModel.t_h,v_currentPowerMethane_kW);
acc_annualHydrogenBalance_kW.addStep(energyModel.t_h,v_currentPowerHydrogen_kW);
acc_annualDieselBalance_kW.addStep(energyModel.t_h,v_currentPowerDiesel_kW);
acc_annualHeatBalance_kW.addStep(energyModel.t_h,v_currentPowerHeat_kW);
acc_annualTotalImport_kW.addStep(energyModel.t_h,currentImport_kW);
acc_annualTotalExport_kW.addStep(energyModel.t_h,currentExport_kW);

acc_annualEnergyProduction_kW.addStep(energyModel.t_h,v_currentEnergyProduction_kW);
acc_annualEnergyConsumption_kW.addStep(energyModel.t_h,v_currentEnergyConsumption_kW);
acc_annualEnergyCurtailed_kW.addStep(energyModel.t_h,v_currentEnergyCurtailed_kW);
acc_annualElectricityProduction_kW.addStep(energyModel.t_h,v_currentElectricityProduction_kW);
acc_annualElectricityConsumption_kW.addStep(energyModel.t_h,v_currentElectricityConsumption_kW);
acc_annualHeatProduction_kW.addStep(energyModel.t_h,v_currentEnergyProductionHeat_kW);

//a_annualElectricityBalance_kW[energyModel.v_timeStepsElapsed] = v_currentPowerElectricity_kW;
//a_annualMethaneBalance_kW[energyModel.v_timeStepsElapsed] = v_currentPowerMethane_kW;
//a_annualHydrogenBalance_kW[energyModel.v_timeStepsElapsed] = v_currentPowerHydrogen_kW;
//a_annualDieselBalance_kW[energyModel.v_timeStepsElapsed] = v_currentPowerDiesel_kW;
//a_annualHeatBalance_kW[energyModel.v_timeStepsElapsed] = v_currentPowerHeat_kW;
//a_annualTotalImport_kW[energyModel.v_timeStepsElapsed] = currentImport_kW;//max(0,v_currentPowerElectricity_kW) + max(0,v_currentPowerMethane_kW) + max(0, v_currentPowerHydrogen_kW) + max(0,v_currentPowerDiesel_kW) + max(0,v_currentPowerHeat_kW);
//a_annualTotalExport_kW[energyModel.v_timeStepsElapsed] = currentExport_kW;//max(0,-v_currentPowerElectricity_kW) + max(0,-v_currentPowerMethane_kW) + max(0, -v_currentPowerHydrogen_kW) + max(0,-v_currentPowerDiesel_kW) + max(0,-v_currentPowerHeat_kW);

//a_annualEnergyProduction_kW[energyModel.v_timeStepsElapsed] = v_currentEnergyProduction_kW;
//a_annualEnergyConsumption_kW[energyModel.v_timeStepsElapsed] = v_currentEnergyConsumption_kW;
//a_annualEnergyCurtailed_kW[energyModel.v_timeStepsElapsed] = v_currentEnergyCurtailed_kW;
//a_annualElectricityProduction_kW[energyModel.v_timeStepsElapsed] = v_currentElectricityProduction_kW;
//a_annualElectricityConsumption_kW[energyModel.v_timeStepsElapsed] = v_currentElectricityConsumption_kW;
//a_annualHeatProduction_kW[energyModel.v_timeStepsElapsed] = v_currentEnergyProductionHeat_kW;

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722584668566</Id>
					<Name><![CDATA[f_setActive]]></Name>
					<Description><![CDATA[Function to pause a gridconnection so it is not operated or counted towards totals in the energy model.]]></Description>
					<X>890</X><Y>710</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[setActive]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[if((energyModel.c_pausedGridConnections.contains(this) && !setActive) || 
  (!energyModel.c_pausedGridConnections.contains(this) && setActive)){
	return;
}


if (!setActive) {
	energyModel.c_gridConnections.remove(this);
	energyModel.c_pausedGridConnections.add(this);
	
	// Set GIS Region visibility
	for (GIS_Object obj : c_connectedGISObjects) {
		obj.gisRegion.setVisible(false);
	}
	
	
	// update GN parents' wind / solar totals
	l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, v_totalInstalledPVPower_kW, false);
	l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, v_totalInstalledWindPower_kW, false);
	energyModel.v_totalInstalledPVPower_kW -= v_totalInstalledPVPower_kW;
	energyModel.v_totalInstalledWindPower_kW -= v_totalInstalledWindPower_kW;
	
	// Reset Connection Capacity to default
	f_nfatoSetConnectionCapacity(true);
	
	// Is setting all of these to zero overkill?
	v_previousPowerElectricity_kW = 0;
	v_previousPowerHeat_kW = 0;
	v_currentPowerElectricity_kW = 0;
	v_currentPowerMethane_kW = 0;
	v_currentPowerHydrogen_kW = 0;
	v_currentPowerHeat_kW = 0;
	v_currentPowerDiesel_kW = 0;
	v_currentElectricityConsumption_kW = 0;
	v_currentElectricityProduction_kW = 0;
	v_currentEnergyConsumption_kW = 0;
	v_currentEnergyProduction_kW = 0;
	v_currentEnergyCurtailed_kW = 0;
	v_currentEnergyProductionHeat_kW = 0;
	v_fixedConsumptionElectric_kW = 0;
	v_electricHobConsumption_kW = 0;
	v_heatPumpElectricityConsumption_kW = 0;
	v_hydrogenElectricityConsumption_kW = 0;
	v_evChargingPowerElectric_kW = 0;
	v_batteryPowerElectric_kW = 0;
	v_windProductionElectric_kW = 0;
	v_pvProductionElectric_kW = 0;
	v_conversionPowerElectric_kW = 0;
	
}
else {
	energyModel.c_gridConnections.add(this);
	energyModel.c_pausedGridConnections.remove(this);

	// Set GIS Region visibility
	for (GIS_Object obj : c_connectedGISObjects) {
		obj.gisRegion.setVisible(true);
	}
	
	// Set Connection Capacity according to NFATO
	f_nfatoSetConnectionCapacity(false);
	
	// update GN parents' wind / solar totals (will be wrong if you changed your totals while paused)
	l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, v_totalInstalledPVPower_kW, true);
	l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, v_totalInstalledWindPower_kW, true);
	energyModel.v_totalInstalledPVPower_kW += v_totalInstalledPVPower_kW;
	energyModel.v_totalInstalledWindPower_kW += v_totalInstalledWindPower_kW;
}

//Update the 'isActive' variable
v_isActive = setActive;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725455130676</Id>
					<Name><![CDATA[f_getChargeDeadline]]></Name>
					<X>960</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ev]]></Name>
						<Type><![CDATA[J_EAEV]]></Type>
					</Parameter>
					<Body><![CDATA[double chargeNeedForNextTrip_kWh = max(0, ev.getEnergyNeedForNextTrip_kWh() - ev.getStorageCapacity_kWh()*ev.getCurrentStateOfCharge());
double maxChargingPower_kW = ev.getElectricCapacity_kW();

return floor((ev.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * energyModel.p_timeStep_h;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725629047745</Id>
					<Name><![CDATA[f_batteryManagementSimple]]></Name>
					<X>1230</X><Y>840</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//traceln("Battery storage capacity: " + ((J_EAStorageElectric)p_batteryAsset.j_ea).getStorageCapacity_kWh());
if (p_batteryAsset.getStorageCapacity_kWh() != 0){

	double safetyMargin_fr = 0.95; // fraction of connection capacity that we use
	double power_fr = 0;
	double capacityElectric_kW = p_batteryAsset.getCapacityElectric_kW();
	
	if (v_currentPowerElectricity_kW > p_contractedFeedinCapacity_kW * safetyMargin_fr) {
		// discharge
		double dischargeNeeded_kW = v_currentPowerElectricity_kW - p_contractedFeedinCapacity_kW * safetyMargin_fr;
		power_fr = - dischargeNeeded_kW / capacityElectric_kW;
	}
	else if (v_currentPowerElectricity_kW < p_contractedDeliveryCapacity_kW * safetyMargin_fr) {
		// charge
		double chargeAvailable_kW = p_contractedDeliveryCapacity_kW * safetyMargin_fr - v_currentPowerElectricity_kW;
		power_fr = chargeAvailable_kW / capacityElectric_kW;
	}

	
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, power_fr));
}]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1704787879881</Id>
					<Name><![CDATA[data_annualElectricityBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1790</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1705918625852</Id>
					<Name><![CDATA[data_liveElectricityBalance_kW]]></Name>
					<X>150</X><Y>2040</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867475069</Id>
					<Name><![CDATA[data_annualMethaneBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1810</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867489505</Id>
					<Name><![CDATA[data_annualHydrogenBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1830</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867497741</Id>
					<Name><![CDATA[data_annualDieselBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1850</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867508833</Id>
					<Name><![CDATA[data_annualHeatBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1870</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867536337</Id>
					<Name><![CDATA[data_annualElectricityProduction_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1970</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867546001</Id>
					<Name><![CDATA[data_annualElectricityConsumption_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1990</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867575148</Id>
					<Name><![CDATA[data_annualEnergyProduction_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1910</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867575151</Id>
					<Name><![CDATA[data_annualEnergyConsumption_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1930</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867641724</Id>
					<Name><![CDATA[data_annualHeatProduction_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>2010</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1706867673477</Id>
					<Name><![CDATA[data_annualEnergyCurtailed_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>1950</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>35040</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013814</Id>
					<Name><![CDATA[data_naturalGasDemand_kW]]></Name>
					<X>150</X><Y>1760</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,v_currentPowerMethane_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013830</Id>
					<Name><![CDATA[data_heatPumpElectricityDemand_kW]]></Name>
					<X>150</X><Y>1840</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0, v_heatPumpElectricityConsumption_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013840</Id>
					<Name><![CDATA[data_windGeneration_kW]]></Name>
					<X>150</X><Y>1940</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_windProductionElectric_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013851</Id>
					<Name><![CDATA[data_V2GSupply_kW]]></Name>
					<X>150</X><Y>1980</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0, -v_evChargingPowerElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013861</Id>
					<Name><![CDATA[data_PVGeneration_kW]]></Name>
					<X>150</X><Y>1920</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_pvProductionElectric_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013871</Id>
					<Name><![CDATA[data_batteryCharging_kW]]></Name>
					<X>150</X><Y>1880</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0, v_batteryPowerElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013882</Id>
					<Name><![CDATA[data_baseloadElectricityDemand_kW]]></Name>
					<X>150</X><Y>1800</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_fixedConsumptionElectric_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013892</Id>
					<Name><![CDATA[data_totalDemand_kW]]></Name>
					<X>150</X><Y>2000</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentEnergyConsumption_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013902</Id>
					<Name><![CDATA[data_dieselDemand_kW]]></Name>
					<X>150</X><Y>1779</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,v_currentPowerDiesel_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013912</Id>
					<Name><![CDATA[data_electricVehicleDemand_kW]]></Name>
					<X>150</X><Y>1860</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,v_evChargingPowerElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013922</Id>
					<Name><![CDATA[data_batteryDischarging_kW]]></Name>
					<X>150</X><Y>1960</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0, -v_batteryPowerElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508013931</Id>
					<Name><![CDATA[data_hydrogenElectricityDemand_kW]]></Name>
					<X>150</X><Y>1820</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0, v_hydrogenElectricityConsumption_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708508354305</Id>
					<Name><![CDATA[data_totalSupply_kW]]></Name>
					<X>150</X><Y>2020</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentEnergyProduction_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086040026</Id>
					<Name><![CDATA[data_annualHeatPumpElectricityDemand_kW]]></Name>
					<X>1070</X><Y>2130</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086040034</Id>
					<Name><![CDATA[data_annualWindGeneration_kW]]></Name>
					<X>1070</X><Y>2310</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086040041</Id>
					<Name><![CDATA[data_annualV2GSupply_kW]]></Name>
					<X>1070</X><Y>2350</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086040046</Id>
					<Name><![CDATA[data_annualPVGeneration_kW]]></Name>
					<X>1070</X><Y>2290</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086040051</Id>
					<Name><![CDATA[data_annualBatteriesDemand_kW]]></Name>
					<X>1070</X><Y>2170</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086040056</Id>
					<Name><![CDATA[data_annualBaseloadElectricityDemand_kW]]></Name>
					<X>1070</X><Y>2110</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086040068</Id>
					<Name><![CDATA[data_annualElectricVehicleDemand_kW]]></Name>
					<X>1070</X><Y>2150</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086040072</Id>
					<Name><![CDATA[data_annualBatteriesSupply_kW]]></Name>
					<X>1070</X><Y>2330</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086750378</Id>
					<Name><![CDATA[data_annualElectricitySupply_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1070</X><Y>2090</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1715155200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715086752844</Id>
					<Name><![CDATA[data_annualElectricityDemand_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1070</X><Y>2070</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1715155200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715088549909</Id>
					<Name><![CDATA[data_summerWeekHeatPumpElectricityDemand_kW]]></Name>
					<X>1490</X><Y>1960</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715088549918</Id>
					<Name><![CDATA[data_summerWeekWindGeneration_kW]]></Name>
					<X>1490</X><Y>2130</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715088549924</Id>
					<Name><![CDATA[data_summerWeekV2GSupply_kW]]></Name>
					<X>1490</X><Y>2170</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715088549928</Id>
					<Name><![CDATA[data_summerWeekPVGeneration_kW]]></Name>
					<X>1490</X><Y>2110</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715088549933</Id>
					<Name><![CDATA[data_summerWeekBatteriesDemand_kW]]></Name>
					<X>1490</X><Y>2000</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715088549939</Id>
					<Name><![CDATA[data_summerWeekBaseloadElectricityDemand_kW]]></Name>
					<X>1490</X><Y>1940</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715088549953</Id>
					<Name><![CDATA[data_summerWeekElectricVehicleDemand_kW]]></Name>
					<X>1490</X><Y>1980</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715088549958</Id>
					<Name><![CDATA[data_summerWeekBatteriesSupply_kW]]></Name>
					<X>1490</X><Y>2150</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715242538012</Id>
					<Name><![CDATA[data_annualDieselDemand_kW]]></Name>
					<X>1070</X><Y>2210</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>366</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715242541763</Id>
					<Name><![CDATA[data_annualHydrogenDemand_kW]]></Name>
					<X>1070</X><Y>2230</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715242544164</Id>
					<Name><![CDATA[data_annualDisctricHeatDemand_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1070</X><Y>2250</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715242546547</Id>
					<Name><![CDATA[data_annualNaturalGasSupply_kW]]></Name>
					<X>1070</X><Y>2370</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715242548516</Id>
					<Name><![CDATA[data_annualDistrictHeatSupply_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1070</X><Y>2410</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715242681124</Id>
					<Name><![CDATA[data_annualNaturalGasDemand_kW]]></Name>
					<X>1070</X><Y>2190</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244201229</Id>
					<Name><![CDATA[data_summerWeekNaturalGasDemand_kW]]></Name>
					<X>1490</X><Y>2020</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244206171</Id>
					<Name><![CDATA[data_summerWeekDieselDemand_kW]]></Name>
					<X>1490</X><Y>2040</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244209611</Id>
					<Name><![CDATA[data_summerWeekHydrogenDemand_kW]]></Name>
					<X>1490</X><Y>2060</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244217843</Id>
					<Name><![CDATA[data_summerWeekNaturalGasSupply_kW]]></Name>
					<X>1490</X><Y>2190</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361092</Id>
					<Name><![CDATA[data_winterWeekHeatPumpElectricityDemand_kW]]></Name>
					<X>1490</X><Y>2271</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361101</Id>
					<Name><![CDATA[data_winterWeekWindGeneration_kW]]></Name>
					<X>1490</X><Y>2441</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361108</Id>
					<Name><![CDATA[data_winterWeekV2GSupply_kW]]></Name>
					<X>1490</X><Y>2481</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361117</Id>
					<Name><![CDATA[data_winterWeekPVGeneration_kW]]></Name>
					<X>1490</X><Y>2421</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361125</Id>
					<Name><![CDATA[data_winterWeekBatteriesDemand_kW]]></Name>
					<X>1490</X><Y>2311</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361131</Id>
					<Name><![CDATA[data_winterWeekBaseloadElectricityDemand_kW]]></Name>
					<X>1490</X><Y>2251</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361139</Id>
					<Name><![CDATA[data_winterWeekElectricVehicleDemand_kW]]></Name>
					<X>1490</X><Y>2291</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361147</Id>
					<Name><![CDATA[data_winterWeekBatteriesSupply_kW]]></Name>
					<X>1490</X><Y>2461</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361154</Id>
					<Name><![CDATA[data_winterWeekNaturalGasDemand_kW]]></Name>
					<X>1490</X><Y>2331</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361162</Id>
					<Name><![CDATA[data_winterWeekDieselDemand_kW]]></Name>
					<X>1490</X><Y>2351</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361171</Id>
					<Name><![CDATA[data_winterWeekHydrogenDemand_kW]]></Name>
					<X>1490</X><Y>2371</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715244361177</Id>
					<Name><![CDATA[data_winterWeekNaturalGasSupply_kW]]></Name>
					<X>1490</X><Y>2501</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715673606961</Id>
					<Name><![CDATA[data_annualHydrogenSupply_kW]]></Name>
					<X>1070</X><Y>2390</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715673624817</Id>
					<Name><![CDATA[data_summerWeekHydrogenSupply_kW]]></Name>
					<X>1490</X><Y>2210</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715673637590</Id>
					<Name><![CDATA[data_winterWeekHydrogenSupply_kW]]></Name>
					<X>1490</X><Y>2520</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715675213282</Id>
					<Name><![CDATA[data_hydrogenSupply_kW]]></Name>
					<X>330</X><Y>2000</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0, -v_currentPowerHydrogen_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1717414711416</Id>
					<Name><![CDATA[data_hydrogenDemand_kW]]></Name>
					<X>150</X><Y>1900</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0, v_currentPowerHydrogen_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1721119365065</Id>
					<Name><![CDATA[data_gridCapacityDemand_kW]]></Name>
					<X>150</X><Y>2060</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1712736000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[p_contractedDeliveryCapacity_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1721119365072</Id>
					<Name><![CDATA[data_gridCapacitySupply_kW]]></Name>
					<X>430</X><Y>2060</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1712736000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[-p_contractedFeedinCapacity_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1726222586985</Id>
					<Name><![CDATA[data_electricHobDemand_kW]]></Name>
					<X>150</X><Y>2080</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_electricHobConsumption_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1726238177866</Id>
					<Name><![CDATA[data_districtHeatDelivery_kW]]></Name>
					<X>150</X><Y>2100</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentPowerHeat_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<AgentLinks>
				<AgentLink>
					<Id>1658499438198</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>40</X><Y>-130</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[TreeMap<Double, Double>]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1658499472169</Id>
					<Name><![CDATA[superConnection]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>40</X><Y>-90</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1658499483833</Id>
					<Name><![CDATA[assetLinks]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>40</X><Y>-170</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1671020599243</Id>
					<Name><![CDATA[l_ownerActor]]></Name>
					<X>56</X><Y>110</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>SINGLE_LINK</AgentLinkType>
					<AgentReferenceId>1674662535386</AgentReferenceId>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<BidirectionalPeerId>1704289471860</BidirectionalPeerId>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1671020640665</Id>
					<Name><![CDATA[l_parentNodeElectric]]></Name>
					<X>57</X><Y>140</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>SINGLE_LINK</AgentLinkType>
					<AgentReferenceId>1658477288308</AgentReferenceId>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1671020671349</Id>
					<Name><![CDATA[l_parentNodeHeat]]></Name>
					<X>58</X><Y>168</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>SINGLE_LINK</AgentLinkType>
					<AgentReferenceId>1658477288308</AgentReferenceId>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1704894941623</Id>
					<Name><![CDATA[l_connectedBuildings]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>40</X><Y>-20</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentReferenceId>1676382560905</AgentReferenceId>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1693310211914</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>40</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1658499438202</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1674329507571</Id>
					<Name><![CDATA[rectangle3]]></Name>
					<X>20</X><Y>870</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>780</Width>
					<Height>740</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-983041</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1671027904662</Id>
					<Name><![CDATA[rectangle]]></Name>
					<X>100</X><Y>940</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>280</Width>
					<Height>610</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-131341</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1667905599124</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[ID & connections]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667905621972</Id>
					<Name><![CDATA[line]]></Name>
					<X>20</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1667905636672</Id>
					<Name><![CDATA[line1]]></Name>
					<X>250</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667905636674</Id>
					<Name><![CDATA[text1]]></Name>
					<X>280</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Characteristics]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667905687082</Id>
					<Name><![CDATA[line2]]></Name>
					<X>570</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667905687085</Id>
					<Name><![CDATA[text2]]></Name>
					<X>620</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Assets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1667905952899</Id>
					<Name><![CDATA[text4]]></Name>
					<X>930</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667905952903</Id>
					<Name><![CDATA[line4]]></Name>
					<X>880</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1667915385672</Id>
					<Name><![CDATA[line5]]></Name>
					<X>860</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>90</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667915403157</Id>
					<Name><![CDATA[text5]]></Name>
					<X>840</X><Y>86</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>270.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Init]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1667915419987</Id>
					<Name><![CDATA[text6]]></Name>
					<X>840</X><Y>290</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>270.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Occuring]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667915419990</Id>
					<Name><![CDATA[line6]]></Name>
					<X>860</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>190</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1667918827406</Id>
					<Name><![CDATA[line7]]></Name>
					<X>-220</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667918827418</Id>
					<Name><![CDATA[text7]]></Name>
					<X>-180</X><Y>360</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Not visible]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<TimePlot>
					<Id>1668439095469</Id>
					<Name><![CDATA[pl_powerFlows]]></Name>
					<X>0</X><Y>570</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1668499200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[15]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>500</Width>
					<Height>280</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>420</Width>
						<Height>160</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>60</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Consumption assets demand [kW]]]></Title>
					<Id>1668439095463</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-10496</Color>
					<Expression2><![CDATA[v_fixedConsumptionElectric_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Production assets output [kW]]]></Title>
					<Id>1668439095464</Id>
					<Expression><![CDATA[my_dataset1]]></Expression>
					<Color>-3137392</Color>
					<Expression2><![CDATA[v_pvProductionElectric_kW + v_windProductionElectric_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Conversion assets demand [kW]]]></Title>
					<Id>1668439095465</Id>
					<Expression><![CDATA[my_dataset2]]></Expression>
					<Color>-32944</Color>
					<Expression2><![CDATA[v_conversionPowerElectric_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[EV charging demand [kW]]]></Title>
					<Id>1668439095466</Id>
					<Expression><![CDATA[my_dataset3]]></Expression>
					<Color>-13447886</Color>
					<Expression2><![CDATA[v_evChargingPowerElectric_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>2.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Battery load [kW]]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset4]]></Expression>
					<Color>-8388608</Color>
					<Expression2><![CDATA[v_batteryPowerElectric_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[NET LOAD]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset5]]></Expression>
					<Color>-16776961</Color>
					<Expression2><![CDATA[v_currentPowerElectricity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Grid connection limit]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset6]]></Expression>
					<Color>-65536</Color>
					<Expression2><![CDATA[p_contractedDeliveryCapacity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[ Grid connection limit]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset7]]></Expression>
					<Color>-65536</Color>
					<Expression2><![CDATA[- p_contractedFeedinCapacity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Current load low passed]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset8]]></Expression>
					<Color>-16728065</Color>
					<Expression2><![CDATA[v_currentLoadLowPassed_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>672</SamplesToKeep>
					<TimeWindowExpression><![CDATA[48]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
				<Text>
					<Id>1670512816306</Id>
					<Name><![CDATA[text10]]></Name>
					<X>130</X><Y>570</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electricity profiles within grid connection]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>16</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1671027383282</Id>
					<Name><![CDATA[text9]]></Name>
					<X>230</X><Y>922</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electricity]]></Text>
					<Font>
						<Name>Arial</Name>
						<Size>14</Size>
						<Style>2</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1671027582352</Id>
					<Name><![CDATA[text12]]></Name>
					<X>170</X><Y>1000</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Consumption or production]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1671027607665</Id>
					<Name><![CDATA[text13]]></Name>
					<X>200</X><Y>1170</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Production]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1671027820068</Id>
					<Name><![CDATA[line8]]></Name>
					<X>120</X><Y>1251</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>230</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1671027834321</Id>
					<Name><![CDATA[text14]]></Name>
					<X>230</X><Y>1237</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Cumulative power on this gridconnection]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Rectangle>
					<Id>1671028034002</Id>
					<Name><![CDATA[rectangle1]]></Name>
					<X>410</X><Y>940</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>260</Width>
					<Height>250</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-134146</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1671028103716</Id>
					<Name><![CDATA[text15]]></Name>
					<X>200</X><Y>1320</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electricity totals]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1671033393207</Id>
					<Name><![CDATA[text16]]></Name>
					<X>200</X><Y>950</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Consumption]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1671033508415</Id>
					<Name><![CDATA[line9]]></Name>
					<X>120</X><Y>1310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>230</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1671033654309</Id>
					<Name><![CDATA[text17]]></Name>
					<X>530</X><Y>920</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Heat]]></Text>
					<Font>
						<Name>Arial</Name>
						<Size>14</Size>
						<Style>2</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1671033701021</Id>
					<Name><![CDATA[text18]]></Name>
					<X>530</X><Y>1230</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Combustibles]]></Text>
					<Font>
						<Name>Arial</Name>
						<Size>14</Size>
						<Style>2</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Rectangle>
					<Id>1671033701024</Id>
					<Name><![CDATA[rectangle2]]></Name>
					<X>410</X><Y>1250</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>260</Width>
					<Height>300</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-786696</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1674329550133</Id>
					<Name><![CDATA[text8]]></Name>
					<X>300</X><Y>880</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Energy balance monitor]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>20</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1696868322710</Id>
					<Name><![CDATA[va_gridConnection]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1658499506320</Id>
			<Name><![CDATA[UI_EnergyAsset]]></Name>
			<AdditionalClassCode><![CDATA[/*@Override
	public String toString() {
		return
			"EA " + this.getIndex() + "; " +
			 p_energyAssetType.toString() + "; " +
			"r = " + roundToDecimal(v_powerFraction_fr, 3) + "; " +
			"kW = " + roundToDecimal((v_currentConsumptionElectricity_kW - v_currentProductionElectricity_kW 
			+ v_currentConsumptionHeat_kW - v_currentProductionHeat_kW
			+ v_currentConsumptionHydrogen_kW - v_currentProductionHydrogen_kW
			+ v_currentConsumptionMethane_kW - v_currentProductionMethane_kW
			+ v_currentConsumptionDiesel_kW),2);
	}*/]]></AdditionalClassCode>
			<StartupCode><![CDATA[// f_connectToParentNode() --> made explicit function in main to avoid nested functions for easy profiling
//if( assetCategory == PRODUCTION){
//	main.c_productionAssets.add(this);
//}

f_setCoordinatesUIElements();
]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1658499506318</Id>
				<Name><![CDATA[1658499506318]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1658499506316</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1658499506319</CurrentLevel>
			<ConnectionsId>1658499506315</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1658750229384</Id>
					<Name><![CDATA[v_currentProductionElectricity_kW]]></Name>
					<X>90</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1658750229388</Id>
					<Name><![CDATA[v_currentPowerElectricLost_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>90</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659092523267</Id>
					<Name><![CDATA[v_currentProductionHeat_kW]]></Name>
					<X>90</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659092541428</Id>
					<Name><![CDATA[v_currentConsumptionElectricity_kW]]></Name>
					<X>90</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659092596831</Id>
					<Name><![CDATA[v_currentConsumptionHeat_kW]]></Name>
					<X>90</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659092615449</Id>
					<Name><![CDATA[v_currentConsumptionMethane_kW]]></Name>
					<X>90</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659342082106</Id>
					<Name><![CDATA[v_powerFraction_fr]]></Name>
					<X>90</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659345815346</Id>
					<Name><![CDATA[v_currentProductionMethane_kW]]></Name>
					<X>90</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659365919790</Id>
					<Name><![CDATA[v_currentStateOfCharge_r]]></Name>
					<X>90</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659513282177</Id>
					<Name><![CDATA[v_currentProductionHydrogen_kW]]></Name>
					<X>90</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1659513295338</Id>
					<Name><![CDATA[v_currentConsumptionHydrogen_kW]]></Name>
					<X>90</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668601315863</Id>
					<Name><![CDATA[v_currentConsumptionDiesel_kW]]></Name>
					<X>90</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1659090642877</Id>
					<Name><![CDATA[j_ea]]></Name>
					<X>90</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EA]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1659090642875</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660130635726</Id>
					<Name><![CDATA[p_parentAgent]]></Name>
					<X>90</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Agent]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="AccelerationUnits"><![CDATA[MPS_SQ]]></UnitOfValue>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660130635724</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1659347079551</Id>
					<Name><![CDATA[p_energyAssetType]]></Name>
					<X>90</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1659347079549</Id>
							<Label><![CDATA[p_energyAssetType]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1666983925485</Id>
					<Name><![CDATA[p_assetName]]></Name>
					<X>90</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1666983925483</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1715953134119</Id>
					<Name><![CDATA[c_EAs]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>310</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1716200767637</Id>
					<Name><![CDATA[e_calculateEnergyBalance]]></Name>
					<Description><![CDATA[Trigger voor energieberekeningen in de model backbone. Volgorde is belangrijk voor consistente resultaten.

@since: Sprint 6
@author: Jorrit]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>310</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1/p_timeStep_h]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_HOUR]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1658563200000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[0]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[0.25]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[f_updateStackChartData();]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1693296929778</Id>
					<Name><![CDATA[f_updateData]]></Name>
					<X>730</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (j_ea != null) {
	/*
	v_currentProductionElectricity_kW = j_ea.electricityProduction_kW;
	v_currentConsumptionElectricity_kW = j_ea.electricityConsumption_kW;
	v_currentProductionMethane_kW = j_ea.methaneProduction_kW;
	v_currentConsumptionMethane_kW = j_ea.methaneConsumption_kW;
	v_currentProductionHydrogen_kW = j_ea.hydrogenProduction_kW;
	v_currentConsumptionHydrogen_kW = j_ea.hydrogenConsumption_kW;
	v_currentProductionHeat_kW = j_ea.heatProduction_kW;
	v_currentConsumptionHeat_kW = j_ea.heatConsumption_kW;
	v_currentConsumptionDiesel_kW = j_ea.dieselConsumption_kW;
	v_currentStateOfCharge_r = j_ea.getCurrentStateOfCharge();
	v_powerFraction_fr = j_ea.v_powerFraction_fr;
	*/
	plot.updateData();
	//data_currentConsumptionElectricity_kW.update();
	//data_currentProductionElectricity_kW.update();
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1693297254281</Id>
					<Name><![CDATA[f_initializeData]]></Name>
					<X>730</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[EA]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[j_ea = EA;
p_energyAssetType = j_ea.energyAssetType;
p_assetName = j_ea.energyAssetName;
p_parentAgent = j_ea.parentAgent;
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713969761331</Id>
					<Name><![CDATA[f_addFlows]]></Name>
					<X>730</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[arr]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[v_currentProductionElectricity_kW = arr[0];
v_currentConsumptionElectricity_kW = arr[4];
v_currentProductionMethane_kW = arr[1];
v_currentConsumptionMethane_kW = arr[5];
v_currentProductionHydrogen_kW = arr[2];
v_currentConsumptionHydrogen_kW = arr[6];
v_currentProductionHeat_kW = arr[3];
v_currentConsumptionHeat_kW = arr[7];
v_currentConsumptionDiesel_kW = arr[8];]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714653114094</Id>
					<Name><![CDATA[f_setCoordinatesUIElements]]></Name>
					<X>730</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//plot.setX(0);
//plot.setY(0);
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714654478601</Id>
					<Name><![CDATA[f_setVisibilities]]></Name>
					<X>730</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[isVisible]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[plot.setVisible(isVisible);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715953163186</Id>
					<Name><![CDATA[f_updateStackChartData]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>90</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double totalElectricityProduction_kW = 0;
double totalElectricityConsumption_kW = 0;

for (J_EA ea : c_EAs) {
	totalElectricityProduction_kW += ea.electricityProduction_kW;
	totalElectricityConsumption_kW += ea.electricityConsumption_kW;
	traceln("ea consumption: " + ea.electricityConsumption_kW);
}

data_currentProductionElectricity_kW.add(totalElectricityProduction_kW);
data_currentConsumptionElectricity_kW.add(totalElectricityConsumption_kW);
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722513456426</Id>
					<Name><![CDATA[f_removeFlows]]></Name>
					<X>830</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[arr]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[v_currentProductionElectricity_kW += arr[0];
v_currentConsumptionElectricity_kW += arr[4];
v_currentProductionMethane_kW += arr[1];
v_currentConsumptionMethane_kW += arr[5];
v_currentProductionHydrogen_kW += arr[2];
v_currentConsumptionHydrogen_kW += arr[6];
v_currentProductionHeat_kW += arr[3];
v_currentConsumptionHeat_kW += arr[7];
v_currentConsumptionDiesel_kW += arr[8];]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1715953048233</Id>
					<Name><![CDATA[data_currentProductionElectricity_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>90</X><Y>800</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1716019200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>true</FreezeXAxis>
					<VerticalAxisExpression><![CDATA[v_currentProductionElectricity_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1715953093443</Id>
					<Name><![CDATA[data_currentConsumptionElectricity_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>90</X><Y>830</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1716019200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>true</FreezeXAxis>
					<VerticalAxisExpression><![CDATA[v_currentConsumptionElectricity_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<AgentLinks>
				<AgentLink>
					<Id>1658499506315</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1658499725706</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1658499506319</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Line>
					<Id>1667919118778</Id>
					<Name><![CDATA[line4]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>710</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667919118781</Id>
					<Name><![CDATA[text4]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>760</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667919118783</Id>
					<Name><![CDATA[line5]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>700</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>100</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667919118785</Id>
					<Name><![CDATA[text6]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>680</X><Y>234</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>270.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Occuring]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667919118787</Id>
					<Name><![CDATA[line6]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>700</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>70</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667919118789</Id>
					<Name><![CDATA[text5]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>680</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>270.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Init]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667919228650</Id>
					<Name><![CDATA[line]]></Name>
					<X>80</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667919228652</Id>
					<Name><![CDATA[text1]]></Name>
					<X>110</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[ID & connections]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667919281533</Id>
					<Name><![CDATA[line1]]></Name>
					<X>80</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667919281535</Id>
					<Name><![CDATA[text2]]></Name>
					<X>110</X><Y>220</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Current status]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<TimePlot>
					<Id>1668420180250</Id>
					<Name><![CDATA[plot]]></Name>
					<X>430</X><Y>300</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1668499200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[15]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>500</Width>
					<Height>280</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>420</Width>
						<Height>160</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>60</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>HOUR</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Electricity Consumption]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-2448096</Color>
					<Expression2><![CDATA[v_currentConsumptionElectricity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Electricity Production]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset1]]></Expression>
					<Color>-9728477</Color>
					<Expression2><![CDATA[v_currentProductionElectricity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[State of Charge]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset2]]></Expression>
					<Color>-16728065</Color>
					<Expression2><![CDATA[v_currentStateOfCharge_r]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>768</SamplesToKeep>
					<TimeWindowExpression><![CDATA[168]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>dd_MM</LabelFormat>
    			</TimePlot>
				<Text>
					<Id>1668420196225</Id>
					<Name><![CDATA[text3]]></Name>
					<X>560</X><Y>300</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Graph can be ignored for non-debug runs]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<TimePlot>
					<Id>1676462939101</Id>
					<Name><![CDATA[temperaturePlot]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>400</X><Y>570</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1676534400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>440</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>360</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[50]]></VerScaleToExpression>
					<VerScaleType>FIXED</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Temperature]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-16728065</Color>
					<Expression2><![CDATA[j_ea.getCurrentTemperature()]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Buffer SoC]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset1]]></Expression>
					<Color>-4565549</Color>
					<Expression2><![CDATA[v_currentStateOfCharge_r]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>1000</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1693296357894</Id>
					<Name><![CDATA[ed_assetNr]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>460</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[int assetNr = ed_assetNr.getIntValue();
j_ea = energyModel.c_energyAssets.get(assetNr);
p_energyAssetType = j_ea.energyAssetType;
p_assetName = j_ea.energyAssetName;
p_parentAgent = j_ea.parentAgent;
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA["0"]]></DefaultValueCode>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1693296387281</Id>
					<Name><![CDATA[text7]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>450</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Energy Asset Number]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<TimeStackChart>
					<Id>1715953590721</Id>
					<Name><![CDATA[chart]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>930</X><Y>280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1716019200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>500</Width>
					<Height>280</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>420</Width>
						<Height>190</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<DatasetExpression>
					<Id>1715953592765</Id>
					<Expression><![CDATA[data_currentConsumptionElectricity_kW]]></Expression>
					<Color>-40121</Color>
					<Expression2><![CDATA[0]]></Expression2>
					<Expression2Flag>false</Expression2Flag>
							<Title><![CDATA[Consumption]]></Title>
					</DatasetExpression>
					<DatasetExpression>
					<Id>1715953622911</Id>
					<Expression><![CDATA[data_currentProductionElectricity_kW]]></Expression>
					<Color>-16744448</Color>
					<Expression2><![CDATA[0]]></Expression2>
					<Expression2Flag>false</Expression2Flag>
							<Title><![CDATA[Production]]></Title>
					</DatasetExpression>
					<SamplesToKeep>100</SamplesToKeep>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimeStackChart>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1658752695711</Id>
			<Name><![CDATA[A_SubTenant]]></Name>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[Actor]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_actorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorGroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorSubgroup]]></Name>
				</Parameter>
			</Parameters>
			<StartupCode><![CDATA[energyModel.c_actors.add(this);]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1658752695709</Id>
				<Name><![CDATA[1658752695709]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658822400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1658752695707</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1658752695710</CurrentLevel>
			<ConnectionsId>1658752695706</ConnectionsId>
			<Variables>
				<Variable Class="Parameter">
					<Id>1703256699222</Id>
					<Name><![CDATA[p_mainTenantID]]></Name>
					<X>60</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1703256699220</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1711030779035</Id>
					<Name><![CDATA[p_connectedGridConnection]]></Name>
					<X>60</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[GridConnection]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1711030779033</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1727191476488</Id>
					<Name><![CDATA[p_address]]></Name>
					<X>60</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_Address]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1727191476486</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1703256699219</Id>
					<Name><![CDATA[c_GISBuildings]]></Name>
					<X>60</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<AgentLinks>
				<AgentLink>
					<Id>1658752695706</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1703256686877</Id>
					<Name><![CDATA[l_mainTenant]]></Name>
					<Description><![CDATA[Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>220</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>SINGLE_LINK</AgentLinkType>
					<AgentReferenceId>1660224852394</AgentReferenceId>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<BidirectionalPeerId>1703256762219</BidirectionalPeerId>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1658752707227</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1658752695710</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1658752913454</Id>
			<Name><![CDATA[UI_GridNode]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<StartupCode><![CDATA[f_setNodeVisual();]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1658752913452</Id>
				<Name><![CDATA[1658752913452]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658822400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1658752913450</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-180</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1658752913453</CurrentLevel>
			<ConnectionsId>1658752913449</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1670933843521</Id>
					<Name><![CDATA[v_localProduction_kW]]></Name>
					<X>60</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670933857325</Id>
					<Name><![CDATA[v_batteryProduction_kW]]></Name>
					<X>60</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670933894502</Id>
					<Name><![CDATA[v_vehicleConsumption_kW]]></Name>
					<X>60</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670933909350</Id>
					<Name><![CDATA[v_vehicleProduction_kW]]></Name>
					<X>60</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670933925207</Id>
					<Name><![CDATA[v_fixedConsumptionProfiles_kW]]></Name>
					<X>60</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670933944857</Id>
					<Name><![CDATA[v_electricHeatingConsumption_kW]]></Name>
					<X>60</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670934339512</Id>
					<Name><![CDATA[v_batteryConsumption_kW]]></Name>
					<X>60</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1675683786853</Id>
					<Name><![CDATA[v_congestionPrice_eurpkWh]]></Name>
					<X>60</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689596764390</Id>
					<Name><![CDATA[v_electricCookingPower_kW]]></Name>
					<X>60</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1658753690661</Id>
					<Name><![CDATA[p_nodeID]]></Name>
					<X>60</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658753690659</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1658759460529</Id>
					<Name><![CDATA[p_nodeType]]></Name>
					<X>60</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridNodeType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1658759460527</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1670516047533</Id>
					<Name><![CDATA[p_gridNode]]></Name>
					<X>60</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[GridNode]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1670516047531</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1670933873241</Id>
					<Name><![CDATA[e_gatherNodeInfo]]></Name>
					<X>60</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_HOUR]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1671004800000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[energyModel.p_timeStep_h]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[v_localProduction_kW = 0;
v_batteryProduction_kW = 0;
v_vehicleProduction_kW = 0;

v_vehicleConsumption_kW = 0;
v_fixedConsumptionProfiles_kW = 0;
v_electricHeatingConsumption_kW = 0;
v_batteryConsumption_kW = 0;
v_electricCookingPower_kW = 0;

for( GridConnection g : realAgent.getConnectedAgent().c_electricityGridConnections){
	v_localProduction_kW += g.v_pvProductionElectric_kW + g.v_windProductionElectric_kW - min(0,g.v_conversionPowerElectric_kW);
	v_batteryProduction_kW += g.v_batteryPowerElectric_kW < 0 ? -g.v_batteryPowerElectric_kW : 0;
	v_vehicleProduction_kW += g.v_evChargingPowerElectric_kW < 0 ? g.v_evChargingPowerElectric_kW : 0;
	
	v_vehicleConsumption_kW += g.v_evChargingPowerElectric_kW > 0 ? g.v_evChargingPowerElectric_kW : 0;
	v_fixedConsumptionProfiles_kW += g.v_fixedConsumptionElectric_kW ;
	v_electricCookingPower_kW += g.v_electricHobConsumption_kW;
	v_electricHeatingConsumption_kW += max(0,g.v_conversionPowerElectric_kW - g.v_electricHobConsumption_kW);
	v_batteryConsumption_kW += g.v_batteryPowerElectric_kW > 0 ? g.v_batteryPowerElectric_kW : 0;

}

v_congestionPrice_eurpkWh = p_gridNode.v_currentCongestionPrice_eurpkWh;	
ch_cumulativeSupply.updateData();
ch_cumulativeDemand.updateData();
pl_powerFlows.updateData();]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1658753874720</Id>
					<Name><![CDATA[f_setNodeVisual]]></Name>
					<X>60</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[t_nodeID.setText(p_nodeID);
t_nodetype.setText(p_nodeType);]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1670933638545</Id>
					<Name><![CDATA[f_onClick]]></Name>
					<X>60</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[group.setY(450 - this.getY());
group.setX(1120 - this.getX());

for(UI_GridConnection g : kpiVisuals.uI_GridConnections){
	g.pl_powerFlows.setVisible(false);
	g.t_plotname.setVisible(false);
	g.t_assets.setVisible(false);
}
for(UI_GridNode n : kpiVisuals.uI_GridNodes){
	n.group.setVisible(false);
	group.setVisible(true);
}]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1658752913449</Id>
					<Name><![CDATA[connections]]></Name>
					<X>250</X><Y>-80</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<DrawLine>true</DrawLine>
					<LineStyle>DOTTED</LineStyle>
					<LineWidth>0.5</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1658760368568</Id>
					<Name><![CDATA[realAgent]]></Name>
					<X>240</X><Y>-110</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>SINGLE_LINK</AgentLinkType>
					<AgentReferenceId>1658477288308</AgentReferenceId>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1658752913453</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1658752947986</Id>
					<Name><![CDATA[netNodeVisual]]></Name>
					<X>-110</X><Y>-100</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[f_onClick();]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DASHED</LineStyle>
					<Width>230</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1658753927156</Id>
					<Name><![CDATA[t_nodeID]]></Name>
					<X>16</X><Y>-121</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[ID]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1658754055524</Id>
					<Name><![CDATA[t_nodeText]]></Name>
					<X>-35</X><Y>-121</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[-Coop:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1658759394610</Id>
					<Name><![CDATA[t_nodetype]]></Name>
					<X>-35</X><Y>-121</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Coop level
]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1658762845688</Id>
					<Name><![CDATA[text]]></Name>
					<X>-90</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[load:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>2</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1658762845695</Id>
					<Name><![CDATA[t_loadElectricText]]></Name>
					<X>-90</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0 MWe]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1660136208763</Id>
					<Name><![CDATA[t_loadThermalText]]></Name>
					<X>-90</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0 MWth]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<TimePlot>
					<Id>1670531662645</Id>
					<Name><![CDATA[plot]]></Name>
					<X>-30</X><Y>-125</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1670400000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[0.25]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>150</Width>
					<Height>130</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>30</XOffset>
						<YOffset>30</YOffset>
						<Width>110</Width>
						<Height>70</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>false</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>DAY</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[- p_gridNode.p_capacity_kW - p_gridNode.p_capacity_kW *0.2]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[p_gridNode.p_capacity_kW + p_gridNode.p_capacity_kW * 0.2]]></VerScaleToExpression>
					<VerScaleType>FIXED</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Node capacity]]></Title>
					<Id>1670531662640</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-1468806</Color>
					<Expression2><![CDATA[p_gridNode.p_capacity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Current load on grid [kW]]]></Title>
					<Id>1670531662641</Id>
					<Expression><![CDATA[my_dataset2]]></Expression>
					<Color>-8355712</Color>
					<Expression2><![CDATA[p_gridNode.v_currentLoadElectricity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>2.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[]]></Title>
					<Id>1670531662642</Id>
					<Expression><![CDATA[my_dataset1]]></Expression>
					<Color>-1468806</Color>
					<Expression2><![CDATA[- p_gridNode.p_capacity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>1000</SamplesToKeep>
					<TimeWindowExpression><![CDATA[2]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
				<Oval>
					<Id>1670581717233</Id>
					<Name><![CDATA[oval]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>1.875</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Group>
					<Id>1670935352089</Id>
					<Name><![CDATA[group]]></Name>
					<X>570</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
    			<TimeStackChart>
					<Id>1670933728177</Id>
					<Name><![CDATA[ch_cumulativeSupply]]></Name>
					<X>-220</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1671004800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>480</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>410</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>HOUR</TimeWindowUnits>
					<TimeWindowExpression><![CDATA[48]]></TimeWindowExpression>
					<DatasetExpression>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-6632142</Color>
					<Expression2><![CDATA[v_vehicleProduction_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
							<Title><![CDATA[Vehicle to X]]></Title>
					</DatasetExpression>
					<DatasetExpression>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-256</Color>
					<Expression2><![CDATA[v_localProduction_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
							<Title><![CDATA[Local production [kW]]]></Title>
					</DatasetExpression>
					<DatasetExpression>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-23296</Color>
					<Expression2><![CDATA[v_batteryProduction_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
							<Title><![CDATA[Battery to X [kW]]]></Title>
					</DatasetExpression>
					<SamplesToKeep>10000</SamplesToKeep>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimeStackChart>
    			<TimeStackChart>
					<Id>1670935101040</Id>
					<Name><![CDATA[ch_cumulativeDemand]]></Name>
					<X>-220</X><Y>-370</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1671004800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>490</Width>
					<Height>230</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>410</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>50</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>HOUR</TimeWindowUnits>
					<TimeWindowExpression><![CDATA[48]]></TimeWindowExpression>
					<DatasetExpression>
					<Id>1670935101036</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-14774017</Color>
					<Expression2><![CDATA[v_fixedConsumptionProfiles_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
							<Title><![CDATA[Consumption profiles [kW]]]></Title>
					</DatasetExpression>
					<DatasetExpression>
					<Id>1670935101035</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-6632142</Color>
					<Expression2><![CDATA[v_vehicleConsumption_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
							<Title><![CDATA[Charging vehicle [kW]]]></Title>
					</DatasetExpression>
					<DatasetExpression>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-5952982</Color>
					<Expression2><![CDATA[v_electricHeatingConsumption_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
							<Title><![CDATA[Heating assets consumption [kW]]]></Title>
					</DatasetExpression>
					<DatasetExpression>
					<Id>1670935101037</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-23296</Color>
					<Expression2><![CDATA[v_batteryConsumption_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
							<Title><![CDATA[charging Battery [kW]]]></Title>
					</DatasetExpression>
					<DatasetExpression>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-2461482</Color>
					<Expression2><![CDATA[v_electricCookingPower_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
							<Title><![CDATA[e-cooking power [kW]]]></Title>
					</DatasetExpression>
					<SamplesToKeep>10000</SamplesToKeep>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimeStackChart>
				<Text>
					<Id>1670936666425</Id>
					<Name><![CDATA[text1]]></Name>
					<X>-72</X><Y>-361</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Cumulative electricity demand]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1670936843786</Id>
					<Name><![CDATA[text2]]></Name>
					<X>-80</X><Y>-130</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Cumulative electricity supply]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
    			<TimePlot>
					<Id>1671704217693</Id>
					<Name><![CDATA[pl_powerFlows]]></Name>
					<X>-220</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1668499200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[15]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>480</Width>
					<Height>280</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>400</Width>
						<Height>160</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>60</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[GridNode current power [kW]]]></Title>
					<Id>1671704217684</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-3308225</Color>
					<Expression2><![CDATA[p_gridNode.v_currentLoadElectricity_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>2.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[EV charging demand [kW]]]></Title>
					<Id>1671704217685</Id>
					<Expression><![CDATA[my_dataset3]]></Expression>
					<Color>-6632142</Color>
					<Expression2><![CDATA[v_vehicleConsumption_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Battery load [kW]]]></Title>
					<Id>1671704217686</Id>
					<Expression><![CDATA[my_dataset4]]></Expression>
					<Color>-4565549</Color>
					<Expression2><![CDATA[v_batteryConsumption_kW - v_batteryProduction_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Total production [kW]]]></Title>
					<Id>1671704217687</Id>
					<Expression><![CDATA[my_dataset5]]></Expression>
					<Color>-14774017</Color>
					<Expression2><![CDATA[-v_localProduction_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Electric heating power [kW]]]></Title>
					<Id>1671704217688</Id>
					<Expression><![CDATA[my_dataset1]]></Expression>
					<Color>-256</Color>
					<Expression2><![CDATA[v_electricHeatingConsumption_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Consumption other [kW]]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset6]]></Expression>
					<Color>-3137392</Color>
					<Expression2><![CDATA[v_fixedConsumptionProfiles_kW]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>1000</SamplesToKeep>
					<TimeWindowExpression><![CDATA[48]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
    			<TimePlot>
					<Id>1675683844543</Id>
					<Name><![CDATA[pl_powerFlows1]]></Name>
					<X>-220</X><Y>-550</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1668499200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[15]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>480</Width>
					<Height>220</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>400</Width>
						<Height>100</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>60</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Congestion price]]></Title>
					<Id>1675683844536</Id>
					<Expression><![CDATA[my_dataset3]]></Expression>
					<Color>-8388480</Color>
					<Expression2><![CDATA[v_congestionPrice_eurpkWh]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>1000</SamplesToKeep>
					<TimeWindowExpression><![CDATA[48]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
			</Presentation>

				</Group>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1660224852394</Id>
			<Name><![CDATA[ConnectionOwner]]></Name>
			<Import><![CDATA[import com.fasterxml.jackson.databind.JsonNode;]]></Import>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[Actor]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_actorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorSubgroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorGroup]]></Name>
				</Parameter>
			</Parameters>
			<StartupCode><![CDATA[energyModel.c_actors.add(this);
energyModel.c_connectionOwners.add(this);]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1660224852392</Id>
				<Name><![CDATA[1660224852392]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660291200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1660224852390</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1660224852393</CurrentLevel>
			<ConnectionsId>1660224852389</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1660744173993</Id>
					<Name><![CDATA[v_electricityContractType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_DeliveryContractType]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[OL_DeliveryContractType.ELECTRICITY_VARIABLE]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660744181560</Id>
					<Name><![CDATA[v_heatContractType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_ContractType]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[HEAT_FIXED]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660744190914</Id>
					<Name><![CDATA[v_methaneContractType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_ContractType]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[METHANE_FIXED]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660744732007</Id>
					<Name><![CDATA[v_electricityVolume_kWh]]></Name>
					<X>740</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660744756249</Id>
					<Name><![CDATA[v_heatVolume_kWh]]></Name>
					<X>740</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660744762793</Id>
					<Name><![CDATA[v_methaneVolume_kWh]]></Name>
					<X>740</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660745490749</Id>
					<Name><![CDATA[v_balanceElectricity_eur]]></Name>
					<X>970</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660745504140</Id>
					<Name><![CDATA[v_balanceHeat_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660745513069</Id>
					<Name><![CDATA[v_balanceMethane_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>710</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661174627092</Id>
					<Name><![CDATA[v_hydrogenContractType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_ContractType]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[HYDROGEN_FIXED]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661174643058</Id>
					<Name><![CDATA[v_balanceHydrogen_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661175214034</Id>
					<Name><![CDATA[v_hydrogenVolume_kWh]]></Name>
					<X>740</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661177954454</Id>
					<Name><![CDATA[v_energySupplierDistrictHeat]]></Name>
					<X>61</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Agent]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661267039916</Id>
					<Name><![CDATA[j_ConnectionOwnerData]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_ActorData]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661267039917</Id>
					<Name><![CDATA[j_ActorData]]></Name>
					<X>60</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_ActorData]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1663237705961</Id>
					<Name><![CDATA[v_electricityVariablePrice_eurpkWh]]></Name>
					<X>700</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1663237725571</Id>
					<Name><![CDATA[v_electricitySurpluss_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666529984344</Id>
					<Name><![CDATA[v_priceBandsDelivery]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>964</X><Y>478</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[TreeMap<Double, Double>]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666531542032</Id>
					<Name><![CDATA[v_currentNodalPrice_eurpkWh]]></Name>
					<X>700</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666531573460</Id>
					<Name><![CDATA[v_congestionTariffAllowance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666531581003</Id>
					<Name><![CDATA[v_updatePriceBands_b]]></Name>
					<Description><![CDATA[Not visible as it is swtiched on and of in between timesteps ( for fixed tarifs at least)]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667401120682</Id>
					<Name><![CDATA[v_currentCongestionType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA["No congestion atm"]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669024165241</Id>
					<Name><![CDATA[v_dieselVolume_kWh]]></Name>
					<X>740</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669024172107</Id>
					<Name><![CDATA[v_balanceDiesel_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669036835710</Id>
					<Name><![CDATA[v_contractDelivery]]></Name>
					<X>940</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_DeliveryContract]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669036845521</Id>
					<Name><![CDATA[v_contractTransport]]></Name>
					<X>940</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_TransportContract]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669036853577</Id>
					<Name><![CDATA[v_contractTax]]></Name>
					<X>940</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_TaxContract]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1673455438812</Id>
					<Name><![CDATA[v_enable_nfATO_b]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1675864492131</Id>
					<Name><![CDATA[v_congestionTariff_b]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676282750780</Id>
					<Name><![CDATA[v_contractConnection]]></Name>
					<X>940</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_ConnectionContract]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676459405457</Id>
					<Name><![CDATA[v_balanceElectricityDelivery_eur]]></Name>
					<X>970</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676459420019</Id>
					<Name><![CDATA[v_balanceElectricityTransport_eur]]></Name>
					<X>970</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676459433986</Id>
					<Name><![CDATA[v_balanceElectricityTax_eur]]></Name>
					<X>970</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676459631796</Id>
					<Name><![CDATA[v_priceBandsTransport]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>964</X><Y>498</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[TreeMap<Double, Double>]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676459645240</Id>
					<Name><![CDATA[v_priceBandsTax]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>964</X><Y>518</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[TreeMap<Double, Double>]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676540839762</Id>
					<Name><![CDATA[v_capacityTariff_b]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676900973462</Id>
					<Name><![CDATA[v_totalElectricityUsed_kWh]]></Name>
					<X>550</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676900973464</Id>
					<Name><![CDATA[v_totalHeatUsed_kWh]]></Name>
					<X>550</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676900973466</Id>
					<Name><![CDATA[v_totalMethaneUsed_kWh]]></Name>
					<X>550</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676900973468</Id>
					<Name><![CDATA[v_totalHydrogenUsed_kWh]]></Name>
					<X>550</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676900973470</Id>
					<Name><![CDATA[v_totalDieselUsed_kWh]]></Name>
					<X>550</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679478047052</Id>
					<Name><![CDATA[v_methanePrice_eurpkWh]]></Name>
					<X>470</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679478050320</Id>
					<Name><![CDATA[v_hydrogenPrice_eurpkWh]]></Name>
					<X>470</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679560933209</Id>
					<Name><![CDATA[v_heatPrice_eurpkWh]]></Name>
					<X>470</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1666976143102</Id>
					<Name><![CDATA[p_coopParent]]></Name>
					<Description><![CDATA[This 'link' is used for battery management functions that use collective (Coop) load balancing!]]></Description>
					<X>210</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[EnergyCoop]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1666976143100</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1669036749740</Id>
					<Name><![CDATA[p_actorContractList]]></Name>
					<X>940</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[com.fasterxml.jackson.databind.node.ArrayNode]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1669036749738</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1674905911483</Id>
					<Name><![CDATA[p_capacityTariffApplicable]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1674905911481</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1674906947038</Id>
					<Name><![CDATA[p_capacityPrice_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1674906947036</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1674906962435</Id>
					<Name><![CDATA[p_capacityLevel_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1674906962433</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1674920557400</Id>
					<Name><![CDATA[p_congestionTariffApplicable]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1674920557398</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1672145426525</Id>
					<Name><![CDATA[p_connectionCapacity_kW]]></Name>
					<Description><![CDATA[TODO: This is still hardcoded! How should Coop know where to 'gather' this data? (Capacity of shared connection)]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[2000]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1672145426523</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675870562128</Id>
					<Name><![CDATA[p_actorID]]></Name>
					<Description><![CDATA[Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1675870562126</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675870562132</Id>
					<Name><![CDATA[p_actorType]]></Name>
					<Description><![CDATA[Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1675870562130</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675870562138</Id>
					<Name><![CDATA[p_electricitySupplier]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>210</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1675870562136</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675870562141</Id>
					<Name><![CDATA[p_nfatoStart_h]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1675870562139</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675870562144</Id>
					<Name><![CDATA[p_nfatoEnd_h]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0
]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1675870562142</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675870562147</Id>
					<Name><![CDATA[p_nfatoLvl_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-200</X><Y>640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1675870562145</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676537396743</Id>
					<Name><![CDATA[p_gridOperator]]></Name>
					<X>210</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1676537396741</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679492829100</Id>
					<Name><![CDATA[p_methaneSupplier]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>210</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679492829098</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679492842259</Id>
					<Name><![CDATA[p_hydrogenSupplier]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>210</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679492842257</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679492857358</Id>
					<Name><![CDATA[p_heatSupplier]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>210</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679492857356</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1702915036278</Id>
					<Name><![CDATA[p_connectionOwnerType]]></Name>
					<X>160</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_ConnectionOwnerType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="LengthUnits"><![CDATA[METER]]></UnitOfValue>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1702915036276</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1708595094989</Id>
					<Name><![CDATA[p_connectionOwnerIndexNr]]></Name>
					<Description><![CDATA[Used to give every actor an index number, which can be used in buttons to go to the correct private company/connection UI.

@author: Ate]]></Description>
					<X>60</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1708595094987</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709048918242</Id>
					<Name><![CDATA[p_detailedCompany]]></Name>
					<Description><![CDATA[Is it a company that filled in the survey]]></Description>
					<X>60</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709048918240</Id>
							<Label><![CDATA[p_detailedCompany]]></Label>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1715715075104</Id>
					<Name><![CDATA[b_hasPrivateUI]]></Name>
					<X>60</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1715715075102</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1716901949775</Id>
					<Name><![CDATA[p_energySupplierID]]></Name>
					<Description><![CDATA[This 'link' is used for battery management functions that use collective (Coop) load balancing!]]></Description>
					<X>60</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1716901949773</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1716901977342</Id>
					<Name><![CDATA[p_energyCoopID]]></Name>
					<Description><![CDATA[This 'link' is used for battery management functions that use collective (Coop) load balancing!]]></Description>
					<X>60</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1716901977340</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1679502158516</Id>
					<Name><![CDATA[c_actorContracts]]></Name>
					<X>940</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_Contract]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1703003561048</Id>
					<Name><![CDATA[c_ownedGridConnections]]></Name>
					<X>60</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1704196760553</Id>
					<Name><![CDATA[c_subTenants]]></Name>
					<X>60</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[A_SubTenant]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1704895140924</Id>
					<Name><![CDATA[c_ownedBuildings]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GIS_Building]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660230297342</Id>
					<Name><![CDATA[f_connectToChild]]></Name>
					<X>660</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingChildNode]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[gridConnections.connectTo(ConnectingChildNode);
c_ownedGridConnections.add(ConnectingChildNode);
//v_ownedGridConnection = ConnectingChildNode;
//traceln("f_connectToChild in connectionOwner agent, connection contract type: " + v_contractConnection.connectionContractType);
/*if (v_contractConnection.connectionContractType.equals(OL_ConnectionContractType.NFATO)) {
	ConnectingChildNode.v_enable_nfATO_b = true;
	ConnectingChildNode.p_nfatoStart_h = v_contractConnection.nfATOstart_h;
	ConnectingChildNode.p_nfatoEnd_h = v_contractConnection.nfATOend_h;
	ConnectingChildNode.p_nfatoLvl_kW = v_contractConnection.nfATOpower_kW;
	traceln("Setting nfATO TRUE for gridConnection: " + ConnectingChildNode.p_gridNodeID);
}*/
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660230784171</Id>
					<Name><![CDATA[f_connectToParentActor]]></Name>
					<Description><![CDATA[Creates an agentLink in superConnection if a parentActorID is designated in the config-excel. Called from f_configureBackBone() in main for profiling reasons, so no parameters are given.

@param: none
@return: none
@since: Sprint 6
@author: HOUJ]]></Description>
					<X>670</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//f_setContractValues();
//f_setInitPriceBands();
// Connect to energy supplier (can be a Coop!)
//traceln(p_actorID + " is looking for its supplier");
if (v_contractDelivery == null) {
	throw new RuntimeException(
		String.format(
			"Actor %s has no delivery contract",
			p_actorID
		)
	);
}
Actor mySupplier = findFirst(energyModel.pop_energySuppliers, p->p.p_actorID.equals(v_contractDelivery.contractScope)) ;
if (mySupplier != null) {
	((EnergySupplier)mySupplier).f_connectToChild(this);	
} else {
	mySupplier = findFirst(energyModel.pop_energyCoops, p->p.p_actorID.equals(v_contractDelivery.contractScope)) ;
	if (mySupplier != null) {		
		((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarrierType.ELECTRICITY);
		p_coopParent = (EnergyCoop)mySupplier;
	}
}

if (mySupplier != null) {
	//energySupplier.connectTo(mySupplier);
	p_electricitySupplier = mySupplier;
	//energySupplier.f_connectToChild(this);	
} else { 
	/*traceln(
		"Connection owner %s --> f_connectToParentActor --> no parent actor found, this should not be happening. contract holder: %s, parent: %s",
		this,
		v_contractDelivery.contractHolder,
		v_contractDelivery.contractScope
	);*/
}

// Connect to grid operator (can be a Coop!)
if (v_contractTransport == null) {
	throw new RuntimeException(
		String.format(
			"Actor %s has no transport contract",
			p_actorID
		)
	);
}
Actor myGridoperator = findFirst(energyModel.pop_gridOperators, p->p.p_actorID.equals(v_contractTransport.contractScope)) ;
if (myGridoperator == null) {
	myGridoperator = findFirst(energyModel.pop_energyCoops, p->p.p_actorID.equals(v_contractTransport.contractScope)) ;
}

if (myGridoperator != null) {
	p_gridOperator = myGridoperator;	
} else { 
	/*traceln(
	    "Connection owner --> f_connectToParentActor --> no grid operator found, this should not be happening. contract holder: %s, operator: %s",
	    v_contractTransport.contractHolder,
	    v_contractTransport.contractScope
	);*/
}

//traceln(p_actorID + " finished looking for supplier");
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660742520265</Id>
					<Name><![CDATA[f_updateFinances]]></Name>
					<X>660</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//TODO: Diesel costs still missing!! [GH 21/11/2022] -> Won't be in anylogic model, but in postprocessing.

// get current energy flows
f_gatherEnergyFlows();

//double currentPowerDrawn_kW = v_electricityVolume_kWh / energyModel.p_timeStep_h;
double transactionCostDelivery_eur = 0;
double transactionCostTransport_eur = 0;
double transactionCostTax_eur = 0;

if (v_electricityVolume_kWh >= 0) {
	//transactionCostDelivery_eur = v_priceBandsDelivery.ceilingEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;
	transactionCostDelivery_eur = (v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh) * v_electricityVolume_kWh;
	v_balanceElectricityDelivery_eur -= transactionCostDelivery_eur;
	v_balanceElectricity_eur -= transactionCostDelivery_eur;
	
	//transactionCostTransport_eur = v_priceBandsTransport.ceilingEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;
	transactionCostTransport_eur = v_currentNodalPrice_eurpkWh * v_electricityVolume_kWh;
	v_balanceElectricityTransport_eur -= transactionCostTransport_eur;
	v_balanceElectricity_eur -= transactionCostTransport_eur;
	
	//transactionCostTax_eur = v_priceBandsTax.ceilingEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;
	transactionCostTax_eur = v_contractTax.deliveryTax_eurpkWh * v_electricityVolume_kWh;
	//transactionCostTax_eur = v_electricityVolume_kWh * v_contractTax.deliveryTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_electricityVolume_kWh * v_contractTax.deliveryTax_eurpkWh + transactionCostDelivery_eur + transactionCostTransport_eur);
	v_balanceElectricityTax_eur -= transactionCostTax_eur;
	v_balanceElectricity_eur -= transactionCostTax_eur;
} else {
	//transactionCostDelivery_eur = v_priceBandsDelivery.floorEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;
	transactionCostDelivery_eur = (v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh) * v_electricityVolume_kWh;
	v_balanceElectricityDelivery_eur -= transactionCostDelivery_eur;
	v_balanceElectricity_eur -= transactionCostDelivery_eur;
	
	//transactionCostTransport_eur = v_priceBandsTransport.floorEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;
	transactionCostTransport_eur = v_currentNodalPrice_eurpkWh * v_electricityVolume_kWh;
	v_balanceElectricityTransport_eur -= transactionCostTransport_eur;
	v_balanceElectricity_eur -= transactionCostTransport_eur;
	
	//transactionCostTax_eur = v_priceBandsTax.floorEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;
	transactionCostTax_eur = v_contractTax.feedinTax_eurpkWh * v_electricityVolume_kWh;
	//transactionCostTax_eur = v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + transactionCostDelivery_eur + transactionCostTransport_eur);
	v_balanceElectricityTax_eur -= transactionCostTax_eur;
	v_balanceElectricity_eur -= transactionCostTax_eur;
}

/*// trigger transaction with supplier/Coop
if( p_energySupplier != null) {
	//Agent energySupplier = p_energySupplier;
	if( p_energySupplier instanceof EnergySupplier) {
		EnergySupplier energySupplier = (EnergySupplier)p_energySupplier;
		double transactionCost_eur = 0;//energySupplier.f_doEnergyTransaction(v_electricityVolume_kWh, v_electricityContractType);
		v_balanceElectricity_eur -= transactionCost_eur;
		transactionCost_eur = energySupplier.f_doEnergyTransaction(v_methaneVolume_kWh, v_methaneContractType);
		v_balanceMethane_eur -= transactionCost_eur;
		transactionCost_eur = energySupplier.f_doEnergyTransaction(v_hydrogenVolume_kWh, v_hydrogenContractType);
		v_balanceHydrogen_eur -= transactionCost_eur;
	} else if ( p_energySupplier instanceof EnergyCoop ) {
		EnergyCoop energySupplier = (EnergyCoop)p_energySupplier;
		double transactionCost_eur = 0;//energySupplier.f_doEnergyTransaction(v_electricityVolume_kWh, v_electricityContractType);
		v_balanceElectricity_eur -= transactionCost_eur;
		transactionCost_eur = energySupplier.f_doEnergyTransaction(v_methaneVolume_kWh, v_methaneContractType);
		v_balanceMethane_eur -= transactionCost_eur;
		transactionCost_eur = energySupplier.f_doEnergyTransaction(v_hydrogenVolume_kWh, v_hydrogenContractType);
		v_balanceHydrogen_eur -= transactionCost_eur;
	}
} else {
	traceln("Connection owner " + this + " has no energy supplier!");
}*/

// Also needs to include congestion tariffs! 
/*if ( p_congestionTariffApplicable ) {
	double congestionCost_eur = v_electricityVolume_kWh * v_currentCongestionTariffWhenBuying_eurpkWh;
	v_balanceElectricityTransport_eur -= congestionCost_eur; // TODO: This transaction is 'one-sided'; the gridOperator is not yet receiving/giving this money!!
}*/

// trigger district heat accounting with specified heat supplier agent
/*
if( v_energySupplierDistrictHeat instanceof EnergySupplier) {
	EnergySupplier energySupplier = (EnergySupplier)v_energySupplierDistrictHeat;
	double transactionCost_eur = 0;//energySupplier.f_doEnergyTransaction(v_heatVolume_kWh, v_heatContractType);
	v_balanceHeat_eur -= transactionCost_eur;
}
else if( v_energySupplierDistrictHeat instanceof EnergyCoop ) {
	EnergyCoop energySupplier = (EnergyCoop)v_energySupplierDistrictHeat;
	double transactionCost_eur = 0;// energySupplier.f_doEnergyTransaction(v_heatVolume_kWh, v_heatContractType);
	v_balanceHeat_eur -= transactionCost_eur;
}

v_balanceDiesel_eur += v_dieselVolume_kWh * .196; // TODO: UGLY HACK
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660743030872</Id>
					<Name><![CDATA[f_gatherEnergyFlows]]></Name>
					<X>660</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// reset eenrgy flows
v_electricityVolume_kWh = 0;
v_heatVolume_kWh = 0;
v_methaneVolume_kWh = 0;
v_hydrogenVolume_kWh = 0;
v_dieselVolume_kWh = 0;

// gather electricity flows, convert to volume-per-timestep to facilitate financial transactions
for(GridConnection n :  gridConnections.getConnections() ) {
	v_electricityVolume_kWh += n.v_currentPowerElectricity_kW * energyModel.p_timeStep_h;
	v_heatVolume_kWh += n.v_currentPowerHeat_kW * energyModel.p_timeStep_h;
	v_methaneVolume_kWh += n.v_currentPowerMethane_kW * energyModel.p_timeStep_h;
	v_hydrogenVolume_kWh += n.v_currentPowerHydrogen_kW * energyModel.p_timeStep_h;
	v_dieselVolume_kWh += n.v_currentPowerDiesel_kW * energyModel.p_timeStep_h;
}

v_totalElectricityUsed_kWh += v_electricityVolume_kWh;
v_totalHeatUsed_kWh += v_heatVolume_kWh;
v_totalMethaneUsed_kWh += v_methaneVolume_kWh;
v_totalHydrogenUsed_kWh += v_hydrogenVolume_kWh;
v_totalDieselUsed_kWh += v_dieselVolume_kWh;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1663237679579</Id>
					<Name><![CDATA[f_updateIncentives]]></Name>
					<X>660</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (v_contractDelivery.deliveryContractType==OL_DeliveryContractType.ELECTRICITY_VARIABLE) {
	if (p_electricitySupplier instanceof EnergySupplier) {
		v_electricityVariablePrice_eurpkWh = ((EnergySupplier)p_electricitySupplier).f_getVariableEnergyPrice();
	} else if (p_electricitySupplier instanceof EnergyCoop) {
		v_electricityVariablePrice_eurpkWh = ((EnergyCoop)p_electricitySupplier).f_getVariableEnergyPrice();
	}
}

// Transport pricing (nodal pricing) is 'pushed' to the connectionOwner from the GridNode, so don't have to ask for the price here.
/*if (v_contractTransport.transportContractType.equals(OL_TransportContractType.NODALPRICING)) {
	if (p_gridOperator instanceof GridOperator) {
		v_electricityVariablePrice_eurpkWh = ((GridOperator)p_gridOperator).f_getVariableEnergyPrice(v_electricityContractType, false);
	} else if (p_gridOperator instanceof EnergyCoop) {
		v_electricityVariablePrice_eurpkWh = ((EnergyCoop)p_gridOperator).f_getEnergyPrice(v_electricityContractType, false);
	}
}*/	

//f_setElectricityPriceBands();
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666529572357</Id>
					<Name><![CDATA[f_setElectricityPriceBands]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>680</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (v_contractDelivery.deliveryContractType.equals(OL_DeliveryContractType.ELECTRICITY_VARIABLE)) {
	v_priceBandsDelivery.replace(-9999999.0, v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh );
	v_priceBandsDelivery.replace(9999999.0, v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh );
}
if (v_contractTransport.transportContractType.equals(OL_TransportContractType.NODALPRICING)) {
	v_priceBandsTransport.replace(-9999999.0, v_currentNodalPrice_eurpkWh);
	v_priceBandsTransport.replace(9999999.0, v_currentNodalPrice_eurpkWh);
}

if (v_contractTax.proportionalTax_pct != 0.0 && (v_contractDelivery.deliveryContractType.equals(OL_DeliveryContractType.ELECTRICITY_VARIABLE) || v_contractTransport.transportContractType.equals(OL_TransportContractType.NODALPRICING))) { // Add VAT (BTW), over all other cost components. At this point assumes there are only 2 price-bands, for delivery and feedin! No other 'steps'! Not true for capacity-tariff (bandbreedtemodel)!
	v_priceBandsTax.replace(-9999999.0, v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh + v_currentNodalPrice_eurpkWh + v_contractTax.feedinTax_eurpkWh));
	v_priceBandsTax.replace(9999999.0, v_contractTax.deliveryTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh + v_currentNodalPrice_eurpkWh + v_contractTax.deliveryTax_eurpkWh));
}
	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669036739539</Id>
					<Name><![CDATA[f_setContractValues]]></Name>
					<X>670</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double methaneDeliveryPrice_eurpkWh = 0.0;
double methaneDeliveryTax_eurpkWh = 0.0;
double methaneVAT_pct = 0.0;
double hydrogenDeliveryPrice_eurpkWh = 0.0;
double hydrogenDeliveryTax_eurpkWh = 0.0;
double hydrogenVAT_pct = 0.0;
double heatDeliveryPrice_eurpkWh = 0.0;
double heatDeliveryTax_eurpkWh = 0.0;
double heatVAT_pct = 0.0;

if( p_actorContractList == null) {
	//traceln( "No contract data for connectionOwner " + p_actorID );
	//traceln( "Creating default contracts!");

	String defaultSupplier = "defaultSupplier";
	if (p_energyCoopID != null){
		defaultSupplier = p_energyCoopID;
	}
	String defaultGridOperator = "defaultGridOperator";
	String defaultGovernmentLayer = "defaultGovernmentLayer";
	double annualFee_eur = 0;
	double deliveryPrice_eurpkWh = 0.2;
	double feedinPrice_eurpkWh = 0.2;
	double bandwidthTreshold_kW = 0.0;
	double bandwidthTariff_eurpkWh = 0.0;
	double nfATOstart_h = 0.0;
	double nfATOend_h = 0.0;
	double nfATOcapacity_kW = 0.0;
	double taxDelivery_eurpkWh = 0.13;
	double taxFeedin_eurpkWh = 0.0;
	double proportionalTax_pct = 0.21;

	/*if (p_actorID.equals("logistics0owner")){
		v_contractDelivery = new J_DeliveryContract("coop1", OL_DeliveryContractType.ELECTRICITY_FIXED, OL_EnergyCarrierType.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);
	} else {
		v_contractDelivery = new J_DeliveryContract(defaultSupplier, OL_DeliveryContractType.ELECTRICITY_FIXED, OL_EnergyCarrierType.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);
	}*/
	v_contractDelivery = new J_DeliveryContract(defaultSupplier, OL_DeliveryContractType.ELECTRICITY_FIXED, OL_EnergyCarrierType.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);

	v_contractTransport = new J_TransportContract(defaultGridOperator, OL_TransportContractType.DEFAULT , OL_EnergyCarrierType.ELECTRICITY, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);

	v_contractConnection = new J_ConnectionContract(defaultGridOperator, OL_ConnectionContractType.DEFAULT, OL_EnergyCarrierType.ELECTRICITY, nfATOstart_h, nfATOend_h, nfATOcapacity_kW, annualFee_eur);

	v_contractTax = new J_TaxContract(defaultGovernmentLayer, OL_EnergyCarrierType.ELECTRICITY, taxDelivery_eurpkWh, taxFeedin_eurpkWh, proportionalTax_pct, annualFee_eur);

	c_actorContracts.add(v_contractDelivery);
	c_actorContracts.add(v_contractTransport);
	c_actorContracts.add(v_contractConnection);
	c_actorContracts.add(v_contractTax);
} else {
	for( JsonNode contractJson : p_actorContractList) {
	//traceln("Contract hashmap l: " + l);
	OL_ContractType contractService = OL_ContractType.valueOf(contractJson.required("contractType").textValue());
	String contractScope = contractJson.required( "contractScope" ).textValue();
	OL_EnergyCarrierType energyCarrier = OL_EnergyCarrierType.valueOf(contractJson.required("energyCarrier").textValue());
	double annualFee_eur = contractJson.required("annualFee_eur").doubleValue();
	Actor mySupplier = null;
	if (energyCarrier.equals(OL_EnergyCarrierType.ELECTRICITY)){
		switch( contractService ) {
			case DELIVERY:
				//String contractScope = (String)l.get( "contract_scope" );
				OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf(contractJson.get("deliveryContractType").textValue());
				double deliveryPrice_eurpkWh = contractJson.required("deliveryPrice_eurpkWh").doubleValue();
				double feedinPrice_eurpkWh = contractJson.required("feedinPrice_eurpkWh").doubleValue();
				v_contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, OL_EnergyCarrierType.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);
				//traceln("Delivery contract: " + v_contractDelivery);
				c_actorContracts.add(v_contractDelivery);
			break;
			case TRANSPORT:
				OL_TransportContractType transportContractType = OL_TransportContractType.valueOf(contractJson.get("transportContractType").textValue());
				double bandwidthTreshold_kW = contractJson.path("bandwidthTreshold_kW").doubleValue();
				double bandwidthTariff_eurpkWh = contractJson.path("bandwidthTariff_eurpkWh").doubleValue();
				v_contractTransport = new J_TransportContract(contractScope, transportContractType, energyCarrier, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);			
				c_actorContracts.add(v_contractTransport);
			break;
			case CONNECTION:
				OL_ConnectionContractType connectionContractType = OL_ConnectionContractType.valueOf(contractJson.required("connectionContractType").textValue());
				//traceln("Initializing connection contract with ConnectionContractType: " + connectionContractType);
				double nfATOstart_h = contractJson.path("nfATO_starttime_h").doubleValue();
				double nfATOend_h = contractJson.path("nfATO_endtime_h").doubleValue();
				double nfATOcapacity_kW = contractJson.path("nfATO_capacity_kW").doubleValue();
				v_contractConnection = new J_ConnectionContract(contractScope, connectionContractType, energyCarrier, nfATOstart_h, nfATOend_h, nfATOcapacity_kW, annualFee_eur);
				c_actorContracts.add(v_contractConnection);
			break;
			case TAX:
				double taxDelivery_eurpkWh = contractJson.required("taxDelivery_eurpkWh").doubleValue();
				double taxFeedin_eurpkWh = contractJson.required("taxFeedin_eurpkWh").doubleValue();
				double proportionalTax_pct = contractJson.required("proportionalTax_pct").doubleValue();
				v_contractTax = new J_TaxContract(contractScope, OL_EnergyCarrierType.ELECTRICITY, taxDelivery_eurpkWh, taxFeedin_eurpkWh, proportionalTax_pct, annualFee_eur);
				c_actorContracts.add(v_contractTax);
			break;
			default:
			
			break;		
		}
	//} else if (energyCarrier.equals(OL_EnergyCarrierType.METHANE)){
	} else {
		switch( contractService ) {
			case DELIVERY:					
				OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf(contractJson.required("deliveryContractType").textValue());
				double deliveryPrice_eurpkWh = contractJson.required("deliveryPrice_eurpkWh").doubleValue();
				double feedinPrice_eurpkWh = contractJson.required("feedinPrice_eurpkWh").doubleValue();
				J_DeliveryContract contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, energyCarrier, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);
				//traceln("Delivery contract: " + v_contractDelivery);
				c_actorContracts.add(contractDelivery);
				//String contractScope = (String)l.get( "contractScope" );
				mySupplier = findFirst(energyModel.pop_energySuppliers, p->p.p_actorID.equals(contractScope)) ;
				if (mySupplier != null) {
					((EnergySupplier)mySupplier).f_connectToChild(this);	
				} else {
					mySupplier = findFirst(energyModel.pop_energyCoops, p->p.p_actorID.equals(contractScope)) ;
					if (mySupplier != null) {
						((EnergyCoop)mySupplier).f_connectToChild(this,energyCarrier);	
						//p_CoopParent = (EnergyCoop)mySupplier;
					}
				}
				//traceln("Methane supplier: " + contractScope + " for actor " + p_actorID );
				if (mySupplier != null) {
					//energySupplier.connectTo(mySupplier);
					if (energyCarrier==OL_EnergyCarrierType.METHANE) {
						p_methaneSupplier = mySupplier;
						methaneDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;
					} else if(energyCarrier==OL_EnergyCarrierType.HYDROGEN) {
						p_hydrogenSupplier = mySupplier;
						hydrogenDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;
					} else if(energyCarrier==OL_EnergyCarrierType.HEAT) {
						p_heatSupplier = mySupplier;
						heatDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;
					}
					//traceln("MethaneSupplier " + mySupplier);
					//energySupplier.f_connectToChild(this);	
				} else { 
					traceln("Connection owner --> f_connectToParentActor --> " + energyCarrier + " supplier not found, this should not be happening");
				}
			break;
			case TAX:
				double DeliveryTax_eurpkWh = contractJson.required("taxDelivery_eurpkWh").doubleValue();
				double taxFeedin_eurpkWh = contractJson.required("taxFeedin_eurpkWh").doubleValue();
				double VAT_pct = contractJson.required("proportionalTax_pct").doubleValue();
				J_TaxContract contractTax = new J_TaxContract(contractScope, energyCarrier, DeliveryTax_eurpkWh, taxFeedin_eurpkWh, VAT_pct, annualFee_eur);
				c_actorContracts.add(contractTax);
				if (energyCarrier==OL_EnergyCarrierType.METHANE) {						
						methaneDeliveryTax_eurpkWh=DeliveryTax_eurpkWh;
						methaneVAT_pct=VAT_pct;
					} else if(energyCarrier==OL_EnergyCarrierType.HYDROGEN) {
						hydrogenDeliveryTax_eurpkWh=DeliveryTax_eurpkWh;
						hydrogenVAT_pct=VAT_pct;
					} else if(energyCarrier==OL_EnergyCarrierType.HEAT) {
						heatVAT_pct=VAT_pct;
					}
			break;
			case CONNECTION:
				OL_ConnectionContractType connectionContractType = OL_ConnectionContractType.valueOf(contractJson.required("connectionContractType").textValue());
				J_ConnectionContract contractConnection = new J_ConnectionContract(contractScope, connectionContractType, energyCarrier, 0.0, 0.0, 0.0, annualFee_eur);
				c_actorContracts.add(contractConnection);
				
				
					
			break;
			case TRANSPORT:
				OL_TransportContractType transportContractType = OL_TransportContractType.valueOf(contractJson.required("transportContractType").textValue());
				double bandwidthTreshold_kW = contractJson.path("bandwidthTreshold_kW").doubleValue();
				double bandwidthTariff_eurpkWh = contractJson.path("bandwidthTariff_eurpkWh").doubleValue();
				J_TransportContract contractTransport = new J_TransportContract(contractScope, transportContractType, energyCarrier, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);			
				c_actorContracts.add(contractTransport);
			break;
			default:
				traceln("Unrecognized contract type!");
			break;	
			}
		}
	}
}

// Calculate nett gas and hydrogen price
v_methanePrice_eurpkWh = (methaneDeliveryPrice_eurpkWh + methaneDeliveryTax_eurpkWh) * (1 + methaneVAT_pct);
v_hydrogenPrice_eurpkWh = (hydrogenDeliveryPrice_eurpkWh + hydrogenDeliveryTax_eurpkWh) * (1 + hydrogenVAT_pct);
v_heatPrice_eurpkWh = (heatDeliveryPrice_eurpkWh + heatDeliveryTax_eurpkWh) * (1 + heatVAT_pct);
		/*} else if (energyCarrier.equals(OL_EnergyCarrierType.HYDROGEN)){
			switch( contractService ) {
				case DELIVERY:
					OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf((String)l.get("deliveryContractType"));
					double deliveryPrice_eurpkWh = (double)l.get("deliveryPrice_eurpkWh");
					double feedinPrice_eurpkWh = (double)l.get("feedinPrice_eurpkWh");
					v_contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, OL_EnergyCarrierType.HYDROGEN, deliveryPrice_eurpkWh, feedinPrice_eurpkWh);
					//traceln("Delivery contract: " + v_contractDelivery);
					c_actorContracts.add(v_contractDelivery);
					mySupplier = findFirst(main.pop_energySuppliers, p->p.p_actorID.equals(contractScope)) ;
					if (mySupplier != null) {
						((EnergySupplier)mySupplier).f_connectToChild(this);	
					} else {
						mySupplier = findFirst(main.pop_energyCoops, p->p.p_actorID.equals(contractScope)) ;
						if (mySupplier != null) {
							((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarrierType.HYDROGEN);	
							//p_CoopParent = (EnergyCoop)mySupplier;
						}
					}
					if (mySupplier != null) {
						//energySupplier.connectTo(mySupplier);
						p_hydrogenSupplier = mySupplier;
						//energySupplier.f_connectToChild(this);	
					} else { 
						traceln("Connection owner --> f_connectToParentActor --> hydrogen supplier not found, this should not be happening");
					}
				break;
				case TAX:
					hydrogenDeliveryTax_eurpkWh = (double)l.get("taxDelivery_eurpkWh");
					//double taxFeedin_eurpkWh = (double)l.get("taxFeedin_eurpkWh");
					hydrogenVAT_pct = (double)l.get("proportionalTax_pct");
					v_contractTax = new J_TaxContract(contractScope, OL_EnergyCarrierType.HYDROGEN, hydrogenDeliveryTax_eurpkWh, 0, hydrogenVAT_pct);
					c_actorContracts.add(v_contractTax);
				break;
				default:
				
				break;	
			}	
		} else if (energyCarrier.equals(OL_EnergyCarrierType.HEAT)){
			switch( contractService ) {
				case DELIVERY:
					heatDeliveryPrice_eurpkWh = (double)l.get("deliveryPrice_eurpkWh");
					mySupplier = findFirst(main.pop_energySuppliers, p->p.p_actorID.equals(contractScope)) ;
					if (mySupplier != null) {
						((EnergySupplier)mySupplier).f_connectToChild(this);	
					} else {
						mySupplier = findFirst(main.pop_energyCoops, p->p.p_actorID.equals(contractScope)) ;
						if (mySupplier != null) {
							((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarrierType.HYDROGEN);	
							//p_CoopParent = (EnergyCoop)mySupplier;
						}
					}
					if (mySupplier != null) {
						//energySupplier.connectTo(mySupplier);
						p_hydrogenSupplier = mySupplier;
						//energySupplier.f_connectToChild(this);	
					} else { 
						traceln("Connection owner --> f_connectToParentActor --> heat supplier not found, this should not be happening");
					}
				break;
				case TAX:
					hydrogenDeliveryTax_eurpkWh = (double)l.get("taxDelivery_eurpkWh");
					//double taxFeedin_eurpkWh = (double)l.get("taxFeedin_eurpkWh");
					hydrogenVAT_pct = (double)l.get("proportionalTax_pct");
				break;
				default:
				
				break;	
			}	
		}*/

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1674919795415</Id>
					<Name><![CDATA[f_setInitPriceBands]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>670</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_priceBandsDelivery = new TreeMap<Double, Double>();
v_priceBandsDelivery.put(-9999999.0, v_contractDelivery.feedinPrice_eurpkWh);
v_priceBandsDelivery.put(0.0, 0.0);
v_priceBandsDelivery.put(9999999.0,  v_contractDelivery.deliveryPrice_eurpkWh);

v_priceBandsTransport = new TreeMap<Double, Double>();
v_priceBandsTransport.put(-9999999.0, 0.0);
v_priceBandsTransport.put(0.0, 0.0);
v_priceBandsTransport.put(9999999.0, 0.0);
if (v_contractTransport.transportContractType.equals(OL_TransportContractType.BANDWIDTH)) {
	//traceln("Setting capacity tariff for " + p_actorID);
	v_priceBandsTransport.put(-9999999.0, v_contractTransport.bandwidthTariff_eurpkWh);
	v_priceBandsTransport.put(-v_contractTransport.bandwidthTreshold_kW, 0.0);
	v_priceBandsTransport.put(0.0, 0.0);
	v_priceBandsTransport.put(v_contractTransport.bandwidthTreshold_kW, 0.0);	
	v_priceBandsTransport.put(9999999.0, v_contractTransport.bandwidthTariff_eurpkWh);
	//traceln(v_priceBandsTransport.toString());
} else {
	v_priceBandsTransport.put(-9999999.0, 0.0);
	v_priceBandsTransport.put(0.0, 0.0);
	v_priceBandsTransport.put(9999999.0, 0.0);
}

v_priceBandsTax = new TreeMap<Double, Double>();
v_priceBandsTax.put(-9999999.0, v_contractTax.feedinTax_eurpkWh);
v_priceBandsTax.put(0.0, 0.0);
v_priceBandsTax.put(9999999.0, v_contractTax.deliveryTax_eurpkWh);

/*
if( p_congestionTariffApplicable ){
	v_priceBandsDelivery.put(- p_capacityLevel_kW, 0.0);
	v_priceBandsDelivery.put(p_capacityLevel_kW, 0.0);
}
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1675011274392</Id>
					<Name><![CDATA[f_getElectricityPrice]]></Name>
					<X>660</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentPowerDrawn_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double price_eurpkWh = 0;
if( currentPowerDrawn_kW >= 0 ){
	//Delivery
	/*if( v_priceBandsDelivery.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){
		price += v_priceBandsDelivery.higherEntry( currentPowerDrawn_kW ).getValue();
	}
	else{
		price += v_priceBandsDelivery.ceilingEntry( currentPowerDrawn_kW ).getValue();
	}*/
	price_eurpkWh += v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh;

	//Transport
	/*if( v_priceBandsTransport.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){
		price += v_priceBandsTransport.higherEntry( currentPowerDrawn_kW ).getValue();
	}
	else{
		price += v_priceBandsTransport.ceilingEntry( currentPowerDrawn_kW ).getValue();
	}*/

	price_eurpkWh += v_currentNodalPrice_eurpkWh;
	//Tax
	/*if( v_priceBandsTax.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){
		price += v_priceBandsTax.higherEntry( currentPowerDrawn_kW ).getValue();
	}
	else{
		price += v_priceBandsTax.ceilingEntry( currentPowerDrawn_kW ).getValue();
	}*/

	price_eurpkWh += v_contractTax.deliveryTax_eurpkWh + v_contractTax.proportionalTax_pct;// * (v_contractTax.deliveryTax_eurpkWh + v_currentNodalPrice_eurpkWh + v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh)
	price_eurpkWh = price_eurpkWh * (1+v_contractTax.proportionalTax_pct);
}
else {
	//Delivery
	/*if( v_priceBandsDelivery.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){
		price += v_priceBandsDelivery.higherEntry( currentPowerDrawn_kW ).getValue();
	}
	else{
		price += v_priceBandsDelivery.floorEntry( currentPowerDrawn_kW ).getValue();
	}*/

	price_eurpkWh += v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh;
	//Transport
	/*if( v_priceBandsTransport.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){
		price += v_priceBandsTransport.higherEntry( currentPowerDrawn_kW ).getValue();
	}
	else{
		price += v_priceBandsTransport.floorEntry( currentPowerDrawn_kW ).getValue();
	}*/
	price_eurpkWh += v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh;
	//Tax
	/*if( v_priceBandsTax.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){
		price += v_priceBandsTax.higherEntry( currentPowerDrawn_kW ).getValue();
	}
	else{
		price += v_priceBandsTax.floorEntry( currentPowerDrawn_kW ).getValue();
	}*/
	price_eurpkWh += v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct;// * (v_contractTax.deliveryTax_eurpkWh + v_currentNodalPrice_eurpkWh + v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh)
	price_eurpkWh = price_eurpkWh * (1+v_contractTax.proportionalTax_pct);
}
//traceln(price_eurpkWh);
return price_eurpkWh;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1675012472432</Id>
					<Name><![CDATA[f_getAvailablePowerAtPrice]]></Name>
					<X>660</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentPowerDrawn_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double availablePower_kW;//, availablePowerDelivery, availablePowerTransport, availablePowerTax = 0;

/*if( currentPowerDrawn_kW >= 0 ){
	// Check if one of the pricebands is at a 'breakpoint'	
	if( currentPowerDrawn_kW == v_priceBandsDelivery.ceilingKey( currentPowerDrawn_kW )){
		availablePowerDelivery = v_priceBandsDelivery.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	} 	else {
		availablePowerDelivery = v_priceBandsDelivery.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	}
	if( currentPowerDrawn_kW == v_priceBandsTransport.ceilingKey( currentPowerDrawn_kW )){
		availablePowerTransport = v_priceBandsTransport.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	} 	else {
		availablePowerTransport = v_priceBandsTransport.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	}
	if( currentPowerDrawn_kW == v_priceBandsTax.ceilingKey( currentPowerDrawn_kW )){
		availablePowerTax = v_priceBandsTax.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	} 	else {
		availablePowerTax = v_priceBandsTax.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	}		
}
else {
	if( currentPowerDrawn_kW == v_priceBandsDelivery.floorKey( currentPowerDrawn_kW )){
		availablePowerDelivery = v_priceBandsDelivery.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	} 	
	else {
		availablePowerDelivery = v_priceBandsDelivery.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	}
	
	if( currentPowerDrawn_kW == v_priceBandsTransport.floorKey( currentPowerDrawn_kW )){
		availablePowerTransport = v_priceBandsTransport.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	} 	
	else {
		availablePowerTransport = v_priceBandsTransport.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	}
	
	if( currentPowerDrawn_kW == v_priceBandsTax.floorKey( currentPowerDrawn_kW )){
		availablePowerTax = v_priceBandsTax.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	} 	
	else {
		availablePowerTax = v_priceBandsTax.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;
	}		
	
}*/

//availablePower = min(min(availablePowerDelivery, availablePowerTransport), availablePowerTax);
if( currentPowerDrawn_kW >= 0 ){ // Only check if current power is positive or negative
	availablePower_kW = 1e10; // 'Infinite', in this case 10 TW. Something else should be the limiting factor on power.
} else {
	availablePower_kW = -currentPowerDrawn_kW;
}

//traceln("Still using treemaps in f_getAvailablePowerAtPrice!");
return availablePower_kW;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1675068408612</Id>
					<Name><![CDATA[f_getAveragedElectricityPrice]]></Name>
					<Description><![CDATA[Returns the average electricity price of a given additional power demand above a current demand, taking all tariff structures into accounts. Mainly used for heatpumps that only operate at full ]]></Description>
					<X>660</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[baseDemand_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[requestedPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double price_eurph = 0;
double availablePower_kW = 0;
double addedPrice_eurpkWh;
double addedPower_kW;
double currentPowerRequestLevel_kW;

boolean isDemandMet = false;
double loopcount = 1;

//traceln( " ");
//traceln( "starting demand: " + baseDemand_kW);
//traceln("Power request: " + requestedPower_kW);

while (! isDemandMet ) { // Loop door de treemap tot je requestedPower_kW bereikt
	//traceln( " ");
	//traceln( "loop " + loopcount + ", available Power: " + availablePower_kW);
	currentPowerRequestLevel_kW = roundToDecimal( availablePower_kW + baseDemand_kW, 5);
	//traceln("Current power request level = " + currentPowerRequestLevel_kW) ;
	
	addedPrice_eurpkWh = f_getElectricityPrice(currentPowerRequestLevel_kW);
	addedPower_kW = f_getAvailablePowerAtPrice(currentPowerRequestLevel_kW);
	//traceln("Added power " + addedPower_kW);
	
	if(addedPower_kW + availablePower_kW >= requestedPower_kW) {
		addedPower_kW = requestedPower_kW - availablePower_kW;
		price_eurph += addedPrice_eurpkWh * addedPower_kW;
		isDemandMet = true;
	} 
	else {
		availablePower_kW += addedPower_kW;
		price_eurph += addedPrice_eurpkWh * addedPower_kW;		
		loopcount += 1;
	}
	//traceln("price added " + addedPrice_eurpkWh);
}
//traceln("total price " + price_eurph);
//getEngine().pause();
traceln("Still using treemaps in f_getAveragedElectricityPrice!");

return price_eurph / requestedPower_kW;

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1679478105441</Id>
					<Name><![CDATA[f_getMethanePrice]]></Name>
					<X>660</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( v_methanePrice_eurpkWh == 0.0 ){
	throw new IllegalStateException("Missing methane contracts! No methane price available for this connection!");
}
return v_methanePrice_eurpkWh;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1679478116012</Id>
					<Name><![CDATA[f_getHydrogenPrice]]></Name>
					<X>660</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( v_hydrogenPrice_eurpkWh == 0.0 ){
	throw new IllegalStateException("Missing hydrogen contracts! No hydrogen price available for this connection!");
}
return v_hydrogenPrice_eurpkWh;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1704371830113</Id>
					<Name><![CDATA[f_resetStates]]></Name>
					<X>660</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Reset energytotals
v_totalElectricityUsed_kWh = v_totalHeatUsed_kWh = v_totalMethaneUsed_kWh = v_totalHydrogenUsed_kWh = v_totalDieselUsed_kWh = 0;
// Reset finances
v_balanceElectricity_eur = v_balanceElectricityDelivery_eur = v_balanceElectricityTransport_eur = v_balanceElectricityTax_eur = 0;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1716897235822</Id>
					<Name><![CDATA[f_initialize]]></Name>
					<X>660</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[f_setContractValues();
f_connectToParentActor();]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<GridConnection>]]></ReturnType>
					<Id>1718289254859</Id>
					<Name><![CDATA[f_getOwnedGridConnections]]></Name>
					<X>60</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return this.c_ownedGridConnections;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1660224852389</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-70</X><Y>-110</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[TreeMap<Double, Double>]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1660225105554</Id>
					<Name><![CDATA[energySupplier]]></Name>
					<Description><![CDATA[Link naar bovenliggende actor, bijv. een Coop, of energySupplier. Gebruikt om lid te worden van een Coop of aangesloten te zijn bij een energieleverancier.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>-70</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>SINGLE_LINK</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1703256762219</Id>
					<Name><![CDATA[l_subTenant]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>200</X><Y>-20</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentReferenceId>1658752695711</AgentReferenceId>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<BidirectionalPeerId>1703256686877</BidirectionalPeerId>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1704895007444</Id>
					<Name><![CDATA[l_ownedBuildings]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>310</X><Y>-20</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentReferenceId>1676382560905</AgentReferenceId>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1660730128545</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>60</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1660224852393</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Line>
					<Id>1667917035332</Id>
					<Name><![CDATA[line1]]></Name>
					<X>920</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667917035334</Id>
					<Name><![CDATA[text1]]></Name>
					<X>950</X><Y>40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Contracts]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1674921588187</Id>
					<Name><![CDATA[rectangle5]]></Name>
					<X>510</X><Y>550</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DASHED</LineStyle>
					<Width>709.199</Width>
					<Height>189.967</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1674921588189</Id>
					<Name><![CDATA[text12]]></Name>
					<X>730</X><Y>580</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-8355712</Color>
					<Text><![CDATA[Current consumption volumes]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1674921619300</Id>
					<Name><![CDATA[text13]]></Name>
					<X>970</X><Y>580</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-8355712</Color>
					<Text><![CDATA[Electricity financial accounting]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1675071708039</Id>
					<Name><![CDATA[button]]></Name>
					<X>660</X><Y>350</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="140" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[traceln("f_getAveragedElectricityPrice(-5, 10): " + f_getAveragedElectricityPrice(-5, 10));
traceln("f_getAveragedElectricityPrice(-5, 5): " + f_getAveragedElectricityPrice(-5, 5));
traceln("f_getAveragedElectricityPrice(-5, 4): " + f_getAveragedElectricityPrice(-5, 4));

/*
traceln("f_getAvailablePowerAtPrice(5) " + f_getAvailablePowerAtPrice(5));
traceln("f_getElectricityPrice(5) " + f_getElectricityPrice(5));
traceln("f_getAvailablePowerAtPrice(0) " + f_getAvailablePowerAtPrice(0));
traceln("f_getElectricityPrice(0) " + f_getElectricityPrice(0));
traceln("f_getAvailablePowerAtPrice(-1) " + f_getAvailablePowerAtPrice(-1));
traceln("f_getElectricityPrice(-1) " + f_getElectricityPrice(-1));
traceln("f_getAvailablePowerAtPrice(-10) " + f_getAvailablePowerAtPrice(-10));
traceln("f_getElectricityPrice(-10) " + f_getElectricityPrice(-10));
*/
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[test avg price function]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1676900973459</Id>
					<Name><![CDATA[text14]]></Name>
					<X>540</X><Y>580</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-8355712</Color>
					<Text><![CDATA[Total consumption]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1714643374614</Id>
					<Name><![CDATA[va_ConnectionOwner]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1660731364525</Id>
			<Name><![CDATA[GovernmentLayer]]></Name>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[Actor]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_actorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorSubgroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorGroup]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1660731364523</Id>
				<Name><![CDATA[1660731364523]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1660731364521</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1660731364524</CurrentLevel>
			<ConnectionsId>1660731364520</ConnectionsId>
			<AgentLinks>
				<AgentLink>
					<Id>1660731364520</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1660732002822</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1660731364524</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1660731375016</Id>
			<Name><![CDATA[EnergyCoop]]></Name>
			<Import><![CDATA[import com.fasterxml.jackson.databind.JsonNode;

import zeroPackage.ZeroMath;
import zeroPackage.ZeroAccumulator;]]></Import>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[Actor]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_actorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorSubgroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorGroup]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1660731375014</Id>
				<Name><![CDATA[1660731375014]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1660731375012</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1660731375015</CurrentLevel>
			<ConnectionsId>1660731375011</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1667983361361</Id>
					<Name><![CDATA[v_energyPassedThrough_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361363</Id>
					<Name><![CDATA[v_electricityVolume_kWh]]></Name>
					<X>41</X><Y>449</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361365</Id>
					<Name><![CDATA[v_heatVolume_kWh]]></Name>
					<X>41</X><Y>469</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361367</Id>
					<Name><![CDATA[v_methaneVolume_kWh]]></Name>
					<X>41</X><Y>489</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361369</Id>
					<Name><![CDATA[v_electricitySurplus_kW]]></Name>
					<X>41</X><Y>589</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361373</Id>
					<Name><![CDATA[v_electricityImported_kWh]]></Name>
					<X>384</X><Y>449</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361375</Id>
					<Name><![CDATA[v_electricityExported_kWh]]></Name>
					<X>601</X><Y>477</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361377</Id>
					<Name><![CDATA[v_methaneImported_kWh]]></Name>
					<X>384</X><Y>469</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361379</Id>
					<Name><![CDATA[v_methaneExported_kWh]]></Name>
					<X>601</X><Y>497</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361381</Id>
					<Name><![CDATA[v_heatImported_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>384</X><Y>489</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361383</Id>
					<Name><![CDATA[v_heatExported_kWh]]></Name>
					<X>601</X><Y>517</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361385</Id>
					<Name><![CDATA[v_hydrogenImported_kWh]]></Name>
					<X>384</X><Y>509</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361387</Id>
					<Name><![CDATA[v_hydrogenExported_kWh]]></Name>
					<X>601</X><Y>537</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1667983361389</Id>
					<Name><![CDATA[v_hydrogenVolume_kWh]]></Name>
					<X>41</X><Y>509</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668587453344</Id>
					<Name><![CDATA[v_balanceMembers_eur]]></Name>
					<X>690</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668587453348</Id>
					<Name><![CDATA[v_balanceMethane_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668587453350</Id>
					<Name><![CDATA[v_balanceHeat_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>780</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668587453352</Id>
					<Name><![CDATA[v_balanceHydrogen_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>800</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668587944764</Id>
					<Name><![CDATA[v_electricityContractType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_ContractType]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[OL_ContractType.ELECTRICITY_VARIABLE]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668587944767</Id>
					<Name><![CDATA[v_heatContractType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_ContractType]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[HEAT_FIXED]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668587944769</Id>
					<Name><![CDATA[v_methaneContractType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_ContractType]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[METHANE_FIXED]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1668587944771</Id>
					<Name><![CDATA[v_hydrogenContractType]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_ContractType]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[HYDROGEN_FIXED]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669024077839</Id>
					<Name><![CDATA[v_dieselImported_kWh]]></Name>
					<X>383</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669024099515</Id>
					<Name><![CDATA[v_dieselVolume_kWh]]></Name>
					<X>40</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669024644541</Id>
					<Name><![CDATA[v_balanceDiesel_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>820</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669037269503</Id>
					<Name><![CDATA[v_contractEnergyCoop]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669035973258</Id>
					<Name><![CDATA[v_allowedCapacity_kW]]></Name>
					<X>383</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669037284540</Id>
					<Name><![CDATA[v_contractEnergySupplier]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1669037300744</Id>
					<Name><![CDATA[v_contractGridOperator]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1670254434536</Id>
					<Name><![CDATA[v_enable_nfATO_b]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-340</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1675335053811</Id>
					<Name><![CDATA[j_ActorData]]></Name>
					<X>40</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_ActorData]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676552003055</Id>
					<Name><![CDATA[v_contractDelivery]]></Name>
					<X>390</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_DeliveryContract]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676552003057</Id>
					<Name><![CDATA[v_contractTransport]]></Name>
					<X>390</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_TransportContract]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676552003059</Id>
					<Name><![CDATA[v_contractTax]]></Name>
					<X>390</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_TaxContract]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676552003061</Id>
					<Name><![CDATA[v_contractConnection]]></Name>
					<X>390</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_ConnectionContract]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676552997739</Id>
					<Name><![CDATA[v_balanceElectricityDelivery_eur]]></Name>
					<X>600</X><Y>389</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676552997741</Id>
					<Name><![CDATA[v_balanceElectricityTransport_eur]]></Name>
					<X>600</X><Y>409</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676552997743</Id>
					<Name><![CDATA[v_balanceElectricityTax_eur]]></Name>
					<X>600</X><Y>429</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676553064622</Id>
					<Name><![CDATA[v_electricityVariablePrice_eurpkWh]]></Name>
					<X>40</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676553064625</Id>
					<Name><![CDATA[v_priceBandsDelivery]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-340</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[TreeMap<Double, Double>]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676553064627</Id>
					<Name><![CDATA[v_currentNodalPrice_eurpkWh]]></Name>
					<X>40</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676553064629</Id>
					<Name><![CDATA[v_priceBandsTransport]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-340</X><Y>339</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[TreeMap<Double, Double>]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1676553064631</Id>
					<Name><![CDATA[v_priceBandsTax]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-340</X><Y>359</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[TreeMap<Double, Double>]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679563490208</Id>
					<Name><![CDATA[v_methanePrice_eurpkWh]]></Name>
					<X>40</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679563490210</Id>
					<Name><![CDATA[v_hydrogenPrice_eurpkWh]]></Name>
					<X>40</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1679563490212</Id>
					<Name><![CDATA[v_heatPrice_eurpkWh]]></Name>
					<X>40</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692113155819</Id>
					<Name><![CDATA[v_balanceElectricity_eur]]></Name>
					<X>600</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692113346724</Id>
					<Name><![CDATA[v_totalBalanceCoop_eur]]></Name>
					<X>660</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692620449476</Id>
					<Name><![CDATA[v_electricitySurplusLowPassed_kW]]></Name>
					<X>41</X><Y>609</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692620522011</Id>
					<Name><![CDATA[v_lowPassFactor_fr]]></Name>
					<X>40</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[min(1, 0.8*1.2 * energyModel.p_timeStep_h) //0.2 ]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692631118805</Id>
					<Name><![CDATA[v_assetDepreciation_eur]]></Name>
					<X>690</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704291311931</Id>
					<Name><![CDATA[v_totalEnergyConsumed_MWh]]></Name>
					<X>60</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704291311935</Id>
					<Name><![CDATA[v_totalEnergyProduced_MWh]]></Name>
					<X>60</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704291311937</Id>
					<Name><![CDATA[v_totalSelfConsumedEnergy_MWh]]></Name>
					<X>60</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704291311939</Id>
					<Name><![CDATA[v_totalImport_MWh]]></Name>
					<X>60</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704291311961</Id>
					<Name><![CDATA[v_totalExport_MWh]]></Name>
					<X>60</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704291413590</Id>
					<Name><![CDATA[v_currentEnergyConsumption_kW]]></Name>
					<X>40</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704291413592</Id>
					<Name><![CDATA[v_currentEnergyProduction_kW]]></Name>
					<X>40</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704291413594</Id>
					<Name><![CDATA[v_currentEnergyCurtailed_kW]]></Name>
					<X>40</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704453547475</Id>
					<Name><![CDATA[v_totalEnergyCurtailed_MWh]]></Name>
					<X>60</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707141890843</Id>
					<Name><![CDATA[a_annualElectricityBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-500</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/energyModel.p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707920254096</Id>
					<Name><![CDATA[v_currentElectricityConsumption_kW]]></Name>
					<X>40</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707920254098</Id>
					<Name><![CDATA[v_currentElectricityProduction_kW]]></Name>
					<X>40</X><Y>830</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707920292568</Id>
					<Name><![CDATA[a_annualEnergyCurtailed_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-500</X><Y>1020</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/energyModel.p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707920292571</Id>
					<Name><![CDATA[a_annualElectricityProduction_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-500</X><Y>1040</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/energyModel.p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707920292573</Id>
					<Name><![CDATA[a_annualElectricityConsumption_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-500</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/energyModel.p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707920401265</Id>
					<Name><![CDATA[v_totalElectricityConsumed_MWh]]></Name>
					<X>60</X><Y>1152</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707920401267</Id>
					<Name><![CDATA[v_totalElectricityProduced_MWh]]></Name>
					<X>60</X><Y>1172</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707920401269</Id>
					<Name><![CDATA[v_totalElectricitySelfConsumed_MWh]]></Name>
					<X>60</X><Y>1191</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707987033631</Id>
					<Name><![CDATA[a_annualMethaneBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-500</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/energyModel.p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707987033633</Id>
					<Name><![CDATA[a_annualHydrogenBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-500</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/energyModel.p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707987033635</Id>
					<Name><![CDATA[a_annualDieselBalance_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-500</X><Y>1140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/energyModel.p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1709644748300</Id>
					<Name><![CDATA[v_currentOwnElectricityProduction_kW]]></Name>
					<X>40</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1709644907971</Id>
					<Name><![CDATA[a_annualOwnElectricityProduction_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-500</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new double[roundToInt(8760/energyModel.p_timeStep_h)]]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834851</Id>
					<Name><![CDATA[v_evChargingPowerElectric_kW]]></Name>
					<X>-282</X><Y>1509</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834853</Id>
					<Name><![CDATA[v_fixedConsumptionElectric_kW]]></Name>
					<X>-282</X><Y>1379</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834855</Id>
					<Name><![CDATA[v_pvProductionElectric_kW]]></Name>
					<X>-282</X><Y>1599</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834857</Id>
					<Name><![CDATA[v_batteryPowerElectric_kW]]></Name>
					<X>-282</X><Y>1529</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834859</Id>
					<Name><![CDATA[v_conversionPowerElectric_kW]]></Name>
					<X>-282</X><Y>1429</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834861</Id>
					<Name><![CDATA[v_windProductionElectric_kW]]></Name>
					<X>-282</X><Y>1619</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834863</Id>
					<Name><![CDATA[v_electricHobConsumption_kW]]></Name>
					<Description><![CDATA[This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information]]></Description>
					<X>-252</X><Y>1449</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834865</Id>
					<Name><![CDATA[v_heatPumpElectricityConsumption_kW]]></Name>
					<Description><![CDATA[This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information]]></Description>
					<X>-252</X><Y>1469</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834867</Id>
					<Name><![CDATA[v_hydrogenElectricityConsumption_kW]]></Name>
					<X>-252</X><Y>1489</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723034834869</Id>
					<Name><![CDATA[v_curtailmentPowerElectric_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-283</X><Y>1640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101570992</Id>
					<Name><![CDATA[data_netbelastingDuurkromme_kW]]></Name>
					<X>61.333</X><Y>1693.333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101570994</Id>
					<Name><![CDATA[data_netbelastingDuurkrommeVorige_kW]]></Name>
					<X>61.333</X><Y>1713.333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101570996</Id>
					<Name><![CDATA[data_summerWeekNetbelastingDuurkromme_kW]]></Name>
					<X>61.333</X><Y>1733.333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101570998</Id>
					<Name><![CDATA[data_winterWeekNetbelastingDuurkromme_kW]]></Name>
					<X>61.333</X><Y>1753.333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101571000</Id>
					<Name><![CDATA[data_daytimeNetbelastingDuurkromme_kW]]></Name>
					<X>61.333</X><Y>1773.333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101571002</Id>
					<Name><![CDATA[data_nighttimeNetbelastingDuurkromme_kW]]></Name>
					<X>61.333</X><Y>1793.333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101571004</Id>
					<Name><![CDATA[data_weekdayNetbelastingDuurkromme_kW]]></Name>
					<X>61.333</X><Y>1813.333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101571006</Id>
					<Name><![CDATA[data_weekendNetbelastingDuurkromme_kW]]></Name>
					<X>61.333</X><Y>1833.333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DataSet]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746279</Id>
					<Name><![CDATA[acc_annualElectricityBalance_kW]]></Name>
					<X>60</X><Y>1230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746281</Id>
					<Name><![CDATA[acc_annualMethaneBalance_kW]]></Name>
					<X>60</X><Y>1250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746283</Id>
					<Name><![CDATA[acc_annualHydrogenBalance_kW]]></Name>
					<X>60</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746285</Id>
					<Name><![CDATA[acc_annualDieselBalance_kW]]></Name>
					<X>60</X><Y>1290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746287</Id>
					<Name><![CDATA[acc_annualHeatBalance_kW]]></Name>
					<X>60</X><Y>1310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746289</Id>
					<Name><![CDATA[acc_annualEnergyProduction_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-510</X><Y>1200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746291</Id>
					<Name><![CDATA[acc_annualEnergyConsumption_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-510</X><Y>1220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746293</Id>
					<Name><![CDATA[acc_annualEnergyCurtailed_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-510</X><Y>1240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746295</Id>
					<Name><![CDATA[acc_annualElectricityProduction_kW]]></Name>
					<X>60</X><Y>1330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746297</Id>
					<Name><![CDATA[acc_annualElectricityConsumption_kW]]></Name>
					<X>60</X><Y>1350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723101746299</Id>
					<Name><![CDATA[acc_annualHeatProduction_kW]]></Name>
					<X>60</X><Y>1370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723102014142</Id>
					<Name><![CDATA[acc_annualOwnElectricityProduction_kW]]></Name>
					<X>60</X><Y>1387</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(false, energyModel.p_timeStep_h, 8760)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882799</Id>
					<Name><![CDATA[v_dailyBaseloadElectricityDemand_kW]]></Name>
					<X>62.66666666666663</X><Y>1925.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882801</Id>
					<Name><![CDATA[v_dailyHeatPumpElectricityDemand_kW]]></Name>
					<X>62.66666666666663</X><Y>1945.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882803</Id>
					<Name><![CDATA[v_dailyElectricVehicleDemand_kW]]></Name>
					<X>62.66666666666663</X><Y>1965.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882805</Id>
					<Name><![CDATA[v_dailyBatteriesDemand_kW]]></Name>
					<X>62.66666666666663</X><Y>1985.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882807</Id>
					<Name><![CDATA[v_dailyPVGeneration_kW]]></Name>
					<X>62.66666666666663</X><Y>2105.333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882809</Id>
					<Name><![CDATA[v_dailyWindGeneration_kW]]></Name>
					<X>62.66666666666663</X><Y>2125.333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882811</Id>
					<Name><![CDATA[v_dailyBatteriesSupply_kW]]></Name>
					<X>62.66666666666663</X><Y>2145.333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882813</Id>
					<Name><![CDATA[v_dailyV2GSupply_kW]]></Name>
					<X>62.66666666666663</X><Y>2165.333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882815</Id>
					<Name><![CDATA[v_dailyElectricitySupply_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>62.66666666666663</X><Y>1905.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882817</Id>
					<Name><![CDATA[v_dailyElectricityDemand_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>62.66666666666663</X><Y>1885.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882819</Id>
					<Name><![CDATA[v_dailyDieselDemand_kW]]></Name>
					<X>62.66666666666663</X><Y>2025.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882821</Id>
					<Name><![CDATA[v_dailyHydrogenDemand_kW]]></Name>
					<X>62.66666666666663</X><Y>2045.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882823</Id>
					<Name><![CDATA[v_dailyNaturalGasDemand_kW]]></Name>
					<X>62.66666666666663</X><Y>2005.3333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882825</Id>
					<Name><![CDATA[v_dailyDistrictHeatDemand_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>62.66666666666663</X><Y>2065.333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882827</Id>
					<Name><![CDATA[v_dailyDistrictHeatSupply_kWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>62.66666666666663</X><Y>2225.333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882829</Id>
					<Name><![CDATA[v_dailyNaturalGasSupply_kW]]></Name>
					<X>62.66666666666663</X><Y>2185.333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723103882831</Id>
					<Name><![CDATA[v_dailyHydrogenSupply_kW]]></Name>
					<X>62.66666666666663</X><Y>2205.333333333333</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191910</Id>
					<Name><![CDATA[v_summerWeekTotalImport_MWh]]></Name>
					<X>366.667</X><Y>1012.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191912</Id>
					<Name><![CDATA[v_summerWeekTotalExport_MWh]]></Name>
					<X>366.667</X><Y>1032.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191914</Id>
					<Name><![CDATA[v_summerWeekEnergyConsumed_MWh]]></Name>
					<X>366.667</X><Y>1052.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191916</Id>
					<Name><![CDATA[v_summerWeekEnergyProduced_MWh]]></Name>
					<X>366.667</X><Y>1072.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191918</Id>
					<Name><![CDATA[v_summerWeekSelfConsumedEnergy_MWh]]></Name>
					<X>366.667</X><Y>1092.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191920</Id>
					<Name><![CDATA[v_winterWeekTotalImport_MWh]]></Name>
					<X>656.667</X><Y>1012.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191922</Id>
					<Name><![CDATA[v_winterWeekTotalExport_MWh]]></Name>
					<X>656.667</X><Y>1032.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191924</Id>
					<Name><![CDATA[v_winterWeekEnergyConsumed_MWh]]></Name>
					<X>656.667</X><Y>1052.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191926</Id>
					<Name><![CDATA[v_winterWeekEnergyProduced_MWh]]></Name>
					<X>656.667</X><Y>1072.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191928</Id>
					<Name><![CDATA[v_winterWeekSelfConsumedEnergy_MWh]]></Name>
					<X>656.667</X><Y>1092.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191930</Id>
					<Name><![CDATA[v_daytimeTotalImport_MWh]]></Name>
					<X>916.667</X><Y>1012.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191932</Id>
					<Name><![CDATA[v_daytimeTotalExport_MWh]]></Name>
					<X>916.667</X><Y>1032.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191934</Id>
					<Name><![CDATA[v_daytimeEnergyConsumed_MWh]]></Name>
					<X>916.667</X><Y>1052.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191936</Id>
					<Name><![CDATA[v_daytimeEnergyProduced_MWh]]></Name>
					<X>916.667</X><Y>1072.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191938</Id>
					<Name><![CDATA[v_daytimeSelfConsumedEnergy_MWh]]></Name>
					<X>916.667</X><Y>1092.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191940</Id>
					<Name><![CDATA[v_nighttimeTotalImport_MWh]]></Name>
					<X>1206.667</X><Y>1010.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191942</Id>
					<Name><![CDATA[v_nighttimeTotalExport_MWh]]></Name>
					<X>1206.667</X><Y>1030.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191944</Id>
					<Name><![CDATA[v_nighttimeEnergyConsumed_MWh]]></Name>
					<X>1206.667</X><Y>1050.667</Y>
					<Label><X>10</X><Y>-3</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191946</Id>
					<Name><![CDATA[v_nighttimeEnergyProduced_MWh]]></Name>
					<X>1206.667</X><Y>1070.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191948</Id>
					<Name><![CDATA[v_nighttimeSelfConsumedEnergy_MWh]]></Name>
					<X>1206.667</X><Y>1090.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191950</Id>
					<Name><![CDATA[v_weekdayTotalImport_MWh]]></Name>
					<X>1476.667</X><Y>1012.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191952</Id>
					<Name><![CDATA[v_weekdayTotalExport_MWh]]></Name>
					<X>1476.667</X><Y>1032.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191954</Id>
					<Name><![CDATA[v_weekdayEnergyConsumed_MWh]]></Name>
					<X>1476.667</X><Y>1052.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191956</Id>
					<Name><![CDATA[v_weekdayEnergyProduced_MWh]]></Name>
					<X>1476.667</X><Y>1072.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191958</Id>
					<Name><![CDATA[v_weekdaySelfConsumedEnergy_MWh]]></Name>
					<X>1476.667</X><Y>1092.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191960</Id>
					<Name><![CDATA[v_summerWeekElectricityConsumed_MWh]]></Name>
					<X>366.667</X><Y>1122.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191962</Id>
					<Name><![CDATA[v_winterWeekElectricityConsumed_MWh]]></Name>
					<X>656.667</X><Y>1122.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191964</Id>
					<Name><![CDATA[v_daytimeElectricityConsumed_MWh]]></Name>
					<X>916.667</X><Y>1120.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191966</Id>
					<Name><![CDATA[v_nighttimeElectricityConsumed_MWh]]></Name>
					<X>1206.667</X><Y>1120.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191968</Id>
					<Name><![CDATA[v_weekdayElectricityConsumed_MWh]]></Name>
					<X>1476.667</X><Y>1119.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191970</Id>
					<Name><![CDATA[v_summerWeekElectricityProduced_MWh]]></Name>
					<X>366.667</X><Y>1142.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191972</Id>
					<Name><![CDATA[v_summerWeekElectricitySelfConsumed_MWh]]></Name>
					<X>366.667</X><Y>1162.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191974</Id>
					<Name><![CDATA[v_summerWeekElectricityImport_MWh]]></Name>
					<X>366.667</X><Y>1182.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191976</Id>
					<Name><![CDATA[v_summerWeekElectricityExport_MWh]]></Name>
					<X>366.667</X><Y>1202.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191978</Id>
					<Name><![CDATA[v_winterWeekElectricityProduced_MWh]]></Name>
					<X>656.667</X><Y>1142.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191980</Id>
					<Name><![CDATA[v_winterWeekElectricitySelfConsumed_MWh]]></Name>
					<X>656.667</X><Y>1162.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191982</Id>
					<Name><![CDATA[v_winterWeekElectricityImport_MWh]]></Name>
					<X>656.667</X><Y>1182.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191984</Id>
					<Name><![CDATA[v_winterWeekElectricityExport_MWh]]></Name>
					<X>656.667</X><Y>1202.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191986</Id>
					<Name><![CDATA[v_summerWeekMethaneImport_MWh]]></Name>
					<X>366.667</X><Y>1222.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191988</Id>
					<Name><![CDATA[v_summerWeekHydrogenImport_MWh]]></Name>
					<X>366.667</X><Y>1261.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191990</Id>
					<Name><![CDATA[v_summerWeekDieselImport_MWh]]></Name>
					<X>366.667</X><Y>1240.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191992</Id>
					<Name><![CDATA[v_winterWeekMethaneImport_MWh]]></Name>
					<X>656.667</X><Y>1222.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191994</Id>
					<Name><![CDATA[v_winterWeekHydrogenImport_MWh]]></Name>
					<X>656.667</X><Y>1261.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191996</Id>
					<Name><![CDATA[v_winterWeekDieselImport_MWh]]></Name>
					<X>656.667</X><Y>1240.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122191998</Id>
					<Name><![CDATA[v_daytimeElectricityProduced_MWh]]></Name>
					<X>916.667</X><Y>1139.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192000</Id>
					<Name><![CDATA[v_daytimeElectricitySelfConsumed_MWh]]></Name>
					<X>916.667</X><Y>1159.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192002</Id>
					<Name><![CDATA[v_daytimeElectricityImport_MWh]]></Name>
					<X>916.667</X><Y>1179.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192004</Id>
					<Name><![CDATA[v_daytimeElectricityExport_MWh]]></Name>
					<X>916.667</X><Y>1199.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192006</Id>
					<Name><![CDATA[v_nighttimeElectricityProduced_MWh]]></Name>
					<X>1206.667</X><Y>1139.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192008</Id>
					<Name><![CDATA[v_nighttimeElectricitySelfConsumed_MWh]]></Name>
					<X>1206.667</X><Y>1159.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192010</Id>
					<Name><![CDATA[v_nighttimeElectricityImport_MWh]]></Name>
					<X>1206.667</X><Y>1179.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192012</Id>
					<Name><![CDATA[v_nighttimeElectricityExport_MWh]]></Name>
					<X>1206.667</X><Y>1199.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192014</Id>
					<Name><![CDATA[v_daytimeMethaneImport_MWh]]></Name>
					<X>916.667</X><Y>1219.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192016</Id>
					<Name><![CDATA[v_daytimeHydrogenImport_MWh]]></Name>
					<X>916.667</X><Y>1258.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192018</Id>
					<Name><![CDATA[v_daytimeDieselImport_MWh]]></Name>
					<X>916.667</X><Y>1237.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192020</Id>
					<Name><![CDATA[v_nighttimeMethaneImport_MWh]]></Name>
					<X>1206.667</X><Y>1219.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192022</Id>
					<Name><![CDATA[v_nighttimeHydrogenImport_MWh]]></Name>
					<X>1206.667</X><Y>1258.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192024</Id>
					<Name><![CDATA[v_nighttimeDieselImport_MWh]]></Name>
					<X>1206.667</X><Y>1237.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192026</Id>
					<Name><![CDATA[v_weekdayElectricityProduced_MWh]]></Name>
					<X>1476.667</X><Y>1139.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192028</Id>
					<Name><![CDATA[v_weekdayElectricitySelfConsumed_MWh]]></Name>
					<X>1476.667</X><Y>1159.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192030</Id>
					<Name><![CDATA[v_weekdayElectricityImport_MWh]]></Name>
					<X>1476.667</X><Y>1179.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192032</Id>
					<Name><![CDATA[v_weekdayElectricityExport_MWh]]></Name>
					<X>1476.667</X><Y>1199.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192034</Id>
					<Name><![CDATA[v_weekdayMethaneImport_MWh]]></Name>
					<X>1476.667</X><Y>1219.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192036</Id>
					<Name><![CDATA[v_weekdayHydrogenImport_MWh]]></Name>
					<X>1476.667</X><Y>1258.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192038</Id>
					<Name><![CDATA[v_weekdayDieselImport_MWh]]></Name>
					<X>1476.667</X><Y>1237.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192040</Id>
					<Name><![CDATA[v_summerWeekHydrogenExport_MWh]]></Name>
					<X>366.667</X><Y>1282.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192042</Id>
					<Name><![CDATA[v_winterWeekHydrogenExport_MWh]]></Name>
					<X>656.667</X><Y>1282.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192044</Id>
					<Name><![CDATA[v_daytimeHydrogenExport_MWh]]></Name>
					<X>916.667</X><Y>1282.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192046</Id>
					<Name><![CDATA[v_nighttimeHydrogenExport_MWh]]></Name>
					<X>1206.667</X><Y>1282.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192048</Id>
					<Name><![CDATA[v_weekdayHydrogenExport_MWh]]></Name>
					<X>1476.667</X><Y>1282.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192050</Id>
					<Name><![CDATA[acc_summerElectricityBalance_kW]]></Name>
					<X>416.667</X><Y>1352.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192052</Id>
					<Name><![CDATA[acc_summerMethaneBalance_kW]]></Name>
					<X>416.667</X><Y>1372.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192054</Id>
					<Name><![CDATA[acc_summerHydrogenBalance_kW]]></Name>
					<X>416.667</X><Y>1392.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192056</Id>
					<Name><![CDATA[acc_summerDieselBalance_kW]]></Name>
					<X>416.667</X><Y>1412.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192058</Id>
					<Name><![CDATA[acc_summerHeatBalance_kW]]></Name>
					<X>416.667</X><Y>1432.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192060</Id>
					<Name><![CDATA[acc_summerEnergyProduction_kW]]></Name>
					<X>416.667</X><Y>1492.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192062</Id>
					<Name><![CDATA[acc_summerEnergyConsumption_kW]]></Name>
					<X>416.667</X><Y>1512.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192064</Id>
					<Name><![CDATA[acc_summerEnergyCurtailed_kW]]></Name>
					<X>416.667</X><Y>1532.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192066</Id>
					<Name><![CDATA[acc_summerElectricityProduction_kW]]></Name>
					<X>416.667</X><Y>1552.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192068</Id>
					<Name><![CDATA[acc_summerElectricityConsumption_kW]]></Name>
					<X>416.667</X><Y>1572.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192070</Id>
					<Name><![CDATA[acc_summerHeatProduction_kW]]></Name>
					<X>416.667</X><Y>1592.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192072</Id>
					<Name><![CDATA[acc_summerTotalImport_kW]]></Name>
					<X>416.667</X><Y>1452.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192074</Id>
					<Name><![CDATA[acc_summerTotalExport_kW]]></Name>
					<X>416.667</X><Y>1472.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192076</Id>
					<Name><![CDATA[acc_winterElectricityBalance_kW]]></Name>
					<X>726.667</X><Y>1352.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192078</Id>
					<Name><![CDATA[acc_winterMethaneBalance_kW]]></Name>
					<X>726.667</X><Y>1372.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192080</Id>
					<Name><![CDATA[acc_winterHydrogenBalance_kW]]></Name>
					<X>726.667</X><Y>1392.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192082</Id>
					<Name><![CDATA[acc_winterDieselBalance_kW]]></Name>
					<X>726.667</X><Y>1412.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192084</Id>
					<Name><![CDATA[acc_winterHeatBalance_kW]]></Name>
					<X>726.667</X><Y>1432.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192086</Id>
					<Name><![CDATA[acc_winterEnergyProduction_kW]]></Name>
					<X>726.667</X><Y>1492.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192088</Id>
					<Name><![CDATA[acc_winterEnergyConsumption_kW]]></Name>
					<X>726.667</X><Y>1512.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192090</Id>
					<Name><![CDATA[acc_winterEnergyCurtailed_kW]]></Name>
					<X>726.667</X><Y>1532.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192092</Id>
					<Name><![CDATA[acc_winterElectricityProduction_kW]]></Name>
					<X>726.667</X><Y>1552.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192094</Id>
					<Name><![CDATA[acc_winterElectricityConsumption_kW]]></Name>
					<X>726.667</X><Y>1572.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192096</Id>
					<Name><![CDATA[acc_winterHeatProduction_kW]]></Name>
					<X>726.667</X><Y>1592.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192098</Id>
					<Name><![CDATA[acc_winterTotalImport_kW]]></Name>
					<X>726.667</X><Y>1452.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192100</Id>
					<Name><![CDATA[acc_winterTotalExport_kW]]></Name>
					<X>726.667</X><Y>1472.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192102</Id>
					<Name><![CDATA[acc_summerConnectionCapacity_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>416.667</X><Y>1622.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122192104</Id>
					<Name><![CDATA[acc_winterConnectionCapacity_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>726.667</X><Y>1622.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ZeroAccumulator]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ZeroAccumulator(true, energyModel.p_timeStep_h, 24*7)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317732</Id>
					<Name><![CDATA[v_weekendTotalImport_MWh]]></Name>
					<X>1751</X><Y>1013</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317734</Id>
					<Name><![CDATA[v_weekendTotalExport_MWh]]></Name>
					<X>1751</X><Y>1033</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317736</Id>
					<Name><![CDATA[v_weekendEnergyConsumed_MWh]]></Name>
					<X>1751</X><Y>1053</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317738</Id>
					<Name><![CDATA[v_weekendEnergyProduced_MWh]]></Name>
					<X>1751</X><Y>1073</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317740</Id>
					<Name><![CDATA[v_weekendSelfConsumedEnergy_MWh]]></Name>
					<X>1751</X><Y>1093</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317742</Id>
					<Name><![CDATA[v_weekendElectricityConsumed_MWh]]></Name>
					<X>1751</X><Y>1121</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317744</Id>
					<Name><![CDATA[v_weekendElectricityProduced_MWh]]></Name>
					<X>1751</X><Y>1142</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317746</Id>
					<Name><![CDATA[v_weekendElectricitySelfConsumed_MWh]]></Name>
					<X>1751</X><Y>1162</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317748</Id>
					<Name><![CDATA[v_weekendElectricityImport_MWh]]></Name>
					<X>1751</X><Y>1182</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317750</Id>
					<Name><![CDATA[v_weekendElectricityExport_MWh]]></Name>
					<X>1751</X><Y>1202</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317752</Id>
					<Name><![CDATA[v_weekendMethaneImport_MWh]]></Name>
					<X>1751</X><Y>1222</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317754</Id>
					<Name><![CDATA[v_weekendHydrogenImport_MWh]]></Name>
					<X>1751</X><Y>1261</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317756</Id>
					<Name><![CDATA[v_weekendDieselImport_MWh]]></Name>
					<X>1751</X><Y>1240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1723122317758</Id>
					<Name><![CDATA[v_weekendHydrogenExport_MWh]]></Name>
					<X>1751</X><Y>1285</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1669037234222</Id>
					<Name><![CDATA[p_actorContractList]]></Name>
					<X>390</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[com.fasterxml.jackson.databind.node.ArrayNode]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1669036172744</Id>
					<Name><![CDATA[p_connectionCapacity_kW]]></Name>
					<Description><![CDATA[TODO: This is still hardcoded! How should Coop know where to 'gather' this data? (Capacity of shared connection)]]></Description>
					<X>60</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1669036172742</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1671707831168</Id>
					<Name><![CDATA[p_gridNodeUnderResponsibility]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>60</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1671707831166</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676551040549</Id>
					<Name><![CDATA[p_actorID]]></Name>
					<Description><![CDATA[Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-120</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1676551040547</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676551040552</Id>
					<Name><![CDATA[p_actorType]]></Name>
					<Description><![CDATA[Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-120</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1676551040550</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676551040555</Id>
					<Name><![CDATA[p_parentActorID]]></Name>
					<Description><![CDATA[Unique actor identifier in String format of a designated parent actor. This may be designated in Config-excel and is used to create an agent link with a higher lying agent (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1676551040553</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676551040558</Id>
					<Name><![CDATA[p_electricitySupplier]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>60</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1676551040556</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676551708075</Id>
					<Name><![CDATA[p_CoopParent]]></Name>
					<X>60</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1676551708073</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1676551708078</Id>
					<Name><![CDATA[p_gridOperator]]></Name>
					<X>60</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1676551708076</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679563405825</Id>
					<Name><![CDATA[p_methaneSupplier]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>60</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679563405823</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679563405829</Id>
					<Name><![CDATA[p_hydrogenSupplier]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>60</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679563405827</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1679563405832</Id>
					<Name><![CDATA[p_heatSupplier]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>60</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Actor]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1679563405830</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1692112528722</Id>
					<Name><![CDATA[p_yearlyOperationalCosts_eur]]></Name>
					<Description><![CDATA[TODO: This is still hardcoded! How should Coop know where to 'gather' this data? (Capacity of shared connection)]]></Description>
					<X>690</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[123456]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1692112528720</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1692620732354</Id>
					<Name><![CDATA[p_applyKostprijsPlus]]></Name>
					<X>40</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1692620732352</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1679563561816</Id>
					<Name><![CDATA[c_actorContracts]]></Name>
					<X>391</X><Y>91</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_Contract]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1678292542481</Id>
					<Name><![CDATA[c_coopMembers]]></Name>
					<X>60</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Agent]]></ElementClass>
						<ValueElementClass><![CDATA[Object]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1709628025685</Id>
					<Name><![CDATA[c_coopCustomers]]></Name>
					<X>210</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Agent]]></ElementClass>
						<ValueElementClass><![CDATA[Object]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1669035973262</Id>
					<Name><![CDATA[e_startNonFirmATO]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-340</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_HOUR]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1669017600000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[1d/1f]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[v_allowedCapacity_kW = v_contractConnection.nfATOpower_kW;// p_nfatoLvl_kW;]]></Action>
				</Event>
				<Event>
					<Id>1669035973267</Id>
					<Name><![CDATA[e_endNonFirmATO]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-340</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_HOUR]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1669017600000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[1d/1f]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[v_allowedCapacity_kW = p_connectionCapacity_kW;]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660736326703</Id>
					<Name><![CDATA[f_connectToChild]]></Name>
					<X>660</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingChildNode]]></Name>
						<Type><![CDATA[Actor]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[EnergyCarrier]]></Name>
						<Type><![CDATA[OL_EnergyCarrierType]]></Type>
					</Parameter>
					<Body><![CDATA[/*switch( EnergyCarrier ) {
		case ELECTRICITY:
			subConnectionsElectricity.connectTo(ConnectingChildNode);
		break;
		case METHANE:
			subConnectionsMethane.connectTo(ConnectingChildNode);
		break;
		case HYDROGEN:
			subConnectionsHydrogen.connectTo(ConnectingChildNode);
		break;
		case HEAT:
			subConnectionsHeat.connectTo(ConnectingChildNode);
		break;
		default:
				
		break;		
}*/

if (ConnectingChildNode.p_actorGroup != null) {
	if (ConnectingChildNode.p_actorGroup.contains("production") || ConnectingChildNode.p_actorGroup.contains("Production") || ConnectingChildNode.p_actorGroup.contains("member")) { // Count owned production-sites as 'behind the meter'
		c_coopMembers.add( ConnectingChildNode );
	} else {
		c_coopCustomers.add( ConnectingChildNode );
	}
} else {
	c_coopCustomers.add( ConnectingChildNode );
}

/*
if ( v_contractGridOperator.equals("NODALPRICING")) {
//	traceln("Enabling nodal pricing for Coop memmber!");
	if (ConnectingChildNode instanceof ConnectionOwner) {
		//((ConnectionOwner)ConnectingChildNode).v_contractGridOperator = v_contractGridOperator;
		((ConnectionOwner)ConnectingChildNode).v_congestionTariff_b = true;
	}
}
if ( v_contractEnergySupplier.equals("VARIABLE")) {
	if (ConnectingChildNode instanceof ConnectionOwner) {
		((ConnectionOwner)ConnectingChildNode).v_electricityContractType = OL_DeliveryContractType.ELECTRICITY_VARIABLE;
		//((ConnectionOwner)ConnectingChildNode).v_contractEnergySupplier= v_contractEnergySupplier;
		//((ConnectionOwner)ConnectingChildNode).v_updatePriceBands_b = true;
	}
}
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660806150226</Id>
					<Name><![CDATA[f_updateFinances]]></Name>
					<X>660</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// get current energy flows
f_gatherEnergyFlows();

double currentPowerDrawn_kW = v_electricityVolume_kWh / energyModel.p_timeStep_h;

// trigger transaction with supplier/Coop

double transactionCost_eur = 0;//((EnergySupplier)p_energySupplier).f_doEnergyTransaction(v_electricityVolume_kWh, v_electricityContractType);
double transactionCostTax_eur = 0;
double transactionCostTransport_eur = 0;
double transactionCostDelivery_eur = 0;
//transactionCost_eur = 0;//((EnergySupplier)p_energySupplier).f_doEnergyTransaction(v_heatVolume_kWh, v_heatContractType);
//v_balanceHeat_eur -= transactionCost_eur;
//transactionCost_eur = 0;//((EnergySupplier)p_energySupplier).f_doEnergyTransaction(v_methaneVolume_kWh, v_methaneContractType);
//v_balanceMethane_eur -= transactionCost_eur;

//
if (v_electricityVolume_kWh >= 0) {
	//transactionCostDelivery_eur = v_priceBandsDelivery.ceilingEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;
	if (v_contractDelivery!=null){
		transactionCostDelivery_eur = (v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh) * v_electricityVolume_kWh;
	} else {
		transactionCostDelivery_eur = v_electricityVariablePrice_eurpkWh * v_electricityVolume_kWh;
	}
	v_balanceElectricityDelivery_eur -= transactionCostDelivery_eur;
	v_balanceElectricity_eur -= transactionCostDelivery_eur;

	if (v_contractTax!=null){
		transactionCostTax_eur = v_contractTax.deliveryTax_eurpkWh * v_electricityVolume_kWh;
		//transactionCostTax_eur = v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + transactionCostDelivery_eur + transactionCostTransport_eur);
		v_balanceElectricityTax_eur -= transactionCostTax_eur;
		v_balanceElectricity_eur -= transactionCostTax_eur;
	}
} else {
	if (v_contractDelivery!=null){
		transactionCostDelivery_eur = (v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh) * v_electricityVolume_kWh;
	} else {
		transactionCostDelivery_eur = v_electricityVariablePrice_eurpkWh * v_electricityVolume_kWh;
	}
	v_balanceElectricityDelivery_eur -= transactionCostDelivery_eur;
	v_balanceElectricity_eur -= transactionCostDelivery_eur;

	if (v_contractTax!=null){
		transactionCostTax_eur = v_contractTax.feedinTax_eurpkWh * v_electricityVolume_kWh;
		//transactionCostTax_eur = v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + transactionCostDelivery_eur + transactionCostTransport_eur);
		v_balanceElectricityTax_eur -= transactionCostTax_eur;
		v_balanceElectricity_eur -= transactionCostTax_eur;
	}
}

transactionCostTransport_eur = v_currentNodalPrice_eurpkWh * v_electricityVolume_kWh;
v_balanceElectricityTransport_eur -= transactionCostTransport_eur;
v_balanceElectricity_eur -= transactionCostTransport_eur;


// TODO: Also needs to include congestion tariffs! So Coop needs to know to which GridNode it's connected! How should that work?]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660825183645</Id>
					<Name><![CDATA[f_doEnergyTransaction]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-170</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[transactionVolume_kWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[contractType]]></Name>
						<Type><![CDATA[OL_ContractType]]></Type>
					</Parameter>
					<Body><![CDATA[double transactionCostClient_eur = 0;

if( p_energySupplier instanceof EnergySupplier ) {
	EnergySupplier energySupplier = (EnergySupplier)p_energySupplier;
	transactionCostClient_eur = energySupplier.f_doEnergyTransaction(transactionVolume_kWh, contractType);
} else if( p_energySupplier instanceof EnergyCoop ) {
	EnergyCoop energySupplier = (EnergyCoop)p_energySupplier;
	transactionCostClient_eur = energySupplier.f_doEnergyTransaction(transactionVolume_kWh, contractType);
}

v_energyPassedThrough_kWh += transactionVolume_kWh;

return transactionCostClient_eur;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660825257472</Id>
					<Name><![CDATA[f_connectToParentActor]]></Name>
					<Description><![CDATA[Creates an agentLink in superConnection if a parentActorID is designated in the config-excel. Called from f_configureBackBone() in main for profiling reasons, so no parameters are given.

@param: none
@return: none
@since: Sprint 6
@author: HOUJ]]></Description>
					<X>670</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[Actor mySupplier = null;
mySupplier = findFirst(energyModel.pop_energySuppliers, p->p.p_actorID.equals(v_contractDelivery.contractScope)) ;
if (mySupplier != null) {
	((EnergySupplier)mySupplier).f_connectToChild(this);	
} else {
	mySupplier = findFirst(energyModel.pop_energyCoops, p->p.p_actorID.equals(v_contractDelivery.contractScope)) ;
	if (mySupplier != null) {
		((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarrierType.ELECTRICITY);	
	}
}

if (mySupplier != null) {
	p_electricitySupplier = mySupplier;
} 
else { 
	p_electricitySupplier = energyModel.pop_energySuppliers.get(0);  // this is a harcoded fix to make the buurtmodel run for 21-3-2023
	traceln("Connection owner %s --> f_connectToParentActor --> no parent actor %s found, this should not be happening", this, v_contractDelivery.contractScope);
}

Actor myGridoperator = null;
// Connect to grid operator (can be a Coop!)
myGridoperator = findFirst(energyModel.pop_gridOperators, p->p.p_actorID.equals(v_contractTransport.contractScope)) ;
if (myGridoperator == null) {
	myGridoperator = findFirst(energyModel.pop_energyCoops, p->p.p_actorID.equals(v_contractTransport.contractScope)) ;
}

if (myGridoperator != null) {
	p_gridOperator = myGridoperator;	
} else { 
	//p_gridOperator = main.pop_gridOperators.get( 0 ) ; // this is a harcoded fix to make the buurtmodel run for 21-3-2023
	traceln("Connection owner --> f_connectToParentActor --> no parent actor found, this should not be happening");
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1667983361355</Id>
					<Name><![CDATA[f_gatherEnergyFlows]]></Name>
					<X>670</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// reset energy flows
v_electricityVolume_kWh = 0;
v_heatVolume_kWh = 0;
v_methaneVolume_kWh = 0;
v_hydrogenVolume_kWh = 0;
v_dieselVolume_kWh = 0;

//
v_currentEnergyConsumption_kW = 0;
v_currentEnergyProduction_kW = 0;
v_currentEnergyCurtailed_kW = 0;
v_currentElectricityProduction_kW = 0;
v_currentElectricityConsumption_kW = 0;

v_currentOwnElectricityProduction_kW = 0; // Only electricity production from 'members' as opposed to 'customers'.

// Categorical power flows
v_fixedConsumptionElectric_kW = 0;
v_electricHobConsumption_kW = 0;
v_heatPumpElectricityConsumption_kW = 0;
v_hydrogenElectricityConsumption_kW = 0;
v_evChargingPowerElectric_kW = 0;
v_batteryPowerElectric_kW = 0;
v_windProductionElectric_kW = 0;
v_pvProductionElectric_kW = 0;
v_conversionPowerElectric_kW = 0;

// gather electricity flows
for(Agent a :  c_coopMembers ) { // Take 'behind the meter' production and consumption!
	//traceln("c_coopMembers not empty!");
	if(a instanceof ConnectionOwner){
		ConnectionOwner CO = (ConnectionOwner)a;
		v_electricityVolume_kWh += CO.v_electricityVolume_kWh;
		//if (energyModel.v_isRapidRun){		
		for (GridConnection GC : CO.c_ownedGridConnections) { // Take 'behind the meter' production and consumption!
			v_currentEnergyConsumption_kW += GC.v_currentEnergyConsumption_kW;
			v_currentEnergyProduction_kW += GC.v_currentEnergyProduction_kW;
			v_currentEnergyCurtailed_kW += GC.v_currentEnergyCurtailed_kW;			
			v_currentElectricityConsumption_kW += GC.v_currentElectricityConsumption_kW;
			v_currentElectricityProduction_kW += GC.v_currentElectricityProduction_kW; 
			
			v_currentOwnElectricityProduction_kW += GC.v_currentElectricityProduction_kW; 
			
			// Categorical power flows
			v_fixedConsumptionElectric_kW += GC.v_fixedConsumptionElectric_kW;
			v_electricHobConsumption_kW += GC.v_electricHobConsumption_kW;
			v_heatPumpElectricityConsumption_kW += GC.v_heatPumpElectricityConsumption_kW;
			v_hydrogenElectricityConsumption_kW += GC.v_hydrogenElectricityConsumption_kW;
			v_evChargingPowerElectric_kW += GC.v_evChargingPowerElectric_kW;
			v_batteryPowerElectric_kW += GC.v_batteryPowerElectric_kW;
			v_windProductionElectric_kW += GC.v_windProductionElectric_kW;
			v_pvProductionElectric_kW += GC.v_pvProductionElectric_kW;
			v_conversionPowerElectric_kW += GC.v_conversionPowerElectric_kW;
			
			v_methaneVolume_kWh += GC.v_currentPowerMethane_kW * energyModel.p_timeStep_h;
			v_dieselVolume_kWh += GC.v_currentPowerDiesel_kW * energyModel.p_timeStep_h;
			v_hydrogenVolume_kWh += GC.v_currentPowerHydrogen_kW * energyModel.p_timeStep_h;
		}
		//v_heatVolume_kWh += n.v_heatVolume_kWh;
		//v_methaneVolume_kWh += n.v_methaneVolume_kWh;
		//v_hydrogenVolume_kWh += n.v_hydrogenVolume_kWh;
		//v_dieselVolume_kWh += n.v_dieselVolume_kWh;
	} else if (a instanceof EnergyCoop) {
		EnergyCoop EC = (EnergyCoop)a;
		v_electricityVolume_kWh += EC.v_electricityVolume_kWh;
		//traceln("Hello!? coopMember EnergyCoop!");
		double electricityConsumption_kW = max(0,EC.v_electricityVolume_kWh)/energyModel.p_timeStep_h;
		double electricityProduction_kW = max(0,-EC.v_electricityVolume_kWh)/energyModel.p_timeStep_h;
		v_currentElectricityConsumption_kW += electricityConsumption_kW;
		//v_currentEnergyConsumption_kW += electricityConsumption_kW;
		v_currentElectricityProduction_kW += electricityProduction_kW;
		//v_currentEnergyProduction_kW += electricityProduction_kW;
			
		//v_heatVolume_kWh += n.v_heatVolume_kWh;
		//v_methaneVolume_kWh += n.v_methaneVolume_kWh;
		//v_hydrogenVolume_kWh += n.v_hydrogenVolume_kWh;
		//v_dieselVolume_kWh += n.v_dieselVolume_kWh;
	}
}

for(Agent a :  c_coopCustomers ) { // Don't look at 'behind the meter' production/consumption, but use 'nett flow' as measure of consumption/production
	if(a instanceof ConnectionOwner){
		ConnectionOwner CO = (ConnectionOwner)a;
		v_electricityVolume_kWh += CO.v_electricityVolume_kWh;		
		double electricityConsumption_kW = max(0,CO.v_electricityVolume_kWh)/energyModel.p_timeStep_h;
		double electricityProduction_kW = max(0,-CO.v_electricityVolume_kWh)/energyModel.p_timeStep_h;
		v_currentElectricityConsumption_kW += electricityConsumption_kW;
		
		v_currentEnergyConsumption_kW += electricityConsumption_kW;
		v_currentElectricityProduction_kW += electricityProduction_kW;
		v_currentEnergyProduction_kW += electricityProduction_kW;

		//v_heatVolume_kWh += n.v_heatVolume_kWh;
		//v_methaneVolume_kWh += n.v_methaneVolume_kWh;
		//v_hydrogenVolume_kWh += n.v_hydrogenVolume_kWh;
		//v_dieselVolume_kWh += n.v_dieselVolume_kWh;
	} else if (a instanceof EnergyCoop) {
	
		//traceln("Hello!? coopCustomer EnergyCoop!");
		EnergyCoop EC = (EnergyCoop)a;
		v_electricityVolume_kWh += EC.v_electricityVolume_kWh;
		double electricityConsumption_kW = max(0,EC.v_electricityVolume_kWh)/energyModel.p_timeStep_h;
		double electricityProduction_kW = max(0,-EC.v_electricityVolume_kWh)/energyModel.p_timeStep_h;
		v_currentElectricityConsumption_kW += electricityConsumption_kW;
		v_currentEnergyConsumption_kW += electricityConsumption_kW;
		v_currentElectricityProduction_kW += electricityProduction_kW;
		v_currentEnergyProduction_kW += electricityProduction_kW;
		
		//v_heatVolume_kWh += n.v_heatVolume_kWh;
		//v_methaneVolume_kWh += n.v_methaneVolume_kWh;
		//v_hydrogenVolume_kWh += n.v_hydrogenVolume_kWh;
		//v_dieselVolume_kWh += n.v_dieselVolume_kWh;
	}
}

//v_totalElectricityProduced_MWh += v_currentElectricityProduction_kW * energyModel.p_timeStep_h/1000;
v_electricitySurplus_kW = -v_electricityVolume_kWh / energyModel.p_timeStep_h;

f_updateArrays();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1667983361357</Id>
					<Name><![CDATA[f_getVariableEnergyPrice]]></Name>
					<Description><![CDATA[v_currentNodalPrice_eurpkWh = node van deze Coop -> p_gridNodeUnderResponsibility. Mogelijk niet robuust! TODO: checken of dit goed gaat!


]]></Description>
					<X>661</X><Y>269</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double energyPrice_eurpkWh = v_electricityVariablePrice_eurpkWh + v_contractDelivery.deliveryPrice_eurpkWh;

if ( v_contractTransport.transportContractType==OL_TransportContractType.NODALPRICING) {
	energyPrice_eurpkWh += v_currentNodalPrice_eurpkWh;
} 

//traceln("Coop received energy price of: " + energyPrice_eurpkWh + " eur/kWh");
return energyPrice_eurpkWh;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1667983437058</Id>
					<Name><![CDATA[f_returnKPIData]]></Name>
					<Description><![CDATA[Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-340</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Total electricity import, export
traceln("Coop Electricity imported: "+ v_electricityImported_kWh);
traceln("Coop Electricity exported: "+ v_electricityExported_kWh);
traceln("Coop electricity costs: " + v_balanceElectricity_eur + " euro");
//Total energy consumption and production 

// Assume 'infinite storage' of hydrogen within model-scope; only nett total import/export counts.
if (v_hydrogenImported_kWh > v_hydrogenExported_kWh) {
	v_hydrogenImported_kWh = v_hydrogenImported_kWh - v_hydrogenExported_kWh;
	v_hydrogenExported_kWh = 0;
} else {
	v_hydrogenExported_kWh = v_hydrogenExported_kWh - v_hydrogenImported_kWh;
	v_hydrogenImported_kWh = 0;
}

double energyProduced_kWh = 0;
double energyConsumed_kWh = 0;
for(Agent a :  subConnectionsElectricity.getConnections() ) {
	if(a instanceof ConnectionOwner){
		ConnectionOwner n = (ConnectionOwner)a;
		for ( GridConnection g : n.gridConnections.getConnections() ) {
			for (EnergyAsset e : g.c_energyAssets) {
				double EnergyUsed_kWh = e.j_ea.getEnergyUsed_kWh();
				//traceln("EnergyAsset " + e.getIndex() + " of type " + e.p_defaultEnergyAssetPresetName + " used " + EnergyUsed_kWh + " kWh energy");
				if (EnergyUsed_kWh > 0) {
					energyConsumed_kWh += EnergyUsed_kWh;
				} else {
					energyProduced_kWh -= EnergyUsed_kWh;
				}
			}
		}
	} else if (a instanceof EnergyCoop) { // 'Recursive' code for Coop-of-Coops. Only supports 2 levels of Coops!
		EnergyCoop n = (EnergyCoop)a;
		for(Agent a2 :  n.subConnectionsElectricity.getConnections() ) {
			if(a2 instanceof ConnectionOwner){
				ConnectionOwner n2 = (ConnectionOwner)a;
				for ( GridConnection g : n2.gridConnections.getConnections() ) {
					for (EnergyAsset e : g.c_energyAssets) {
						double EnergyUsed_kWh = e.j_ea.getEnergyUsed_kWh();
						//traceln("EnergyAsset " + e.getIndex() + " of type " + e.p_defaultEnergyAssetPresetName + " used " + EnergyUsed_kWh + " kWh energy");
						if (EnergyUsed_kWh > 0) {
							energyConsumed_kWh += EnergyUsed_kWh;
						} else {
							energyProduced_kWh -= EnergyUsed_kWh;
						}
					}
				}
			}
		}
	}
}

traceln("Energy consumed: "+ energyConsumed_kWh);
traceln("Energy produced: "+ energyProduced_kWh);
// TODO: Make sure this calculation is correct when all energy carriers are 'active'! Only checked for electricity

//Total selfconsumption, selfsufficiency
double totalSelfConsumption_fr = 1 - (v_electricityExported_kWh + v_methaneExported_kWh + v_hydrogenExported_kWh + v_heatExported_kWh)/energyProduced_kWh;
double totalSelfSufficiency_fr = 1 - (v_electricityImported_kWh + v_methaneImported_kWh + v_hydrogenImported_kWh + v_heatImported_kWh + v_dieselImported_kWh)/energyConsumed_kWh;

double totalSelfSufficiency_fr_check = (energyProduced_kWh - (v_electricityExported_kWh + v_methaneExported_kWh + v_hydrogenExported_kWh + v_heatExported_kWh))/energyConsumed_kWh;
traceln("Coop selfconsumption: " + totalSelfConsumption_fr + "%");
traceln("Coop selfsufficiency: " + totalSelfSufficiency_fr + "%, doublecheck " + totalSelfSufficiency_fr_check);
// TODO: Account for fuel imports/exports!!

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669037224999</Id>
					<Name><![CDATA[f_setContractValues]]></Name>
					<X>670</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if( p_actorContractList != null) {
	//traceln("Contract list connectionOwner " + p_actorID + ": " + p_actorContractList.toString());
} else {
	traceln( "No contract data for connectionOwner " + p_actorID );
}

double methaneDeliveryPrice_eurpkWh = 0.0;
double methaneDeliveryTax_eurpkWh = 0.0;
double methaneVAT_pct = 0.0;
double hydrogenDeliveryPrice_eurpkWh = 0.0;
double hydrogenDeliveryTax_eurpkWh = 0.0;
double hydrogenVAT_pct = 0.0;
double heatDeliveryPrice_eurpkWh = 0.0;
double heatDeliveryTax_eurpkWh = 0.0;
double heatVAT_pct = 0.0;

for( JsonNode contractJson : p_actorContractList) {
	//traceln("Contract hashmap l: " + l);
	OL_ContractType contractService = OL_ContractType.valueOf(contractJson.required("contractType").textValue());
	String contractScope = contractJson.required( "contractScope" ).textValue();
	OL_EnergyCarrierType energyCarrier = OL_EnergyCarrierType.valueOf(contractJson.required("energyCarrier").textValue());
	double annualFee_eur = contractJson.required("annualFee_eur").doubleValue();
	Actor mySupplier = null;
	if (energyCarrier.equals(OL_EnergyCarrierType.ELECTRICITY)){
		switch( contractService ) {
			case DELIVERY:
				//String contractScope = (String)l.get( "contract_scope" );
				OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf(contractJson.get("deliveryContractType").textValue());
				double deliveryPrice_eurpkWh = contractJson.required("deliveryPrice_eurpkWh").doubleValue();
				double feedinPrice_eurpkWh = contractJson.required("feedinPrice_eurpkWh").doubleValue();
				v_contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, OL_EnergyCarrierType.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);
				//traceln("Delivery contract: " + v_contractDelivery);
				c_actorContracts.add(v_contractDelivery);
			break;
			case TRANSPORT:
				OL_TransportContractType transportContractType = OL_TransportContractType.valueOf(contractJson.get("transportContractType").textValue());
				double bandwidthTreshold_kW = contractJson.path("bandwidthTreshold_kW").doubleValue();
				double bandwidthTariff_eurpkWh = contractJson.path("bandwidthTariff_eurpkWh").doubleValue();
				v_contractTransport = new J_TransportContract(contractScope, transportContractType, energyCarrier, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);			
				c_actorContracts.add(v_contractTransport);
			break;
			case CONNECTION:
				OL_ConnectionContractType connectionContractType = OL_ConnectionContractType.valueOf(contractJson.required("connectionContractType").textValue());
				//traceln("Initializing connection contract with ConnectionContractType: " + connectionContractType);
				double nfATOstart_h = contractJson.path("nfATO_starttime_h").doubleValue();
				double nfATOend_h = contractJson.path("nfATO_endtime_h").doubleValue();
				double nfATOcapacity_kW = contractJson.path("nfATO_capacity_kW").doubleValue();
				v_contractConnection = new J_ConnectionContract(contractScope, connectionContractType, energyCarrier, nfATOstart_h, nfATOend_h, nfATOcapacity_kW, annualFee_eur);
				c_actorContracts.add(v_contractConnection);
			break;
			case TAX:
				double taxDelivery_eurpkWh = contractJson.required("taxDelivery_eurpkWh").doubleValue();
				double taxFeedin_eurpkWh = contractJson.required("taxFeedin_eurpkWh").doubleValue();
				double proportionalTax_pct = contractJson.required("proportionalTax_pct").doubleValue();
				v_contractTax = new J_TaxContract(contractScope, OL_EnergyCarrierType.ELECTRICITY, taxDelivery_eurpkWh, taxFeedin_eurpkWh, proportionalTax_pct, annualFee_eur);
				c_actorContracts.add(v_contractTax);
			break;
			default:
			
			break;		
		}
	//} else if (energyCarrier.equals(OL_EnergyCarrierType.METHANE)){
	} else {
		switch( contractService ) {
			case DELIVERY:					
				OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf(contractJson.required("deliveryContractType").textValue());
				double deliveryPrice_eurpkWh = contractJson.required("deliveryPrice_eurpkWh").doubleValue();
				double feedinPrice_eurpkWh = contractJson.required("feedinPrice_eurpkWh").doubleValue();
				J_DeliveryContract contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, energyCarrier, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);
				//traceln("Delivery contract: " + v_contractDelivery);
				c_actorContracts.add(contractDelivery);
				//String contractScope = (String)l.get( "contractScope" );
				mySupplier = findFirst(energyModel.pop_energySuppliers, p->p.p_actorID.equals(contractScope)) ;
				if (mySupplier != null) {
					((EnergySupplier)mySupplier).f_connectToChild(this);	
				} else {
					mySupplier = findFirst(energyModel.pop_energyCoops, p->p.p_actorID.equals(contractScope)) ;
					if (mySupplier != null) {
						((EnergyCoop)mySupplier).f_connectToChild(this,energyCarrier);	
						//p_CoopParent = (EnergyCoop)mySupplier;
					}
				}
				//traceln("Methane supplier: " + contractScope + " for actor " + p_actorID );
				if (mySupplier != null) {
					//energySupplier.connectTo(mySupplier);
					if (energyCarrier==OL_EnergyCarrierType.METHANE) {
						p_methaneSupplier = mySupplier;
						methaneDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;
					} else if(energyCarrier==OL_EnergyCarrierType.HYDROGEN) {
						p_hydrogenSupplier = mySupplier;
						hydrogenDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;
					} else if(energyCarrier==OL_EnergyCarrierType.HEAT) {
						p_heatSupplier = mySupplier;
						heatDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;
					}
					//traceln("MethaneSupplier " + mySupplier);
					//energySupplier.f_connectToChild(this);	
				} else { 
					traceln("Connection owner --> f_connectToParentActor --> " + energyCarrier + " supplier not found, this should not be happening");
				}
			break;
			case TAX:
				double DeliveryTax_eurpkWh = contractJson.required("taxDelivery_eurpkWh").doubleValue();
				double taxFeedin_eurpkWh = contractJson.required("taxFeedin_eurpkWh").doubleValue();
				double VAT_pct = contractJson.required("proportionalTax_pct").doubleValue();
				J_TaxContract contractTax = new J_TaxContract(contractScope, energyCarrier, DeliveryTax_eurpkWh, taxFeedin_eurpkWh, VAT_pct, annualFee_eur);
				c_actorContracts.add(contractTax);
				if (energyCarrier==OL_EnergyCarrierType.METHANE) {						
						methaneDeliveryTax_eurpkWh=DeliveryTax_eurpkWh;
						methaneVAT_pct=VAT_pct;
					} else if(energyCarrier==OL_EnergyCarrierType.HYDROGEN) {
						hydrogenDeliveryTax_eurpkWh=DeliveryTax_eurpkWh;
						hydrogenVAT_pct=VAT_pct;
					} else if(energyCarrier==OL_EnergyCarrierType.HEAT) {
						heatVAT_pct=VAT_pct;
					}
			break;
			case CONNECTION:
				OL_ConnectionContractType connectionContractType = OL_ConnectionContractType.valueOf(contractJson.required("connectionContractType").textValue());
				J_ConnectionContract contractConnection = new J_ConnectionContract(contractScope, connectionContractType, energyCarrier, 0.0, 0.0, 0.0, annualFee_eur);
				c_actorContracts.add(contractConnection);



			break;
			case TRANSPORT:
				OL_TransportContractType transportContractType = OL_TransportContractType.valueOf(contractJson.required("transportContractType").textValue());
				double bandwidthTreshold_kW = contractJson.path("bandwidthTreshold_kW").doubleValue();
				double bandwidthTariff_eurpkWh = contractJson.path("bandwidthTariff_eurpkWh").doubleValue();
				J_TransportContract contractTransport = new J_TransportContract(contractScope, transportContractType, energyCarrier, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);			
				c_actorContracts.add(contractTransport);
			break;
			default:
				traceln("Unrecognized contract type!");
			break;	
		}	
	}
}

// Calculate nett gas and hydrogen price
v_methanePrice_eurpkWh = (methaneDeliveryPrice_eurpkWh + methaneDeliveryTax_eurpkWh) * (1 + methaneVAT_pct);
v_hydrogenPrice_eurpkWh = (hydrogenDeliveryPrice_eurpkWh + hydrogenDeliveryTax_eurpkWh) * (1 + hydrogenVAT_pct);
v_heatPrice_eurpkWh = (heatDeliveryPrice_eurpkWh + heatDeliveryTax_eurpkWh) * (1 + heatVAT_pct);
		/*} else if (energyCarrier.equals(OL_EnergyCarrierType.HYDROGEN)){
			switch( contractService ) {
				case DELIVERY:
					OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf((String)l.get("deliveryContractType"));
					double deliveryPrice_eurpkWh = (double)l.get("deliveryPrice_eurpkWh");
					double feedinPrice_eurpkWh = (double)l.get("feedinPrice_eurpkWh");
					v_contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, OL_EnergyCarrierType.HYDROGEN, deliveryPrice_eurpkWh, feedinPrice_eurpkWh);
					//traceln("Delivery contract: " + v_contractDelivery);
					c_actorContracts.add(v_contractDelivery);
					mySupplier = findFirst(main.pop_energySuppliers, p->p.p_actorID.equals(contractScope)) ;
					if (mySupplier != null) {
						((EnergySupplier)mySupplier).f_connectToChild(this);
					} else {
						mySupplier = findFirst(main.pop_energyCoops, p->p.p_actorID.equals(contractScope)) ;
						if (mySupplier != null) {
							((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarrierType.HYDROGEN);
							//p_CoopParent = (EnergyCoop)mySupplier;
						}
					}
					if (mySupplier != null) {
						//energySupplier.connectTo(mySupplier);
						p_hydrogenSupplier = mySupplier;
						//energySupplier.f_connectToChild(this);
					} else {
						traceln("Connection owner --> f_connectToParentActor --> hydrogen supplier not found, this should not be happening");
					}
				break;
				case TAX:
					hydrogenDeliveryTax_eurpkWh = (double)l.get("taxDelivery_eurpkWh");
					//double taxFeedin_eurpkWh = (double)l.get("taxFeedin_eurpkWh");
					hydrogenVAT_pct = (double)l.get("proportionalTax_pct");
					v_contractTax = new J_TaxContract(contractScope, OL_EnergyCarrierType.HYDROGEN, hydrogenDeliveryTax_eurpkWh, 0, hydrogenVAT_pct);
					c_actorContracts.add(v_contractTax);
				break;
				default:

				break;
			}
		} else if (energyCarrier.equals(OL_EnergyCarrierType.HEAT)){
			switch( contractService ) {
				case DELIVERY:
					heatDeliveryPrice_eurpkWh = (double)l.get("deliveryPrice_eurpkWh");
					mySupplier = findFirst(main.pop_energySuppliers, p->p.p_actorID.equals(contractScope)) ;
					if (mySupplier != null) {
						((EnergySupplier)mySupplier).f_connectToChild(this);
					} else {
						mySupplier = findFirst(main.pop_energyCoops, p->p.p_actorID.equals(contractScope)) ;
						if (mySupplier != null) {
							((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarrierType.HYDROGEN);
							//p_CoopParent = (EnergyCoop)mySupplier;
						}
					}
					if (mySupplier != null) {
						//energySupplier.connectTo(mySupplier);
						p_hydrogenSupplier = mySupplier;
						//energySupplier.f_connectToChild(this);
					} else {
						traceln("Connection owner --> f_connectToParentActor --> heat supplier not found, this should not be happening");
					}
				break;
				case TAX:
					hydrogenDeliveryTax_eurpkWh = (double)l.get("taxDelivery_eurpkWh");
					//double taxFeedin_eurpkWh = (double)l.get("taxFeedin_eurpkWh");
					hydrogenVAT_pct = (double)l.get("proportionalTax_pct");
				break;
				default:
				
				break;
			}
		}*/

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669042410671</Id>
					<Name><![CDATA[f_initialize]]></Name>
					<X>660</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( p_actorContractList != null) {
	f_setContractValues();	
}
f_connectToParentActor();

if (p_gridNodeUnderResponsibility != null){
	GridNode myParentNodeElectric = findFirst(energyModel.pop_gridNodes, p->p.p_gridNodeID.equals(p_gridNodeUnderResponsibility)) ;
	if( myParentNodeElectric instanceof GridNode ) {
		//l_parentNodeElectric.connectTo(myParentNodeElectric);
		myParentNodeElectric.f_connectToChild(this);	
		p_connectionCapacity_kW = myParentNodeElectric.p_capacity_kW;
		traceln("Adding Coop to children of GridNode " + myParentNodeElectric);
	} else {
		traceln("Parent GridNode for energyCoop not found!");
		p_connectionCapacity_kW = 0;
	}
} else {
	p_connectionCapacity_kW = 0;
}

v_allowedCapacity_kW = p_connectionCapacity_kW;
/*if(!v_enable_nfATO_b){
	e_startNonFirmATO.reset();
	e_endNonFirmATO.reset();
}
else {
	e_startNonFirmATO.restartTo(v_contractConnection.nfATOstart_h, HOUR);
	e_endNonFirmATO.restartTo(v_contractConnection.nfATOend_h, HOUR);
	if(v_contractConnection.nfATOpower_kW == 0.0) { v_contractConnection.nfATOpower_kW = p_connectionCapacity_kW; }
}*/

//f_setInitPriceBands();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1676553303568</Id>
					<Name><![CDATA[f_updateIncentives]]></Name>
					<X>661</X><Y>291</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_electricitySurplusLowPassed_kW += v_lowPassFactor_fr * ( v_electricitySurplus_kW - v_electricitySurplusLowPassed_kW );

/* if (v_contractDelivery.deliveryContractType==OL_DeliveryContractType.ELECTRICITY_VARIABLE) {
	if (p_electricitySupplier instanceof EnergySupplier) {
		v_electricityVariablePrice_eurpkWh = ((EnergySupplier)p_electricitySupplier).f_getVariableEnergyPrice();
	} else if (p_electricitySupplier instanceof EnergyCoop) {
		v_electricityVariablePrice_eurpkWh = ((EnergyCoop)p_electricitySupplier).f_getVariableEnergyPrice();
	}
}

f_setElectricityPriceBands(); */ // temporarily disabled!!
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1676553303571</Id>
					<Name><![CDATA[f_setElectricityPriceBands]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>681</X><Y>311</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/*if (v_contractDelivery.deliveryContractType.equals(OL_DeliveryContractType.ELECTRICITY_VARIABLE)) {
	v_priceBandsDelivery.replace(-9999999.0, v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh );
	v_priceBandsDelivery.replace(9999999.0, v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh );
}
if (v_contractTransport.transportContractType.equals(OL_TransportContractType.NODALPRICING)) {
	v_priceBandsTransport.replace(-9999999.0, v_currentNodalPrice_eurpkWh);
	v_priceBandsTransport.replace(9999999.0, v_currentNodalPrice_eurpkWh);
}*/

// Assuming Tax is not varying in time!!

/*
if( p_capacityTariffApplicable ){
	v_priceBandsDelivery.replace(- p_capacityLevel_kW, v_electricitySellPrice_eurpkWh + v_currentCongestionTariffWhenSelling_eurpkWh);
	v_priceBandsDelivery.replace(p_capacityLevel_kW, v_electricityVariablePrice_eurpkWh + v_currentNodalPrice_eurpkWh);
}
*/



	]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1676553472755</Id>
					<Name><![CDATA[f_setInitPriceBands]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-340</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_priceBandsDelivery = new TreeMap<Double, Double>();
v_priceBandsDelivery.put(-9999999.0, v_contractDelivery.feedinPrice_eurpkWh);
v_priceBandsDelivery.put(0.0, 0.0);
v_priceBandsDelivery.put(9999999.0, v_contractDelivery.deliveryPrice_eurpkWh);

v_priceBandsTransport = new TreeMap<Double, Double>();
v_priceBandsTransport.put(-9999999.0, 0.0);
v_priceBandsTransport.put(0.0, 0.0);
v_priceBandsTransport.put(9999999.0, 0.0);

v_priceBandsTax = new TreeMap<Double, Double>();
v_priceBandsTax.put(-9999999.0, v_contractTax.feedinTax_eurpkWh);
v_priceBandsTax.put(0.0, 0.0);
v_priceBandsTax.put(9999999.0, v_contractTax.deliveryTax_eurpkWh);

/*
if( p_congestionTariffApplicable ){
	v_priceBandsDelivery.put(- p_capacityLevel_kW, 0.0);
	v_priceBandsDelivery.put(p_capacityLevel_kW, 0.0);
}
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1692111928489</Id>
					<Name><![CDATA[f_totalFinances]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>660</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Depreciation costs
v_assetDepreciation_eur = f_totalAssetDepreciation();
v_totalBalanceCoop_eur -= v_assetDepreciation_eur;
// Operational costs: local parameter p_yearlyOperationalCosts_eur
v_totalBalanceCoop_eur -= p_yearlyOperationalCosts_eur;
// EPEX balance: take from local variable v_balanceElectricityDelivery_eur
v_totalBalanceCoop_eur += v_balanceElectricity_eur;

// member balance
f_totalMembersBalance();
v_totalBalanceCoop_eur += v_balanceMembers_eur;

/*if (energyModel.b_addKpiVisuals) {
	ch_coopBalance.updateData();
}*/]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1692112062708</Id>
					<Name><![CDATA[f_totalAssetDepreciation]]></Name>
					<X>690</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Sum depreciation costs of assets in own portfolio. 
double depreciationCosts_eur=0;

/*for (Agent a : subConnectionsElectricity.getConnections()) {
	if(a instanceof ConnectionOwner){
		ConnectionOwner c = (ConnectionOwner)a;
		if( c.p_actorGroup.equals("CoopProducer")) {
			for(J_EA e:c.v_ownedGridConnection.c_energyAssets) {
			
			double depreciation_eurpkWpa = energyModel.v_assetDepreciation.path(e.energyAssetType.name()).path("Depreciation_eurpkWpa").doubleValue();
			traceln("Coop Depreciation %s eur/kW/annum", depreciation_eurpkWpa*e.getElectricCapacity_kW());
			depreciationCosts_eur+= depreciation_eurpkWpa*e.getElectricCapacity_kW();
			}
			
		}		
	} else if (a instanceof EnergyCoop) {
		
	}
	
}*/ // Deprecated get depreciation per asset from input-json. Use other data-source!

return depreciationCosts_eur;



]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1692112229224</Id>
					<Name><![CDATA[f_totalMembersBalance]]></Name>
					<X>690</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Sum financial transactions from all members
for(Agent a :  c_coopMembers ) {
	if(a instanceof ConnectionOwner){
		ConnectionOwner n = (ConnectionOwner)a;
	    v_balanceMembers_eur -= n.v_balanceElectricityDelivery_eur;
		
	} else if (a instanceof EnergyCoop) {
		
	}
}

for(Agent a :  c_coopCustomers ) {
	if(a instanceof ConnectionOwner){
		ConnectionOwner n = (ConnectionOwner)a;
	    v_balanceMembers_eur -= n.v_balanceElectricityDelivery_eur;
		
	} else if (a instanceof EnergyCoop) {
		
	}
}





]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1704371824571</Id>
					<Name><![CDATA[f_resetStates]]></Name>
					<X>660</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_electricitySurplusLowPassed_kW= 0;

// Reset import/export
v_electricityImported_kWh = v_electricityExported_kWh = v_methaneImported_kWh =  v_methaneExported_kWh = v_hydrogenImported_kWh = v_hydrogenExported_kWh = v_dieselImported_kWh = 0; // v_heatImported_kWh = v_heatExported_kWh = 

// Reset energytotals
v_totalEnergyProduced_MWh = 0;
v_totalEnergyConsumed_MWh = 0;

v_weekdayTotalImport_MWh = 0;
v_weekdayTotalExport_MWh = 0;
v_weekdayEnergyProduced_MWh = 0;
v_weekdayEnergyConsumed_MWh = 0;

v_daytimeTotalImport_MWh = 0;
v_daytimeTotalExport_MWh = 0;
v_daytimeEnergyProduced_MWh = 0;
v_daytimeEnergyConsumed_MWh = 0;

//data_annualCoopElectricityBalance_kW.reset();

// Reset accumulators
acc_annualElectricityBalance_kW.reset();
acc_annualMethaneBalance_kW.reset();
acc_annualHydrogenBalance_kW.reset();
acc_annualDieselBalance_kW.reset();
acc_annualHeatBalance_kW.reset();
//acc_annualTotalImport_kW.reset();
//acc_annualTotalExport_kW.reset();

//acc_annualEnergyProduction_kW.reset();
//acc_annualEnergyConsumption_kW.reset();
//acc_annualEnergyCurtailed_kW.reset();
acc_annualElectricityProduction_kW.reset();
acc_annualElectricityConsumption_kW.reset();
acc_annualHeatProduction_kW.reset();

acc_summerElectricityBalance_kW.reset();
acc_summerMethaneBalance_kW.reset();
acc_summerHydrogenBalance_kW.reset();
acc_summerDieselBalance_kW.reset();
acc_summerHeatBalance_kW.reset();
acc_summerTotalImport_kW.reset();
acc_summerTotalExport_kW.reset();

acc_summerEnergyProduction_kW.reset();
acc_summerEnergyConsumption_kW.reset();
acc_summerEnergyCurtailed_kW.reset();
acc_summerElectricityProduction_kW.reset();
acc_summerElectricityConsumption_kW.reset();
acc_summerHeatProduction_kW.reset();

acc_winterElectricityBalance_kW.reset();
acc_winterMethaneBalance_kW.reset();
acc_winterHydrogenBalance_kW.reset();
acc_winterDieselBalance_kW.reset();
acc_winterHeatBalance_kW.reset();
acc_winterTotalImport_kW.reset();
acc_winterTotalExport_kW.reset();

acc_winterEnergyProduction_kW.reset();
acc_winterEnergyConsumption_kW.reset();
acc_winterEnergyCurtailed_kW.reset();
acc_winterElectricityProduction_kW.reset();
acc_winterElectricityConsumption_kW.reset();
acc_winterHeatProduction_kW.reset();

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1704453927781</Id>
					<Name><![CDATA[f_calculateKPIs]]></Name>
					<X>660</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_electricityImported_kWh = acc_annualElectricityBalance_kW.getSumPos() * energyModel.p_timeStep_h;
v_electricityExported_kWh = -(acc_annualElectricityBalance_kW.getSum() * energyModel.p_timeStep_h - v_electricityImported_kWh);
//v_electricityExportedToGrid_kWh = -Arrays.stream(a_annualElectricityBalance_kW).filter(m -> m < 0).sum() * energyModel.p_timeStep_h;


v_totalElectricityConsumed_MWh = acc_annualElectricityConsumption_kW.getSum()  * energyModel.p_timeStep_h / 1000;
v_totalElectricityProduced_MWh= acc_annualElectricityProduction_kW.getSum()  * energyModel.p_timeStep_h / 1000;
// Electricity self consumption
v_totalElectricitySelfConsumed_MWh = max(0, v_totalElectricityProduced_MWh - v_electricityExported_kWh/1000); // Production/export based!

/*v_totalElectricitySelfConsumed_MWh = 0;
for (int i=0; i<a_annualElectricityBalance_kW.length; i++) { // Look at selfconsumption per timestep to correctly account for low-sun conditions, and ensure selfConsumption cannot be negative per timestep.
	v_totalElectricitySelfConsumed_MWh += max(0,(a_annualElectricityProduction_kW[i]-max(0,-a_annualElectricityBalance_kW[i])))*energyModel.p_timeStep_h/1000;
	
}*/
// Treat v_totalElectricityConsumed_MWh as electricity delivered to customers!

v_methaneImported_kWh = acc_annualMethaneBalance_kW.getSum() * energyModel.p_timeStep_h;
v_methaneExported_kWh = 0;

v_hydrogenImported_kWh = acc_annualHydrogenBalance_kW.getSum() * energyModel.p_timeStep_h;
v_hydrogenExported_kWh = 0;

v_dieselImported_kWh = acc_annualDieselBalance_kW.getSum() * energyModel.p_timeStep_h;

//v_heatImported_kWh = Arrays.stream(a_annualHeatBalance_kW).sum() * energyModel.p_timeStep_h;
//v_heatExported_kWh = 0;

v_totalImport_MWh = (v_electricityImported_kWh + v_methaneImported_kWh + v_hydrogenImported_kWh + v_dieselImported_kWh)/1000; // v_heatImported_kWh
v_totalExport_MWh = (v_electricityExported_kWh + v_methaneExported_kWh+ v_hydrogenExported_kWh)/1000; // v_heatExported_kWh

v_totalSelfConsumedEnergy_MWh = max(0,v_totalEnergyConsumed_MWh - v_totalImport_MWh); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.
double totalSelfConsumedEnergyCheck_MWh = max (0, v_totalEnergyProduced_MWh - v_totalExport_MWh);
traceln("Check energyCoop consistency of v_totalSelfConsumedEnergy_MWh (should be zero): %s", v_totalSelfConsumedEnergy_MWh - totalSelfConsumedEnergyCheck_MWh);

//// Winter/summer week totals
// Calcs summerweek
//int startIdx = roundToInt(energyModel.p_startHourSummerWeek/energyModel.p_timeStep_h);
//int endIdx = startIdx + roundToInt(24*7/energyModel.p_timeStep_h);
v_summerWeekTotalImport_MWh = acc_summerTotalImport_kW.getIntegral()/1000; // Arrays.stream( Arrays.copyOfRange(a_annualTotalImport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekTotalExport_MWh = acc_summerTotalExport_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualTotalExport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekEnergyConsumed_MWh = acc_summerEnergyConsumption_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyConsumption_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekEnergyProduced_MWh = acc_summerEnergyProduction_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyProduction_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;

v_summerWeekSelfConsumedEnergy_MWh = max(0, v_summerWeekEnergyConsumed_MWh - v_summerWeekTotalImport_MWh); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	
double v_summerWeekSelfConsumedEnergyCheck_MWh = v_summerWeekEnergyProduced_MWh - v_summerWeekTotalExport_MWh;
//v_summerWeekEnergyCurtailed_MWh=Arrays.copyOfRange(a_annualEnergyCurtailed_kW, energyModel.p_startHourSummerWeek,roundToInt(24*7/energyModel.p_timeStep_h))*energyModel.p_timeStep_h / 1000;

v_summerWeekMethaneImport_MWh = acc_summerMethaneBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_summerWeekDieselImport_MWh = acc_summerDieselBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_summerWeekHydrogenImport_MWh = acc_summerHydrogenBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_summerWeekHydrogenExport_MWh = -acc_summerHydrogenBalance_kW.getSumNeg() * energyModel.p_timeStep_h / 1000;
// Electricity selfconsumed
v_summerWeekElectricityImport_MWh = acc_summerElectricityBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityExport_MWh = -acc_summerElectricityBalance_kW.getSumNeg() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityConsumed_MWh = acc_summerElectricityConsumption_kW.getSum() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityProduced_MWh = acc_summerElectricityProduction_kW.getSum() * energyModel.p_timeStep_h / 1000;

v_summerWeekElectricitySelfConsumed_MWh = max(0,v_summerWeekElectricityConsumed_MWh - v_summerWeekElectricityImport_MWh);v_summerWeekElectricitySelfConsumed_MWh = max(0,v_summerWeekElectricityConsumed_MWh - v_summerWeekElectricityImport_MWh);

// Calcs winterweek

v_winterWeekTotalImport_MWh = acc_winterTotalImport_kW.getIntegral()/1000; // Arrays.stream( Arrays.copyOfRange(a_annualTotalImport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekTotalExport_MWh = acc_winterTotalExport_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualTotalExport_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekEnergyConsumed_MWh = acc_winterEnergyConsumption_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyConsumption_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekEnergyProduced_MWh = acc_winterEnergyProduction_kW.getIntegral()/1000; //Arrays.stream( Arrays.copyOfRange(a_annualEnergyProduction_kW, startIdx, endIdx) ).sum() * energyModel.p_timeStep_h / 1000;

v_winterWeekSelfConsumedEnergy_MWh = max(0,v_winterWeekEnergyConsumed_MWh - v_winterWeekTotalImport_MWh); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.	
double v_winterWeekSelfConsumedEnergyCheck_MWh = v_winterWeekEnergyProduced_MWh - v_winterWeekTotalExport_MWh;
//v_winterWeekEnergyCurtailed_MWh=Arrays.copyOfRange(a_annualEnergyCurtailed_kW, energyModel.p_startHourSummerWeek,roundToInt(24*7/energyModel.p_timeStep_h))*energyModel.p_timeStep_h / 1000;

v_winterWeekMethaneImport_MWh = acc_winterMethaneBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_winterWeekDieselImport_MWh = acc_winterDieselBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_winterWeekHydrogenImport_MWh = acc_winterHydrogenBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_winterWeekHydrogenExport_MWh = -acc_winterHydrogenBalance_kW.getSumNeg() * energyModel.p_timeStep_h / 1000;

// Electricity selfconsumed
v_winterWeekElectricityImport_MWh = acc_winterElectricityBalance_kW.getSumPos() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityExport_MWh = -acc_winterElectricityBalance_kW.getSumNeg() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityConsumed_MWh = acc_winterElectricityConsumption_kW.getSum() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityProduced_MWh = acc_winterElectricityProduction_kW.getSum() * energyModel.p_timeStep_h / 1000;

v_winterWeekElectricitySelfConsumed_MWh = max(0,v_winterWeekElectricityConsumed_MWh - v_winterWeekElectricityImport_MWh);v_winterWeekElectricitySelfConsumed_MWh = max(0,v_winterWeekElectricityConsumed_MWh - v_winterWeekElectricityImport_MWh);

// Daytime selfconsumption
v_daytimeSelfConsumedEnergy_MWh = max(0, v_daytimeEnergyProduced_MWh - v_daytimeTotalExport_MWh);
v_daytimeElectricitySelfConsumed_MWh = max(0, v_daytimeElectricityConsumed_MWh - v_daytimeElectricityImport_MWh);
// Nighttime totals: yearly totays minus daytime totals
v_nighttimeTotalExport_MWh = v_totalExport_MWh - v_daytimeTotalExport_MWh;
v_nighttimeTotalImport_MWh = v_totalImport_MWh - v_daytimeTotalImport_MWh;
v_nighttimeEnergyConsumed_MWh = v_totalEnergyConsumed_MWh - v_daytimeEnergyConsumed_MWh;
v_nighttimeEnergyProduced_MWh = v_totalEnergyProduced_MWh - v_daytimeEnergyProduced_MWh;

v_nighttimeElectricityConsumed_MWh = v_totalElectricityConsumed_MWh - v_daytimeElectricityConsumed_MWh;
v_nighttimeElectricityProduced_MWh = v_totalElectricityProduced_MWh - v_daytimeElectricityProduced_MWh;
v_nighttimeElectricityImport_MWh = v_electricityImported_kWh/1000 - v_daytimeElectricityImport_MWh;
v_nighttimeElectricityExport_MWh = v_electricityExported_kWh/1000 - v_daytimeElectricityExport_MWh;
v_nighttimeMethaneImport_MWh = v_methaneImported_kWh/1000 - v_daytimeMethaneImport_MWh;
v_nighttimeDieselImport_MWh = v_dieselImported_kWh/1000 - v_daytimeDieselImport_MWh;
v_nighttimeHydrogenImport_MWh = v_hydrogenImported_kWh/1000 - v_daytimeHydrogenImport_MWh;
v_nighttimeHydrogenExport_MWh = v_hydrogenExported_kWh/1000 - v_daytimeHydrogenExport_MWh;

v_nighttimeSelfConsumedEnergy_MWh = max(0, v_nighttimeEnergyProduced_MWh - v_nighttimeTotalExport_MWh);
v_nighttimeElectricitySelfConsumed_MWh = max(0,v_nighttimeElectricityConsumed_MWh - v_nighttimeElectricityImport_MWh);

// Weekday selfconsumption
v_weekdaySelfConsumedEnergy_MWh = max(0, v_weekdayEnergyProduced_MWh - v_weekdayTotalExport_MWh);
v_weekdayElectricitySelfConsumed_MWh = max(0,v_weekdayElectricityConsumed_MWh - v_weekdayElectricityImport_MWh);
// Weekend totals: yearly totals minus weekday totals
v_weekendTotalExport_MWh = v_totalExport_MWh - v_weekdayTotalExport_MWh;
v_weekendTotalImport_MWh = v_totalImport_MWh - v_weekdayTotalImport_MWh;
v_weekendEnergyConsumed_MWh = v_totalEnergyConsumed_MWh - v_weekdayEnergyConsumed_MWh;
v_weekendEnergyProduced_MWh = v_totalEnergyProduced_MWh - v_weekdayEnergyProduced_MWh;
v_weekendSelfConsumedEnergy_MWh = max(0, v_weekendEnergyProduced_MWh - v_weekendTotalExport_MWh);

v_weekendElectricityConsumed_MWh = v_totalElectricityConsumed_MWh - v_weekdayElectricityConsumed_MWh;
v_weekendElectricityProduced_MWh = v_totalElectricityProduced_MWh - v_weekdayElectricityProduced_MWh;
v_weekendElectricityImport_MWh = v_electricityImported_kWh/1000 - v_weekdayElectricityImport_MWh;
v_weekendElectricityExport_MWh = v_electricityExported_kWh/1000 - v_weekdayElectricityExport_MWh;
v_weekendMethaneImport_MWh = v_methaneImported_kWh/1000 - v_weekdayMethaneImport_MWh;
v_weekendDieselImport_MWh = v_dieselImported_kWh/1000 - v_weekdayDieselImport_MWh;
v_weekendHydrogenImport_MWh = v_hydrogenImported_kWh/1000 - v_weekdayHydrogenImport_MWh;
v_weekendHydrogenExport_MWh = v_hydrogenExported_kWh/1000 - v_weekdayHydrogenExport_MWh;

v_weekendSelfConsumedEnergy_MWh = max(0, v_weekendEnergyProduced_MWh - v_weekendTotalExport_MWh);
v_weekendElectricitySelfConsumed_MWh = max(0,v_weekendElectricityConsumed_MWh - v_weekendElectricityImport_MWh);

//f_getFinancesL4L_v2();
//f_duurkrommes();


/*
// Summerweek
int startIdx = roundToInt(energyModel.p_startHourSummerWeek/energyModel.p_timeStep_h);
int endIdx = startIdx + roundToInt(24*7/energyModel.p_timeStep_h);
v_summerWeekElectricityImport_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m > 0).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityExport_MWh = -Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m < 0).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityConsumed_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityConsumption_kW.getTimeSeries(), startIdx, endIdx)).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricityProduced_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityProduction_kW.getTimeSeries(), startIdx, endIdx)).sum() * energyModel.p_timeStep_h / 1000;
v_summerWeekElectricitySelfConsumed_MWh = max(0,v_summerWeekElectricityProduced_MWh - v_summerWeekElectricityExport_MWh);

// Winterweek
startIdx = roundToInt(energyModel.p_startHourWinterWeek/energyModel.p_timeStep_h);
endIdx = startIdx + roundToInt(24*7/energyModel.p_timeStep_h);

// Electricity selfconsumed
v_winterWeekElectricityImport_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m > 0).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityExport_MWh = -Arrays.stream(Arrays.copyOfRange(acc_annualElectricityBalance_kW.getTimeSeries(), startIdx, endIdx)).filter(m -> m < 0).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityConsumed_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityConsumption_kW.getTimeSeries(), startIdx, endIdx)).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricityProduced_MWh = Arrays.stream(Arrays.copyOfRange(acc_annualElectricityProduction_kW.getTimeSeries(), startIdx, endIdx)).sum() * energyModel.p_timeStep_h / 1000;
v_winterWeekElectricitySelfConsumed_MWh = max(0,v_winterWeekElectricityProduced_MWh - v_winterWeekElectricityExport_MWh);

// Daytime selfconsumption
v_daytimeSelfConsumedEnergy_MWh = v_daytimeEnergyProduced_MWh - v_daytimeTotalExport_MWh;
v_daytimeElectricitySelfConsumed_MWh = max(0,v_daytimeElectricityProduced_MWh - v_daytimeElectricityExport_MWh);

// Nighttime totals: yearly totays minus daytime totals
v_nighttimeTotalExport_MWh = v_totalExport_MWh - v_daytimeTotalExport_MWh;
v_nighttimeTotalImport_MWh = v_totalImport_MWh - v_daytimeTotalImport_MWh;
v_nighttimeEnergyConsumed_MWh = v_totalEnergyConsumed_MWh - v_daytimeEnergyConsumed_MWh;
v_nighttimeEnergyProduced_MWh = v_totalEnergyProduced_MWh - v_daytimeEnergyProduced_MWh;
v_nighttimeSelfConsumedEnergy_MWh = v_nighttimeEnergyProduced_MWh - v_nighttimeTotalExport_MWh;

v_nighttimeElectricityConsumed_MWh = v_totalElectricityConsumed_MWh - v_daytimeElectricityConsumed_MWh;
v_nighttimeElectricityProduced_MWh = v_totalElectricityProduced_MWh - v_daytimeElectricityProduced_MWh;
v_nighttimeElectricityImport_MWh = v_electricityImported_kWh/1000 - v_daytimeElectricityImport_MWh;
v_nighttimeElectricityExport_MWh = v_electricityExported_kWh/1000 - v_daytimeElectricityExport_MWh;
v_nighttimeElectricitySelfConsumed_MWh = max(0,v_nighttimeElectricityProduced_MWh - v_nighttimeElectricityExport_MWh);

// Weekday selfconsumption
v_weekdaySelfConsumedEnergy_MWh = v_weekdayEnergyProduced_MWh - v_weekdayTotalExport_MWh;
v_weekdayElectricitySelfConsumed_MWh = max(0,v_weekdayElectricityProduced_MWh - v_weekdayElectricityExport_MWh);

// Weekend totals: yearly totals minus weekday totals
v_weekendTotalExport_MWh = v_totalExport_MWh - v_weekdayTotalExport_MWh;
v_weekendTotalImport_MWh = v_totalImport_MWh - v_weekdayTotalImport_MWh;
v_weekendEnergyConsumed_MWh = v_totalEnergyConsumed_MWh - v_weekdayEnergyConsumed_MWh;
v_weekendEnergyProduced_MWh = v_totalEnergyProduced_MWh - v_weekdayEnergyProduced_MWh;
v_weekendSelfConsumedEnergy_MWh = v_weekendEnergyProduced_MWh - v_weekendTotalExport_MWh;

v_weekendElectricityConsumed_MWh = v_totalElectricityConsumed_MWh - v_weekdayElectricityConsumed_MWh;
v_weekendElectricityProduced_MWh = v_totalElectricityProduced_MWh - v_weekdayElectricityProduced_MWh;
v_weekendElectricityImport_MWh = v_electricityImported_kWh/1000 - v_weekdayElectricityImport_MWh;
v_weekendElectricityExport_MWh = v_electricityExported_kWh/1000 - v_weekdayElectricityExport_MWh;
v_weekendElectricitySelfConsumed_MWh = max(0,v_weekendElectricityProduced_MWh - v_weekendElectricityExport_MWh);
*/

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708011675046</Id>
					<Name><![CDATA[f_financesL4L]]></Name>
					<Description><![CDATA[Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6]]></Description>
					<X>660</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double assetAvgLCOE_eurpMWh = 100; // 10.4ct/kWh, best duur! (dit is voor zonnepark 
double bufferCost_eurpMWh = 20; // 2ct/kWh additional costs, retail, financing, etc.
double SDEincome_eur = 0; // SDE++ subsidie meerekenen? Dwz. invoersubsidie wanneer marktprijs lager is dan ...ct/kWh. 
double EPEXcosts_eur = 0;
double EPEXincome_eur = 0;
double selfConsumptionCoopAssets_MWh = 0; // The part of the 'owned' production that is delivered to customers (as opposed to sold on market)

// We have total model 'netload' per timestep, we also need demand from costumers and/or production by the cooperative per timestep.
int arrayLength = acc_annualElectricityBalance_kW.getTimeSeries().length;
//traceln("elec Balance element %s: %s", elementidx, a_annualElectricityBalance_kW[elementidx]);
//traceln("own production elements %s: %s", elementidx, a_annualOwnElectricityProduction_kW[elementidx]);
for (int i=0; i<arrayLength; i++) { // Loop over all timesteps for the relevant arrays.
	// Loop through coop nett power to calculate yearly money to EPEX
	EPEXcosts_eur += max(0,acc_annualElectricityBalance_kW.getTimeSeries()[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	EPEXincome_eur += max(0,-acc_annualElectricityBalance_kW.getTimeSeries()[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	
	// Wordt de SDE subsidie alleen betaald over stroom die verkocht wordt op EPEX, of ook over 'zelfgeleverde' stroom??
	// SDE subsidie alleen voor overschotten stroom: (maar niet over 'extra' opwek door klanten!)
	//SDEincome_eur += max(0,min(-a_annualElectricityBalance_kW[i], a_annualOwnElectricityProduction_kW[i])/1000 * energyModel.p_timeStep_h) * max(0,assetAvgLCOE_eurpMWh-energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i)); // Includes feed-in from customers, for which SDE++ doesn't hold! Not correct...
	// SDE subsidie voor alle stroom van eigen opwekassets: (exclusief opwek bij klanten)
	SDEincome_eur += acc_annualOwnElectricityProduction_kW.getTimeSeries()[i]/1000 * energyModel.p_timeStep_h * max(0,assetAvgLCOE_eurpMWh-energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i));
	
	// Opwek van eigen productie assets die geleverd wordt aan klanten:
	selfConsumptionCoopAssets_MWh += max(0,acc_annualOwnElectricityProduction_kW.getTimeSeries()[i] - max(0,-acc_annualElectricityBalance_kW.getTimeSeries()[i]))*energyModel.p_timeStep_h/1000;
	/*if ((a_annualOwnElectricityProduction_kW[i] - max(0,-a_annualElectricityBalance_kW[i])) < 0) {
		traceln("Negative increment on selfConsumptionCoopAssets_MWh!! Wtf?");
		traceln("Current own production: %s kW at index %s", a_annualOwnElectricityProduction_kW[i], i);
		traceln("Current CooP energy balance: %s kW", a_annualElectricityBalance_kW[i]);
		if (max(0,-a_annualElectricityBalance_kW[i]) < 0) {
			//
		}
	}*/
}

double EPEXbalance_eur = EPEXincome_eur - EPEXcosts_eur; // positive balance means nett-income!

traceln("Gelijktijdige opwek en verbruik (incl zelfverbruik teruglevering van leden): %s MWh", v_totalElectricitySelfConsumed_MWh);
traceln("Gelijktijdige opwek en verbruik (excl zelfverbruik teruglevering van leden): %s MWh", selfConsumptionCoopAssets_MWh);
traceln("Total EPEX costs Eur: %s", EPEXcosts_eur);
traceln("Total EPEX income Eur: %s", EPEXincome_eur);
traceln("Average EPEX-price of electricity bought: %s eur/MWh", EPEXcosts_eur/(v_electricityImported_kWh/1000));
traceln("Average EPEX-price of electricity sold: %s eur/MWh", EPEXincome_eur/(v_electricityExported_kWh/1000));

traceln("Hypothetical SDE++ income: %s €", SDEincome_eur);

//double totalGenerationElec_MWh = sum(energyModel.EnergyProductionSites, x->x.v_totalExport_MWh-x.v_totalImport_MWh); // Alleen productie van zonnepark dus!
double totalOwnElectricityProduced_MWh = acc_annualOwnElectricityProduction_kW.getSum()  * energyModel.p_timeStep_h / 1000;
//double totalSelfConsumedElec_MWh = totalGenerationElec_MWh - energyModel.v_totalElectricityExport_MWh; // What about effect of PV on members' roofs? Should do this per timestep, based on coop production... But acceptable approx. for now.
double totalDeliveredElec_MWh = v_totalElectricitySelfConsumed_MWh + v_electricityImported_kWh/1000; // v_totalElectricitySelfConsumed_MWh includes feed-in from customers that is re-delivered. However, it's only delivery, not feed-in! (Niet gesaldeerd)
double totalFeedin_MWh = v_electricityExported_kWh/1000 + totalDeliveredElec_MWh - totalOwnElectricityProduced_MWh - v_electricityImported_kWh/1000; // This should include all the energy that is received from customers!
double nettDeliveredElec_MWh = totalDeliveredElec_MWh - totalFeedin_MWh;
traceln("Total Coop Assets production: %s MWh", totalOwnElectricityProduced_MWh); // Includes feed-in from customers! Also need production from own assets only!
traceln("Total delivered electricity to customers, including feed-in from customers not sold on EPEX: %s MWh", roundToDecimal(totalDeliveredElec_MWh,2));
traceln("Total feedin from customers, both sold on EPEX and re-deliverd to other customers: %s MWh", totalFeedin_MWh);

if (p_actorID.equals("coopHeibloem")) {
	totalDeliveredElec_MWh = nettDeliveredElec_MWh; // Assume that nettDelivered is what counts for finances, such that feed-in tarrif is accounted for!
	double consumerPrice_eurpMWh = ((assetAvgLCOE_eurpMWh + bufferCost_eurpMWh) * totalOwnElectricityProduced_MWh - EPEXbalance_eur - SDEincome_eur)/totalDeliveredElec_MWh;
	double totalIncomeCoop_eur = totalDeliveredElec_MWh * consumerPrice_eurpMWh + SDEincome_eur + EPEXincome_eur;
	double totalCostCoop_eur = EPEXcosts_eur + (assetAvgLCOE_eurpMWh + bufferCost_eurpMWh)*totalOwnElectricityProduced_MWh; 
	//double coopSelfConsumption_fr = 1 - (v_electricityExported_kWh/1000)/totalOwnElectricityProduced_MWh; // This can become negative if customers also provide feed-in power.
	
	traceln("Calculated kostprijs+ for customers: %s €/MWh", consumerPrice_eurpMWh );
	traceln("Coop total income: %s €", totalIncomeCoop_eur);
	traceln("Coop total costs: %s €", totalCostCoop_eur );
	
} else { // situatie Zonnedorpen met gekke belastingtruc
	double energyTax_eurpMWh = 130;
	double consumerPrice_eurpMWh = 173;
	double coop_income_eur = min(v_totalElectricityProduced_MWh,totalDeliveredElec_MWh) * energyTax_eurpMWh;
	double EvO_costs_eur = -EPEXbalance_eur + max(0,totalDeliveredElec_MWh-v_totalElectricityProduced_MWh)*energyTax_eurpMWh + coop_income_eur;
	double EvO_income_eur = max(0,totalDeliveredElec_MWh) * consumerPrice_eurpMWh;
	//double coopSelfConsumption_fr = 1 - energyModel.v_totalElectricityExport_MWh/totalGenerationElec_MWh;	
	//traceln("Calculated kostprijs+ for customers: %s €/MWh", consumerPrice_eurpMWh );
	traceln("EvO total costs: %s €", EvO_costs_eur);
	traceln("EvO total income: %s €", EvO_income_eur);
	
}	
traceln("Coop gelijktijdigheid: fractie van eigen opwek geleverd aan leden: %s", selfConsumptionCoopAssets_MWh/totalOwnElectricityProduced_MWh);

//traceln("Coop gelijktijdigheid: eigen opwek minus export, gedeeld door eigen opwek: %s", 1-energyModel.v_totalElectricityExport_MWh/totalOwnElectricityProduced_MWh); // Kan negatief worden!
traceln("Coop gelijktijdigheid: eigen opwek minus export, gedeeld door eigen opwek: %s", 1-v_electricityExported_kWh/1000/totalOwnElectricityProduced_MWh); // Kan negatief worden!

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715089652853</Id>
					<Name><![CDATA[f_getFinancesL4L_v2]]></Name>
					<Description><![CDATA[Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6]]></Description>
					<X>660</X><Y>760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double assetAvgLCOE_eurpMWh = 100; // 10.4ct/kWh, best duur! (dit is voor zonnepark 
double bufferCost_eurpMWh = 20; // 2ct/kWh additional costs, retail, financing, etc.
double SDEincome_eur = 0; // SDE++ subsidie meerekenen? Dwz. invoersubsidie wanneer marktprijs lager is dan ...ct/kWh. 
double EPEXcosts_eur = 0;
double EPEXincome_eur = 0;
double selfConsumptionCoopAssets_MWh = 0; // The part of the 'owned' production that is delivered to customers (as opposed to sold on market)

int arrayLength = acc_annualElectricityBalance_kW.getTimeSeries().length;
for (int i=0; i<arrayLength; i++) { // Loop over all timesteps for the relevant arrays.
	// Loop through coop nett power to calculate yearly money to EPEX
	EPEXcosts_eur += max(0,acc_annualElectricityBalance_kW.getTimeSeries()[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	EPEXincome_eur += max(0,-acc_annualElectricityBalance_kW.getTimeSeries()[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	
	// SDE subsidie voor alle stroom van eigen opwekassets: (exclusief opwek bij klanten)
	SDEincome_eur += acc_annualOwnElectricityProduction_kW.getTimeSeries()[i]/1000 * energyModel.p_timeStep_h * max(0,assetAvgLCOE_eurpMWh-energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i));
	
	// Opwek van eigen productie assets die geleverd wordt aan klanten:
	selfConsumptionCoopAssets_MWh += max(0,acc_annualOwnElectricityProduction_kW.getTimeSeries()[i] - max(0,-acc_annualElectricityBalance_kW.getTimeSeries()[i]))*energyModel.p_timeStep_h/1000;
}

double totalOwnElectricityProduced_MWh = acc_annualOwnElectricityProduction_kW.getSum()  * energyModel.p_timeStep_h / 1000;

double totalDeliveredElec_MWh = v_totalElectricitySelfConsumed_MWh + v_electricityImported_kWh/1000; // v_totalElectricitySelfConsumed_MWh includes feed-in from customers that is re-delivered. However, it's only delivery, not feed-in! (Niet gesaldeerd)
double customerFeedIn_MWh = v_electricityExported_kWh/1000 + totalDeliveredElec_MWh - totalOwnElectricityProduced_MWh - v_electricityImported_kWh/1000; // This should include all the energy that is received from customers!
double nettDeliveredElec_MWh = totalDeliveredElec_MWh - customerFeedIn_MWh; // 

double kostprijs_eurpMWh = assetAvgLCOE_eurpMWh - SDEincome_eur / totalOwnElectricityProduced_MWh; // Neem aan dat de cooperatie dit bedrag ook krijgt voor niet-gelijktijdig geleverde stroom!
double kostprijsPlus_eurpMWh = kostprijs_eurpMWh + bufferCost_eurpMWh;
//double EPEXbalance_eur = EPEXincome_eur - EPEXcosts_eur; // positive balance means nett-income!

// Leveranciersprijs
//double EDVcosts_eur = (kostprijs_eurpMWh + bufferCost_eurpMWh) * (totalOwnElectricityProduced_MWh + customerFeedIn_MWh ) + EPEXcosts_eur ; 
double EDVcosts_eur = kostprijs_eurpMWh * ( totalOwnElectricityProduced_MWh + customerFeedIn_MWh ) + EPEXcosts_eur + totalDeliveredElec_MWh * bufferCost_eurpMWh; 
double leveranciersprijs_eurpMWh = (EDVcosts_eur - EPEXincome_eur - kostprijsPlus_eurpMWh * v_totalElectricitySelfConsumed_MWh )/(totalDeliveredElec_MWh - v_totalElectricitySelfConsumed_MWh); // Zorg dat EDV break-even draait

// Gemiddelde leveringsprijs
double gemiddeldeLeveringsprijs_eurpMWh = ( kostprijsPlus_eurpMWh * v_totalElectricitySelfConsumed_MWh + leveranciersprijs_eurpMWh * (totalDeliveredElec_MWh - v_totalElectricitySelfConsumed_MWh) ) / totalDeliveredElec_MWh;
//double leveranciersprijs_eurpMWh = 
double EDVincome_eur = (kostprijs_eurpMWh + bufferCost_eurpMWh) * v_totalElectricitySelfConsumed_MWh + EPEXincome_eur + (totalDeliveredElec_MWh - v_totalElectricitySelfConsumed_MWh) * leveranciersprijs_eurpMWh;
//totalDeliveredElec_MWh = nettDeliveredElec_MWh; // Assume that nettDelivered is what counts for finances, such that feed-in tarrif is accounted for!

traceln("Totale opwek Coöperatie Assets: %s MWh, tarief: %s €/MWh, waarde: %s €", totalOwnElectricityProduced_MWh, kostprijs_eurpMWh, totalOwnElectricityProduced_MWh*kostprijs_eurpMWh); // Also need production from own assets only!
traceln("Gelijktijdige opwek en verbruik (incl zelfverbruik teruglevering van leden): %s MWh", v_totalElectricitySelfConsumed_MWh);
traceln("Gelijktijdige opwek en verbruik (excl zelfverbruik teruglevering van leden): %s MWh, tarief: %s €/MWh, waarde: %s €", selfConsumptionCoopAssets_MWh, kostprijs_eurpMWh+bufferCost_eurpMWh, selfConsumptionCoopAssets_MWh * (kostprijs_eurpMWh+bufferCost_eurpMWh));
traceln("Ongelijktijdige levering: %s MWh, tarief: %s €/MWh, waarde: %s €", totalDeliveredElec_MWh-v_totalElectricitySelfConsumed_MWh, leveranciersprijs_eurpMWh, leveranciersprijs_eurpMWh*(totalDeliveredElec_MWh-v_totalElectricitySelfConsumed_MWh));
traceln("Totale inkoop op EPEX: %s MWh, tarief: %s €/MWh, value: %s €", v_electricityImported_kWh/1000, EPEXcosts_eur/(v_electricityImported_kWh/1000), EPEXcosts_eur);
traceln("Totale verkoop op EPEX: %s MWh, tarief: %s €/MWh, value: %s €", v_electricityExported_kWh/1000, EPEXincome_eur/(v_electricityExported_kWh/1000), EPEXincome_eur);

traceln("Totale levering aan klanten: %s MWh, tarief: %s €/MWh, waarde: %s €", roundToDecimal(totalDeliveredElec_MWh,2), gemiddeldeLeveringsprijs_eurpMWh, gemiddeldeLeveringsprijs_eurpMWh*totalDeliveredElec_MWh);

traceln("Totale teruglevering van klanten: %s MWh, tarief: %s €/MWh, waarde: %s €", customerFeedIn_MWh, kostprijs_eurpMWh, customerFeedIn_MWh*kostprijs_eurpMWh);

traceln("Coop gelijktijdigheid: fractie van eigen opwek geleverd aan leden: %s", selfConsumptionCoopAssets_MWh/totalOwnElectricityProduced_MWh);
//traceln("Coop gelijktijdigheid: eigen opwek minus export, gedeeld door eigen opwek: %s", 1-energyModel.v_totalElectricityExport_MWh/totalOwnElectricityProduced_MWh); // Kan negatief worden!
traceln("Coop gelijktijdigheid: eigen opwek minus export, gedeeld door eigen opwek: %s", 1-v_electricityExported_kWh/1000/totalOwnElectricityProduced_MWh); // Kan negatief worden!

traceln("Kostprijs+ met SDE verrekend: %s €/MWh", roundToInt(kostprijs_eurpMWh + bufferCost_eurpMWh));
traceln("Gemiddelde leveringsprijs: %s €/MWh", roundToInt( gemiddeldeLeveringsprijs_eurpMWh ));
traceln("Leveranciersprijs ongelijktijdige stroom: %s €/MWh", roundToInt(leveranciersprijs_eurpMWh) );

traceln("SDE++ income: %s €", SDEincome_eur);
traceln("EDV total income: %s €", roundToInt(EDVcosts_eur));
traceln("EDV total costs: %s €", roundToInt(EDVincome_eur));

if (abs(EDVcosts_eur-EDVincome_eur) > 1) {
	traceln("Coop not running break-even!!");
	traceln("Coop total income: %s €", EDVcosts_eur);
	traceln("Coop total costs: %s €", EDVincome_eur);
}


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715857260657</Id>
					<Name><![CDATA[f_updateArrays]]></Name>
					<X>680</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (energyModel.v_isRapidRun){
	f_fillAnnualDatasets();		
} else {
	data_PVGeneration_kW.update();
	data_baseloadElectricityDemand_kW.update();
	data_electricVehicleDemand_kW.update();
	data_V2GSupply_kW.update();
	data_windGeneration_kW.update();
	data_batteryCharging_kW.update();
	data_batteryDischarging_kW.update();
	data_heatPumpElectricityDemand_kW.update();
	data_naturalGasDemand_kW.update();
	data_hydrogenDemand_kW.update();
	data_dieselDemand_kW.update();
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[DataSet]]></ReturnType>
					<Id>1723101436982</Id>
					<Name><![CDATA[f_getDuurkromme]]></Name>
					<X>810</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[boolean firstRun = true;
if (data_netbelastingDuurkromme_kW != null) {	
	if (data_netbelastingDuurkrommeVorige_kW != null) { // Not second run either!
		data_netbelastingDuurkrommeVorige_kW.reset();
	} else {
		data_netbelastingDuurkrommeVorige_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));
	}
	firstRun = false;
} else {
	data_netbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));
	data_summerWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));
	data_winterWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));
	data_daytimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/2/energyModel.p_timeStep_h));
	data_nighttimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/2/energyModel.p_timeStep_h));
	data_weekdayNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/7*5/energyModel.p_timeStep_h)+100);
	data_weekendNetbelastingDuurkromme_kW = new DataSet(roundToInt(365*24/7*2/energyModel.p_timeStep_h)+100);
}

// We copy our annual array to preserve it as a time-series and make new arrays for the others
double[] netLoadArrayAnnual_kW = acc_annualElectricityBalance_kW.getTimeSeries().clone(); 
int arraySize = netLoadArrayAnnual_kW.length;
double[] netLoadArraySummerweek_kW = new double[roundToInt(168 / energyModel.p_timeStep_h)];
double[] netLoadArrayWinterweek_kW= new double[roundToInt(168 / energyModel.p_timeStep_h)];
double[] netLoadArrayDaytime_kW = new double[arraySize/2];
double[] netLoadArrayNighttime_kW = new double[arraySize/2];
// For different years the amount of weekdays and weekend days may be different, so the size will be variable for now
ArrayList<Double> listNetLoadArrayWeekday_kW = new ArrayList<>();
ArrayList<Double> listNetLoadArrayWeekend_kW = new ArrayList<>();
 
int i_winter=0;
int i_summer=0;
int i_day=0;
int i_night=0;
int i_weekday=0;
int i_weekend=0;

//double[] annualElectricityBalanceTimeSeries_kW = acc_annualElectricityBalance_kW.getTimeSeries();

for(int i=0; i<arraySize ; i++) {
	if (!firstRun) {
		// First we make sure to store our previous Load Curve
		data_netbelastingDuurkrommeVorige_kW.add(i*energyModel.p_timeStep_h,data_netbelastingDuurkromme_kW.getY(i));		
	}
	// summer/winter
	if (i*energyModel.p_timeStep_h > energyModel.p_startHourSummerWeek && i*energyModel.p_timeStep_h<= energyModel.p_startHourSummerWeek+24*7) {
		netLoadArraySummerweek_kW[i_summer]=-netLoadArrayAnnual_kW[i];
		i_summer++;
	}
	if (i*energyModel.p_timeStep_h > energyModel.p_startHourWinterWeek && i*energyModel.p_timeStep_h<= energyModel.p_startHourWinterWeek+24*7) {
		netLoadArrayWinterweek_kW[i_winter]=-netLoadArrayAnnual_kW[i];
		i_winter++;
	}
	// day/night
	if (i*energyModel.p_timeStep_h % 24 > 6 && i*energyModel.p_timeStep_h % 24 <= 18) { //daytime
		netLoadArrayDaytime_kW[i_day]=-netLoadArrayAnnual_kW[i];
		i_day++;
	} else {
		netLoadArrayNighttime_kW[i_night]=-netLoadArrayAnnual_kW[i];
		i_night++;
	}
	//Weekday/weekend
	if (((i*energyModel.p_timeStep_h+ 24*(energyModel.v_dayOfWeek1jan-1)) % (24*7)) < (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h
		listNetLoadArrayWeekday_kW.add(-netLoadArrayAnnual_kW[i]);
		i_weekday++;
	} else {
		listNetLoadArrayWeekend_kW.add(-netLoadArrayAnnual_kW[i]);
		i_weekend++;
	}
	
}
 
// Now we have the size of the weekday & weekend arrays.
double[] netLoadArrayWeekday_kW = new double[listNetLoadArrayWeekday_kW.size()];
double[] netLoadArrayWeekend_kW = new double[listNetLoadArrayWeekend_kW.size()];
for (int i = 0; i < listNetLoadArrayWeekday_kW.size(); i++) {
	netLoadArrayWeekday_kW[i] = listNetLoadArrayWeekday_kW.get(i);
}
for (int i = 0; i < listNetLoadArrayWeekend_kW.size(); i++) {
	netLoadArrayWeekend_kW[i] = listNetLoadArrayWeekend_kW.get(i);
}
 
 
// Sort all arrays
Arrays.parallelSort(netLoadArrayAnnual_kW);
Arrays.parallelSort(netLoadArraySummerweek_kW);
Arrays.parallelSort(netLoadArrayWinterweek_kW);
Arrays.parallelSort(netLoadArrayDaytime_kW);
Arrays.parallelSort(netLoadArrayNighttime_kW);
Arrays.parallelSort(netLoadArrayWeekday_kW);
Arrays.parallelSort(netLoadArrayWeekend_kW);
 
// Write results to datasets
// Netbelastingduurkromme year
//if (!firstRun) {
	data_netbelastingDuurkromme_kW.reset();
	data_summerWeekNetbelastingDuurkromme_kW.reset();	
	data_winterWeekNetbelastingDuurkromme_kW.reset();
	data_daytimeNetbelastingDuurkromme_kW.reset();
	data_nighttimeNetbelastingDuurkromme_kW.reset();
	data_weekdayNetbelastingDuurkromme_kW.reset();
	data_weekendNetbelastingDuurkromme_kW.reset();
//}
for(int i=0; i< arraySize; i++) {
	data_netbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, netLoadArrayAnnual_kW[arraySize-i-1]);
}
// Netbelastingduurkromme summer / winter
arraySize = netLoadArraySummerweek_kW.length;
for(int i=0; i< arraySize; i++) {
	data_summerWeekNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArraySummerweek_kW[i]);
}
arraySize = netLoadArrayWinterweek_kW.length;
for(int i=0; i< arraySize; i++) {
	data_winterWeekNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWinterweek_kW[i]);
}
// Netbelastingduurkromme day / night
arraySize = netLoadArrayDaytime_kW.length;
for(int i=0; i< arraySize; i++) {
	data_daytimeNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayDaytime_kW[i]);
}
arraySize = netLoadArrayNighttime_kW.length;
for(int i=0; i< arraySize; i++) {
	data_nighttimeNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayNighttime_kW[i]);
}
// Netbelastingduurkromme weekday / weekend
arraySize = netLoadArrayWeekday_kW.length;
for(int i=0; i< arraySize; i++) {
	data_weekdayNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekday_kW[i]);
}
arraySize = netLoadArrayWeekend_kW.length;
for(int i=0; i< arraySize; i++) {
	data_weekendNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekend_kW[i]);
}
 
return data_netbelastingDuurkromme_kW;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1723103918133</Id>
					<Name><![CDATA[f_fillAnnualDatasets]]></Name>
					<X>816</X><Y>237.33333333333337</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double v_currentPowerElectricity_kW = - v_electricitySurplus_kW;
double v_currentPowerMethane_kW = v_methaneVolume_kWh / energyModel.p_timeStep_h;
double v_currentPowerHydrogen_kW = v_hydrogenVolume_kWh / energyModel.p_timeStep_h;
double v_currentPowerDiesel_kW = v_dieselVolume_kWh / energyModel.p_timeStep_h;
double v_currentPowerHeat_kW = v_heatVolume_kWh / energyModel.p_timeStep_h;

//double currentImport_kW = (max(0,v_currentPowerElectricity_kW) + max(0,v_currentPowerHeat_kW) + max(0,v_currentPowerMethane_kW) + max(0,v_currentPowerHydrogen_kW) + max(0,v_currentPowerDiesel_kW));
//double currentExport_kW = (max(0,-v_currentPowerElectricity_kW) + max(0,-v_currentPowerHeat_kW) + max(0,-v_currentPowerMethane_kW) + max(0,-v_currentPowerHydrogen_kW) + max(0,-v_currentPowerDiesel_kW));

double currentImport_MWh = (max(0,v_electricityVolume_kWh) + max(0,v_heatVolume_kWh) + max(0,v_methaneVolume_kWh) + max(0,v_hydrogenVolume_kWh) + max(0,v_dieselVolume_kWh))/1000;
double currentExport_MWh = (max(0,-v_electricityVolume_kWh) + max(0,-v_heatVolume_kWh) + max(0,-v_methaneVolume_kWh) + max(0,-v_hydrogenVolume_kWh) + max(0,-v_dieselVolume_kWh))/1000;
double currentImport_kW = currentImport_MWh * 1000 / energyModel.p_timeStep_h;
double currentExport_kW = currentExport_MWh * 1000 / energyModel.p_timeStep_h;
//traceln("ElectricityVolume_kWh: %s kWh, current production: %s kW", v_electricityVolume_kWh, v_currentOwnElectricityProduction_kW);	
v_totalEnergyConsumed_MWh += (v_currentEnergyConsumption_kW * energyModel.p_timeStep_h)/1000;
v_totalEnergyProduced_MWh += (v_currentEnergyProduction_kW * energyModel.p_timeStep_h)/1000;
v_totalEnergyCurtailed_MWh += (v_currentEnergyCurtailed_kW * energyModel.p_timeStep_h)/1000;

//data_annualCoopElectricityBalance_kW.add(energyModel.t_h, v_electricitySurplus_kW);
acc_annualElectricityBalance_kW.addStep(energyModel.t_h, -v_electricitySurplus_kW);
acc_annualElectricityProduction_kW.addStep(energyModel.t_h, v_currentElectricityProduction_kW);
acc_annualElectricityConsumption_kW.addStep(energyModel.t_h, v_currentElectricityConsumption_kW);
acc_annualOwnElectricityProduction_kW.addStep(energyModel.t_h, v_currentOwnElectricityProduction_kW);

acc_annualMethaneBalance_kW.addStep(energyModel.t_h, v_methaneVolume_kWh/energyModel.p_timeStep_h);
acc_annualHydrogenBalance_kW.addStep(energyModel.t_h, v_hydrogenVolume_kWh/energyModel.p_timeStep_h);
acc_annualDieselBalance_kW.addStep(energyModel.t_h, v_dieselVolume_kWh/energyModel.p_timeStep_h);

// Demand
v_dailyBaseloadElectricityDemand_kW += v_fixedConsumptionElectric_kW;
v_dailyHeatPumpElectricityDemand_kW += v_heatPumpElectricityConsumption_kW;
v_dailyElectricVehicleDemand_kW += max(0,v_evChargingPowerElectric_kW);
v_dailyBatteriesDemand_kW += max(0,v_batteryPowerElectric_kW);
v_dailyNaturalGasDemand_kW += max(0, v_currentPowerMethane_kW);
v_dailyDieselDemand_kW += max(0, v_currentPowerDiesel_kW);
v_dailyHydrogenDemand_kW += max(0, v_currentPowerHydrogen_kW);
//v_dailyDistrictHeatDemand_kWh += 
// Supply
v_dailyPVGeneration_kW += v_pvProductionElectric_kW;
v_dailyWindGeneration_kW += v_windProductionElectric_kW;
v_dailyBatteriesSupply_kW += max(0,-v_batteryPowerElectric_kW);
v_dailyV2GSupply_kW += -min(0,v_evChargingPowerElectric_kW);
v_dailyNaturalGasSupply_kW += max(0, -v_currentPowerMethane_kW);
v_dailyHydrogenSupply_kW += max(0, -v_currentPowerHydrogen_kW);

//v_dailyDistrictHeatSupply_kWh += 

if (energyModel.t_h % 24 == 24-energyModel.p_timeStep_h) {
	//data_annualElectricityDemand_MWh.add(energyModel.t_h, v_dailyElectricityDemand_kWh/(24 / energyModel.p_timeStep_h));
	//data_annualElectricitySupply_MWh.add(energyModel.t_h, v_dailyElectricitySupply_kWh/(24 / energyModel.p_timeStep_h)); 
	// Demand
	data_annualBaseloadElectricityDemand_kW.add(energyModel.t_h, v_dailyBaseloadElectricityDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_dailyHeatPumpElectricityDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualElectricVehicleDemand_kW.add(energyModel.t_h, v_dailyElectricVehicleDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualBatteriesDemand_kW.add(energyModel.t_h, v_dailyBatteriesDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualNaturalGasDemand_kW.add(energyModel.t_h, v_dailyNaturalGasDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualDieselDemand_kW.add(energyModel.t_h, v_dailyDieselDemand_kW/(24 / energyModel.p_timeStep_h));
	data_annualHydrogenDemand_kW.add(energyModel.t_h, v_dailyHydrogenDemand_kW/(24 / energyModel.p_timeStep_h));
	//data_annualDistrictHeatSupply_MWh.add(energyModel.t_h, v_dailyDistrictHeatDemand_kWh/(24 / energyModel.p_timeStep_h));
	// Supply
	data_annualPVGeneration_kW.add(energyModel.t_h, v_dailyPVGeneration_kW/(24 / energyModel.p_timeStep_h));
	data_annualWindGeneration_kW.add(energyModel.t_h, v_dailyWindGeneration_kW/(24 / energyModel.p_timeStep_h));
	data_annualBatteriesSupply_kW.add(energyModel.t_h, v_dailyBatteriesSupply_kW/(24 / energyModel.p_timeStep_h));
	data_annualV2GSupply_kW.add(energyModel.t_h, v_dailyV2GSupply_kW/(24 / energyModel.p_timeStep_h));
	data_annualNaturalGasSupply_kW.add(energyModel.t_h, v_dailyNaturalGasSupply_kW/(24 / energyModel.p_timeStep_h));
	data_annualHydrogenSupply_kW.add(energyModel.t_h, v_dailyHydrogenSupply_kW/(24 / energyModel.p_timeStep_h));
	//data_annualDistrictHeatSupply_MWh.add(energyModel.t_h, v_dailyDistrictHeatSupply_kWh/(24 / energyModel.p_timeStep_h));

	// Resetting the daily values
	//v_dailyElectricityDemand_kWh = 0;
	//v_dailyElectricitySupply_kWh = 0;
	v_dailyBaseloadElectricityDemand_kW = 0;
	v_dailyHeatPumpElectricityDemand_kW = 0;
	v_dailyElectricVehicleDemand_kW = 0;
	v_dailyBatteriesDemand_kW = 0;
	v_dailyNaturalGasDemand_kW = 0;
	v_dailyDieselDemand_kW = 0;
	v_dailyHydrogenDemand_kW = 0;
	//v_dailyDistrictHeatDemand_kWh = 0;
	v_dailyPVGeneration_kW = 0;
	v_dailyWindGeneration_kW = 0;
	v_dailyBatteriesSupply_kW = 0;
	v_dailyV2GSupply_kW = 0;
	v_dailyNaturalGasSupply_kW = 0;
	v_dailyHydrogenSupply_kW = 0;
	//v_dailyDistrictHeatSupply_kWh = 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Summer week
if (energyModel.t_h >= energyModel.p_startHourSummerWeek && energyModel.t_h < energyModel.p_startHourSummerWeek + 24*7){
	data_summerWeekBaseloadElectricityDemand_kW.add(energyModel.t_h, v_fixedConsumptionElectric_kW);
	data_summerWeekHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_heatPumpElectricityConsumption_kW);
	data_summerWeekElectricVehicleDemand_kW.add(energyModel.t_h, max(0,v_evChargingPowerElectric_kW));
	data_summerWeekBatteriesDemand_kW.add(energyModel.t_h, max(0,v_batteryPowerElectric_kW));
	data_summerWeekNaturalGasDemand_kW.add(energyModel.t_h, max(0, v_currentPowerMethane_kW));
	data_summerWeekDieselDemand_kW.add(energyModel.t_h, max(0, v_currentPowerDiesel_kW));
	data_summerWeekHydrogenDemand_kW.add(energyModel.t_h, max(0, v_currentPowerHydrogen_kW));
	
	data_summerWeekPVGeneration_kW.add(energyModel.t_h, v_pvProductionElectric_kW);
	data_summerWeekWindGeneration_kW.add(energyModel.t_h, v_windProductionElectric_kW);
	data_summerWeekBatteriesSupply_kW.add(energyModel.t_h, max(0,-v_batteryPowerElectric_kW));
	data_summerWeekV2GSupply_kW.add(energyModel.t_h, max(0, -v_evChargingPowerElectric_kW));
	data_summerWeekNaturalGasSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerMethane_kW));
	data_summerWeekHydrogenSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerHydrogen_kW));
	
	acc_summerElectricityBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerElectricity_kW);
	acc_summerMethaneBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerMethane_kW);
	acc_summerHydrogenBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerHydrogen_kW);
	acc_summerDieselBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerDiesel_kW);
	acc_summerHeatBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentPowerHeat_kW);
	acc_summerTotalImport_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,currentImport_kW);
	acc_summerTotalExport_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,currentExport_kW);
	
	acc_summerEnergyProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentEnergyProduction_kW);
	acc_summerEnergyConsumption_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentEnergyConsumption_kW);
	acc_summerEnergyCurtailed_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentEnergyCurtailed_kW);
	acc_summerElectricityProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentElectricityProduction_kW);
	acc_summerElectricityConsumption_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentElectricityConsumption_kW);
	//acc_summerHeatProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourSummerWeek,v_currentEnergyProductionHeat_kW);	
	
}

//Winter week
if (energyModel.t_h >= energyModel.p_startHourWinterWeek && energyModel.t_h < energyModel.p_startHourWinterWeek + 24*7){
	data_winterWeekBaseloadElectricityDemand_kW.add(energyModel.t_h, v_fixedConsumptionElectric_kW);
	data_winterWeekHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_heatPumpElectricityConsumption_kW);
	data_winterWeekElectricVehicleDemand_kW.add(energyModel.t_h, max(0, v_evChargingPowerElectric_kW));
	data_winterWeekBatteriesDemand_kW.add(energyModel.t_h, max(0, v_batteryPowerElectric_kW));
	data_winterWeekNaturalGasDemand_kW.add(energyModel.t_h, max(0, v_currentPowerMethane_kW));
	data_winterWeekDieselDemand_kW.add(energyModel.t_h, max(0, v_currentPowerDiesel_kW));
	data_winterWeekHydrogenDemand_kW.add(energyModel.t_h, max(0, v_currentPowerHydrogen_kW));
	
	data_winterWeekPVGeneration_kW.add(energyModel.t_h, v_pvProductionElectric_kW);
	data_winterWeekWindGeneration_kW.add(energyModel.t_h, v_windProductionElectric_kW);
	data_winterWeekBatteriesSupply_kW.add(energyModel.t_h, max(0, -v_batteryPowerElectric_kW));
	data_winterWeekV2GSupply_kW.add(energyModel.t_h, max(0, -v_evChargingPowerElectric_kW));
	data_winterWeekNaturalGasSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerMethane_kW));
	data_winterWeekHydrogenSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerHydrogen_kW));
	
	acc_winterElectricityBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerElectricity_kW);
	acc_winterMethaneBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerMethane_kW);
	acc_winterHydrogenBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerHydrogen_kW);
	acc_winterDieselBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerDiesel_kW);
	acc_winterHeatBalance_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentPowerHeat_kW);
	acc_winterTotalImport_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,currentImport_kW);
	acc_winterTotalExport_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,currentExport_kW);
	
	acc_winterEnergyProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentEnergyProduction_kW);
	acc_winterEnergyConsumption_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentEnergyConsumption_kW);
	acc_winterEnergyCurtailed_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentEnergyCurtailed_kW);
	acc_winterElectricityProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentElectricityProduction_kW);
	acc_winterElectricityConsumption_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentElectricityConsumption_kW);
	//acc_winterHeatProduction_kW.addStep(energyModel.t_h-energyModel.p_startHourWinterWeek,v_currentEnergyProductionHeat_kW);	
	
}

// Daytime totals. Use overal-total minus daytime total to get nighttime totals.

if(energyModel.t_h % 24 > 6 && energyModel.t_h % 24 < 18) { // Daytime totals. Use overal-total minus daytime total to get nighttime totals.
	
	v_daytimeTotalImport_MWh += currentImport_MWh;
	v_daytimeTotalExport_MWh += currentExport_MWh;
	v_daytimeEnergyConsumed_MWh += v_currentEnergyConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeEnergyProduced_MWh += v_currentEnergyProduction_kW / 1000 * energyModel.p_timeStep_h;
		
	v_daytimeMethaneImport_MWh += v_currentPowerMethane_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeDieselImport_MWh += v_currentPowerDiesel_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeHydrogenImport_MWh += max(0, v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;
	v_daytimeHydrogenExport_MWh += max(0, -v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;
	
	v_daytimeElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_daytimeElectricityProduced_MWh += v_currentElectricityProduction_kW / 1000 * energyModel.p_timeStep_h;		
	v_daytimeElectricityExport_MWh += max(0,-v_electricityVolume_kWh) /1000;	
	v_daytimeElectricityImport_MWh += max(0,v_electricityVolume_kWh) /1000;
	
} 
// Weekday totals. Use overal-totals minus weekday totals to get weekend totals.
if ((energyModel.t_h+(energyModel.v_dayOfWeek1jan - 1)*24) % (24*7) < (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h
	
	v_weekdayTotalImport_MWh += currentImport_MWh;
	v_weekdayTotalExport_MWh += currentExport_MWh;

	v_weekdayEnergyConsumed_MWh += v_currentEnergyConsumption_kW * energyModel.p_timeStep_h/1000;
	v_weekdayEnergyProduced_MWh += v_currentEnergyProduction_kW * energyModel.p_timeStep_h/1000;
	
	v_weekdayMethaneImport_MWh += v_currentPowerMethane_kW / 1000 * energyModel.p_timeStep_h;
	v_weekdayDieselImport_MWh += v_currentPowerDiesel_kW / 1000 * energyModel.p_timeStep_h;
	v_weekdayHydrogenImport_MWh += max(0, v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;
	v_weekdayHydrogenExport_MWh += max(0, -v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;
	
	v_weekdayElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * energyModel.p_timeStep_h;
	v_weekdayElectricityProduced_MWh += v_currentElectricityProduction_kW / 1000 * energyModel.p_timeStep_h;		
	v_weekdayElectricityExport_MWh += max(0,-v_electricityVolume_kWh) /1000;
	v_weekdayElectricityImport_MWh += max(0,v_electricityVolume_kWh) /1000;	
} 
]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1709636537267</Id>
					<Name><![CDATA[data_naturalGasDemand_kW]]></Name>
					<X>60</X><Y>1410</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,v_methaneVolume_kWh/energyModel.p_timeStep_h)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537281</Id>
					<Name><![CDATA[data_heatPumpElectricityDemand_kW]]></Name>
					<X>60</X><Y>1490</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_heatPumpElectricityConsumption_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537291</Id>
					<Name><![CDATA[data_windGeneration_kW]]></Name>
					<X>60</X><Y>1570</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_windProductionElectric_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537301</Id>
					<Name><![CDATA[data_V2GSupply_kW]]></Name>
					<X>60</X><Y>1610</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,-v_evChargingPowerElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537311</Id>
					<Name><![CDATA[data_PVGeneration_kW]]></Name>
					<X>60</X><Y>1550</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_pvProductionElectric_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537321</Id>
					<Name><![CDATA[data_batteryCharging_kW]]></Name>
					<X>60</X><Y>1530</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,v_batteryPowerElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537330</Id>
					<Name><![CDATA[data_baseloadElectricityDemand_kW]]></Name>
					<X>60</X><Y>1470</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_fixedConsumptionElectric_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537340</Id>
					<Name><![CDATA[data_totalDemand_kW]]></Name>
					<X>60</X><Y>1630</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentEnergyConsumption_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537350</Id>
					<Name><![CDATA[data_dieselDemand_kW]]></Name>
					<X>60</X><Y>1429</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,v_dieselVolume_kWh/energyModel.p_timeStep_h)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537360</Id>
					<Name><![CDATA[data_electricVehicleDemand_kW]]></Name>
					<X>60</X><Y>1510</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,v_evChargingPowerElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537369</Id>
					<Name><![CDATA[data_batteryDischarging_kW]]></Name>
					<X>60</X><Y>1590</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,-v_batteryPowerElectric_kW)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537379</Id>
					<Name><![CDATA[data_hydrogenDemand_kW]]></Name>
					<X>60</X><Y>1450</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[max(0,v_hydrogenVolume_kWh/energyModel.p_timeStep_h)]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1709636537389</Id>
					<Name><![CDATA[data_totalSupply_kW]]></Name>
					<X>60</X><Y>1650</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<HorizontalAxisExpression><![CDATA[energyModel.t_h]]></HorizontalAxisExpression>
					<VerticalAxisExpression><![CDATA[v_currentEnergyProduction_kW]]></VerticalAxisExpression>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882834</Id>
					<Name><![CDATA[data_annualHeatPumpElectricityDemand_kW]]></Name>
					<X>392.66666666666663</X><Y>1945.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882837</Id>
					<Name><![CDATA[data_annualWindGeneration_kW]]></Name>
					<X>392.66666666666663</X><Y>2125.333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882840</Id>
					<Name><![CDATA[data_annualV2GSupply_kW]]></Name>
					<X>392.66666666666663</X><Y>2165.333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882845</Id>
					<Name><![CDATA[data_annualPVGeneration_kW]]></Name>
					<X>392.66666666666663</X><Y>2105.333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882854</Id>
					<Name><![CDATA[data_annualBatteriesDemand_kW]]></Name>
					<X>392.66666666666663</X><Y>1985.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882863</Id>
					<Name><![CDATA[data_annualBaseloadElectricityDemand_kW]]></Name>
					<X>392.66666666666663</X><Y>1925.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882871</Id>
					<Name><![CDATA[data_annualElectricVehicleDemand_kW]]></Name>
					<X>392.66666666666663</X><Y>1965.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882880</Id>
					<Name><![CDATA[data_annualBatteriesSupply_kW]]></Name>
					<X>392.66666666666663</X><Y>2145.333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882889</Id>
					<Name><![CDATA[data_annualElectricitySupply_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>392.66666666666663</X><Y>1905.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1715155200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882897</Id>
					<Name><![CDATA[data_annualElectricityDemand_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>392.66666666666663</X><Y>1885.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1715155200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882905</Id>
					<Name><![CDATA[data_annualDieselDemand_kW]]></Name>
					<X>392.66666666666663</X><Y>2025.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>366</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882914</Id>
					<Name><![CDATA[data_annualHydrogenDemand_kW]]></Name>
					<X>392.66666666666663</X><Y>2045.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882921</Id>
					<Name><![CDATA[data_annualDisctricHeatDemand_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>392.66666666666663</X><Y>2065.333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882930</Id>
					<Name><![CDATA[data_annualNaturalGasSupply_kW]]></Name>
					<X>392.66666666666663</X><Y>2185.333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882937</Id>
					<Name><![CDATA[data_annualDistrictHeatSupply_MWh]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>392.66666666666663</X><Y>2225.333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882945</Id>
					<Name><![CDATA[data_annualNaturalGasDemand_kW]]></Name>
					<X>392.66666666666663</X><Y>2005.3333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723103882953</Id>
					<Name><![CDATA[data_annualHydrogenSupply_kW]]></Name>
					<X>392.66666666666663</X><Y>2205.333333333333</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>365</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215457</Id>
					<Name><![CDATA[data_summerWeekHeatPumpElectricityDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2297.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215468</Id>
					<Name><![CDATA[data_summerWeekWindGeneration_kW]]></Name>
					<X>390.66666666666674</X><Y>2467.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215477</Id>
					<Name><![CDATA[data_summerWeekV2GSupply_kW]]></Name>
					<X>390.66666666666674</X><Y>2507.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215486</Id>
					<Name><![CDATA[data_summerWeekPVGeneration_kW]]></Name>
					<X>390.66666666666674</X><Y>2447.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215497</Id>
					<Name><![CDATA[data_summerWeekBatteriesDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2337.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215507</Id>
					<Name><![CDATA[data_summerWeekBaseloadElectricityDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2277.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215517</Id>
					<Name><![CDATA[data_summerWeekElectricVehicleDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2317.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215527</Id>
					<Name><![CDATA[data_summerWeekBatteriesSupply_kW]]></Name>
					<X>390.66666666666674</X><Y>2487.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215536</Id>
					<Name><![CDATA[data_summerWeekNaturalGasDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2357.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215545</Id>
					<Name><![CDATA[data_summerWeekDieselDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2377.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215555</Id>
					<Name><![CDATA[data_summerWeekHydrogenDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2397.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215566</Id>
					<Name><![CDATA[data_summerWeekNaturalGasSupply_kW]]></Name>
					<X>390.66666666666674</X><Y>2527.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215575</Id>
					<Name><![CDATA[data_winterWeekHeatPumpElectricityDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2608.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215584</Id>
					<Name><![CDATA[data_winterWeekWindGeneration_kW]]></Name>
					<X>390.66666666666674</X><Y>2778.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215594</Id>
					<Name><![CDATA[data_winterWeekV2GSupply_kW]]></Name>
					<X>390.66666666666674</X><Y>2818.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215603</Id>
					<Name><![CDATA[data_winterWeekPVGeneration_kW]]></Name>
					<X>390.66666666666674</X><Y>2758.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215613</Id>
					<Name><![CDATA[data_winterWeekBatteriesDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2648.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215623</Id>
					<Name><![CDATA[data_winterWeekBaseloadElectricityDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2588.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215633</Id>
					<Name><![CDATA[data_winterWeekElectricVehicleDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2628.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215642</Id>
					<Name><![CDATA[data_winterWeekBatteriesSupply_kW]]></Name>
					<X>390.66666666666674</X><Y>2798.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215652</Id>
					<Name><![CDATA[data_winterWeekNaturalGasDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2668.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215661</Id>
					<Name><![CDATA[data_winterWeekDieselDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2688.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215670</Id>
					<Name><![CDATA[data_winterWeekHydrogenDemand_kW]]></Name>
					<X>390.66666666666674</X><Y>2708.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215681</Id>
					<Name><![CDATA[data_winterWeekNaturalGasSupply_kW]]></Name>
					<X>390.66666666666674</X><Y>2838.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108215690</Id>
					<Name><![CDATA[data_summerWeekHydrogenSupply_kW]]></Name>
					<X>390.66666666666674</X><Y>2547.3333333333335</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1723108329181</Id>
					<Name><![CDATA[data_winterWeekHydrogenSupply_kW]]></Name>
					<X>391</X><Y>2858</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687075200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<AgentLinks>
				<AgentLink>
					<Id>1660731375011</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>180</X><Y>-150</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1660736357874</Id>
					<Name><![CDATA[superConnection]]></Name>
					<Description><![CDATA[Link naar bovenliggende actor, bijv. een Coop, of energySupplier. Gebruikt om lid te worden van een Coop of aangesloten te zijn bij een energieleverancier.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>230</X><Y>-30</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1660736357876</Id>
					<Name><![CDATA[subConnectionsElectricity]]></Name>
					<Description><![CDATA[Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>430</X><Y>-130</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1679493814923</Id>
					<Name><![CDATA[subConnectionsMethane]]></Name>
					<Description><![CDATA[Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>430</X><Y>-100</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1679493824998</Id>
					<Name><![CDATA[subConnectionsHydrogen]]></Name>
					<Description><![CDATA[Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>430</X><Y>-70</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1679493837529</Id>
					<Name><![CDATA[subConnectionsHeat]]></Name>
					<Description><![CDATA[Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>430</X><Y>-40</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1660731826095</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1660731375015</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
    			<BarChart>
					<Id>1692631026123</Id>
					<Name><![CDATA[ch_coopBalance]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>910</X><Y>340</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1692691200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>390</Width>
					<Height>390</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>310</Width>
						<Height>300</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<DataItem>
					<Id>1692631027262</Id>
					<Expression><![CDATA[v_balanceMembers_eur]]></Expression>
					<Color>-3137392</Color>
						<Title><![CDATA[Inkomsten leden]]></Title>
					</DataItem>
					<DataItem>
					<Id>1692631063902</Id>
					<Expression><![CDATA[v_balanceElectricityDelivery_eur]]></Expression>
					<Color>-32944</Color>
						<Title><![CDATA[Inkomsten EPEX]]></Title>
					</DataItem>
					<DataItem>
					<Id>1692631086718</Id>
					<Expression><![CDATA[-v_assetDepreciation_eur]]></Expression>
					<Color>-13447886</Color>
						<Title><![CDATA[Afschrijving assets]]></Title>
					</DataItem>
					<DataItem>
					<Id>1692631175228</Id>
					<Expression><![CDATA[-p_yearlyOperationalCosts_eur]]></Expression>
					<Color>-9404272</Color>
						<Title><![CDATA[OPEX]]></Title>
					</DataItem>
					<ScaleFromExpression><![CDATA[0]]></ScaleFromExpression>
					<ScaleToExpression><![CDATA[1]]></ScaleToExpression>
					<ScaleType>AUTO</ScaleType>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
    			</BarChart>
				<Text>
					<Id>1723034834835</Id>
					<Name><![CDATA[text13]]></Name>
					<X>-232</X><Y>1569</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Production]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1723034834837</Id>
					<Name><![CDATA[text16]]></Name>
					<X>-232</X><Y>1349</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Consumption]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1723034834841</Id>
					<Name><![CDATA[text12]]></Name>
					<X>-262</X><Y>1399</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Consumption or production]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1723034834843</Id>
					<Name><![CDATA[text9]]></Name>
					<X>-202</X><Y>1321</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electricity]]></Text>
					<Font>
						<Name>Arial</Name>
						<Size>14</Size>
						<Style>2</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1660731377984</Id>
			<Name><![CDATA[EnergySupplier]]></Name>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[Actor]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_actorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorSubgroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorGroup]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1660731377982</Id>
				<Name><![CDATA[1660731377982]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1660731377980</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1660731377983</CurrentLevel>
			<ConnectionsId>1660731377979</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1660746837357</Id>
					<Name><![CDATA[v_currentVariableElectricityPrice_eurpkWh]]></Name>
					<X>70</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660752591616</Id>
					<Name><![CDATA[v_currentBalanceClients_eur]]></Name>
					<Description><![CDATA[Bank account balance for all energy carriers traded with clients.

@author: Gillis
@since: Sprint 6]]></Description>
					<X>70</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660804951335</Id>
					<Name><![CDATA[v_totalElectricitySoldToClients_kWh]]></Name>
					<X>70</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660804979322</Id>
					<Name><![CDATA[v_totalElectricityBoughtFromClients_kWh]]></Name>
					<X>70</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660805212026</Id>
					<Name><![CDATA[v_currentBalanceNat_eur]]></Name>
					<X>70</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660805212029</Id>
					<Name><![CDATA[v_totalElectricitySoldToNat_kWh]]></Name>
					<X>70</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660805212031</Id>
					<Name><![CDATA[v_totalElectricityBoughtFromNat_kWh]]></Name>
					<X>70</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1660810211679</Id>
					<Name><![CDATA[v_currentNettElectricityVolume_kWh]]></Name>
					<X>70</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661173036699</Id>
					<Name><![CDATA[v_currentBalanceElectricityClients_eur]]></Name>
					<Description><![CDATA[Bank account balance for electricity traded with clients.

@author: Jorrit
@since: Sprint 6]]></Description>
					<X>70</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661173058952</Id>
					<Name><![CDATA[v_currentBalanceHeatClients_eur]]></Name>
					<Description><![CDATA[Bank account balance for heat traded with clients.

@author: Jorrit
@since: Sprint 6]]></Description>
					<X>70</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661173096820</Id>
					<Name><![CDATA[v_currentBalanceMethaneClients_eur]]></Name>
					<Description><![CDATA[Bank account balance for methane
@author: Jorrit
@since: Sprint 6]]></Description>
					<X>70</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1661174191671</Id>
					<Name><![CDATA[v_currentBalanceHydrogenClients_eur]]></Name>
					<Description><![CDATA[Bank account balance for hydrogen traded with clients.

@author: Jorrit
@since: Sprint 6]]></Description>
					<X>70</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1675335068922</Id>
					<Name><![CDATA[j_ActorData]]></Name>
					<X>70</X><Y>680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_ActorData]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1660736336144</Id>
					<Name><![CDATA[p_actorID]]></Name>
					<Description><![CDATA[Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-240</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660736336142</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660736336147</Id>
					<Name><![CDATA[p_actorType]]></Name>
					<Description><![CDATA[Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-240</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660736336145</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660736336150</Id>
					<Name><![CDATA[p_parentActorID]]></Name>
					<Description><![CDATA[Unique actor identifier in String format of a designated parent actor. This may be designated in Config-excel and is used to create an agent link with a higher lying agent (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660736336148</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660736336153</Id>
					<Name><![CDATA[p_parentActor]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[ConnectionOwner]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660736336151</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660746260066</Id>
					<Name><![CDATA[p_fixedElectricityPrice_eurpkWh]]></Name>
					<X>300</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660746260064</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660746283321</Id>
					<Name><![CDATA[p_fixedHeatPrice_eurpkWh]]></Name>
					<X>300</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660746283319</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660746306858</Id>
					<Name><![CDATA[p_fixedMethanePrice_eurpkWh]]></Name>
					<X>300</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660746306856</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660746679056</Id>
					<Name><![CDATA[p_fixedHydrogenPrice_eurpkWh]]></Name>
					<X>300</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660746679054</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660746710965</Id>
					<Name><![CDATA[p_variableElectricityPriceOverNational_eurpkWh]]></Name>
					<X>300</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660746710963</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1667921811994</Id>
					<Name><![CDATA[p_fixedFeedinTariff_eurpkWh]]></Name>
					<X>300</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1667921811992</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1671620607517</Id>
					<Name><![CDATA[p_salderenActive]]></Name>
					<X>300</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1671620607515</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660736336138</Id>
					<Name><![CDATA[f_connectToChild]]></Name>
					<X>790</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingChildNode]]></Name>
						<Type><![CDATA[Agent]]></Type>
					</Parameter>
					<Body><![CDATA[subConnections.connectTo(ConnectingChildNode);
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660736336141</Id>
					<Name><![CDATA[f_connectToParentActor]]></Name>
					<Description><![CDATA[Creates an agentLink in superConnection if a parentActorID is designated in the config-excel. Called from f_configureBackBone() in main for profiling reasons, so no parameters are given.

@param: none
@return: none
@since: Sprint 6
@author: HOUJ]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>780</X><Y>-40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( p_parentActorID != null ) {
	ConnectionOwner myParentActor = findFirst(main.pop_connectionOwners, p->p.p_actorID.equals(p_parentActorID)) ;
	if( myParentActor instanceof ConnectionOwner) {
		p_parentActor = myParentActor;
		superConnection.connectTo(myParentActor);
		myParentActor.f_connectToChild(this);
	}
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660743197178</Id>
					<Name><![CDATA[f_doEnergyTransaction]]></Name>
					<X>790</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[transactionVolume_kWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[contractType]]></Name>
						<Type><![CDATA[OL_ContractType]]></Type>
					</Parameter>
					<Body><![CDATA[double transactionCostClient_eur = 0;
double transactionCostNat_eur = 0;
/*switch (contractType) {
	case ELECTRICITY_FIXED:
			transactionCostClient_eur = transactionVolume_kWh * p_fixedElectricityPrice_eurpkWh;
			transactionCostNat_eur = - transactionVolume_kWh * v_currentVariableElectricityPrice_eurpkWh;
			v_totalElectricitySoldToClients_kWh += max(0,transactionVolume_kWh);
			v_totalElectricityBoughtFromClients_kWh -= min(0,transactionVolume_kWh);
			v_currentNettElectricityVolume_kWh += transactionVolume_kWh;
			v_currentBalanceElectricityClients_eur += transactionCostClient_eur;
		break;
	case ELECTRICITY_VARIABLE:
			transactionCostClient_eur = transactionVolume_kWh * (p_variableElectricityPriceOverNational_eurpkWh + v_currentVariableElectricityPrice_eurpkWh);
			transactionCostNat_eur = - transactionVolume_kWh * v_currentVariableElectricityPrice_eurpkWh;
			v_currentBalanceElectricityClients_eur += transactionCostClient_eur;
		break;
	case HEAT_FIXED:
			transactionCostClient_eur = transactionVolume_kWh * p_fixedHeatPrice_eurpkWh;
			transactionCostNat_eur = - transactionVolume_kWh * 0;
			v_currentBalanceHeatClients_eur += transactionCostClient_eur;
		break;
	case METHANE_FIXED:
			transactionCostClient_eur = transactionVolume_kWh * p_fixedMethanePrice_eurpkWh;
			transactionCostNat_eur = - transactionVolume_kWh * 0;
			v_currentBalanceMethaneClients_eur += transactionCostClient_eur;
		break;
	case HYDROGEN_FIXED:
			transactionCostClient_eur = transactionVolume_kWh * p_fixedHydrogenPrice_eurpkWh;
			transactionCostNat_eur = - transactionVolume_kWh * 0;
			v_currentBalanceHydrogenClients_eur += transactionCostClient_eur;
		break;
	default:
		throw new IllegalStateException("Invalid contract type: " + contractType);
}*/
v_currentBalanceClients_eur += transactionCostClient_eur;
return transactionCostClient_eur;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660746864022</Id>
					<Name><![CDATA[f_getVariableEnergyPrice]]></Name>
					<X>790</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return v_currentVariableElectricityPrice_eurpkWh;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660746926252</Id>
					<Name><![CDATA[f_updateEnergyPrice]]></Name>
					<X>790</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_currentVariableElectricityPrice_eurpkWh = energyModel.nationalEnergyMarket.f_getNationalElectricityPrice_eurpMWh()/1000;
v_currentNettElectricityVolume_kWh = 0;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660806140354</Id>
					<Name><![CDATA[f_updateFinances]]></Name>
					<X>790</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_totalElectricityBoughtFromNat_kWh += max(0,v_currentNettElectricityVolume_kWh);
v_totalElectricitySoldToNat_kWh -= min(0,v_currentNettElectricityVolume_kWh);
v_currentBalanceNat_eur -= v_currentNettElectricityVolume_kWh * v_currentVariableElectricityPrice_eurpkWh;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1660731377979</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1660736386946</Id>
					<Name><![CDATA[superConnection]]></Name>
					<Description><![CDATA[Link naar bovenliggende actor, bijv. een Coop, of energySupplier. Gebruikt om lid te worden van een Coop of aangesloten te zijn bij een energieleverancier.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>240</X><Y>-70</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1660736386948</Id>
					<Name><![CDATA[subConnections]]></Name>
					<Description><![CDATA[Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>240</X><Y>-40</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1660731790387</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1660731377983</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Line>
					<Id>1667918539063</Id>
					<Name><![CDATA[line4]]></Name>
					<X>770</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667918539066</Id>
					<Name><![CDATA[text4]]></Name>
					<X>820</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667918539068</Id>
					<Name><![CDATA[line5]]></Name>
					<X>760</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>40</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667918539070</Id>
					<Name><![CDATA[text6]]></Name>
					<X>740</X><Y>190</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>270.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Occuring]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667918539072</Id>
					<Name><![CDATA[line6]]></Name>
					<X>760</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>80</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667918539074</Id>
					<Name><![CDATA[text5]]></Name>
					<X>740</X><Y>90</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>270.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Init]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667919493893</Id>
					<Name><![CDATA[line]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-270</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667919493896</Id>
					<Name><![CDATA[text]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-240</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[ID & connections]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1667919510566</Id>
					<Name><![CDATA[line1]]></Name>
					<X>290</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>240</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1667919510568</Id>
					<Name><![CDATA[text1]]></Name>
					<X>380</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fixed tariffs]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1660731380915</Id>
			<Name><![CDATA[GridOperator]]></Name>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[Actor]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_actorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorSubgroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorGroup]]></Name>
				</Parameter>
			</Parameters>
			<StartupCode><![CDATA[energyModel.c_actors.add(this);]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1660731380913</Id>
				<Name><![CDATA[1660731380913]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1660731380911</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1660731380914</CurrentLevel>
			<ConnectionsId>1660731380910</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1665060534142</Id>
					<Name><![CDATA[v_congestionAllowanceLevel_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1665060582840</Id>
					<Name><![CDATA[v_congestionPriceConsumption_eurpkWh]]></Name>
					<Description><![CDATA[Euro per kW]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1665508504346</Id>
					<Name><![CDATA[v_congestionThreshold_fr]]></Name>
					<X>60</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1665508939525</Id>
					<Name><![CDATA[b_applyCongestionPriceWithConsumption]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1665508951785</Id>
					<Name><![CDATA[b_applyCongestionPriceWithProduction]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666560746828</Id>
					<Name><![CDATA[v_congestionPriceProduction_eurpkWh]]></Name>
					<Description><![CDATA[Euro per kW]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1675355743791</Id>
					<Name><![CDATA[j_ActorData]]></Name>
					<X>60</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_ActorData]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690962985581</Id>
					<Name><![CDATA[v_congestionPrice_eurpkWh]]></Name>
					<Description><![CDATA[Euro per kW]]></Description>
					<X>60</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.2]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1660736411315</Id>
					<Name><![CDATA[p_actorID]]></Name>
					<Description><![CDATA[Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-220</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660736411313</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660736411318</Id>
					<Name><![CDATA[p_actorType]]></Name>
					<Description><![CDATA[Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-220</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660736411316</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660736411321</Id>
					<Name><![CDATA[p_parentActorID]]></Name>
					<Description><![CDATA[Unique actor identifier in String format of a designated parent actor. This may be designated in Config-excel and is used to create an agent link with a higher lying agent (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-220</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660736411319</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1660736411324</Id>
					<Name><![CDATA[p_parentActor]]></Name>
					<Description><![CDATA[Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-220</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[ConnectionOwner]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1660736411322</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1674907095514</Id>
					<Name><![CDATA[p_capacitypricing_households_kW]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1674907095512</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1674907099647</Id>
					<Name><![CDATA[p_capacitypricing_households_eur]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1674907099645</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1674907106415</Id>
					<Name><![CDATA[p_hasCapacityPricing]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1674907106413</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675688426540</Id>
					<Name><![CDATA[p_hasCongestionPricing]]></Name>
					<X>60</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1675688426538</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1665076694603</Id>
					<Name><![CDATA[c_electricityGridNodes]]></Name>
					<X>700</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666594012871</Id>
					<Name><![CDATA[c_congestedGNProduction]]></Name>
					<X>720</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1666594046997</Id>
					<Name><![CDATA[c_congestedGNConsumption]]></Name>
					<X>720</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660736411309</Id>
					<Name><![CDATA[f_connectToChild]]></Name>
					<X>700</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingChildNode]]></Name>
						<Type><![CDATA[GridNode]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[energyType]]></Name>
						<Type><![CDATA[OL_EnergyCarrierType]]></Type>
					</Parameter>
					<Body><![CDATA[subConnections.connectTo( ConnectingChildNode );
if (energyType == OL_EnergyCarrierType.ELECTRICITY) {
	c_electricityGridNodes.add( ConnectingChildNode );
}
else {
	traceln( "f_connectToChild vanuit GridOperator voegt een type Node toe wat geen ELECTRICITY gridNOde is");
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660736411312</Id>
					<Name><![CDATA[f_connectToParentActor]]></Name>
					<Description><![CDATA[Creates an agentLink in superConnection if a parentActorID is designated in the config-excel. Called from f_configureBackBone() in main for profiling reasons, so no parameters are given.

@param: none
@return: none
@since: Sprint 6
@author: HOUJ]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-220</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( p_parentActorID != null ) {
	ConnectionOwner myParentActor = findFirst(main.pop_connectionOwners, p->p.p_actorID.equals(p_parentActorID)) ;
	if( myParentActor instanceof ConnectionOwner) {
		p_parentActor = myParentActor;
		superConnection.connectTo(myParentActor);
		myParentActor.f_connectToChild(this);
	}
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1664465199508</Id>
					<Name><![CDATA[f_updateCongestionTariff]]></Name>
					<X>700</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for( GridNode n : c_electricityGridNodes ){
	double currentLoad_kW = n.v_filteredLoadCongestionPricing_kW;
	
	if ( abs(currentLoad_kW) > v_congestionThreshold_fr * n.p_capacity_kW  ){
		n.v_congested = true;
		n.v_currentCongestionPrice_eurpkWh = signum(currentLoad_kW)*(abs(currentLoad_kW) / n.p_capacity_kW - v_congestionThreshold_fr ) / ( 1 - v_congestionThreshold_fr) * v_congestionPrice_eurpkWh;		
		n.f_setCongestionTariff(n.v_currentCongestionPrice_eurpkWh); 
		if (currentLoad_kW > 0) {
			n.v_congestionMode = "Overconsumption";
			//n.f_setCongestionTariff(n.v_currentCongestionPrice_eurpkWh); 
		} 
		else {
			n.v_congestionMode = "Overproduction";	
			//n.f_setCongestionTariff(-n.v_currentCongestionPrice_eurpkWh); 
		}
		if (!c_congestedGNConsumption.contains(n)){ c_congestedGNConsumption.add(n); }
	}
	else {
		if ( n.v_congested ){
			n.f_setCongestionTariff(0);
			n.v_congested = false;
			n.v_congestionMode = "No congestion atm";
			n.v_currentCongestionPrice_eurpkWh = 0;
			if (c_congestedGNProduction.contains(n)){ c_congestedGNProduction.remove(c_congestedGNProduction.indexOf(n));}
			if (c_congestedGNConsumption.contains(n)){ c_congestedGNConsumption.remove(c_congestedGNConsumption.indexOf(n));}
		}
	}
	
}

]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1660731380910</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1660736398362</Id>
					<Name><![CDATA[superConnection]]></Name>
					<Description><![CDATA[Link naar bovenliggende actor, bijv. een Coop, of energySupplier. Gebruikt om lid te worden van een Coop of aangesloten te zijn bij een energieleverancier.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>280</X><Y>-80</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1660736398364</Id>
					<Name><![CDATA[subConnections]]></Name>
					<Description><![CDATA[Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis]]></Description>
					<X>280</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>false</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1660731855349</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1660731380914</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1660731384415</Id>
			<Name><![CDATA[NationalEnergyMarket]]></Name>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[Actor]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_actorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorSubgroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorGroup]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1660731384413</Id>
				<Name><![CDATA[1660731384413]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1660731384411</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1660731384414</CurrentLevel>
			<ConnectionsId>1660731384410</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1660752725660</Id>
					<Name><![CDATA[v_currentVariableElectricityPrice_eurpMWh]]></Name>
					<X>60</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660738813066</Id>
					<Name><![CDATA[f_getNationalElectricityPrice_eurpMWh]]></Name>
					<X>60</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return v_currentVariableElectricityPrice_eurpMWh;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1660752725657</Id>
					<Name><![CDATA[f_updateEnergyPrice]]></Name>
					<X>60</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//energyModel.c_gridNodesNotTopLevel.get(0).p_capacity_kW
//double localBalanceTerm_eurpMWh = 200 * (energyModel.v_totalElectricPower_kW / energyModel.c_gridNodesNotTopLevel.get(0).p_capacity_kW);

v_currentVariableElectricityPrice_eurpMWh = energyModel.tf_dayAheadElectricityPricing_eurpMWh( energyModel.t_h + energyModel.p_timeStep_h);
]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1660731384410</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1660731880833</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1660731384414</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1663772408667</Id>
			<Name><![CDATA[GCHouse]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_connectToJ_EA(J_EA j_ea){
	f_connectToJ_EA_default(j_ea);
	f_connectTo_J_EA_House(j_ea);
}

/*@Override
public void f_operateFixedConsumptionAssets(){
	f_operateFixedConsumptionAssets_overwrite();
}*/

@Override
public void f_operateFlexAssets(){
	f_operateFlexAssets_overwrite();
}

@Override
public void f_manageHeatingAssets(){
	f_manageHeatingAssets_overwrite();
}

@Override 
public void f_manageCharging(){
	f_manageCharging_overwrite();
}

/*@Override 
public void f_chargeOnPrice(double a, double b){
	f_chargeOnPrice_overwrite(a,b);
}*/

@Override
public void f_batteryManagementPrice(double currentBatteryStateOfCharge) {
	f_batteryManagementPrice_overwrite(currentBatteryStateOfCharge);
}

@Override
public void f_simpleCharging(){
	f_simpleCharging_overwrite();
}
]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1663772408665</Id>
				<Name><![CDATA[1663772408665]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1663772408663</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1663772408666</CurrentLevel>
			<ConnectionsId>1663772408662</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1674397034293</Id>
					<Name><![CDATA[v_vehicleSOC_fr]]></Name>
					<X>1120</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1674414939371</Id>
					<Name><![CDATA[v_vehicleChargingNeed]]></Name>
					<X>1120</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_EVChargingNeed]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1674899648649</Id>
					<Name><![CDATA[v_hpPreviousConsumptionLevel]]></Name>
					<X>2010</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1674900257329</Id>
					<Name><![CDATA[v_dailyHPConsumption_kWh]]></Name>
					<X>2010</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1675025488988</Id>
					<Name><![CDATA[v_currentPriceLevel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1120</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_priceLevels]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677597726836</Id>
					<Name><![CDATA[v_copHeatpump]]></Name>
					<X>2020</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690363061408</Id>
					<Name><![CDATA[v_electricHobConsumption_kWh]]></Name>
					<Description><![CDATA[This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information]]></Description>
					<X>150</X><Y>1520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704447485797</Id>
					<Name><![CDATA[v_gasHeatingCost_eurpkWh_TEMPORARY]]></Name>
					<X>1460</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704447485799</Id>
					<Name><![CDATA[v_eHeatingCost_eurpkWh_TEMPORARY]]></Name>
					<X>1460</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704447555064</Id>
					<Name><![CDATA[v_tempSetpoint_degC]]></Name>
					<X>1460</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[19]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704447555067</Id>
					<Name><![CDATA[v_currentIndoorTemp_degC]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1460</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704447555069</Id>
					<Name><![CDATA[v_dayTempSetpoint_degC]]></Name>
					<X>1460</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[18]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704447555071</Id>
					<Name><![CDATA[v_nightTempSetpoint_degC]]></Name>
					<X>1460</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[18]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704447555073</Id>
					<Name><![CDATA[v_heatingOn_time]]></Name>
					<X>1460</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[8]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704447555075</Id>
					<Name><![CDATA[v_heatingOff_time]]></Name>
					<X>1460</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[23]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1674464900101</Id>
					<Name><![CDATA[p_minEVChargeTarget_fr]]></Name>
					<X>540</X><Y>640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.3]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1674464900099</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675032836511</Id>
					<Name><![CDATA[p_householdEV]]></Name>
					<X>640</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAEV]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1675032836509</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1675169216646</Id>
					<Name><![CDATA[p_minChargingPower_kW]]></Name>
					<X>540</X><Y>660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[2.0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1675169216644</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1678703448389</Id>
					<Name><![CDATA[p_smartChargingPowerAttenuation_fr]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>250</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[2.0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1678703448387</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1702369144256</Id>
					<Name><![CDATA[p_hasElectricHob]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>540</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1702369144254</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1702369144261</Id>
					<Name><![CDATA[p_smartHeatingEnabled]]></Name>
					<X>540</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1702369144259</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1702369144264</Id>
					<Name><![CDATA[p_pricelevelLowDifFromAvg_eurpkWh]]></Name>
					<X>540</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1702369144262</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1702369144267</Id>
					<Name><![CDATA[p_pricelevelHighDifFromAvg_eurpkWh]]></Name>
					<X>540</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1702369144265</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1702369144270</Id>
					<Name><![CDATA[p_heatingKickinTreshold_degC]]></Name>
					<Description><![CDATA[[degrees]]]></Description>
					<X>540</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1702369144268</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1717323052486</Id>
					<Name><![CDATA[p_bouwjaar]]></Name>
					<X>50</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1717323052484</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1717417303620</Id>
					<Name><![CDATA[p_nageisoleerd]]></Name>
					<X>250</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1717417303618</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1722350833847</Id>
					<Name><![CDATA[p_eigenOprit]]></Name>
					<X>440</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1722350833845</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726685123865</Id>
					<Name><![CDATA[p_cookingMethod]]></Name>
					<X>250</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_HouseholdCookingMethod]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_HouseholdCookingMethod.NONE]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726685123863</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1674899601674</Id>
					<Name><![CDATA[e_measureHeatpump]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>2010</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_HOUR]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1674979200000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[0.99]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[if( p_primaryHeatingAsset.j_ea instanceof J_EAConversionHeatPump ){
	v_dailyHPConsumption_kWh = ((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).totalElectricityConsumed_kWh - v_hpPreviousConsumptionLevel;
	v_hpPreviousConsumptionLevel = ((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).totalElectricityConsumed_kWh;
}]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1664441996771</Id>
					<Name><![CDATA[f_manageHeatingAssets_overwrite]]></Name>
					<X>810</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_hotwaterDemand_kW = p_DHWAsset != null ? p_DHWAsset.heatConsumption_kW : 0;
setHeatingTargetTemp();
 
switch (p_heatingType) {	
	case GASBURNER:
		f_heatWithGasburner( );
	break;
	
	case HEATPUMP_AIR:
		f_heatWithHeatpump( );
	break;
	
	case HEATPUMP_GASPEAK:
		f_heatWithHybridHeatpump();
	break;
	
	case HEATPUMP_BOILERPEAK:
		traceln("House " + p_gridConnectionID + " has anunsupported heating asset!");
	break;
	
	case DISTRICTHEAT:
		f_heatWithDistrictHeat();
	break;
	
	default:
		traceln("Ubsupported heatingtype in household");
	break;
}

f_manageCookingTracker();

if (p_BuildingThermalAsset != null && p_primaryHeatingAsset != null) {
	double[] flowsArray = p_primaryHeatingAsset.f_updateAllFlows(p_primaryHeatingAsset.v_powerFraction_fr);
	p_BuildingThermalAsset.f_updateAllFlows(p_BuildingThermalAsset.v_powerFraction_fr);
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1664963959146</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite]]></Name>
					<X>800</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double availablePowerAtPrice_kW = p_contractedDeliveryCapacity_kW;
if (l_ownerActor.getConnectedAgent()!=null){
	v_currentElectricityPriceConsumption_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getElectricityPrice( v_currentPowerElectricity_kW );
	availablePowerAtPrice_kW = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAvailablePowerAtPrice( v_currentPowerElectricity_kW );
} else {
	v_currentElectricityPriceConsumption_eurpkWh = 0.3;
}

v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_currentElectricityPriceConsumption_eurpkWh - v_electricityPriceLowPassed_eurpkWh );

f_manageHeatingAssets();

if( p_householdEV != null){
	double availableCapacityFromBatteries = p_batteryAsset == null ? 0 : p_batteryAsset.getCapacityAvailable_kW(); 
	double availableChargingCapacity = p_contractedDeliveryCapacity_kW + availableCapacityFromBatteries - v_currentPowerElectricity_kW;
	//f_maxPowerCharging( max(0, availableChargingCapacity));
	f_manageCharging();
	//v_currentPowerElectricity_kW += v_evChargingPowerElectric_kW;
}

if( p_batteryAsset != null){
	switch (p_batteryOperationMode){
		case HOUSEHOLD_LOAD:
			f_batteryManagementBalance(v_batterySOC_fr);
		break;
		case PRICE:
			f_batteryManagementPrice(v_batterySOC_fr);
		break;
		default:
		break;
	}
	double[] arr = p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);
	//v_batteryPowerElectric_kW =  arr[4] - arr[0];
	//v_currentPowerElectricity_kW +=v_batteryPowerElectric_kW;
	v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
}

v_currentLoadLowPassed_kW += v_lowPassFactorLoad_fr * ( v_currentPowerElectricity_kW - v_currentLoadLowPassed_kW ); 

if ( p_batteryAsset != null ) {
	if ( p_batteryAsset.getStorageCapacity_kWh() != 0.0) {
		v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
		if( p_batteryOperationMode == OL_BatteryOperationMode.HOUSEHOLD_LOAD){
			f_batteryManagementBalance(v_batterySOC_fr);
//		} else if (p_batteryOperationMode == OL_BatteryOperationMode.BALANCE_SUPPLY){ // Tries to minimize supply peaks
//			f_batteryManagementBalanceSupply(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.PRICE){
			f_batteryManagementPrice(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.NODAL_PRICING){
			f_batteryManagementNodalPricing(v_batterySOC_fr);
		}

		double[] flowsArray = p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);	
		//v_batteryPowerElectric_kW = flowsArray[4] - flowsArray[0];//p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
		//v_batteryPowerElectric_kW = p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
		//v_currentPowerElectricity_kW += v_batteryPowerElectric_kW;
	}
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1665498948452</Id>
					<Name><![CDATA[f_connectToChild_overwrite]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>780</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingParentNode]]></Name>
						<Type><![CDATA[Agent]]></Type>
					</Parameter>
					<Body><![CDATA[//assetLinks.connectTo(ConnectingParentNode);
EnergyAsset EA = (EnergyAsset) ConnectingParentNode;
J_EA j_instance = EA.j_ea;

//dont add asset to list if it is not a tangible asset (i.e. a heating model for buildings) [GH] How is this not a tangible asset??
//if(! (j_instance instanceof J_EAStorageHeat && ((J_EAStorageHeat)j_instance).heatStorageType == OL_EAStorageTypes.HEATMODEL_BUILDING)) {
	c_energyAssets.add(EA);
//}

if (j_instance instanceof J_EAConsumption) {
	//c_consumptionAssets.add(EA);
	if( EA.p_energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION ){
	 	//p_DHWAsset = EA;
 	}
 	else if (EA.j_ea instanceof J_EADieselVehicle) {
		//c_vehicleAssets.add( EA );
		//c_dieselVehicles.add( EA );
		//c_vehicleAssets.get( v_vehicleIndex ).v_powerFraction_fr = 1; // what's this??
		/*if (c_mobilityTrackers.size() == 0) {
			MobilityTracker m = main.add_mobilityTrackers();
			c_mobilityTrackers.add( m );
			m.p_gridConnection = this;
			m.p_mobilityPatternType = OL_MobilityPatternType.PRIVATE_VEHICLE;
			m.p_vehicleIndex = v_vehicleIndex;
			m.p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );
			m.p_vehicleInstance = (J_EADieselVehicle)EA.j_ea;
			//m.p_vehicleInstance = (J_EADieselVehicle)m.p_vehicleInstance;
			
			m.f_getData();
		} else {
			c_mobilityTrackers.get(v_vehicleIndex).p_vehicleIndex = v_vehicleIndex;
			c_mobilityTrackers.get(v_vehicleIndex).p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );
			c_mobilityTrackers.get(v_vehicleIndex).p_vehicleInstance = (J_EADieselVehicle)EA.j_ea;
		}
		((J_EADieselVehicle)EA.j_ea).setMobilityTracker( c_mobilityTrackers.get(v_vehicleIndex) );
		*/
	
		//v_vehicleIndex ++;
	}
 } 
else if (j_instance instanceof J_EAProduction ) {
	//c_productionAssets.add(EA);
	if (EA.p_energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {
		v_hasPV = true;
		traceln("PV system connected to House!");
	}
} 
else if (j_instance instanceof J_EAStorage ) {
	//traceln("storage asset type connecting to House: " + j_instance);
	if (j_instance instanceof J_EABuilding) {
		
		//p_BuildingThermalAsset = EA;

		if ( p_isolationLabel != null & p_gridConnectionType != null){ // Get building thermals from lookup table when isolation label and house type are available
			double lossFactor_WpK2 = main.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_isolationLabel.name()).path("lossFactor_WpK").doubleValue();
			double heatCapacity_JpK2 = main.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_isolationLabel.name()).path("heatCapacity_JpK").doubleValue();
			((J_EABuilding)EA.j_ea).lossFactor_WpK = lossFactor_WpK2;
			((J_EABuilding)EA.j_ea).heatCapacity_JpK = heatCapacity_JpK2;
			traceln("House thermal model updated!");
			traceln("House type: %s, energy label: %s", p_gridConnectionType, p_isolationLabel);
			traceln("lossfactor %s, heatcapacity %s", lossFactor_WpK2, heatCapacity_JpK2);
		}
		//traceln( "Household heat model has kWh: " + ((J_EAStorageHeat) j_instance).getStorageCapacity());
	}	
	else if (j_instance instanceof J_EAEV) {
		//c_storageAssets.add(EA);
		//c_vehicleAssets.add( j_instance );
		//EA.v_powerFraction_fr = 1;
		/*if (c_mobilityTrackers.size() == 0) {
			MobilityTracker m = main.add_mobilityTrackers();
			c_mobilityTrackers.add( m );
			m.p_vehicleIndex = v_vehicleIndex;
			m.p_gridConnection = this;
			m.p_energyAsset = EA;
			m.p_vehicleInstance = (J_EAEV)EA.j_ea;

			m.p_mobilityPatternType = PRIVATE_VEHICLE;
			m.f_getData();
		} else {
			traceln("Vehicle index in House " + p_gridConnectionID + " is: " + v_vehicleIndex);
			c_mobilityTrackers.get(v_vehicleIndex).p_vehicleIndex = v_vehicleIndex;
			c_mobilityTrackers.get(v_vehicleIndex).p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );
			c_mobilityTrackers.get(v_vehicleIndex).p_vehicleInstance = EA.j_ea;
		}	
		((J_EAEV)EA.j_ea).setMobilityTracker( c_mobilityTrackers.get(v_vehicleIndex) );
		*/
		//p_householdEV = EA;
		//v_vehicleIndex ++;
	}
	else if(j_instance instanceof J_EAStorageElectric && ((J_EAStorageElectric)j_instance).getStorageCapacity_kWh() !=0) {
		//p_batteryAsset = EA;
		//c_storageAssets.add(EA);
		v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
	}
	else if ( j_instance instanceof J_EAStorageHeat ) {
			if ( ((J_EAStorageHeat)j_instance).heatStorageType == OL_EAStorageTypes.HEATBUFFER ) {
				//c_storageAssets.add(EA);
				//p_heatBuffer = EA;				
			//traceln( "Heatbuffer has kWH: " +((J_EAStorageHeat) j_instance).getStorageCapacity());		
			}
	} 
	else{
		traceln(getName() + "storage asset create that cannot be identified (i.e. its not an EV and not an heatstorage");
	}
} 
else if (j_instance instanceof J_EAConversion) {
	c_conversionAssets.add((J_EAConversion)EA.j_ea );
	if (EA.p_energyAssetType == OL_EnergyAssetType.GAS_BURNER || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet || EA.j_ea instanceof J_EAConversionElectricHeater ) {
		switch (p_heatingType) {
        	case HEATPUMP_AIR:
        		p_primaryHeatingAsset = (J_EAConversion)EA.j_ea;
        	break;
        	case HEATPUMP_GASPEAK:
				p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)EA.j_ea : p_primaryHeatingAsset;
	            p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)EA.j_ea : p_secondaryHeatingAsset;
            break;
            case HEATPUMP_BOILERPEAK:    // ambigue wat we met boiler bedoelen; eboiler of grootschalige DH_boiler = gasburner!
                p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)EA.j_ea : p_primaryHeatingAsset;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)EA.j_ea : p_secondaryHeatingAsset;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionElectricHeater? (J_EAConversion)EA.j_ea : p_secondaryHeatingAsset;                                          
            break;
            case GASBURNER:
                p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)EA.j_ea : p_primaryHeatingAsset;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasCHP? (J_EAConversion)EA.j_ea : p_secondaryHeatingAsset;
            break;
            case DISTRICTHEAT:
                if( EA.j_ea instanceof J_EAConversionHeatDeliverySet ){
					p_primaryHeatingAsset = (J_EAConversion)EA.j_ea;
				}
				else {
					p_secondaryHeatingAsset = (J_EAConversion)EA.j_ea;
					// set water/water heatpump source energy-asset
					//if( EA.j_ea instanceof J_EAConversionHeatPump && ((J_EAConversionHeatPump)EA.j_ea).getAmbientTempType().equals("WATER") && p_primaryHeatingAsset.j_ea instanceof J_EAConversionHeatDeliverySet ) {
					if( EA.j_ea instanceof J_EAConversionHeatPump ){	
						//EA.p_linkedSourceEnergyAsset = p_primaryHeatingAsset; Still need to rebuild link with class-based energy assets!!
						//EA.j_ea.updateAmbientTemperature( EA.p_linkedSourceEnergyAsset.j_ea.getCurrentTemperature() );
					}
				}	
            break;
            default: throw new IllegalStateException("Invalid DistrictHeating HeatingType: " + p_heatingType);
      	}
    }
	else if ( EA.p_energyAssetType == OL_EnergyAssetType.GAS_PIT){
		//f_connectToJ_EA(EA.j_ea);
		//p_hasElectricHob = false;
	}
	else if (EA.p_energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB) {
		//f_connectToJ_EA(EA.j_ea);
		//p_hasElectricHob = true;
	}
}

else {
	traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingParentNode.getId() + " is of unknown type or null! ");
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669203453155</Id>
					<Name><![CDATA[f_createThermalStorageModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>770</X><Y>-30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[OL_EAPresetStorageAssets isolationLevel;
switch(p_isolationLabel) {
	case A:
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_A;
	break;
	case B:
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_B;
	break;
	case C:
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_C;
	break;
	case D:
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_D;
	break;
	case E:
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_E;
	break;
	case F:
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_F;
	break;
	case G:
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_G;
	break;
	default:
		traceln("f_createPresetStorageHeat: house without invalid label, label set to C");
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_C;
	break;
}

//Get preset input from DB
List< Tuple > data = selectFrom( storage_assets ).where( storage_assets.name.eq( isolationLevel ) ).
list();

OL_EnergyAssetType assetType = null;
String energyAssetPresetName = isolationLevel.toString();
double capacityHeat_kW = 0;
double lossFactor_WpK = 0;
double heatCapacity_JpK = 0;
double minTemperature_degC = 0;
double maxTemperature_degC = 0;
double setTemperature_degC = 0;
String ambientTempType = "";


for( Tuple tup : data ) {
	assetType = tup.get( storage_assets.energy_asset_type );
	capacityHeat_kW = tup.get( storage_assets.capacity_heat_kw );
	lossFactor_WpK =  tup.get( storage_assets.loss_factor_wpk );
	heatCapacity_JpK =  tup.get( storage_assets.heat_capacity_jpk );
	minTemperature_degC = tup.get( storage_assets.min_temp_degc);
	maxTemperature_degC = tup.get( storage_assets.max_temp_degc);
	setTemperature_degC = tup.get( storage_assets.set_temp_degc);
	ambientTempType = tup.get( storage_assets.ambient_temp_type);
}

EnergyAsset e = main.add_pop_energyAssets( null, p_gridConnectionID,  assetType, isolationLevel.toString() );
e.j_ea = new J_EAStorageHeat(e, OL_EAStorageTypes.HEATMODEL_BUILDING, capacityHeat_kW, lossFactor_WpK, energyModel.p_timeStep_h, setTemperature_degC , minTemperature_degC, maxTemperature_degC, setTemperature_degC, heatCapacity_JpK, ambientTempType);
e.f_connectToParentNode( this );
main.c_storageAssets.add(e);
main.c_ambientAirDependentAssets.add(e);

// update static ambient temperature once for underground types
if( ambientTempType != null && ambientTempType.equals("GROUND") ) {
	e.j_ea.updateAmbientTemperature( main.p_undergroundTemperature_degC );
}
if( ambientTempType != null && ambientTempType.equals("AIR") ) {
	e.j_ea.updateAmbientTemperature( main.v_currentAmbientTemperature_degC );
}

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1674402121915</Id>
					<Name><![CDATA[f_chargeOnPrice_overwrite]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>830</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentElectricityPriceConsumption_eurpkWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[availablePowerOnGC_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//J_EAEV EV_instance = (J_EAEV)p_householdEV.j_ea;

double chargingRatio = 0.0; // needs to be set at zero! 
double powerAvailableAtPrice_kW = 0;
double powerAvailableAtLastLoop_kW = 0;
double currentPowerDrawn_kW = v_currentPowerElectricity_kW;
boolean continueLoop = true;
double maxChargingPower_kW = p_householdEV.getElectricCapacity_kW();
ConnectionOwner owner = (ConnectionOwner)l_ownerActor.getConnectedAgent();
double electricityPrice_eurpkWh = 0;
String lastLoopsPriceLevel = "";
OL_priceLevels priceLevel;
int index = 0; // purely to not let loop go wild, if something goes wrong


if( p_householdEV.getAvailability() && p_householdEV.chargingNeed != OL_EVChargingNeed.NONE ){
	while ( continueLoop && index < 5 ){	
		powerAvailableAtPrice_kW += owner.f_getAvailablePowerAtPrice( currentPowerDrawn_kW );
		electricityPrice_eurpkWh = owner.f_getElectricityPrice( currentPowerDrawn_kW );
		priceLevel = f_getPriceLevel( electricityPrice_eurpkWh );
		
		if (powerAvailableAtPrice_kW > p_minChargingPower_kW){ // only charge if there is at least 2 OR 1 kW availablE
			// SCENARIO LOW CHARGING NEED -> Only when price is low
			if ( p_householdEV.chargingNeed == OL_EVChargingNeed.LOW) { 
				if( priceLevel == OL_priceLevels.LOW ) {
					if (powerAvailableAtPrice_kW >= p_householdEV.getElectricCapacity_kW() / p_smartChargingPowerAttenuation_fr ){
						chargingRatio = 1 / p_smartChargingPowerAttenuation_fr;
						continueLoop = false;
					}
					else{
						powerAvailableAtLastLoop_kW = powerAvailableAtPrice_kW;
						currentPowerDrawn_kW += powerAvailableAtPrice_kW;
						lastLoopsPriceLevel = "low";
					}
				}
				else if ( lastLoopsPriceLevel.equals("low")) {
					chargingRatio = min( powerAvailableAtLastLoop_kW, p_householdEV.getElectricCapacity_kW() ) / p_householdEV.getElectricCapacity_kW();
					continueLoop = false;
				}
				else {
					continueLoop = false;
				}
			}
			// SCENARIO MEDIUM CHARGING NEED -> Only when price is low or a bit when medium
			else if ( p_householdEV.chargingNeed == OL_EVChargingNeed.MEDIUM){
				if(  priceLevel == OL_priceLevels.LOW) { 
					if (powerAvailableAtPrice_kW >= p_householdEV.getElectricCapacity_kW() ){
						chargingRatio = 1 ;
						continueLoop = false;
					}
					else{
						powerAvailableAtLastLoop_kW = powerAvailableAtPrice_kW;
						currentPowerDrawn_kW += powerAvailableAtPrice_kW;
						lastLoopsPriceLevel = "low";
					}
				}
				else if(  priceLevel == OL_priceLevels.MEDIUM ) {   
					if( lastLoopsPriceLevel.equals("low") && powerAvailableAtLastLoop_kW > p_minChargingPower_kW ) { // charge what you can at low (/free) price and a bit on medium price
						chargingRatio = powerAvailableAtLastLoop_kW / p_householdEV.getElectricCapacity_kW() + p_householdEV.getElectricCapacity_kW() / 4;
						continueLoop = false;

					}
					else {	//hier zou je nog een extra min() statement bij kunnen zetten die het minimale neemt van de huidige min statment en powerAvailableAtPrice_kW, echter, komt hoogstwaarschijnlijk niet voor (1/4 van laadsnelheid is inprincipe altijd minder dan 2 + 'x' kW.). Ook is het geen ramp om HEEEEEL sporadisch op hoge prijs te laden. 
						chargingRatio = p_householdEV.getElectricCapacity_kW() / 4 ; //charge slow, if there is no hurry and price is average
						continueLoop = false;
					}
				}
				else if (lastLoopsPriceLevel.equals("low") && powerAvailableAtLastLoop_kW > p_minChargingPower_kW ){
					chargingRatio = powerAvailableAtLastLoop_kW / p_householdEV.getElectricCapacity_kW();
					continueLoop = false;
				}
				else{
					continueLoop = false;
				}
			}
			// SCENARIO HIGH CHARGING NEED -> charge full power, otherwise the EV will not get full
			else {
				chargingRatio = 1.0; // Hier kan er boven de gridconnectie geladen worden. Zeker als je 11 kW laders hebt met een warmtepomp erbij
				continueLoop = false;
			}
		}
		else { // Als er minder dan 2 kW beschikbaar is in deze prijsband (i.e. huidige loop), ga nog een keer door de loop heen in de volgende prijsband
			powerAvailableAtLastLoop_kW = powerAvailableAtPrice_kW;
			currentPowerDrawn_kW += powerAvailableAtPrice_kW;
		}
		index ++;
	}
}
if( p_householdEV.chargingNeed != OL_EVChargingNeed.HIGH){ //unless the charging need is high, limit the charging speed to grid connection.
	chargingRatio = min(1, min( availablePowerOnGC_kW / p_householdEV.getElectricCapacity_kW(), chargingRatio));
}
p_householdEV.f_updateAllFlows( chargingRatio );
v_evChargingPowerElectric_kW += p_householdEV.electricityConsumption_kW - p_householdEV.electricityProduction_kW;

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1675014184707</Id>
					<Name><![CDATA[f_manageCharging_overwrite]]></Name>
					<X>810</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double availableCapacityFromBatteries = p_batteryAsset == null ? 0 : p_batteryAsset.getCapacityAvailable_kW(); 
//double availableChargingCapacity = v_allowedCapacity_kW + availableCapacityFromBatteries - v_currentPowerElectricity_kW;
double availableChargingCapacity = p_contractedDeliveryCapacity_kW + availableCapacityFromBatteries - v_currentPowerElectricity_kW;
v_vehicleSOC_fr = p_householdEV.getCurrentStateOfCharge();

switch (p_chargingAttitudeVehicles) {
	case SIMPLE:
		f_simpleCharging();
	break;
	case CHEAP:
		f_chargeOnPrice( v_currentElectricityPriceConsumption_eurpkWh, max(0, availableChargingCapacity));
	break;	
	case V2G:
		//v_currentElectricityPriceConsumption_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getElectricityPrice(p_connectionCapacity_kW); 
		//v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_currentElectricityPriceConsumption_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
		f_chargeOnPrice_V2G( v_currentElectricityPriceConsumption_eurpkWh, max(0, availableChargingCapacity));
	break;	
	default:
		traceln("Incorrect charging mode in household @f_manageCharging_overwrite");
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1675033218897</Id>
					<Name><![CDATA[f_simpleCharging_overwrite]]></Name>
					<Description><![CDATA[Charging when arriving home, not taking grid limits into account]]></Description>
					<X>830</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
double powerFraction_fr = 0;
if( p_householdEV.getCurrentStateOfCharge() < 1 ) {
	powerFraction_fr = 1;
	/*if ( p_hasSmartFlexAssets ){
		ConnectionOwner owner = ((ConnectionOwner)l_ownerActor.getConnectedAgent());
		if (! owner.v_currentCongestionType.equals("Overconsumption") && owner.p_capacityTariffApplicable ){
			chargingRatio = min (1, owner.p_capacityLevel_kW / p_householdEV.getElectricCapacity_kW()); // dont charge faster than the congestion level (although with household demand power drawn will be slightly higher)
		}
	}//*/
}
double[] flowsArray = p_householdEV.f_updateAllFlows(powerFraction_fr);
//v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];//p_householdEV.electricityConsumption_kW - p_householdEV.electricityProduction_kW;
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1675034695162</Id>
					<Name><![CDATA[f_determineChargingDemandOfEV]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//J_EAEV EVinstance = (J_EAEV)p_householdEV;
if( p_householdEV != null && p_chargingAttitudeVehicles == OL_ChargingAttitude.CHEAP ){
	if(! p_householdEV.getAvailability() ){ // not at home
		p_householdEV.chargingNeed = OL_EVChargingNeed.EV_NOT_AVAILABLE;
	}
	else if( p_householdEV.getCurrentStateOfCharge() >= 1){ // is full
		p_householdEV.chargingNeed = OL_EVChargingNeed.NONE;
	}
	else { // could use some charging
		double chargeNeedForNextTrip_kWh = max(0, p_householdEV.tripTracker.v_energyNeedForNextTrip_kWh + p_householdEV.getStorageCapacity_kWh() * (p_minEVChargeTarget_fr - p_householdEV.getCurrentStateOfCharge()));
		double timeToNextTrip_min = p_householdEV.tripTracker.v_nextEventStartTime_min - energyModel.t_h*60;
		double chargeDeadline_min = floor((p_householdEV.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / p_householdEV.getElectricCapacity_kW()) / energyModel.p_timeStep_h) * 60 * energyModel.p_timeStep_h;
		if ( chargeNeedForNextTrip_kWh == 0) { 
			p_householdEV.chargingNeed = OL_EVChargingNeed.LOW;
		}
		else if (energyModel.t_h*60 < chargeDeadline_min ){
			//traceln(energyModel.t_h*60 + ", " + chargeDeadline_min);
			//traceln(chargeNeedForNextTrip_kWh);
			p_householdEV.chargingNeed = OL_EVChargingNeed.MEDIUM;
		}
		else {
			p_householdEV.chargingNeed = OL_EVChargingNeed.HIGH;
		}
	}
	v_vehicleChargingNeed = p_householdEV.chargingNeed;
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1676477303264</Id>
					<Name><![CDATA[f_heatWithHeatpump]]></Name>
					<X>1700</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double powerFraction_heatBuffer_fr = 0;
double powerFraction_heatPump_fr = 0;
double avgElectricityPrice_eurpkWh = 10;
J_EAConversionHeatPump hp = (J_EAConversionHeatPump)p_primaryHeatingAsset;
v_copHeatpump = hp.getCOP();


if ( p_smartHeatingEnabled ) {
	avgElectricityPrice_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAveragedElectricityPrice( v_currentPowerElectricity_kW, hp.getElectricCapacity_kW() );
	//traceln("avg electircity rprice for HP: " + avgElectricityPrice_eurpkWh);
}

//heat the buffer if it requires heat
if ( p_heatBuffer != null ){
	if ( p_heatBuffer.requiresHeat ){
		powerFraction_heatPump_fr = 1;
		powerFraction_heatBuffer_fr = hp.getHeatCapacity_kW() / p_heatBuffer.getHeatCapacity_kW() ;
		//traceln(getName() + " heat buffer cus of need");
	} else if( p_smartHeatingEnabled && avgElectricityPrice_eurpkWh < v_electricityPriceLowPassed_eurpkWh - p_pricelevelLowDifFromAvg_eurpkWh
		//also heat the buffer if the price is cheap, the buffer has some room and the vehicle does not need charging
		&& p_heatBuffer.getCurrentStateOfCharge() < 0.7)
	{
		if( p_householdEV == null ){
			powerFraction_heatPump_fr = 1;
			powerFraction_heatBuffer_fr = hp.getHeatCapacity_kW() / p_heatBuffer.getHeatCapacity_kW();
		} else if (p_householdEV.chargingNeed != OL_EVChargingNeed.HIGH){
			powerFraction_heatPump_fr = 1;
			//traceln("heat buffer cus cheap");
			powerFraction_heatBuffer_fr = hp.getHeatCapacity_kW() / p_heatBuffer.getHeatCapacity_kW();
		}
	}
	//reduce the powerfraction in the buffer with the hot water demand.
	powerFraction_heatBuffer_fr += -v_hotwaterDemand_kW / p_heatBuffer.getHeatCapacity_kW();
}

//heat the house
if( powerFraction_heatPump_fr == 0 ){ // Why this check? <- to make sure the heatpump is only used for househeating if it is not ALREADY heating the buffer (Peter)
	if (p_BuildingThermalAsset.getCurrentTemperature() < v_tempSetpoint_degC - p_heatingKickinTreshold_degC ) {
		powerFraction_heatPump_fr = 1; 
		p_BuildingThermalAsset.v_powerFraction_fr = hp.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();
	} 
	else if( p_smartHeatingEnabled && avgElectricityPrice_eurpkWh < v_electricityPriceLowPassed_eurpkWh - p_pricelevelLowDifFromAvg_eurpkWh
		&& p_BuildingThermalAsset.getCurrentTemperature() < v_tempSetpoint_degC + 1) {
		//also heat the house if the price is cheap, the the house is colder than desired + 1 and the vehicle does not need charging
		if( p_householdEV == null ){
			powerFraction_heatPump_fr = 1;
			p_BuildingThermalAsset.v_powerFraction_fr = hp.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();
		} 
		else if (p_householdEV.chargingNeed != OL_EVChargingNeed.HIGH){ // only use heatpump if the vehicle is not about to charge
			powerFraction_heatPump_fr = 1;
			//traceln("heat house cus of cheap");
			p_BuildingThermalAsset.v_powerFraction_fr = hp.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();
		}
	} 
	else {
		p_BuildingThermalAsset.v_powerFraction_fr = 0;
	}
} 
else {
	p_BuildingThermalAsset.v_powerFraction_fr = 0; // Whut?
}
if ( p_heatBuffer != null ){
	p_heatBuffer.v_powerFraction_fr = powerFraction_heatBuffer_fr;
	p_heatBuffer.f_updateAllFlows(powerFraction_heatBuffer_fr);
}
p_primaryHeatingAsset.v_powerFraction_fr = powerFraction_heatPump_fr;
//traceln( "heatpumpt power fraction: " + powerFraction_heatPump_fr);
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1676976246060</Id>
					<Name><![CDATA[f_heatWithHybridHeatpump]]></Name>
					<X>1700</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump & p_secondaryHeatingAsset instanceof J_EAConversionGasBurner) { // Heatpump and gasburner, switch based on heatpump COP)
	J_EAConversionHeatPump HP = (J_EAConversionHeatPump)p_primaryHeatingAsset;
	v_copHeatpump = HP.getCOP();
	if (p_BuildingThermalAsset.getCurrentTemperature() < v_tempSetpoint_degC - p_heatingKickinTreshold_degC) {
		//HP.updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! <-- waarom dit gebeurt al in de main (peter 21-02-23)
		boolean gasCheaper = f_calcCheapestHeatingPrice();
		if ( gasCheaper ) { // heat with gas
			traceln("gas is cheaper");
			double powerDemand_kW = v_hotwaterDemand_kW + (v_tempSetpoint_degC - p_BuildingThermalAsset.getCurrentTemperature()) * p_BuildingThermalAsset.getHeatCapacity_JpK() / 3.6e6;
			p_primaryHeatingAsset.v_powerFraction_fr = 0;
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_secondaryHeatingAsset.getHeatCapacity_kW());
			p_BuildingThermalAsset.v_powerFraction_fr = (p_secondaryHeatingAsset.v_powerFraction_fr * p_secondaryHeatingAsset.getHeatCapacity_kW() - v_hotwaterDemand_kW ) / p_BuildingThermalAsset.getHeatCapacity_kW();
		} else { // heat with heatpump
			//double powerDemand_kW = (v_tempSetpoint_degC - houseTemp) * ((J_EAStorageHeat)p_BuildingThermalAsset.j_ea).getHeatCapacity_JpK() / 3.6e6;
			p_primaryHeatingAsset.v_powerFraction_fr = 1;//min(1,powerDemand_kW / p_primaryHeatingAsset.j_ea.getHeatCapacity_kW());
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1,v_hotwaterDemand_kW / p_secondaryHeatingAsset.getHeatCapacity_kW());
			p_BuildingThermalAsset.v_powerFraction_fr = HP.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();
			traceln("HP is cheaper");
		}
	} else { // Just supply DHW demand with gas burner
		p_secondaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_secondaryHeatingAsset.getHeatCapacity_kW();
		p_primaryHeatingAsset.v_powerFraction_fr = 0;
		p_BuildingThermalAsset.v_powerFraction_fr = 0;
		traceln("just DHW");
	}
	p_secondaryHeatingAsset.f_updateAllFlows( p_secondaryHeatingAsset.v_powerFraction_fr );
} else if( p_primaryHeatingAsset instanceof J_EAConversionHeatDeliverySet && ( p_secondaryHeatingAsset instanceof J_EAConversionElectricHeater || p_secondaryHeatingAsset instanceof J_EAConversionHeatPump ) && p_heatBuffer instanceof J_EAStorageHeat ) { // Heat Delivery Set and booster water/water heatpump with buffer for hotwater, )
	p_primaryHeatingAsset.v_powerFraction_fr = 0;
	p_secondaryHeatingAsset.v_powerFraction_fr = 0;
	p_heatBuffer.v_powerFraction_fr = 0;
	
	traceln("bivalent DH system with buffer operating mode");
	double v_bufferTemp_degC = p_heatBuffer.getCurrentTemperature();
	double houseTemperature_degC = p_BuildingThermalAsset.getCurrentTemperature();
	
	// buffer instead of heatpump! TODO: change to refill buffer! double secondaryDemand_kW = v_hotwaterDemand_kW;
	traceln(" thermalstoragetemp "+ p_BuildingThermalAsset.getCurrentTemperature() + ",  v_setpoint_degC " + v_tempSetpoint_degC);
	
	// 1) w/w heatpump feeds (only) the local heat buffer for tapwater when temperature is beneath buffer setpoint:
	boolean b_bufferTempBelowSetpoint = v_bufferTemp_degC < p_heatBuffer.getSetTemperature_degC();
	
	p_secondaryHeatingAsset.v_powerFraction_fr = b_bufferTempBelowSetpoint ? 1 : 0;
	p_secondaryHeatingAsset.f_updateAllFlows( p_secondaryHeatingAsset.v_powerFraction_fr );
	
	double heatSupplyToBuffer_kW = p_secondaryHeatingAsset.heatProduction_kW;
		
	// 2) supply tapwater from local heatbuffer on demand, AND take in heat from the heatpump
	p_heatBuffer.v_powerFraction_fr = ( - v_hotwaterDemand_kW + heatSupplyToBuffer_kW ) / p_heatBuffer.capacityHeat_kW;
	p_heatBuffer.f_updateAllFlows( p_heatBuffer.v_powerFraction_fr );
	
	// 3) heat the house from heat delivery set directly, and take care to add this heat load to the existing heat flow from w/w heatpump consumption!
	boolean b_houseTempBelowSetpoint = houseTemperature_degC < v_tempSetpoint_degC? true : false;
	
	p_primaryHeatingAsset.v_powerFraction_fr += b_houseTempBelowSetpoint? 1 : 0;  // maybe cap for maximum 1?
	//p_primaryHeatingAsset.f_updateAllFlows(	p_primaryHeatingAsset.v_powerFraction_fr );
	
	double heatFlowToHouse_kW = p_primaryHeatingAsset.getHeatCapacity_kW() * p_primaryHeatingAsset.v_powerFraction_fr - p_secondaryHeatingAsset.heatConsumption_kW;
	p_BuildingThermalAsset.v_powerFraction_fr = (heatFlowToHouse_kW / p_BuildingThermalAsset.capacityHeat_kW );
	//p_primaryHeatingAsset.v_powerFraction_fr = p_BuildingThermalAsset.j_ea.getCurrentTemperature() < v_tempSetpoint_degC ? 1 : 0;
	//traceln("b_primaryOperate = "+ b_primaryOperate + ", GCHouse f_heatWithHybridHeatpump: p_secondaryHeatingAsset.j_ea.capacityHeat_kW = " + p_secondaryHeatingAsset.j_ea.capacityHeat_kW + ". p_secondaryHeatingAsset.j_ea =  "+p_secondaryHeatingAsset.j_ea.toString());
	
	//boolean b_primaryOperate = houseTemperature_degC < v_tempSetpoint_degC ? true : false;
	
	
	//p_secondaryHeatingAsset.v_powerFraction_fr = secondaryDemand_kW / p_secondaryHeatingAsset.j_ea.getHeatCapacity_kW(); 
	
	
	//p_BuildingThermalAsset.v_powerFraction_fr = p_primaryHeatingAsset.j_ea.capacityHeat_kW * p_primaryHeatingAsset.v_powerFraction_fr;

	//traceln("GCHouse f_heatwithhybrid... -> p_primaryHeatingAsset.v_powerFraction_fr = " + p_primaryHeatingAsset.v_powerFraction_fr + ", p_secondaryHeatingAsset.v_powerFraction_fr = " + p_secondaryHeatingAsset.v_powerFraction_fr + ", p_BuildingThermalAsset.v_powerFraction_fr" + p_BuildingThermalAsset.v_powerFraction_fr);
	//p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);
	//p_primaryHeatingAsset.f_updateAllFlows(p_primaryHeatingAsset.v_powerFraction_fr);
	//p_BuildingThermalAsset.f_updateAllFlows(p_BuildingThermalAsset.v_powerFraction_fr);
	
} else {
	traceln("**** EXCEPTION ****: Unsupported combination of heatings systems in house " + p_gridConnectionID);
	p_primaryHeatingAsset.v_powerFraction_fr = 0;
	p_secondaryHeatingAsset.v_powerFraction_fr = 0;
	p_BuildingThermalAsset.v_powerFraction_fr = 0;
}

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1677664183773</Id>
					<Name><![CDATA[f_chargeOnPriceSimpler]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>910</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[availablePowerOnGc_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double chargingRatio = 0;
if( p_householdEV.getAvailability() && p_householdEV.chargingNeed != OL_EVChargingNeed.NONE ){	
	OL_priceLevels priceLevel = f_getPriceLevel(v_currentAveraged7kWElectricityPrice_eurpkWh);
	if ( p_householdEV.chargingNeed == OL_EVChargingNeed.LOW) { 
		if( priceLevel == OL_priceLevels.LOW ) {
			chargingRatio = 1.0;
		}
	}
	else if ( p_householdEV.chargingNeed == OL_EVChargingNeed.MEDIUM){
		if ( priceLevel == OL_priceLevels.LOW) { 
			chargingRatio = 1.0;
		}
		else if(  priceLevel == OL_priceLevels.MEDIUM ) {
			chargingRatio = p_householdEV.capacityElectric_kW / 4;
		}
	}
	// SCENARIO HIGH CHARGING NEED -> charge full power, otherwise the EV will not get full
	else {
		chargingRatio = 1.0; // Hier kan er boven de gridconnectie geladen worden. Zeker als je 11 kW laders hebt met een warmtepomp erbij
	}
}
if( p_householdEV.chargingNeed != OL_EVChargingNeed.HIGH){ //unless the charging need is high, limit the charging speed to grid connection.
	chargingRatio = min(1, min( availablePowerOnGc_kW / p_householdEV.getElectricCapacity_kW(), chargingRatio));
}
v_evChargingPowerElectric_kW += p_householdEV.ownerAsset.f_updateElectricityFlows( chargingRatio );
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1678708804201</Id>
					<Name><![CDATA[f_batteryManagementLoad]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>810</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double powerfraction_fr = 0;
if ( v_currentPowerElectricity_kW < 0 && p_batteryAsset.getCurrentStateOfCharge() < 1 && v_currentPriceLevel !=  OL_priceLevels.HIGH ){
	powerfraction_fr = 1;
}
else if( v_currentPowerElectricity_kW > v_currentLoadLowPassed_kW && p_batteryAsset.getCurrentStateOfCharge() > 0){
	powerfraction_fr = -1;
}
else if ( v_batterySOC_fr < 0.6 && v_currentPowerElectricity_kW < 1 && v_currentPriceLevel !=  OL_priceLevels.HIGH){
	powerfraction_fr = min( 1, p_batteryAsset.capacityElectric_kW / 2.5);
}
p_batteryAsset.v_powerFraction_fr = powerfraction_fr;
p_batteryAsset.f_updateAllFlows( p_batteryAsset.v_powerFraction_fr );
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1678709047802</Id>
					<Name><![CDATA[f_batteryManagementPrice_overwrite]]></Name>
					<X>810</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentBatteryStateOfCharge]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (p_batteryAsset.getStorageCapacity_kWh() != 0){
	//double willingnessToPayDefault_eurpkWh = 0.3;
	double chargeDischarge_offset_eurpkWh = 0.0;
	double WTPfeedbackGain_eurpSOC = 0.25; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh
	double priceGain = 2; // How strongly to ramp up power with price-delta's
	//double congestionTariffCoop_eurpkWh = -(((ConnectionOwner)p_ownerActor).p_CoopParent.v_electricitySurplus_kW + v_previousPowerElectricity_kW)/1200*0.1;
	
	double chargeSetpoint_kW = 0;
	
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();
		//traceln("Initial Mappings are: " + ((ConnectionOwner)p_ownerActor).v_currentPriceBands);
		double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(v_currentPowerElectricity_kW + 10.0); // query price at 100kW charging
		double currentElectricityPriceDischarge_eurpkWh = ownerActor.f_getElectricityPrice(v_currentPowerElectricity_kW - 10.0); // query price at -100kW charging
		//double lowPassFraction = min(1,1*1.2*energyModel.p_timeStep_h); // smaller value results in more filtering
		//v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
		
		//double currentPricePowerBandPos_kW = ownerActor.v_priceBandsDelivery.ceilingKey(10.0); // Up to what power does this price hold?
		//double currentPricePowerBandNeg_kW = ownerActor.v_priceBandsDelivery.floorKey(10.0); // Down to what power does this price hold?
		
		double SOC_setp_fr = 0.5;
		//traceln("Current price is " + currentElectricityPriceCharge_eurpkWh + " eurpkWh, between " + currentPricePowerBandNeg_kW + " kW and " + currentPricePowerBandPos_kW + " kW");
		if (!c_vehicleAssets.isEmpty()) {
			SOC_setp_fr = 0.5 + 0.25 * Math.sin(2*Math.PI*(energyModel.t_h-12)/24); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. 
		} else if (energyModel.v_totalInstalledWindPower_kW > 0 ) {
			SOC_setp_fr = 0.9 - 0.8 * energyModel.v_WindYieldForecast_fr;
			//traceln("Forecast-based SOC setpoint: " + SOC_setp_fr + " %");
		}
		double SOC_deficit_fr = SOC_setp_fr - currentBatteryStateOfCharge; // How far away from desired SOC? SOC too LOW is a POSITIVE deficit
		
		// Define WTP price for charging and discharging!
		double WTP_charge_eurpkWh = v_electricityPriceLowPassed_eurpkWh - chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		double WTP_discharge_eurpkWh = v_electricityPriceLowPassed_eurpkWh + chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		
		//traceln("WTP charge is " + WTP_charge_eurpkWh + " eurpkWh, discharge is " + WTP_discharge_eurpkWh + " eurpkWh");
		// Choose charging power based on prices and desired SOC level
		if ( WTP_charge_eurpkWh > currentElectricityPriceCharge_eurpkWh ) { // if willingness to pay higher than current electricity price
			//chargeSetpoint_kW = min(p_batteryAsset.getElectricCapacity_kW()*(WTP_charge_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain, currentPricePowerBandPos_kW)  ;
			chargeSetpoint_kW = p_batteryAsset.getElectricCapacity_kW()*(WTP_charge_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain;
			//traceln("WTP charge " + WTP_charge_eurpkWh + " eurpkWh is high than electricity price " + currentElectricityPriceCharge_eurpkWh + " eurpkWh, so charge!") ;
		} else if (WTP_discharge_eurpkWh < currentElectricityPriceDischarge_eurpkWh) {
			//chargeSetpoint_kW = -min(p_batteryAsset.getElectricCapacity_kW()*(currentElectricityPriceDischarge_eurpkWh - WTP_discharge_eurpkWh)*priceGain, currentPricePowerBandPos_kW);
			chargeSetpoint_kW = -p_batteryAsset.getElectricCapacity_kW()*(currentElectricityPriceDischarge_eurpkWh - WTP_discharge_eurpkWh)*priceGain;
			//traceln("WTP discharge " + WTP_discharge_eurpkWh + " eurpkWh is lower than electricity price " + currentElectricityPriceCharge_eurpkWh + " eurpkWh, so discharge!") ;
		}
		
		// limit charging power to available connection capacity
		boolean b_stayWithinConnectionLimits = true;
		if( b_stayWithinConnectionLimits ) {	
	
			double electricitySurplus_kW = - v_currentPowerElectricity_kW; 
			
			double availableChargePower_kW = electricitySurplus_kW + p_contractedDeliveryCapacity_kW; // Max battery charging power within grid capacity
			double availableDischargePower_kW = electricitySurplus_kW - p_contractedFeedinCapacity_kW; // Max discharging power within grid capacity
			chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
		}			
	
		p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
	}
	p_batteryAsset.f_updateAllFlows( p_batteryAsset.v_powerFraction_fr );
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1693300820997</Id>
					<Name><![CDATA[f_connectTo_J_EA_House]]></Name>
					<X>960</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[j_ea]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[if (j_ea instanceof J_EAConversion) {
	if (j_ea.energyAssetType == OL_EnergyAssetType.GAS_BURNER || j_ea instanceof J_EAConversionHeatPump || j_ea instanceof J_EAConversionHeatDeliverySet || j_ea instanceof J_EAConversionElectricHeater ) {
		switch (p_heatingType) {
        	case HEATPUMP_AIR:
        		p_primaryHeatingAsset = (J_EAConversion)j_ea;
        	break;
        	case HEATPUMP_GASPEAK:
				p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;
	            p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
            break;
            case HEATPUMP_BOILERPEAK:    // ambigue wat we met boiler bedoelen; eboiler of grootschalige DH_boiler = gasburner!
                p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionElectricHeater? (J_EAConversion)j_ea : p_secondaryHeatingAsset;                                          
            break;
            case GASBURNER:
                p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_primaryHeatingAsset;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasCHP? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
            break;
            case DISTRICTHEAT:
                if( j_ea instanceof J_EAConversionHeatDeliverySet ){
					p_primaryHeatingAsset = (J_EAConversion)j_ea;
					//traceln("Assigning heat delivery set as primary heating asset for house!");
				}
				else {
					p_secondaryHeatingAsset = (J_EAConversion)j_ea;
					// set water/water heatpump source energy-asset
					if( j_ea instanceof J_EAConversionHeatPump && ((J_EAConversionHeatPump)j_ea).getAmbientTempType().equals("WATER") && p_primaryHeatingAsset instanceof J_EAConversionHeatDeliverySet ) {
						((J_EAConversionHeatPump)j_ea).p_linkedSourceEnergyAsset = p_primaryHeatingAsset;
						j_ea.updateAmbientTemperature( ((J_EAConversionHeatPump)j_ea).p_linkedSourceEnergyAsset.getCurrentTemperature() );
					}
				}	
            break;
            default: throw new IllegalStateException("Invalid DistrictHeating HeatingType: " + p_heatingType);
      	}
    }
}


if (j_ea instanceof J_EAEV) {
	if (p_householdEV != null){
	    	throw new RuntimeException(String.format("Exception: trying to assign 2 EVs to a household!! --> one of them will not charge! "));
	}
	p_householdEV = (J_EAEV)j_ea;
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1696923950404</Id>
					<Name><![CDATA[f_setAnnualEnergyDemand]]></Name>
					<X>970</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[traceln("Placeholder function f_setAnnualEnergyDemand called! Nothing will happen.");]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1696924006982</Id>
					<Name><![CDATA[f_setEnergyLabel]]></Name>
					<X>970</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[traceln("Placeholder function f_setEnergyLabel called! Nothing will happen.");]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1702369252216</Id>
					<Name><![CDATA[setHeatingTargetTemp]]></Name>
					<X>1700</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( getHourOfDay() > v_heatingOn_time && getHourOfDay() < v_heatingOff_time){
	v_tempSetpoint_degC = v_dayTempSetpoint_degC ; 
}
else {
	v_tempSetpoint_degC = v_nightTempSetpoint_degC;
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1702369294416</Id>
					<Name><![CDATA[f_calcCheapestHeatingPrice]]></Name>
					<X>1720</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset).getCOP();
boolean isGasCheaper = false;

if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
	v_gasHeatingCost_eurpkWh_TEMPORARY = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getMethanePrice();
	v_eHeatingCost_eurpkWh_TEMPORARY = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAveragedElectricityPrice( v_currentPowerElectricity_kW, p_primaryHeatingAsset.getElectricCapacity_kW() ) / HP_COP;
	isGasCheaper = v_gasHeatingCost_eurpkWh_TEMPORARY < v_eHeatingCost_eurpkWh_TEMPORARY ? true:false;
}	

return isGasCheaper;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726129903799</Id>
					<Name><![CDATA[f_removeCurrentHeatingSystem]]></Name>
					<X>970</X><Y>-20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[p_heatingType = OL_GridConnectionHeatingType.NONE;
p_primaryHeatingAsset.removeEnergyAsset();
if ( p_secondaryHeatingAsset != null){
	p_secondaryHeatingAsset.removeEnergyAsset();
}
if ( p_tertiaryHeatingAsset != null){
	p_tertiaryHeatingAsset.removeEnergyAsset();
}
if ( p_heatBuffer != null){
	p_heatBuffer.removeEnergyAsset();
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726301776809</Id>
					<Name><![CDATA[f_heatWithGasburner]]></Name>
					<X>1700</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( p_primaryHeatingAsset instanceof J_EAConversionGasBurner && p_BuildingThermalAsset != null) { 
	if (p_BuildingThermalAsset.getCurrentTemperature() < v_tempSetpoint_degC - p_heatingKickinTreshold_degC) {
		double powerDemand_kW = v_hotwaterDemand_kW + (v_tempSetpoint_degC - p_BuildingThermalAsset.getCurrentTemperature()) * p_BuildingThermalAsset.getHeatCapacity_JpK() / 3.6e6;
		p_primaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW()  );
		p_BuildingThermalAsset.v_powerFraction_fr = (  p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.capacityHeat_kW  - v_hotwaterDemand_kW ) / p_BuildingThermalAsset.getHeatCapacity_kW();			
	}
	else { // Just supply DHW
		p_primaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW();
		p_BuildingThermalAsset.v_powerFraction_fr = 0;
	}
}
else if (p_primaryHeatingAsset instanceof J_EAConversionGasBurner && p_BuildingThermalAsset == null){ 
	double powerDemand_kW = v_currentPowerHeat_kW; //TODO Where does this v_currentPowerHeat_kW come from? (Peter 14-09-2024), 
	p_primaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW());
	traceln("Household is heating with gasburner without thermal building asset, check if this is correct @f_heatWithGasBurner");
	//p_primaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW();
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726301785545</Id>
					<Name><![CDATA[f_heatWithDistrictHeat]]></Name>
					<X>1700</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( p_primaryHeatingAsset instanceof J_EAConversionHeatDeliverySet && p_BuildingThermalAsset != null) { 
	if (p_BuildingThermalAsset.getCurrentTemperature() < v_tempSetpoint_degC - p_heatingKickinTreshold_degC) {
		double powerDemand_kW = v_hotwaterDemand_kW + (v_tempSetpoint_degC - p_BuildingThermalAsset.getCurrentTemperature()) * p_BuildingThermalAsset.getHeatCapacity_JpK() / 3.6e6;
		p_primaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW()  );
		p_BuildingThermalAsset.v_powerFraction_fr = (  p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.capacityHeat_kW  - v_hotwaterDemand_kW ) / p_BuildingThermalAsset.getHeatCapacity_kW();			
	}
	else { 
		p_primaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW();
		p_BuildingThermalAsset.v_powerFraction_fr = 0;
	}
	v_districtHeatDelivery_kW = p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.capacityHeat_kW;
}
else {
	traceln("House " + p_gridConnectionID + " has heatingtype DISTRICT HEAT, but no delivery set or building asset!");
}	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726334759211</Id>
					<Name><![CDATA[f_manageCookingTracker]]></Name>
					<X>780</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Add heat from cooking assets to house
if (p_cookingTracker != null) { // check for presence of cooking asset
	p_cookingTracker.manageActivities(energyModel.t_h*60); // also calls f_updateAllFlows in HOB asset	
	v_electricHobConsumption_kW += p_cookingTracker.HOB.electricityConsumption_kW; // PowerFlows van consumption assets worden in f_calculateEnergyBalance opgeteld, dus ken dit niet toe aan totale consumptie!
	v_electricHobConsumption_kWh += v_electricHobConsumption_kW * energyModel.p_timeStep_h;
	v_residualHeatGasPit_kW = p_cookingTracker.HOB.heatProduction_kW;
	if (p_BuildingThermalAsset != null) {
		p_BuildingThermalAsset.v_powerFraction_fr += v_residualHeatGasPit_kW / p_BuildingThermalAsset.getHeatCapacity_kW();
	}
}]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1674899624978</Id>
					<Name><![CDATA[d_heatpumpDailyConsumption]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>2170</X><Y>50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1674979200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>true</FreezeXAxis>
					<VerticalAxisExpression><![CDATA[v_dailyHPConsumption_kWh]]></VerticalAxisExpression>
					<SamplesToKeep>100</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<AgentLinks>
				<AgentLink>
					<Id>1663772408662</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1663772679600</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1663772408666</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
    			<TimePlot>
					<Id>1674899851745</Id>
					<Name><![CDATA[HeatpumpPlot]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1970</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1674979200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>490</Width>
					<Height>260</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>410</Width>
						<Height>170</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>DAY</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Heatpump daily consumption kWh ]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[d_heatpumpDailyConsumption]]></Expression>
					<Color>-2987746</Color>
					<Expression2><![CDATA[0]]></Expression2>
					<Expression2Flag>false</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>25</SamplesToKeep>
					<TimeWindowExpression><![CDATA[25]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>dd_MM</LabelFormat>
    			</TimePlot>
				<Line>
					<Id>1726301544269</Id>
					<Name><![CDATA[line3]]></Name>
					<X>1460</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>310</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1726301549553</Id>
					<Name><![CDATA[text3]]></Name>
					<X>1560</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Heating functionality]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1663773810345</Id>
			<Name><![CDATA[GCDistrictHeating]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_operateFlexAssets(){
	f_operateAssetsDistrictHeating();
}

@Override
public void f_connectToJ_EA(J_EA j_ea){
	f_connectToJ_EA_default(j_ea);
	f_connectToJ_EA_DistrictHeating(j_ea);
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1663773810343</Id>
				<Name><![CDATA[1663773810343]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1663773810341</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1663773810344</CurrentLevel>
			<ConnectionsId>1663773810340</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1664534447977</Id>
					<Name><![CDATA[b_incentiveNationalPrice]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>660</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1664534582189</Id>
					<Name><![CDATA[b_incentiveGridNodePrice]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>660</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1664534594839</Id>
					<Name><![CDATA[b_incentiveCoopPrice]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>660</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1666196152392</Id>
					<Name><![CDATA[v_bufferTemp_degC]]></Name>
					<X>520</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1677512160570</Id>
					<Name><![CDATA[b_residualHeatLTSource]]></Name>
					<X>520</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1678448870527</Id>
					<Name><![CDATA[v_chpElectricityPrice]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1120</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724252832488</Id>
					<Name><![CDATA[b_validLocalBuffer]]></Name>
					<X>520</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1677500555195</Id>
					<Name><![CDATA[p_residualHeatLTSource]]></Name>
					<X>480</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAProduction]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[null]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1677500555193</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721810038977</Id>
					<Name><![CDATA[p_DHheatStorage]]></Name>
					<X>480</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_EAStorageHeat]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1721810038975</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1688462266916</Id>
					<Name><![CDATA[c_electricityPriceList]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1120</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1663773953770</Id>
					<Name><![CDATA[f_operateAssetsDistrictHeating]]></Name>
					<X>800</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// District heating system, heating power based on temperature of buffer of heating system. (big or small) Heat transfer from DH_GridConnection to heat NetNode is based on temperature difference between heating-buffer and water in heating network
//traceln("Operating District Heating agent = "+ this + " -> DH primary heating asset = " + p_primaryHeatingAsset.j_ea.ownerAsset.toString());
//traceln("Operating District Heating agent = "+ this + " -> DH secondary heating asset = " + p_secondaryHeatingAsset.j_ea.ownerAsset.toString());
//traceln("DistrictHeating Active!");

double tempSetpoint_degC = 0;
double minBufferTemp_degC = 0;
double maxTempBuffer_degC = 0;
double storageTemp_degC = 0;
//double DHnetworkTemp_degC = 0;
//v_currentElectricityPriceConsumption_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getElectricityPrice( v_currentPowerElectricity_kW );
v_currentElectricityPriceConsumption_eurpkWh = l_parentNodeElectric.getConnectedAgent().v_currentTotalNodalPrice_eurpkWh;

if (l_ownerActor.getConnectedAgent() instanceof EnergyCoop){
	//electricitySurplussCoop_kW = ((EnergyCoop)l_ownerActor.getConnectedAgent()).v_electricitySurplus_kW + v_previousPowerElectricity_kW; // From last timestep! So compensate for own electric power
	//traceln("DH function! Electricity surpluss in Coop: " + electricitySurplussCoop_kW + ", own power " + v_previousPowerElectricity_kW,1 );
}	
//		((J_EAConversionHeatPump)e.j_ea).updateParameters(main.p_undergroundTemperature_degC, storageTemp_degC); // update heatpump temp levels!
double heatTransferToNetwork_kW = l_parentNodeHeat.getConnectedAgent().v_currentLoadHeat_kW - v_previousPowerHeat_kW;// max( storageTemp_degC - DHnetworkTemp_degC, 0 ) * heatTransferToNetworkCoefficient_kWpK;

if( b_validLocalBuffer ) {
	tempSetpoint_degC = p_DHheatStorage.getSetTemperature_degC();
	v_bufferTemp_degC = p_DHheatStorage.getCurrentTemperature();

	//traceln("Thermal storage asset heatCapacity: " + p_DHheatStorage.getHeatCapacity_kW());
	double heatingSetpoint_kW = max(0,(tempSetpoint_degC - v_bufferTemp_degC)) * p_DHheatStorage.getHeatCapacity_JpK() / (3.6e6 * energyModel.p_timeStep_h);
	double[] arr = p_primaryHeatingAsset.f_updateAllFlows( heatingSetpoint_kW / p_primaryHeatingAsset.getHeatCapacity_kW() );
	double heatingPower_kW = arr[3];
	
	//traceln("Heating setpoint: %s kW, heating power: %s kW", heatingSetpoint_kW, heatingPower_kW);	
	p_DHheatStorage.v_powerFraction_fr = ( heatingPower_kW - heatTransferToNetwork_kW ) / p_DHheatStorage.getHeatCapacity_kW();
	if ( abs(p_DHheatStorage.v_powerFraction_fr ) > 1) {
		traceln("p_DHheatStorage.v_powerFraction_fr greater than 1! %s", p_DHheatStorage.v_powerFraction_fr );
	}
	p_DHheatStorage.f_updateAllFlows(p_DHheatStorage.v_powerFraction_fr);
	//traceln("heatTransferToNetwork_kW: " + heatTransferToNetwork_kW);
	//traceln("District heating system temperature: %s degC", p_DHheatStorage.getCurrentTemperature());
} else {
	double[] arr = p_primaryHeatingAsset.f_updateAllFlows(heatTransferToNetwork_kW/p_primaryHeatingAsset.getHeatCapacity_kW()); // heatingasset must be powerful enough every single timestep!
	if ( 0.01 < (heatTransferToNetwork_kW - arr[3]) ) {
		traceln("Warning! District heating primary heating asset not able to fulfill heat demand! Heatdemand: %s kW, heat produced: %s kW", heatTransferToNetwork_kW, arr[3] );
	}	
	//traceln("Primary heating system powerFraction: %s", p_primaryHeatingAsset.v_powerFraction_fr);
	//totalHeatingPower_kWth = b_primarySourceTempAboveTargetTemp? p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.getHeatCapacity_kW() : 0; // only model net heat flow when temperature levels allow this

}

//double heatTransferToNetworkCoefficient_kWpK = 10000;
//traceln("storageTemp_degC: " + storageTemp_degC + ", DHnetworkTemp_degC: " + DHnetworkTemp_degC);

//traceln("storageTemp_degC: "+storageTemp_degC+", network current temp_degC: " + DHnetworkTemp_degC + ", heatTransferToNetwork_kW: "+heatTransferToNetwork_kW);

//traceln("totalHeatingPower " +totalHeatingPower_kWth);

// Block (passive energy flows if too cold
//heatTransferToNetwork_kW = b_storageBelowNetworkTemp? 0 : heatTransferToNetwork_kW;

//p_primaryHeatingAsset.f_updateAllFlows( p_primaryHeatingAsset.v_powerFraction_fr );

//traceln("District heating " + p_parentNodeHeatID + " storage temperature " + storageTemp_degC + " degC" + ", district heating network temperature " + p_parentNodeHeat.p_transportBuffer.getCurrentTemperature() + " deg C" );

//v_currentPowerHeat_kW += p_BuildingThermalAsset.heatConsumption_kW - p_BuildingThermalAsset.heatProduction_kW;

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666266296956</Id>
					<Name><![CDATA[f_connectToChildDistrictHeating]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>770</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingChildNode]]></Name>
						<Type><![CDATA[Agent]]></Type>
					</Parameter>
					<Body><![CDATA[//assetLinks.connectTo(ConnectingChildNode);
EnergyAsset EA = (EnergyAsset) ConnectingChildNode;
c_energyAssets.add(EA);

if (EA.j_ea instanceof J_EAConsumption) {
	c_consumptionAssets.add(EA);
} else if (EA.j_ea instanceof J_EAProduction ) {
	c_productionAssets.add(EA);
	if( EA.p_energyAssetType == OL_EnergyAssetType.RESIDUALHEATLT) {
		// handle residual heat not as a direct heat source!
		p_residualHeatLTSource = EA;
	}
	else {
		c_productionAssets.add(EA);
		
	}
		
} else if (EA.j_ea instanceof J_EAStorage ) {
	c_storageAssets.add(EA);
	if (EA.j_ea instanceof J_EAStorageHeat) {
		p_BuildingThermalAsset = EA;
	}
} else if (EA.j_ea instanceof J_EAConversion) {
	c_conversionAssets.add((J_EAConversion)EA.j_ea );
	
	switch (p_heatingType) {
		case HEATPUMP_GASPEAK:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionHeatPump? EA : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;
		break;
		case GASFIRED:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? EA : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;
		break;
		case HYDROGENFIRED:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionHydrogenBurner? EA : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionHydrogenBurner? EA : p_secondaryHeatingAsset;
		break;
		case HEATPUMP_BOILERPEAK:    // ambigue wat we met boiler bedoelen; eboiler of grootschalige DH_boiler = gasburner!
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionHeatPump? EA : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;
		break;
		case GASFIRED_CHPPEAK:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasCHP? EA : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;
		break;
		case DISTRICT_EBOILER_CHP:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionElectricHeater? EA : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasCHP? EA : p_secondaryHeatingAsset;
		break;
		
		case LT_RESIDUAL_HEATPUMP_GASPEAK:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionHeatPump? EA : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;
		break;
		default:
			throw new IllegalStateException("Invalid DistrictHeating HeatingType: " + p_heatingType);
	}
	
		
	//if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet || EA.j_ea instanceof J_EAConversionElectricHeater || EA.j_ea instanceof J_EAConversionGasCHP ) {
	//	if (p_primaryHeatingAsset == null) {
	//		p_primaryHeatingAsset = EA;
	//	} else if (p_secondaryHeatingAsset == null) {
	//		p_secondaryHeatingAsset = EA;
	//	} else {
	//		traceln("District Heating gridconnection already has two heating systems!");
	//	}
	//	//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());
	if( ((J_EAConversion)EA.j_ea) instanceof J_EAConversionHeatPump && ((J_EAConversionHeatPump)EA.j_ea).getAmbientTempType().equals("WATER") ) {
		EA.p_linkedSourceEnergyAsset = p_residualHeatLTSource;
		((J_EAConversionHeatPump)EA.j_ea).setSourceAssetHeatPower( EA.p_linkedSourceEnergyAsset.j_ea.capacityHeat_kW );
	}
//}
} else {
	traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingChildNode.getId() + " is of unknown type or null! ");
}



/*
// create a local list of energyAssets connected to its netConnection Agent for easy reference
List<EnergyAsset> connectedEnergyAssets = subConnections.getConnections();

int numberOfEnergyAssets = connectedEnergyAssets.size();
for( int i = 0; i < numberOfEnergyAssets; i++ ) {
	if( connectedEnergyAssets.get(i) instanceof EnergyAsset ) {
		c_connectedEnergyAssets.add(connectedEnergyAssets.get(i));

	}
}

List<EnergyAsset> consumptionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAConsumption);
List<EnergyAsset> productionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAProduction);
List<EnergyAsset> storageAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAStorage);
List<EnergyAsset> conversionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAConversion);
traceln("NetConnection connecting to " + numberOfEnergyAssets + " EnergyAssets");
*/
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1677511998575</Id>
					<Name><![CDATA[f_setConfigurationBooleans]]></Name>
					<X>520</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// one time setting of booleans marking system configuration for use in transparant logic switching
b_residualHeatLTSource = p_residualHeatLTSource instanceof J_EAProduction? true : false;

// Check if buffer is present and has physically correct parameters
if (p_DHheatStorage instanceof J_EAStorageHeat) {
	if(p_DHheatStorage.getHeatCapacity_kW() > 0 & p_DHheatStorage.getHeatCapacity_JpK()> 0 ) {
		b_validLocalBuffer = true;
	}
}

// first update parameters of any heatpumps if present // [GH] This logic should only be run once, not every timestep! updateAmbientTemp should also be triggered from main.
for(J_EA e : c_energyAssets) {
	if(e instanceof J_EAConversionHeatPump) {
		if ( ((J_EAConversionHeatPump)e).getAmbientTempType().equals("WATER") && b_residualHeatLTSource ) {
			//traceln("water ambientTempType for LTresidual heat with heatpump check!");
			((J_EAConversionHeatPump)e).f_setLinkedVariable(energyModel, "WATER", ((J_EAConversionHeatPump)e).p_linkedSourceEnergyAsset );
			e.updateAmbientTemperature( ((J_EAConversionHeatPump)e).p_baseTemperatureReference );
		}
	}
}	]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1678448031698</Id>
					<Name><![CDATA[f_operateSmartHeating]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_chpElectricityPrice = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAveragedElectricityPrice(v_currentPowerElectricity_kW, - p_secondaryHeatingAsset.capacityElectric_kW   );
v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_chpElectricityPrice - v_electricityPriceLowPassed_eurpkWh );
//v_currentPriceLevel = f_getPriceLevel( v_currentElectricityPriceConsumption_eurpkWh );

c_electricityPriceList.add( v_chpElectricityPrice );
if (c_electricityPriceList.size() > 30) {
    c_electricityPriceList.remove(0);
}

double runningAverage = c_electricityPriceList.stream()
        .mapToDouble(Double::doubleValue)
        .average()
        .orElse(0.0);

double variance = c_electricityPriceList.stream()
        .mapToDouble(value -> Math.pow(value - runningAverage, 2))
        .average()
        .orElse(0.0);


double standardDeviation = Math.sqrt(variance);
double currentDeviation = Math.abs(v_chpElectricityPrice - runningAverage) / standardDeviation;

GridNode superNodeElectric = l_parentNodeElectric.getConnectedAgent().superConnection.getConnectedAgent();
switch (p_heatingType) {
	case GASFIRED_CHPPEAK:
		if( v_chpElectricityPrice > (v_electricityPriceLowPassed_eurpkWh + p_pricelevelHighDifFromAvg_eurpkWh) && p_BuildingThermalAsset.getCurrentTemperature() < p_BuildingThermalAsset.getMaxTemperature_degC() ){
			p_secondaryHeatingAsset.v_powerFraction_fr = 1;
		}
		if ( p_BuildingThermalAsset.getCurrentTemperature() <= p_BuildingThermalAsset.getMinTemperature_degC() ){
 			p_primaryHeatingAsset.v_powerFraction_fr = 1; //max(0, (p_primaryHeatingAsset.j_ea.capacityHeat_kW - p_secondaryHeatingAsset.j_ea.capacityHeat_kW * p_secondaryHeatingAsset.v_powerFraction_fr) / p_primaryHeatingAsset.j_ea.capacityHeat_kW );
		}
	break;
	case DISTRICT_EBOILER_CHP:
		if ( p_BuildingThermalAsset.getCurrentTemperature() <= p_BuildingThermalAsset.getMinTemperature_degC() ){
 			//als minimum temp is bereikt, allebei aan
 			traceln("beide aan");
 			p_primaryHeatingAsset.v_powerFraction_fr = 1; 
			p_secondaryHeatingAsset.v_powerFraction_fr = 1;	
		}
		//else if ( superNodeElectric.v_currentLoadElectricity_kW < 0 && p_BuildingThermalAsset.j_ea.getCurrentTemperature() < p_BuildingThermalAsset.j_ea.getMaxTemperature_degC() ){
		else if( v_chpElectricityPrice < ( runningAverage - 3.0 * standardDeviation ) && p_BuildingThermalAsset.getCurrentTemperature() < p_BuildingThermalAsset.getMaxTemperature_degC() - 1 ){
			p_primaryHeatingAsset.v_powerFraction_fr = 0.5;
		}
		else if( v_chpElectricityPrice < ( runningAverage - 1.0 * standardDeviation ) && p_BuildingThermalAsset.getCurrentTemperature() < p_BuildingThermalAsset.getMaxTemperature_degC() - 1 ){
			p_primaryHeatingAsset.v_powerFraction_fr = 0.25;
		}
		else if( v_chpElectricityPrice > ( runningAverage + 4.0 * standardDeviation ) && p_BuildingThermalAsset.getCurrentTemperature() < p_BuildingThermalAsset.getMaxTemperature_degC() - 1 ){
			p_secondaryHeatingAsset.v_powerFraction_fr = 0.5;
		}
		else if( v_chpElectricityPrice > ( runningAverage + 3.0 * standardDeviation ) && p_BuildingThermalAsset.getCurrentTemperature() < p_BuildingThermalAsset.getMaxTemperature_degC() - 1 ){
			p_secondaryHeatingAsset.v_powerFraction_fr = 0.25;
		}		
		else if ( p_BuildingThermalAsset.getCurrentTemperature() < p_BuildingThermalAsset.getSetTemperature_degC() ) {
			p_primaryHeatingAsset.v_powerFraction_fr = 0.5;
			p_secondaryHeatingAsset.v_powerFraction_fr = 0.5;
		}
	break;
	default:
		traceln("ERROR DISTRICT heating wants to use smart assets but does not have correct heating assets");
	break;
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1693302929918</Id>
					<Name><![CDATA[f_connectToJ_EA_DistrictHeating]]></Name>
					<X>1020</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[j_ea]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[if (j_ea instanceof J_EAProduction ) {
	//c_productionAssets.add(EA);
	if( j_ea.energyAssetType == OL_EnergyAssetType.RESIDUALHEATLT) {
		// handle residual heat not as a direct heat source!
		p_residualHeatLTSource = (J_EAProduction)j_ea;
	}
} else if (j_ea instanceof J_EAConversion) {	
	switch (p_heatingType) {
		case HEATPUMP_GASPEAK:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
		break;
		case GASBURNER:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_primaryHeatingAsset;
			//p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
		break;
		case HYDROGENBURNER:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionHydrogenBurner? (J_EAConversion)j_ea : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionHydrogenBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
		break;
		case HEATPUMP_BOILERPEAK:    // ambigue wat we met boiler bedoelen; eboiler of grootschalige DH_boiler = gasburner!
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
		break;
		case GASFIRED_CHPPEAK:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionGasCHP? (J_EAConversion)j_ea : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
		break;
		case DISTRICT_EBOILER_CHP:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionElectricHeater? (J_EAConversion)j_ea : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasCHP? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
		break;
		
		case LT_RESIDUAL_HEATPUMP_GASPEAK:
			p_primaryHeatingAsset = p_primaryHeatingAsset == null && j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null && j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;
		break;
		default:
			throw new IllegalStateException("Invalid DistrictHeating HeatingType: " + p_heatingType);
	}
	
		
	//if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet || EA.j_ea instanceof J_EAConversionElectricHeater || EA.j_ea instanceof J_EAConversionGasCHP ) {
	//	if (p_primaryHeatingAsset == null) {
	//		p_primaryHeatingAsset = EA;
	//	} else if (p_secondaryHeatingAsset == null) {
	//		p_secondaryHeatingAsset = EA;
	//	} else {
	//		traceln("District Heating gridconnection already has two heating systems!");
	//	}
	//	//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());
	if( j_ea instanceof J_EAConversionHeatPump && ((J_EAConversionHeatPump)j_ea).getAmbientTempType().equals("WATER") ) {
		((J_EAConversionHeatPump)j_ea).p_linkedSourceEnergyAsset = p_residualHeatLTSource;
		((J_EAConversionHeatPump)j_ea).setSourceAssetHeatPower( ((J_EAConversionHeatPump)j_ea).p_linkedSourceEnergyAsset.capacityHeat_kW );
	}
//}
} else if (j_ea instanceof J_EAStorageHeat ) {
	p_DHheatStorage = (J_EAStorageHeat)j_ea;
	energyModel.c_storageAssets.add((J_EAStorage)j_ea);
} else {
	traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + j_ea + " is of unknown type or null! ");
}



/*
// create a local list of energyAssets connected to its netConnection Agent for easy reference
List<EnergyAsset> connectedEnergyAssets = subConnections.getConnections();

int numberOfEnergyAssets = connectedEnergyAssets.size();
for( int i = 0; i < numberOfEnergyAssets; i++ ) {
	if( connectedEnergyAssets.get(i) instanceof EnergyAsset ) {
		c_connectedEnergyAssets.add(connectedEnergyAssets.get(i));

	}
}

List<EnergyAsset> consumptionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAConsumption);
List<EnergyAsset> productionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAProduction);
List<EnergyAsset> storageAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAStorage);
List<EnergyAsset> conversionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAConversion);
traceln("NetConnection connecting to " + numberOfEnergyAssets + " EnergyAssets");
*/
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1702369244977</Id>
					<Name><![CDATA[f_calcCheapestHeatingPrice]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1800</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset).getCOP();
boolean isGasCheaper = false;

if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
	v_gasHeatingCost_eurpkWh_TEMPORARY = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getMethanePrice();
	v_eHeatingCost_eurpkWh_TEMPORARY = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAveragedElectricityPrice( v_currentPowerElectricity_kW, p_primaryHeatingAsset.getElectricCapacity_kW() ) / HP_COP;
	isGasCheaper = v_gasHeatingCost_eurpkWh_TEMPORARY < v_eHeatingCost_eurpkWh_TEMPORARY ? true:false;
}	

return isGasCheaper;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1702369244982</Id>
					<Name><![CDATA[f_heatWithHeatpump]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1780</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
double powerFraction_heatPump_fr = 0; 
double powerFraction_heatModel_fr = 0;
double avgElectricityPrice_eurpkWh = 10;
J_EAConversionHeatPump hp = (J_EAConversionHeatPump)p_primaryHeatingAsset;

if ( p_smartHeatingEnabled ) {
	avgElectricityPrice_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAveragedElectricityPrice( v_currentPowerElectricity_kW, hp.getElectricCapacity_kW() );
	//traceln("avg electircity rprice for HP: " + avgElectricityPrice_eurpkWh);
}

//heat the house
if (v_currentIndoorTemp_degC < v_tempSetpoint_degC - p_heatingKickinTreshold_degC ) {
	powerFraction_heatPump_fr = 1; 
	powerFraction_heatModel_fr = hp.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();
}
//also heat the house if the price is cheap, the the house is colder than desired + 1 and the vehicle does not need charging
else if( 	p_smartHeatingEnabled && avgElectricityPrice_eurpkWh < v_electricityPriceLowPassed_eurpkWh - p_pricelevelLowDifFromAvg_eurpkWh 
			&& v_currentIndoorTemp_degC < v_tempSetpoint_degC + 1) {
	powerFraction_heatPump_fr = 1;
	powerFraction_heatModel_fr = hp.getHeatCapacity_kW() / p_heatBuffer.getHeatCapacity_kW();
}

p_BuildingThermalAsset.v_powerFraction_fr = powerFraction_heatModel_fr;
p_primaryHeatingAsset.v_powerFraction_fr = powerFraction_heatPump_fr;
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1702369244984</Id>
					<Name><![CDATA[f_heatWithHybridHeatpump]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1780</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
// Heatpump and gasburner, switch based on heatpump COP)
if (v_currentIndoorTemp_degC < ( v_tempSetpoint_degC - p_heatingKickinTreshold_degC) ) {
	
	J_EAConversionHeatPump HP = (J_EAConversionHeatPump)p_primaryHeatingAsset;
	//HP.updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! <-- waarom dit gebeurt al in de main (peter 21-02-23)
	boolean gasCheaper = f_calcCheapestHeatingPrice();
	traceln("isGasCheaper: "+gasCheaper);
	
	if ( gasCheaper ) { // heat with gas
		double powerDemand_kW = (v_tempSetpoint_degC - v_currentIndoorTemp_degC) * ((J_EAStorageHeat)p_BuildingThermalAsset).getHeatCapacity_JpK() / 3.6e6;
		p_primaryHeatingAsset.v_powerFraction_fr = 0;
		p_secondaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_secondaryHeatingAsset.getHeatCapacity_kW());
		p_BuildingThermalAsset.v_powerFraction_fr = p_secondaryHeatingAsset.v_powerFraction_fr * p_secondaryHeatingAsset.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();
	} else { // heat with heatpump
		p_primaryHeatingAsset.v_powerFraction_fr = 1;//min(1,powerDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW());
		p_secondaryHeatingAsset.v_powerFraction_fr = 0;
		p_BuildingThermalAsset.v_powerFraction_fr = HP.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();
	}
}
else{
	p_primaryHeatingAsset.v_powerFraction_fr = 0;
	p_secondaryHeatingAsset.v_powerFraction_fr = 0;
	p_BuildingThermalAsset.v_powerFraction_fr = 0;
}

p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1663773810340</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1663774444750</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1663773810344</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
    			<TimePlot>
					<Id>1678448899357</Id>
					<Name><![CDATA[pl_SOC1]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1030</X><Y>500</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1668499200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[15]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>500</Width>
					<Height>280</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>420</Width>
						<Height>160</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>60</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[current electricity price]]></Title>
					<Id>1678448899351</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-32944</Color>
					<Expression2><![CDATA[v_currentElectricityPriceConsumption_eurpkWh]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[ElectricityPrice LowPassed]]></Title>
					<Id>1678448899352</Id>
					<Expression><![CDATA[my_dataset8]]></Expression>
					<Color>-13447886</Color>
					<Expression2><![CDATA[v_electricityPriceLowPassed_eurpkWh]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[CHP full power current price]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset9]]></Expression>
					<Color>-9404272</Color>
					<Expression2><![CDATA[v_chpElectricityPrice]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>1000</SamplesToKeep>
					<TimeWindowExpression><![CDATA[48]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
    			<TimePlot>
					<Id>1678452019907</Id>
					<Name><![CDATA[pl_SOC2]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>760</X><Y>840</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1668499200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[15]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>500</Width>
					<Height>280</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>420</Width>
						<Height>160</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>60</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Storage temp]]></Title>
					<Id>1678452019904</Id>
					<Expression><![CDATA[my_dataset9]]></Expression>
					<Color>-65536</Color>
					<Expression2><![CDATA[v_bufferTemp_degC]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>1000</SamplesToKeep>
					<TimeWindowExpression><![CDATA[48]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1663773842879</Id>
			<Name><![CDATA[GCEnergyProduction]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_operateFlexAssets(){
	f_operateFlexAssets_overwrite();
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1663773842877</Id>
				<Name><![CDATA[1663773842877]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1663773842875</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1663773842878</CurrentLevel>
			<ConnectionsId>1663773842874</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1671113514350</Id>
					<Name><![CDATA[v_hydrogenProductionDeficit_kWh]]></Name>
					<X>1120</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1671111800831</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite]]></Name>
					<X>800</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for( J_EA v : c_conversionAssets ){
	if (v instanceof J_EAConversionElektrolyser) {
		f_manageElektrolyser((J_EAConversionElektrolyser)v);
	}
}

// Determine EV charging
f_manageCharging();
//v_currentPowerElectricity_kW += v_evChargingPowerElectric_kW;

// Operate battery
/*if (p_batteryAsset != null){
	v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
	if( p_batteryOperationMode == OL_BatteryOperationMode.BALANCE) {
		f_batteryManagementBalanceCoop( v_batterySOC_fr );
	}
	else {
		f_batteryManagementPriceGrid( v_batterySOC_fr );
	}
	double[] arr = p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);
	v_batteryPowerElectric_kW = arr[4] - arr[0];
	//v_batteryPowerElectric_kW = p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
	//v_currentPowerElectricity_kW += v_batteryPowerElectric_kW;
}*/

if ( p_batteryAsset != null ) {
	if ( p_batteryAsset.getStorageCapacity_kWh() != 0.0) {
		v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
		if( p_batteryOperationMode == OL_BatteryOperationMode.BALANCE){
			//f_batteryManagementGridLoad(v_batterySOC_fr);
			f_batteryManagementBalance(v_batterySOC_fr);
//		} else if (p_batteryOperationMode == OL_BatteryOperationMode.BALANCE_SUPPLY){ // Tries to minimize supply peaks
//			f_batteryManagementBalanceSupply(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.PRICE){
			f_batteryManagementPrice(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.NODAL_PRICING){
			f_batteryManagementNodalPricing(v_batterySOC_fr);
		}

		double[] flowsArray = p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);	
		v_batteryPowerElectric_kW = flowsArray[4] - flowsArray[0];//p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
		//v_batteryPowerElectric_kW = p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
		//v_currentPowerElectricity_kW += v_batteryPowerElectric_kW;
	}
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1671112355094</Id>
					<Name><![CDATA[f_manageElektrolyser]]></Name>
					<X>800</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ElektrolyserAsset]]></Name>
						<Type><![CDATA[J_EAConversionElektrolyser]]></Type>
					</Parameter>
					<Body><![CDATA[if (ElektrolyserAsset.getElectricCapacity_kW()>0) {
	
	//double availableCapacityFromBatteries_kW = p_batteryAsset == null ? 0 : ((J_EAStorageElectric)p_batteryAsset.j_ea).getCapacityAvailable_kW(); 
	double availableElectricPower_kW = p_contractedDeliveryCapacity_kW - v_currentPowerElectricity_kW;
	double excessElectricPower_kW = -(v_currentPowerElectricity_kW + p_contractedFeedinCapacity_kW); // Should at least draw this much power to stay within connection limits. Doesn't account for a battery!
	double eta_r = ElektrolyserAsset.getEta_r();
	//double connectionCapacity_kW = v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay
	double ProductionSetpoint_kW = ElektrolyserAsset.getElectricCapacity_kW() * 0.30 * eta_r; // Aim for average production power of xx% of elektrolyser peak power
	double elektrolyserSetpointElectric_kW = 0;
	
	if (p_electrolyserOperationMode==OL_ElectrolyserOperationMode.BALANCE) {
		double FeedbackGain_kWpkWh = 1.0/24; // Try to recover deficit in 24 hours
		elektrolyserSetpointElectric_kW = ProductionSetpoint_kW/eta_r + v_hydrogenProductionDeficit_kWh * FeedbackGain_kWpkWh /eta_r ;
	
		//traceln("Elektrolyser electric power setpoint: " + elektrolyserSetpointElectric_kW + " kW");
		//traceln("Elektrolyser power fraction: " + elektrolyserSetpointElectric_kW/ElektrolyserAsset.j_ea.getElectricCapacity_kW());
	} else if (p_electrolyserOperationMode==OL_ElectrolyserOperationMode.PRICE) {
		//if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();
		//double currentElectricityPriceCharge_eurpkWh = ownerActor.v_priceBandsDelivery.ceilingEntry(100.0).getValue(); // query price at 1kW
		double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(-excessElectricPower_kW); // query price at 1kW
		//traceln("Current electricity price for electrolyser: " + currentElectricityPriceCharge_eurpkWh);
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
		double deficitGain_eurpkWh = 1.0/1000000; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh
		double priceGain_peur = 5; // How strongly to ramp up power with price-delta's	
		double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + deficitGain_eurpkWh * v_hydrogenProductionDeficit_kWh;
		elektrolyserSetpointElectric_kW = max(0,ElektrolyserAsset.getElectricCapacity_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_peur)  ;
		//traceln("WTP hydrogen production is " + roundToDecimal(WTP_eurpkWh,3) + " eurpkWh is higher than electricity price " + roundToDecimal(currentElectricityPriceCharge_eurpkWh,3) + " eurpkWh, so produce! Setpoint power: " + round(elektrolyserSetpointElectric_kW) + " kW");
	}	
	
	// Limit elektrolyser power to available electric power on connection (assuming it is last in merit!)
	elektrolyserSetpointElectric_kW = min(availableElectricPower_kW,max(elektrolyserSetpointElectric_kW,excessElectricPower_kW));
	
	ElektrolyserAsset.f_updateAllFlows(elektrolyserSetpointElectric_kW/ElektrolyserAsset.getElectricCapacity_kW());
	
	v_hydrogenProductionDeficit_kWh += ProductionSetpoint_kW - ElektrolyserAsset.hydrogenProduction_kW;	// Update hydrogen production deficit
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1677836046815</Id>
					<Name><![CDATA[f_batteryManagementBalanceCoop]]></Name>
					<Description><![CDATA[Regeling voor balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>800</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[batterySOC]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if ((p_batteryAsset).getStorageCapacity_kWh() != 0){
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		if(((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent instanceof EnergyCoop ) {
			//traceln("Hello?");
//			v_previousPowerElectricity_kW = p_batteryAsset.v_powerFraction_fr * p_batteryAsset.j_ea.getElectricCapacity_kW();
			v_previousPowerElectricity_kW = p_batteryAsset.electricityConsumption_kW-p_batteryAsset.electricityProduction_kW;
			//traceln("Previous battery power: " + v_previousPowerElectricity_kW);
			double currentCoopElectricitySurplus_kW = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_electricitySurplus_kW + v_previousPowerElectricity_kW;
			//v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentCoopElectricitySurplus_kW - v_electricityPriceLowPassed_eurpkWh );
			
			double CoopConnectionCapacity_kW = 0.9*((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay
			double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity
			double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity
			double SOC_setp_fr = 0.5;			
			if (energyModel.v_totalInstalledWindPower_kW > 10000) {
				SOC_setp_fr = 0.95 - 0.95 * energyModel.v_WindYieldForecast_fr - 0.9*energyModel.v_SolarYieldForecast_fr;
				//traceln("Forecast-based SOC setpoint: " + SOC_setp_fr + " %");
			} else {
				SOC_setp_fr = (0.5 + 0.35 * Math.sin(2*Math.PI*(energyModel.t_h-10)/24))*(1-0.8*energyModel.v_WindYieldForecast_fr); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. 
			}
			double FeedbackGain_kWpSOC = 1.5 * p_batteryAsset.getElectricCapacity_kW(); // How strongly to aim for SOC setpoint
			double FeedforwardGain_kWpKw = 0.1; // Feedforward based on current surpluss in Coop
			double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.
			double chargeSetpoint_kW = 0;
			chargeSetpoint_kW = FeedforwardGain_kWpKw * (currentCoopElectricitySurplus_kW - chargeOffset_kW) + (SOC_setp_fr - batterySOC) * FeedbackGain_kWpSOC;
			chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
			p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
			//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");
		}
	}
}]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1663773842874</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1663774465365</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1663773842878</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1663773857868</Id>
			<Name><![CDATA[GCEnergyConversion]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_operateFlexAssets(){
	f_operateFlexAssets_overwrite();
}

@Override
public void f_resetSpecificGCStates(){
	f_resetSpecificGCStates_overwrite();
}

@Override
public void f_resetSpecificGCStatesAfterRapidRun(){
	f_resetSpecificGCStatesAfterRapidRun_overwrite();
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1663773857866</Id>
				<Name><![CDATA[1663773857866]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1663773857864</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1663773857867</CurrentLevel>
			<ConnectionsId>1663773857863</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1707149728754</Id>
					<Name><![CDATA[v_hydrogenProductionDeficit_kWh]]></Name>
					<X>1610</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708448002658</Id>
					<Name><![CDATA[v_electrolyserRegime]]></Name>
					<Description><![CDATA[Variable that contains the electrolyser regime at the current timestep.

Shutdown.
Standby.
Idle.
Functional. 
FullCapacity.]]></Description>
					<X>1610</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_ElectrolyserState]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[OL_ElectrolyserState.SHUTDOWN]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708448456203</Id>
					<Name><![CDATA[v_producedOxygen_kg]]></Name>
					<Description><![CDATA[value of the produced oxygen at the current time step. ]]></Description>
					<X>1610</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708949135932</Id>
					<Name><![CDATA[v_totalDownTimeElectrolyser_hr]]></Name>
					<X>1610</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708949154946</Id>
					<Name><![CDATA[v_totalEnergyLossIdle_kWh]]></Name>
					<X>1610</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1709045630640</Id>
					<Name><![CDATA[v_fuelcellRegime]]></Name>
					<X>2010</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1709045655596</Id>
					<Name><![CDATA[v_totalDownTimeFC_hr]]></Name>
					<X>2010</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715597878431</Id>
					<Name><![CDATA[v_electricityPriceMaxForProfit_eurpkWh]]></Name>
					<X>1610</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.05]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715607690911</Id>
					<Name><![CDATA[v_gridNodeCongestionLimit_kW]]></Name>
					<Description><![CDATA[Congestion limit  of the grid node. If this limit is reached, electrolyser should not be functional.]]></Description>
					<X>1610</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720522233689</Id>
					<Name><![CDATA[v_hydrogenInStorage_kWh]]></Name>
					<X>1610</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1707860525999</Id>
					<Name><![CDATA[p_conversionEfficiency]]></Name>
					<X>1610</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1707860525997</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1707860642684</Id>
					<Name><![CDATA[p_productionNominal_Nm3]]></Name>
					<X>1610</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216547</Id>
					<Name><![CDATA[p_conversionEfficiencyFC]]></Name>
					<X>2010</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216545</Id>
							<Label><![CDATA[p_fuelCellConversionEfficiency]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216581</Id>
					<Name><![CDATA[p_productionNominalFC_Nm3]]></Name>
					<X>2010</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216579</Id>
							<Label><![CDATA[p_productionNominalFC_Nm3]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216603</Id>
					<Name><![CDATA[p_productionMinimumFC_Nm3]]></Name>
					<X>2010</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216601</Id>
							<Label><![CDATA[p_productionMinimumFC_Nm3]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216633</Id>
					<Name><![CDATA[p_powerNominalFC_kW]]></Name>
					<X>2010</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216631</Id>
							<Label><![CDATA[p_powerNominalFC_kW]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216658</Id>
					<Name><![CDATA[p_energyProductionNominalFC_kWh_Nm3]]></Name>
					<X>2010</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216656</Id>
							<Label><![CDATA[p_EnergyProductionNominalFC_kWh_Nm3]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216687</Id>
					<Name><![CDATA[p_inputPressureFC_Bar]]></Name>
					<X>2010</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216685</Id>
							<Label><![CDATA[p_inputPressureFC_Bar]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216711</Id>
					<Name><![CDATA[p_loadChangeTimeMinMaxFC_s]]></Name>
					<Description><![CDATA[The time it takes for the electrolyser to shift from minimum to maximum production in seconds]]></Description>
					<X>2010</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216709</Id>
							<Label><![CDATA[p_loadChangeTimeMinMaxFC_s]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216759</Id>
					<Name><![CDATA[p_startUpTimeIdleFC_s]]></Name>
					<X>2010</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216757</Id>
							<Label><![CDATA[p_startUpTimeIdleFC_s]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216780</Id>
					<Name><![CDATA[p_startUpTimeShutdownFC_s]]></Name>
					<X>2010</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709045216778</Id>
							<Label><![CDATA[p_startUpTimeShutdownFC_s]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709045216801</Id>
					<Name><![CDATA[p_electricityPriceMinForProfitFC_eurpkWh]]></Name>
					<X>2010</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.05]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1709045216799</Id>
							<Label><![CDATA[p_electricityPriceMinForProfitFC_eurpkWh]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1709733732105</Id>
					<Name><![CDATA[p_minProductionRatio]]></Name>
					<Description><![CDATA[ratio of the nominal power of the electrolyser for minimum production]]></Description>
					<X>1610</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1709733732103</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1717070647695</Id>
					<Name><![CDATA[b_forecast_lastWeekBased]]></Name>
					<X>1600</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1717070647693</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1716916299738</Id>
					<Name><![CDATA[c_forecast_RES_kW]]></Name>
					<X>1610</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1716993724806</Id>
					<Name><![CDATA[c_forecast_gridNodePowerFlow_kW]]></Name>
					<X>1610</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1707149702398</Id>
					<Name><![CDATA[f_manageElektrolyserOUD]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1610</X><Y>-40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ElektrolyserAsset]]></Name>
						<Type><![CDATA[J_EAConversionElektrolyser]]></Type>
					</Parameter>
					<Body><![CDATA[if (ElektrolyserAsset.getElectricCapacity_kW()>0) {
	
	//double availableCapacityFromBatteries_kW = p_batteryAsset == null ? 0 : ((J_EAStorageElectric)p_batteryAsset.j_ea).getCapacityAvailable_kW(); 
	double availableElectricPower_kW = v_allowedCapacity_kW - v_currentPowerElectricity_kW;
	double excessElectricPower_kW = -(v_currentPowerElectricity_kW + v_allowedCapacity_kW); // Should at least draw this much power to stay within connection limits. Doesn't account for a battery!
	double eta_r = ElektrolyserAsset.getEta_r();
	double connectionCapacity_kW = v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay
	double ProductionSetpoint_kW = ElektrolyserAsset.getElectricCapacity_kW() * 0.30 * eta_r; // Aim for average production power of xx% of elektrolyser peak power
	double elektrolyserSetpointElectric_kW = 0;
	
	if (p_elektrolyserOperationMode==OL_ElektrolyserOperationMode.BALANCE) {
		double FeedbackGain_kWpkWh = 1.0/24; // Try to recover deficit in 24 hours
		elektrolyserSetpointElectric_kW = ProductionSetpoint_kW/eta_r + v_hydrogenProductionDeficit_kWh * FeedbackGain_kWpkWh /eta_r ;
	
		//traceln("Elektrolyser electric power setpoint: " + elektrolyserSetpointElectric_kW + " kW");
		//traceln("Elektrolyser power fraction: " + elektrolyserSetpointElectric_kW/ElektrolyserAsset.j_ea.getElectricCapacity_kW());
	} else if (p_elektrolyserOperationMode==OL_ElektrolyserOperationMode.PRICE) {
		//if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();
		//double currentElectricityPriceCharge_eurpkWh = ownerActor.v_priceBandsDelivery.ceilingEntry(100.0).getValue(); // query price at 1kW
		double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(-excessElectricPower_kW); // query price at 1kW
		//traceln("Current electricity price for electrolyser: " + currentElectricityPriceCharge_eurpkWh);
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
		double deficitGain_eurpkWh = 1.0/1000000; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh
		double priceGain_peur = 5; // How strongly to ramp up power with price-delta's	
		double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + deficitGain_eurpkWh * v_hydrogenProductionDeficit_kWh;
		elektrolyserSetpointElectric_kW = max(0,ElektrolyserAsset.getElectricCapacity_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_peur)  ;
		//traceln("WTP hydrogen production is " + roundToDecimal(WTP_eurpkWh,3) + " eurpkWh is higher than electricity price " + roundToDecimal(currentElectricityPriceCharge_eurpkWh,3) + " eurpkWh, so produce! Setpoint power: " + round(elektrolyserSetpointElectric_kW) + " kW");
	}	
	
	// Limit elektrolyser power to available electric power on connection (assuming it is last in merit!)
	elektrolyserSetpointElectric_kW = min(availableElectricPower_kW,max(elektrolyserSetpointElectric_kW,excessElectricPower_kW));
	
	double[] flowsArray = ElektrolyserAsset.f_updateAllFlows(elektrolyserSetpointElectric_kW/ElektrolyserAsset.getElectricCapacity_kW());
	
	v_conversionPowerElectric_kW += flowsArray[4];
	//v_hydrogenElectricityConsumption_kW += flowsArray[4];	
	
	v_hydrogenProductionDeficit_kWh += ProductionSetpoint_kW - ElektrolyserAsset.hydrogenProduction_kW;	// Update hydrogen production deficit
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1707149769851</Id>
					<Name><![CDATA[f_operateFlexAssets_overwriteOUD]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1610</X><Y>-20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for( J_EA v : c_conversionAssets ){
	if (v instanceof J_EAConversionElektrolyser) {
		f_manageElektrolyser((J_EAConversionElektrolyser)v);
	}
	if (v instanceof J_EAConversionCurtailer) {
		// Must go last! 
	} /*else {		
		v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
		v_conversionPowerElectric_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
		v_currentPowerMethane_kW += v.methaneConsumption_kW - v.methaneProduction_kW;
		v_currentPowerHydrogen_kW += v.hydrogenConsumption_kW - v.hydrogenProduction_kW;
		v_currentPowerHeat_kW += v.heatConsumption_kW - v.heatProduction_kW;
		v_currentPowerDiesel_kW += v.dieselConsumption_kW;
	} */
}

// Determine EV charging
f_manageCharging();
//v_currentPowerElectricity_kW += v_evChargingPowerElectric_kW;

// Operate battery
if (p_batteryAsset != null){
	v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
	if( p_batteryOperationMode == OL_BatteryOperationMode.BALANCE) {
		f_batteryManagementBalanceCoop( v_batterySOC_fr );
	}
	else {
		f_batteryManagementPrice( v_batterySOC_fr );
	}
	p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);
	//v_batteryPowerElectric_kW = p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
	//v_currentPowerElectricity_kW += v_batteryPowerElectric_kW;
}

// Operate curtailer. Must be the last asset to run!!

if (p_curtailer != null){
	f_manageCurtailer(p_curtailer);
	//v_currentPowerElectricity_kW += p_curtailer.electricityConsumption_kW;
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1707149801187</Id>
					<Name><![CDATA[f_batteryManagementBalanceCoop]]></Name>
					<Description><![CDATA[Regeling voor balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>1350</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[batterySOC]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if ((p_batteryAsset).getStorageCapacity_kWh() != 0){
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		if(((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent instanceof EnergyCoop ) {
			//traceln("Hello?");
//			v_previousPowerElectricity_kW = p_batteryAsset.v_powerFraction_fr * p_batteryAsset.j_ea.getElectricCapacity_kW();
			v_previousPowerElectricity_kW = p_batteryAsset.electricityConsumption_kW-p_batteryAsset.electricityProduction_kW;
			//traceln("Previous battery power: " + v_previousPowerElectricity_kW);
			double currentCoopElectricitySurplus_kW = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_electricitySurplus_kW + v_previousPowerElectricity_kW;
			//v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentCoopElectricitySurplus_kW - v_electricityPriceLowPassed_eurpkWh );
			
			double CoopConnectionCapacity_kW = 0.9*((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay
			double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity
			double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity
			double SOC_setp_fr = 0.5;			
			if (energyModel.v_totalInstalledWindPower_kW > 10000) {
				SOC_setp_fr = 0.95 - 0.95 * energyModel.v_WindYieldForecast_fr - 0.9*energyModel.v_SolarYieldForecast_fr;
				//traceln("Forecast-based SOC setpoint: " + SOC_setp_fr + " %");
			} else {
				SOC_setp_fr = (0.5 + 0.35 * Math.sin(2*Math.PI*(energyModel.t_h-10)/24))*(1-0.8*energyModel.v_WindYieldForecast_fr); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. 
			}
			double FeedbackGain_kWpSOC = 1.5 * p_batteryAsset.getElectricCapacity_kW(); // How strongly to aim for SOC setpoint
			double FeedforwardGain_kWpKw = 0.1; // Feedforward based on current surpluss in Coop
			double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.
			double chargeSetpoint_kW = 0;
			chargeSetpoint_kW = FeedforwardGain_kWpKw * (currentCoopElectricitySurplus_kW - chargeOffset_kW) + (SOC_setp_fr - batterySOC) * FeedbackGain_kWpSOC;
			chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
			p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
			//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");
		}
	}
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1707149873038</Id>
					<Name><![CDATA[f_manageCurtailer]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1350</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[CurtailerAsset]]></Name>
						<Type><![CDATA[J_EAConversionCurtailer]]></Type>
					</Parameter>
					<Body><![CDATA[//traceln("Hello! " + CurtailerAsset.j_ea.getElectricCapacity_kW());
if (CurtailerAsset.getElectricCapacity_kW()>0) {
	double curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW + p_connectionCapacity_kW);
	CurtailerAsset.f_updateAllFlows(curtailerSetpointElectric_kW/CurtailerAsset.getElectricCapacity_kW());
	
	/*if ( curtailerSetpointElectric_kW > 0 ) {
		traceln("Windfarm is curtailing " + curtailerSetpointElectric_kW + " kW!");
	}*/
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708089250229</Id>
					<Name><![CDATA[f_manageElectrolyser]]></Name>
					<X>1610</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ElectrolyserAsset]]></Name>
						<Type><![CDATA[J_EAConversionElectrolyser]]></Type>
					</Parameter>
					<Body><![CDATA[
if (ElectrolyserAsset.getElectricCapacity_kW()>0) {
	//double availableCapacityFromBatteries_kW = p_batteryAsset == null ? 0 : ((J_EAStorageElectric)p_batteryAsset.j_ea).getCapacityAvailable_kW(); 
	
	double v_allowedDeliveryCapacity_kW = p_contractedDeliveryCapacity_kW;
	double v_allowedFeedinCapacity_kW = p_contractedFeedinCapacity_kW;
	double availableElectricPower_kW = max(0, v_allowedDeliveryCapacity_kW - v_currentPowerElectricity_kW);
	double excessElectricPower_kW = max(0, - v_currentPowerElectricity_kW - v_allowedFeedinCapacity_kW);
	
	double eta_r = ElectrolyserAsset.getEta_r();
	//double connectionCapacity_kW = v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay
	double ProductionSetpoint_kW = ElectrolyserAsset.getElectricCapacity_kW() * 0.30 * eta_r; // Aim for average production power of xx% of elektrolyser peak power
	double electrolyserSetpointElectric_kW = 0;
	
	
	//Electrolyser output based on current and future regime
	electrolyserSetpointElectric_kW = f_electrolyserRegime(electrolyserSetpointElectric_kW, excessElectricPower_kW, ElectrolyserAsset);
	
	data_liveWeekElectrolyserPower_kW.add(energyModel.t_h, electrolyserSetpointElectric_kW);
		
	/*
	if (p_elektrolyserOperationMode==OL_ElektrolyserOperationMode.BALANCE) {
		double FeedbackGain_kWpkWh = 1.0/24; // Try to recover deficit in 24 hours
		elektrolyserSetpointElectric_kW = ProductionSetpoint_kW/eta_r + v_hydrogenProductionDeficit_kWh * FeedbackGain_kWpkWh /eta_r ;
	
		//traceln("Elektrolyser electric power setpoint: " + elektrolyserSetpointElectric_kW + " kW");
		//traceln("Elektrolyser power fraction: " + elektrolyserSetpointElectric_kW/ElektrolyserAsset.j_ea.getElectricCapacity_kW());
	} else if (p_elektrolyserOperationMode==OL_ElektrolyserOperationMode.PRICE) {
		//if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();
		//double currentElectricityPriceCharge_eurpkWh = ownerActor.v_priceBandsDelivery.ceilingEntry(100.0).getValue(); // query price at 1kW
		double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(-excessElectricPower_kW); // query price at 1kW
		//traceln("Current electricity price for electrolyser: " + currentElectricityPriceCharge_eurpkWh);
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
		double deficitGain_eurpkWh = 1.0/1000000; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh
		double priceGain_peur = 5; // How strongly to ramp up power with price-delta's	
		double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + deficitGain_eurpkWh * v_hydrogenProductionDeficit_kWh;
		elektrolyserSetpointElectric_kW = max(0,ElektrolyserAsset.getElectricCapacity_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_peur)  ;
		elektrolyserSetpointElectric_kW = random()*ElektrolyserAsset.getElectricCapacity_kW();
		//traceln("WTP hydrogen production is " + roundToDecimal(WTP_eurpkWh,3) + " eurpkWh is higher than electricity price " + roundToDecimal(currentElectricityPriceCharge_eurpkWh,3) + " eurpkWh, so produce! Setpoint power: " + round(elektrolyserSetpointElectric_kW) + " kW");
	}	
	*/
	
	// Limit elektrolyser power to available electric power on connection (assuming it is last in merit!)
	electrolyserSetpointElectric_kW = min(availableElectricPower_kW,max(electrolyserSetpointElectric_kW, excessElectricPower_kW));
	
	
	
	//Output
	double[] flowsArray = ElectrolyserAsset.f_updateAllFlows(electrolyserSetpointElectric_kW/ElectrolyserAsset.getElectricCapacity_kW());
	
	v_conversionPowerElectric_kW += flowsArray[4];
	v_hydrogenElectricityConsumption_kW += flowsArray[4];
	
	v_hydrogenProductionDeficit_kWh += ProductionSetpoint_kW - ElectrolyserAsset.hydrogenProduction_kW;	// Update hydrogen production deficit	
	
	
	// This variable is reset after a rapidrun, but not saved before running the headless simulation.
	v_hydrogenInStorage_kWh += flowsArray[2] * energyModel.p_timeStep_h;
	
	/*if (b_useHydrogenLocally) {
		List<GridConnection> receivingGCs = findAll(energyModel.c_gridConnections, gc -> gc.b_useHydrogenLocally && gc != this);
		//traceln("hydrogen reveicing gcs: %s", receivingGCs);
		for (GridConnection gc : receivingGCs) {
			
			gc.v_hydrogenInStorage_kWh += energyModel.p_timeStep_h * flowsArray[2] / receivingGCs.size();					
		}
	}*/

}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708089644411</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite]]></Name>
					<X>800</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for( J_EA v : c_conversionAssets ){
	if (v instanceof J_EAConversionElectrolyser) {
		f_manageElectrolyser((J_EAConversionElectrolyser)v);
	}
	//if (v instanceof J_EAConversionCurtailer) {
		// Must go last! 
	//} 
	/*else {		
		v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
		v_conversionPowerElectric_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
		v_currentPowerMethane_kW += v.methaneConsumption_kW - v.methaneProduction_kW;
		v_currentPowerHydrogen_kW += v.hydrogenConsumption_kW - v.hydrogenProduction_kW;
		v_currentPowerHeat_kW += v.heatConsumption_kW - v.heatProduction_kW;
		v_currentPowerDiesel_kW += v.dieselConsumption_kW;
	} */
}

// Determine EV charging
f_manageCharging();
//v_currentPowerElectricity_kW += v_evChargingPowerElectric_kW;

// Operate battery
if (p_batteryAsset != null){
	v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
	if( p_batteryOperationMode == OL_BatteryOperationMode.BALANCE) {
		f_batteryManagementBalanceCoop( v_batterySOC_fr );
	}
	else {
		f_batteryManagementPrice( v_batterySOC_fr );
	}
	p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);
	//v_batteryPowerElectric_kW = p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
	//v_currentPowerElectricity_kW += v_batteryPowerElectric_kW; 
}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708447959640</Id>
					<Name><![CDATA[f_electrolyserRegime]]></Name>
					<X>1620</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[elektrolyserSetpointElectric_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[excessElectricPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[ElectrolyserAsset]]></Name>
						<Type><![CDATA[J_EAConversionElectrolyser]]></Type>
					</Parameter>
					<Body><![CDATA[double solar_forecast_kW;
double wind_forecast_kW;

double forecast_time_h = ElectrolyserAsset.getstartUpTimeStandby_h()+ 2*energyModel.p_timeStep_h;

//Get current limitation values
double currentGridNodePowerFlow_kW = this.l_parentNodeElectric.getConnectedAgent().v_currentLoadElectricity_kW - ElectrolyserAsset.getLastFlows()[4];
data_liveWeekGridNoderPowerFlow_kW.add(energyModel.t_h, this.l_parentNodeElectric.getConnectedAgent().v_currentLoadElectricity_kW);

switch (p_electrolyserOperationMode){

	case PRICE:
		f_electrolyserRegimeControl_Price(excessElectricPower_kW, ElectrolyserAsset);
	break;
	case BALANCE:
		f_electrolyserRegimeControl_Balance(currentGridNodePowerFlow_kW, forecast_time_h, ElectrolyserAsset);
	break;
}

switch (p_electrolyserOperationMode){

	case PRICE:
		f_electrolyserRegimeControl_Price(excessElectricPower_kW, ElectrolyserAsset);
	break;
	case BALANCE:
		f_electrolyserRegimeControl_Balance(currentGridNodePowerFlow_kW, forecast_time_h, ElectrolyserAsset);
	break;	
	case ALWAYS_IDLE:
		f_electrolyserRegimeControl_AlwaysIdle(currentGridNodePowerFlow_kW, ElectrolyserAsset);
	break;
}

switch (ElectrolyserAsset.getState()){

	case SHUTDOWN:
		elektrolyserSetpointElectric_kW = 0;
		
		if(energyModel.v_isRapidRun){
		v_totalDownTimeElectrolyser_hr = v_totalDownTimeElectrolyser_hr + 0.25;
		}
	break;
	
	case STANDBY: 
		elektrolyserSetpointElectric_kW = 0;
		
		if(energyModel.v_isRapidRun){
		v_totalDownTimeElectrolyser_hr = v_totalDownTimeElectrolyser_hr + 0.25;
		}
	break;
	
	case IDLE: 
		elektrolyserSetpointElectric_kW = 0.025*ElectrolyserAsset.getElectricCapacity_kW(); // 1 - 5 percent of nominal load to keep it warm!
		
		if(energyModel.v_isRapidRun){
			v_totalDownTimeElectrolyser_hr = v_totalDownTimeElectrolyser_hr + 0.25;
			v_totalEnergyLossIdle_kWh = v_totalEnergyLossIdle_kWh + elektrolyserSetpointElectric_kW*0.25;
		}
	break;
	
	case FUNCTIONAL:
		switch (p_electrolyserOperationMode){
		
			case PRICE:
				elektrolyserSetpointElectric_kW = ElectrolyserAsset.getElectricCapacity_kW()*p_minProductionRatio;
			break;
			
			case BALANCE:
				elektrolyserSetpointElectric_kW = ElectrolyserAsset.getElectricCapacity_kW()*p_minProductionRatio;
			break;
			case ALWAYS_IDLE:
				elektrolyserSetpointElectric_kW = ElectrolyserAsset.getElectricCapacity_kW()*p_minProductionRatio;
			break;
		}
	break;
	
	case FULLCAPACITY:
		switch (p_electrolyserOperationMode){
		
			case PRICE:
				elektrolyserSetpointElectric_kW = ElectrolyserAsset.getElectricCapacity_kW();
			break;
			
			case BALANCE:
				elektrolyserSetpointElectric_kW = min(ElectrolyserAsset.getElectricCapacity_kW(), abs(v_gridNodeCongestionLimit_kW - currentGridNodePowerFlow_kW));
			break;
			case ALWAYS_IDLE:
				elektrolyserSetpointElectric_kW = min(ElectrolyserAsset.getElectricCapacity_kW(), abs(v_gridNodeCongestionLimit_kW - currentGridNodePowerFlow_kW));
			break;
		}
	break;
}


return elektrolyserSetpointElectric_kW;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708448673879</Id>
					<Name><![CDATA[f_electrolyserRegimeControl_Price]]></Name>
					<Description><![CDATA[Function that defines the regime of the hydrogen plant of the next timestep. ]]></Description>
					<X>1630</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[excessElectricPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[ElectrolyserAsset]]></Name>
						<Type><![CDATA[J_EAConversionElectrolyser]]></Type>
					</Parameter>
					<Body><![CDATA[ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();
double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(-excessElectricPower_kW); // query price at 1kW
double currentElectricityPriceEPEX_eurpkWh = energyModel.v_epexForecast_eurpkWh;

switch (ElectrolyserAsset.getState()){

	case SHUTDOWN:
		if (currentElectricityPriceEPEX_eurpkWh < v_electricityPriceMaxForProfit_eurpkWh){
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
		else{
			ElectrolyserAsset.setState(OL_ElectrolyserState.SHUTDOWN);
		}
	break;

	case STANDBY: 
		if (currentElectricityPriceEPEX_eurpkWh < v_electricityPriceMaxForProfit_eurpkWh){
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
		else{
			ElectrolyserAsset.setState( OL_ElectrolyserState.STANDBY);
		}
	break;

	case IDLE: 
		if (currentElectricityPriceEPEX_eurpkWh < v_electricityPriceMaxForProfit_eurpkWh){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FUNCTIONAL);
		}
		else{
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
	break;

	case FUNCTIONAL:
		if (currentElectricityPriceEPEX_eurpkWh < v_electricityPriceMaxForProfit_eurpkWh){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FULLCAPACITY);
		}
		else{
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
	break;
	
	case FULLCAPACITY:
		if (currentElectricityPriceEPEX_eurpkWh < v_electricityPriceMaxForProfit_eurpkWh){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FULLCAPACITY);
		}
		else{
			ElectrolyserAsset.setState(OL_ElectrolyserState.FUNCTIONAL);
		}
	break;
}


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1709045117969</Id>
					<Name><![CDATA[f_manageFuelCell]]></Name>
					<X>2020</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
//if (FuelCellAsset.getElectricCapacity_kW()>0) {


//}




]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715611921617</Id>
					<Name><![CDATA[f_electrolyserRegimeControl_Balance]]></Name>
					<X>1630</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentGridNodePowerFlow_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[forecast_time_h]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[ElectrolyserAsset]]></Name>
						<Type><![CDATA[J_EAConversionElectrolyser]]></Type>
					</Parameter>
					<Body><![CDATA[double solar_forecast_kW;
double wind_forecast_kW;

//Initialize limitation values
if (c_forecast_RES_kW.size() == 0){
		
	for(int i = energyModel.v_timeStepsElapsed; i < energyModel.v_timeStepsElapsed + roundToInt(forecast_time_h/energyModel.p_timeStep_h); i++){
		solar_forecast_kW = - energyModel.tf_p_solar_e_normalized(energyModel.t_h + i*energyModel.p_timeStep_h) * energyModel.v_totalInstalledPVPower_kW;
		wind_forecast_kW = - energyModel.tf_p_wind_e_normalized(energyModel.t_h + i*energyModel.p_timeStep_h) * energyModel.v_totalInstalledWindPower_kW;
		
		c_forecast_RES_kW.add(solar_forecast_kW + wind_forecast_kW);
		
		c_forecast_gridNodePowerFlow_kW.add(currentGridNodePowerFlow_kW - c_forecast_RES_kW.get(0) + solar_forecast_kW + wind_forecast_kW);
		
	}
}

//Get future limitation values
else if(energyModel.v_timeStepsElapsed < (8760-forecast_time_h)/energyModel.p_timeStep_h){
	
	//Get current RES production
	double currentRESProduction_kW = c_forecast_RES_kW.get(0);
	
	//Update forecast array RES
	c_forecast_RES_kW.remove(0);
	
	solar_forecast_kW = - energyModel.tf_p_solar_e_normalized(energyModel.t_h + forecast_time_h) * energyModel.v_totalInstalledPVPower_kW;
	wind_forecast_kW = - energyModel.tf_p_wind_e_normalized(energyModel.t_h + forecast_time_h) * energyModel.v_totalInstalledWindPower_kW;
	
	c_forecast_RES_kW.add(solar_forecast_kW + wind_forecast_kW); 
	
	//Update forecast array Grid node power flow
	c_forecast_gridNodePowerFlow_kW.remove(0);
	
	//Get past grid node power flow and weather (last week) if last week forecast prediction is selected.
	if (b_forecast_lastWeekBased && data_liveWeekElectrolyserPower_kW.size() > 672 - roundToInt(forecast_time_h/energyModel.p_timeStep_h)){ // Use last week to create the forecast	
	
		double lastWeekGridNodePowerFlow_kW = data_liveWeekGridNoderPowerFlow_kW.getY(roundToInt(forecast_time_h/energyModel.p_timeStep_h)) - data_liveWeekElectrolyserPower_kW.getY(roundToInt(forecast_time_h/energyModel.p_timeStep_h));
		double solar_lastWeek_kW = - energyModel.tf_p_solar_e_normalized(energyModel.t_h + forecast_time_h - 168) * energyModel.v_totalInstalledPVPower_kW;
		double wind_lastWeek_kW = - energyModel.tf_p_wind_e_normalized(energyModel.t_h + forecast_time_h - 168) * energyModel.v_totalInstalledWindPower_kW;
			
		c_forecast_gridNodePowerFlow_kW.add(lastWeekGridNodePowerFlow_kW - solar_lastWeek_kW - wind_lastWeek_kW + solar_forecast_kW + wind_forecast_kW);
	}
	else{//use current power flow to predict forecast
		c_forecast_gridNodePowerFlow_kW.add(currentGridNodePowerFlow_kW - currentRESProduction_kW + c_forecast_RES_kW.get(roundToInt(forecast_time_h/energyModel.p_timeStep_h)-1));
	}
}


//Set state based on current state and forecast.
switch (ElectrolyserAsset.getState()){

	case SHUTDOWN: //Not ready to be powerd up and complete shut down (when broken, maintenance, etc.)
	
	break;

	case STANDBY: // Ready to be powered on, but no electricity consumption.
		//Check if electrolyser will be able to be functional at least two time steps when powering up, if so: power_up = true.
		if (c_forecast_gridNodePowerFlow_kW.get(roundToInt(forecast_time_h/energyModel.p_timeStep_h)-2) < v_gridNodeCongestionLimit_kW && c_forecast_gridNodePowerFlow_kW.get(roundToInt(forecast_time_h/energyModel.p_timeStep_h)-1) < v_gridNodeCongestionLimit_kW){
			ElectrolyserAsset.setState(OL_ElectrolyserState.POWER_UP);
			ElectrolyserAsset.setRemaining_power_up_duration(roundToInt(ElectrolyserAsset.getstartUpTimeStandby_h()/energyModel.p_timeStep_h));
		}
	break;
	
	case POWER_UP:
		if(ElectrolyserAsset.getRemaining_power_up_duration() == 0){
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
	break;

	case IDLE: // Ready to start producting hydrogen, heated up, so consuming electricity, but not producing hydrogen yet.
		if ( currentGridNodePowerFlow_kW < v_gridNodeCongestionLimit_kW ){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FUNCTIONAL);
		}
		else{
			boolean power_down = true;
			for(int i = 0; i < c_forecast_gridNodePowerFlow_kW.size() - 2; i++){
				if (c_forecast_gridNodePowerFlow_kW.get(i) < v_gridNodeCongestionLimit_kW){
					power_down = false;
				}
			}
		
			//Set mode based on power down or not.
			if (power_down){
				ElectrolyserAsset.setState(OL_ElectrolyserState.STANDBY);
			}
		}
	break;

	case FUNCTIONAL: // Producing hydrogen at minimum possible amount (to make sure system is working correctly, no leaks).
		if ( currentGridNodePowerFlow_kW < v_gridNodeCongestionLimit_kW ){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FULLCAPACITY);
		}
		else{
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
	break;
	
	case FULLCAPACITY:	// Producing hydrogen as much as possible.
		if ( currentGridNodePowerFlow_kW < v_gridNodeCongestionLimit_kW ){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FULLCAPACITY);
		}
		else{
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
	break;
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717066943639</Id>
					<Name><![CDATA[f_resetSpecificGCStates_overwrite]]></Name>
					<X>1140</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Reset variables 
v_totalDownTimeElectrolyser_hr = 0;
v_totalEnergyLossIdle_kWh = 0;
v_producedOxygen_kg = 0;
v_hydrogenInStorage_kWh = 0;

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717068271650</Id>
					<Name><![CDATA[f_resetSpecificGCStatesAfterRapidRun_overwrite]]></Name>
					<X>1140</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Rest forecast collections
c_forecast_RES_kW.clear();
c_forecast_gridNodePowerFlow_kW.clear();


//Reset dataset
data_liveWeekElectrolyserPower_kW.reset();
data_liveWeekGridNoderPowerFlow_kW.reset();

//Reset variables
v_hydrogenProductionDeficit_kWh = 0;
v_hydrogenInStorage_kWh = 0;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717139694847</Id>
					<Name><![CDATA[f_electrolyserRegimeControl_AlwaysIdle]]></Name>
					<X>1610</X><Y>-110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentGridNodePowerFlow_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[ElectrolyserAsset]]></Name>
						<Type><![CDATA[J_EAConversionElectrolyser]]></Type>
					</Parameter>
					<Body><![CDATA[switch (ElectrolyserAsset.getState()){

	case SHUTDOWN: //Not ready to be powerd up and complete shut down (when broken, maintenance, etc.)
	break;

	case STANDBY: // Ready to be powered on, but no electricity consumption.
		ElectrolyserAsset.setState(OL_ElectrolyserState.POWER_UP);
	break;
	
	case POWER_UP:
		ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
	break;

	case IDLE: // Ready to start producting hydrogen, heated up, so consuming electricity, but not producing hydrogen yet.
		if ( currentGridNodePowerFlow_kW < v_gridNodeCongestionLimit_kW ){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FUNCTIONAL);
		}
	break;

	case FUNCTIONAL: // Producing hydrogen at minimum possible amount (to make sure system is working correctly, no leaks).
		if ( currentGridNodePowerFlow_kW < v_gridNodeCongestionLimit_kW ){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FULLCAPACITY);
		}
		else{
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
	break;
	
	case FULLCAPACITY:	// Producing hydrogen as much as possible.
		if ( currentGridNodePowerFlow_kW < v_gridNodeCongestionLimit_kW ){
			ElectrolyserAsset.setState(OL_ElectrolyserState.FULLCAPACITY);
		}
		else{
			ElectrolyserAsset.setState(OL_ElectrolyserState.IDLE);
		}
	break;
}
]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1717063231444</Id>
					<Name><![CDATA[data_liveWeekElectrolyserPower_kW]]></Name>
					<X>1610</X><Y>390</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1717142400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1717069403489</Id>
					<Name><![CDATA[data_liveWeekGridNoderPowerFlow_kW]]></Name>
					<X>1600</X><Y>540</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1717142400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>672</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<AgentLinks>
				<AgentLink>
					<Id>1663773857863</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1663774487514</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1663773857867</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1707149618071</Id>
					<Name><![CDATA[rectangle4]]></Name>
					<X>1580</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-14774017</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>280</Width>
					<Height>490</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1709045045153</Id>
					<Name><![CDATA[rectangle5]]></Name>
					<X>1980</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-65281</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>280</Width>
					<Height>490</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1709045095108</Id>
					<Name><![CDATA[text11]]></Name>
					<X>2000</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[H2 FuelCell functionality]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1712934875018</Id>
					<Name><![CDATA[textH2elec1]]></Name>
					<X>1600</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[H2 electrolyser functionality]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1665480522864</Id>
			<Name><![CDATA[GCIndustry]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_connectToJ_EA(J_EA j_ea){
	f_connectToJ_EA_default(j_ea);
	f_connectTo_J_EA_Industry(j_ea);
}

@Override
public void f_operateFlexAssets(){
	f_operateFlexAssets_overwrite();
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1665480522862</Id>
				<Name><![CDATA[1665480522862]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1665561600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1665480522860</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1665480522863</CurrentLevel>
			<ConnectionsId>1665480522859</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1684919215378</Id>
					<Name><![CDATA[v_previousPowerMethane_kW]]></Name>
					<X>1120</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1665498760168</Id>
					<Name><![CDATA[f_connectToChild_overwrite]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>780</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingParentNode]]></Name>
						<Type><![CDATA[Agent]]></Type>
					</Parameter>
					<Body><![CDATA[//assetLinks.connectTo(ConnectingParentNode);
EnergyAsset EA = (EnergyAsset) ConnectingParentNode;
c_energyAssets.add(EA);

if (EA.j_ea instanceof J_EAConsumption) {
	//c_consumptionAssets.add(EA);
} else if (EA.j_ea instanceof J_EAProduction ) {
//c_productionAssets.add(EA);
} else if (EA.j_ea instanceof J_EAStorage ) {
	//c_storageAssets.add(EA);
	if (EA.j_ea instanceof J_EAStorageHeat) {
		//p_BuildingThermalAsset = EA; Obsolete! Need to replace in connectToJ_EA
	}
	else if (EA.j_ea instanceof J_EAEV) {
		//c_vehicleAssets.add( EA );
		//c_vehicleAssets.get( v_vehicleIndex ).v_powerFraction_fr = 1;
		/*MobilityTracker m = main.add_mobilityTrackers();
		c_mobilityTrackers.add( m );
		m.p_vehicleIndex = v_vehicleIndex;
		m.p_gridConnection = this;
		m.p_vehicleInstance = (J_EAEV)m.p_vehicleInstance;
		m.p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );
		m.p_vehicleInstance = (J_EAEV)m.p_energyAsset.j_ea;
		m.p_mobilityPatternType = OL_MobilityPatternType.TRUCK;
		((J_EAEV)m.p_vehicleInstance).setMobilityTracker( m );
		m.f_getData();*/
		//v_vehicleIndex ++;
	}
} else if (EA.j_ea instanceof J_EAConversion) {
	c_conversionAssets.add((J_EAConversion)EA.j_ea);
	if(p_gridConnectionType == OL_GridConnectionType.AGRO_ENERGYHUB) {
	
		if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHydrogenBurner) {
			if (p_primaryHeatingAsset==null) {
				p_primaryHeatingAsset = (J_EAConversion)EA.j_ea ;
			} else { 
				p_secondaryHeatingAsset = (J_EAConversion)EA.j_ea ;
			}
		} else if ( EA.j_ea instanceof J_EAConversionHeatPump  || EA.j_ea instanceof J_EAConversionGasCHP) {
			if (p_primaryHeatingAsset==null) {
				//p_primaryHeatingAsset = EA; Obsolete!
			} else { 
				p_secondaryHeatingAsset = p_primaryHeatingAsset;
				//p_primaryHeatingAsset = EA; Obsolete!
			}
			if (EA.j_ea instanceof J_EAConversionHeatPump) {
				((J_EAConversionHeatPump)p_primaryHeatingAsset).outputTemperature_degC = 80; // For pastorizing milk
			}
			//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());
		} else 	if (EA.j_ea instanceof J_EAConversionCurtailer || EA.j_ea instanceof J_EAConversionCurtailerHeat) {
			p_curtailer = (J_EAConversionCurtailer)EA.j_ea ;
		} else {
			traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingParentNode.getId() + " is of unknown type or null! ");
		}
	} else {
		if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHydrogenBurner ) {
			p_primaryHeatingAsset = (J_EAConversion)EA.j_ea ;
		} else {
			traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingParentNode.getId() + " is of unknown type or null! ");
		}
	}

}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1665499506761</Id>
					<Name><![CDATA[f_operateFixedConsumptionAssets_overwrite]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[switch( p_gridConnectionType ) {
	case STEEL:
		for(EnergyAsset ea : c_consumptionAssets) {
			if( ea.p_energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ) {
				ea.f_updateElectricityFlows( main.v_currentIndustrySteelElectricityDemand_fr );
			}
			else if( ea.p_energyAssetType == OL_EnergyAssetType.HEAT_DEMAND ) {
				ea.f_updateAllFlows( main.v_currentIndustrySteelHeatDemand_fr );
			}
			else {
				ea.v_powerFraction_fr = 0; // To disable other asset
				traceln("industry has other consumption assets than modeled so far");
			}
		}
	break;
	case INDUSTRY_OTHER:
		for(EnergyAsset ea : c_consumptionAssets) {
			if( ea.p_energyAssetType == OL_EnergyAssetType.ELECTRICITY_CONSUMPTION_PROFILE ) {
				ea.f_updateElectricityFlows( main.v_currentIndustryOtherElectricityDemand_fr );
			}
			else if( ea.p_energyAssetType == OL_EnergyAssetType.HEAT_DEMAND ) {
				ea.f_updateAllFlows( main.v_currentIndustryOtherHeatDemand_fr );
			}
			else {
				ea.v_powerFraction_fr = 0; // To disable other asset
				traceln("industry has other consumption assets than modeled so far");
			}
		}
	break;
	default:
		traceln("industry not modeled so far");

	break;
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1665501255400</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite]]></Name>
					<X>800</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if(p_gridConnectionID.contains("agrohub")) {
	f_operateFlexAssets_agroenergyhub();
	for( J_EAStorage v : c_storageAssets ) {	
		//v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
		v_conversionPowerElectric_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
		//v_currentPowerMethane_kW += v.methaneConsumption_kW - v.methaneProduction_kW;
		//v_currentPowerHydrogen_kW += v.hydrogenConsumption_kW - v.hydrogenProduction_kW;
		//v_currentPowerHeat_kW += v.heatConsumption_kW - v.heatProduction_kW;
		//v_currentPowerDiesel_kW += v.dieselConsumption_kW;
	}
	
	//traceln("Agroenergyhub logic!");
} else {
	
	// Determine house heating
	f_manageHeatingAssets();
	
}

f_manageCharging();
/*for( J_EAVehicle v: c_vehicleAssets) {
	v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
}*/

if (p_batteryAsset != null){ // TEST CODE
	if (p_batteryAsset.getStorageCapacity_kWh() > 0) {
		//f_batteryManagementBalance(p_batteryAsset.getCurrentStateOfCharge());
		f_batteryManagementNodalPricing(p_batteryAsset.getCurrentStateOfCharge());
		double[] arr = p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);
		//traceln("flows:" + Arrays.toString(arr));
		v_batteryPowerElectric_kW = arr[4] - arr[0];
	}
}

//v_currentLoadLowPassed_kW += v_lowPassFactorLoad_fr * ( v_currentPowerElectricity_kW - v_currentLoadLowPassed_kW ); //you want to do deterine the lowpassLoad BEFORE the using the battery. As this behavior of the battery should nog be dependent on the load of the battery in the previous timesteps

v_previousPowerMethane_kW = v_currentPowerMethane_kW;

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1684397492292</Id>
					<Name><![CDATA[f_operateFlexAssets_agroenergyhub]]></Name>
					<X>800</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
double heatDemand_kW = v_currentPowerHeat_kW;
double biogasSupply_kW = 0;
if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
	if(((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_methaneSupplier instanceof EnergyCoop ) {
		EnergyCoop CoopParent = (EnergyCoop)(((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_methaneSupplier);
		biogasSupply_kW = -CoopParent.v_methaneVolume_kWh/energyModel.p_timeStep_h + v_previousPowerMethane_kW;
	}
}

//traceln("BiogasSupply from mestvergister: " + biogasSupply_kW + " kW");
//traceln("Heat demand agroenergyhub:" + heatDemand_kW);

if ( p_secondaryHeatingAsset == null) { // Just one heating asset
	if ( p_primaryHeatingAsset== null ) {
		traceln("No heating assets for industry gridconnection " + p_gridConnectionID);
	} else {
		if ( p_primaryHeatingAsset instanceof J_EAConversionGasBurner || p_primaryHeatingAsset instanceof J_EAConversionHeatPump || p_primaryHeatingAsset instanceof J_EAConversionHydrogenBurner) { // when there is only a gas burner or DH set
				p_primaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW());
				//traceln("Running manageHeatingAsset for single heating asset");
		} else {
			traceln("GridConnection " + p_gridConnectionID + " has a single unsupported heating asset!");
		}
	}
} else { // Two heating assets
	if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump & p_secondaryHeatingAsset instanceof J_EAConversionGasCHP) { // Heatpump and gasburner, switch based on heatpump COP)
		//((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! <-- waarom dit gebeurt al in de main (peter 21-02-23)
		double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset).getCOP();
		double HP_powerDemand_kW = heatDemand_kW / HP_COP;
		// Decide to use CHP or HeatPump to fulfill heat demand based on 'SoC' of gasbuffer and current electricity use on site
		if ( (-v_currentPowerElectricity_kW > 0.5*p_contractedFeedinCapacity_kW*2*(p_gasBuffer.getCurrentStateOfCharge()-0.5) | p_gasBuffer.getCurrentStateOfCharge() < 0.05) & p_gasBuffer.getCurrentStateOfCharge() < 0.9) { // Use heatpump when it can be done selfsufficiently or when methane supply is zero
			//traceln("HeatPump in operation with COP " + HP_COP);
			p_secondaryHeatingAsset.v_powerFraction_fr = 0;
			p_primaryHeatingAsset.v_powerFraction_fr = min(1,HP_powerDemand_kW / p_primaryHeatingAsset.getElectricCapacity_kW());
		} else { // CHP when there is no electricity surpluss or when gas tank is overfilling
			//traceln("CHP capacityHeat_kW: " + p_primaryHeatingAsset.j_ea.getHeatCapacity_kW());
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_secondaryHeatingAsset.getHeatCapacity_kW());
			//p_primaryHeatingAsset.v_powerFraction_fr = 0;//min(1,currentDHWdemand_kW / p_secondaryHeatingAsset.j_ea.getHeatCapacity_kW());
			// Let heatpump fill heatdemand gap if it exists
			p_primaryHeatingAsset.v_powerFraction_fr = max(0,min(1,(heatDemand_kW-p_secondaryHeatingAsset.v_powerFraction_fr*p_secondaryHeatingAsset.getHeatCapacity_kW()) / p_primaryHeatingAsset.getHeatCapacity_kW())); // Let gas burner fill the heatdemandgap
		}
	} else if ( p_primaryHeatingAsset instanceof J_EAConversionGasCHP & p_secondaryHeatingAsset instanceof J_EAConversionGasBurner) { // CHP & gas burner
		if ( p_gasBuffer.getCurrentStateOfCharge() < 0.05) { // Use regular gas burner when biogas buffer is nearly empty
//		if ( (-v_currentPowerElectricity_kW > 0.5*p_connectionCapacity_kW*2*(p_gasBuffer.j_ea.getCurrentStateOfCharge()-0.5) | p_gasBuffer.j_ea.getCurrentStateOfCharge() < 0.05) & p_gasBuffer.j_ea.getCurrentStateOfCharge() < 0.9) { // Use gas burner when biogas is depleted or when there is too much PV and CHP would lead to curtailment
			//traceln("HeatPump in operation with COP " + HP_COP);
			p_primaryHeatingAsset.v_powerFraction_fr = 0;
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_secondaryHeatingAsset.getHeatCapacity_kW());
		} else { // CHP when there is sufficient biogas
			//traceln("CHP capacityHeat_kW: " + p_primaryHeatingAsset.j_ea.getHeatCapacity_kW());
			if ( p_gasBuffer.getCurrentStateOfCharge() < 0.9 ) { // Biogas tank not full, allow reduced CHP power when it prevents curtailment.
				p_primaryHeatingAsset.v_powerFraction_fr = min(min(1,heatDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW()),(p_contractedFeedinCapacity_kW + v_currentPowerElectricity_kW) / p_primaryHeatingAsset.getElectricCapacity_kW());
			} else {
				p_primaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW());
				//if ( p_gasBuffer.j_ea.getCurrentStateOfCharge() > 0.98 ) { // Biogas tank not full, allow reduced CHP power when it prevents curtailment.				
				//	traceln("Biogas tank 98% full! must run CHP! Heat demand: " + heatDemand_kW + " kW");
				//}
			}
			p_secondaryHeatingAsset.v_powerFraction_fr = max(0,min(1,(heatDemand_kW-p_primaryHeatingAsset.v_powerFraction_fr*p_primaryHeatingAsset.getHeatCapacity_kW()) / p_secondaryHeatingAsset.getHeatCapacity_kW())); // Let gas burner fill the heatdemandgap
		}
	} else if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump & p_secondaryHeatingAsset instanceof J_EAConversionGasBurner) { // Heatpump and gasburner, switch based on heatpump COP)
		//((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! <-- waarom dit gebeurt al in de main (peter 21-02-23)
		//double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).getCOP();
		//double HP_powerDemand_kW = heatDemand_kW / HP_COP;
		p_primaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW());
		p_secondaryHeatingAsset.v_powerFraction_fr = max(0,min(1,(heatDemand_kW-p_primaryHeatingAsset.v_powerFraction_fr*p_primaryHeatingAsset.getHeatCapacity_kW()) / p_secondaryHeatingAsset.getHeatCapacity_kW())); // Let gas burner fill the heatdemandgap
	} else {
		traceln("**** EXCEPTION ****: Unsupported combination of heatings systems in GridConnection " + p_gridConnectionID);
		p_primaryHeatingAsset.v_powerFraction_fr = 0;
		p_secondaryHeatingAsset.v_powerFraction_fr = 0;
		//p_BuildingThermalAsset.v_powerFraction_fr = 0;
	}
	p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);
}
if (p_primaryHeatingAsset != null) {
	p_primaryHeatingAsset.f_updateAllFlows(p_primaryHeatingAsset.v_powerFraction_fr);
}

if (p_gasBuffer != null) {
//	if (p_secondaryHeatingAsset != null) {
//		p_gasBuffer.v_powerFraction_fr = (biogasSupply_kW - p_primaryHeatingAsset.v_currentConsumptionMethane_kW - p_secondaryHeatingAsset.v_currentConsumptionMethane_kW)/p_gasBuffer.j_ea.getGasCapacity_kW();
//	} else {
	if (p_primaryHeatingAsset instanceof J_EAConversionGasCHP) {
		p_gasBuffer.v_powerFraction_fr = (biogasSupply_kW - p_primaryHeatingAsset.methaneConsumption_kW) / p_gasBuffer.getGasCapacity_kW();
	} else if (p_secondaryHeatingAsset != null) {
		if (p_secondaryHeatingAsset instanceof J_EAConversionGasCHP) {
			p_gasBuffer.v_powerFraction_fr = (biogasSupply_kW - p_secondaryHeatingAsset.methaneConsumption_kW) / p_gasBuffer.getGasCapacity_kW();
		}
	}
//	}
	p_gasBuffer.f_updateAllFlows(p_gasBuffer.v_powerFraction_fr);
}

/*if (p_curtailer != null) {
	//traceln("Hello! " + CurtailerAsset.j_ea.getElectricCapacity_kW());
	if (p_curtailer.getElectricCapacity_kW()>0) {
		double curtailerSetpointElectric_kW = 0.0;
		if ( p_primaryHeatingAsset instanceof J_EAConversionGasCHP ) {
			curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW - p_primaryHeatingAsset.heatProduction_kW + p_connectionCapacity_kW);
		} else {
			curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW + p_connectionCapacity_kW);
		}
		p_curtailer.f_updateAllFlows(curtailerSetpointElectric_kW/p_curtailer.getElectricCapacity_kW());
	}
}*/]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1684940409126</Id>
					<Name><![CDATA[f_manageCurtailer]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>830</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[CurtailerAsset]]></Name>
						<Type><![CDATA[EnergyAsset]]></Type>
					</Parameter>
					<Body><![CDATA[//traceln("Hello! " + CurtailerAsset.j_ea.getElectricCapacity_kW());
if (CurtailerAsset.j_ea.getElectricCapacity_kW()>0) {
	double curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW + p_connectionCapacity_kW);
	CurtailerAsset.f_updateAllFlows(curtailerSetpointElectric_kW/CurtailerAsset.j_ea.getElectricCapacity_kW());
	
	/*if ( curtailerSetpointElectric_kW > 0 ) {
		traceln("Windfarm is curtailing " + curtailerSetpointElectric_kW + " kW!");
	}*/
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1693299907029</Id>
					<Name><![CDATA[f_connectTo_J_EA_Industry]]></Name>
					<X>950</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[j_ea]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[
if (j_ea instanceof J_EAConversion) {
	c_conversionAssets.add((J_EAConversion)j_ea);
	if(p_gridConnectionID.contains("agrohub")) {
	
		if (j_ea instanceof J_EAConversionGasBurner || j_ea instanceof J_EAConversionHydrogenBurner) {
			if (p_primaryHeatingAsset == null) {
				p_primaryHeatingAsset = (J_EAConversion)j_ea ;
			} else if ( p_primaryHeatingAsset!=j_ea ) {
				p_secondaryHeatingAsset = (J_EAConversion)j_ea ;
			}
		} else if ( j_ea instanceof J_EAConversionHeatPump  || j_ea instanceof J_EAConversionGasCHP) {
			if (p_primaryHeatingAsset==null) {
				p_primaryHeatingAsset = (J_EAConversion)j_ea;
			} else { 
				p_secondaryHeatingAsset = p_primaryHeatingAsset;
				p_primaryHeatingAsset = (J_EAConversion)j_ea;
			}
			if (j_ea instanceof J_EAConversionHeatPump) {
				((J_EAConversionHeatPump)p_primaryHeatingAsset).outputTemperature_degC = 80; // For pastorizing milk
			}
			//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());
		//} else 	if (j_ea instanceof J_EAConversionCurtailer) {
		//	p_curtailer = (J_EAConversionCurtailer)j_ea ;
		} else {
			traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + j_ea + " is of unknown type or null! ");
		}
	} else {
		if (j_ea instanceof J_EAConversionGasBurner || j_ea instanceof J_EAConversionHeatPump || j_ea instanceof J_EAConversionHydrogenBurner ) {
			if (p_primaryHeatingAsset == null) {
				p_primaryHeatingAsset = (J_EAConversion)j_ea ;
			} else if ( p_primaryHeatingAsset!=j_ea ) {
				p_secondaryHeatingAsset = (J_EAConversion)j_ea ;
			}
		} else {
			traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + j_ea + " is of unknown type or null! ");
		}
	}
} 	
		
	

]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1665480522859</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1665480565440</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>40</X><Y>-50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1665480522863</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1666956363819</Id>
			<Name><![CDATA[GCGridBattery]]></Name>
			<AdditionalClassCode><![CDATA[/*@Override
public void f_connectToChild(J_EA j_ea){
	f_connectToChild_overwrite(j_ea);
}*/

@Override
public void f_operateFlexAssets(){
	f_operateFlexAssets_overwrite();
}

@Override
public void f_batteryManagementBalance( double batterySOC ){
	f_batteryManagementBalanceGrid( batterySOC );
}

@Override
public void f_batteryManagementPrice( double batterySOC ){
	f_batteryManagementPriceGrid( batterySOC );
}

/*@Override // Why?
public void f_calculateEnergyBalance(){
	f_calculateEnergyBalance_overwrite();
}*/]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1666956363817</Id>
				<Name><![CDATA[1666956363817]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1667030400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1666956363815</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1666956363818</CurrentLevel>
			<ConnectionsId>1666956363814</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1724948346123</Id>
					<Name><![CDATA[v_electricityPriceMaxForProfit_eurpkWh]]></Name>
					<X>1540</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.05]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724948346126</Id>
					<Name><![CDATA[v_gridNodeCongestionLimit_kW]]></Name>
					<Description><![CDATA[Congestion limit  of the grid node. If this limit is reached, electrolyser should not be functional.]]></Description>
					<X>1540</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666956397906</Id>
					<Name><![CDATA[f_connectToChild_overwrite]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>770</X><Y>-150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[ConnectingChildNode]]></Name>
						<Type><![CDATA[Agent]]></Type>
					</Parameter>
					<Body><![CDATA[//assetLinks.connectTo(ConnectingChildNode);
EnergyAsset EA = (EnergyAsset) ConnectingChildNode;
c_energyAssets.add(EA);

if (EA.j_ea instanceof J_EAConsumption) {
	//c_consumptionAssets.add(EA);
} else if (EA.j_ea instanceof J_EAProduction ) {
	//c_productionAssets.add(EA);
} else if (EA.j_ea instanceof J_EAStorage ) {
	//c_storageAssets.add(EA);
	if (EA.j_ea instanceof J_EAStorageHeat) {
		//p_BuildingThermalAsset = EA;
	}
	else if(EA.j_ea instanceof J_EAStorageElectric && ((J_EAStorageElectric)EA.j_ea).getStorageCapacity_kWh() !=0) {
		//p_batteryAsset = EA;
	}
} else if (EA.j_ea instanceof J_EAConversion) {
	c_conversionAssets.add((J_EAConversion)EA.j_ea);
	if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet || EA.j_ea instanceof J_EAConversionElectricHeater ) {
		if (p_primaryHeatingAsset == null) {
			p_primaryHeatingAsset = (J_EAConversion)EA.j_ea;
		} else if (p_secondaryHeatingAsset == null) {
			p_secondaryHeatingAsset = (J_EAConversion)EA.j_ea;
		} else {
			traceln("District Heating gridconnection already has two heating systems!");
		}
		//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());
	}
} else {
	traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingChildNode.getId() + " is of unknown type or null! ");
}


/*
// create a local list of energyAssets connected to its netConnection Agent for easy reference
List<EnergyAsset> connectedEnergyAssets = subConnections.getConnections();

int numberOfEnergyAssets = connectedEnergyAssets.size();
for( int i = 0; i < numberOfEnergyAssets; i++ ) {
	if( connectedEnergyAssets.get(i) instanceof EnergyAsset ) {
		c_connectedEnergyAssets.add(connectedEnergyAssets.get(i));

	}
}

List<EnergyAsset> consumptionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAConsumption);
List<EnergyAsset> productionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAProduction);
List<EnergyAsset> storageAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAStorage);
List<EnergyAsset> conversionAssets = filter(c_connectedEnergyAssets, b -> b.j_ea instanceof J_EAConversion);
traceln("NetConnection connecting to " + numberOfEnergyAssets + " EnergyAssets");
*/
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666956527771</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite]]></Name>
					<X>800</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( p_batteryAsset != null ) {
	if ( p_batteryAsset.getStorageCapacity_kWh() != 0.0 && p_batteryAsset.getCapacityElectric_kW() != 0.0) {
		v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
		if( p_batteryOperationMode == OL_BatteryOperationMode.BALANCE){
			//f_batteryManagementGridLoad(v_batterySOC_fr);
			f_batteryManagementBalance(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.BALANCE_SUPPLY){ // Tries to minimize supply peaks
			f_batteryManagementBalanceSupply(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.PRICE){
			f_batteryManagementPrice(v_batterySOC_fr);
		}
		
		double[] flowsArray = p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);	
		v_batteryPowerElectric_kW = flowsArray[4] - flowsArray[0];//p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
		//v_batteryPowerElectric_kW = p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
		//v_currentPowerElectricity_kW += v_batteryPowerElectric_kW;
	}
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1666967854749</Id>
					<Name><![CDATA[f_operateFixedConsumptionAssets_overwrite]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for(EnergyAsset e : c_consumptionAssets) {
	if( e.p_energyAssetType == OL_EnergyAssetType.ELECTRICITY_CONSUMPTION_PROFILE ) {
		e.f_updateElectricityFlows( main.v_currentBuildingOtherElectricityDemand_fr );
	}
	else {
		traceln("Grid battery has other consumption assets than 'other electricity consumption'");
		e.v_powerFraction_fr = 0;
	}
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1669022533963</Id>
					<Name><![CDATA[f_batteryManagementPriceGrid]]></Name>
					<Description><![CDATA[Regeling voor prijsgestuurd balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>800</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentBatteryStateOfCharge_fr]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (p_batteryAsset.getStorageCapacity_kWh() != 0){
	//double willingnessToPayDefault_eurpkWh = 0.3;
	double WTPfeedbackGain_eurpSOC = 0.5; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh
	double priceGain_kWhpeur = 2; // How strongly to ramp up power with price-delta's
	//double congestionTariffCoop_eurpkWh = -(((ConnectionOwner)p_ownerActor).p_CoopParent.v_electricitySurplus_kW + v_previousPowerElectricity_kW)/1200*0.1;
	
	double chargeSetpoint_kW = 0;	
	double currentElectricityPriceCharge_eurpkWh;
	GridNode GN = l_parentNodeElectric.getConnectedAgent();
	//double currentElectricityPriceDischarge_eurpkWh;
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();
		currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(v_currentPowerElectricity_kW+100.0); // query price at 100kW charging
		//currentElectricityPriceDischarge_eurpkWh = ownerActor.f_getElectricityPrice(v_currentPowerElectricity_kW-100.0); // query price at -100kW charging
	} else { // Get EPEX price plus nodal price of GridNode
		currentElectricityPriceCharge_eurpkWh = energyModel.nationalEnergyMarket.f_getNationalElectricityPrice_eurpMWh()/1000 + GN.v_currentTotalNodalPrice_eurpkWh;
		currentElectricityPriceCharge_eurpkWh = GN.v_currentTotalNodalPrice_eurpkWh;
		//currentElectricityPriceCharge_eurpkWh = l_parentNodeElectric.getConnectedAgent().v_currentTotalNodalPrice_eurpkWh;		
	}
	v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
	
	double currentCoopElectricitySurplus_kW = -GN.v_currentLoadElectricity_kW + v_previousPowerElectricity_kW;			
	double CoopConnectionCapacity_kW = 0.95*GN.p_capacity_kW; // Use only 90% of capacity for robustness against delay
	
	//traceln("Operating buurtbatterij, current local surplus is %s kW.", currentCoopElectricitySurplus_kW);
	
	double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity
	double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity
	
	
	double SOC_setp_fr = 0.9 - 2*GN.v_electricityYieldForecast_fr;	
	//SOC_setp_fr = (0.5 + 0.4 * Math.cos(2*Math.PI*(energyModel.t_h-18)/24))*(1-3*GN.v_electricityYieldForecast_fr); // Sinusoidal setpoint: aim for high SOC at 18:00h		
	//SOC_setp_fr = 0.6 + 0.25 * Math.sin(2*Math.PI*(main.t_h-12)/24); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. 
	
	double SOC_deficit_fr = SOC_setp_fr - currentBatteryStateOfCharge_fr;
	
	// Define WTP price for charging and discharging!
//	double WTP_charge_eurpkWh = v_electricityPriceLowPassed_eurpkWh - chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
//	double WTP_discharge_eurpkWh = v_electricityPriceLowPassed_eurpkWh + chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		
	/* // Choose charging power based on prices and desired SOC level
	if ( WTP_charge_eurpkWh > currentElectricityPriceCharge_eurpkWh ) { // if willingness to pay higher than current electricity price
		double WTP_charge_eurpkWh = v_electricityPriceLowPassed_eurpkWh + 0.5*(energyModel.v_epexForecast_eurpkWh - v_electricityPriceLowPassed_eurpkWh) + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		chargeSetpoint_kW = p_batteryAsset.getElectricCapacity_kW()*(WTP_charge_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_kWhpeur ;
	} 
	else if (WTP_discharge_eurpkWh < currentElectricityPriceCharge_eurpkWh) {
		double WTP_discharge_eurpkWh = v_electricityPriceLowPassed_eurpkWh + 0.5*(energyModel.v_epexForecast_eurpkWh - v_electricityPriceLowPassed_eurpkWh) + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		chargeSetpoint_kW = -p_batteryAsset.getElectricCapacity_kW()*(currentElectricityPriceCharge_eurpkWh - WTP_discharge_eurpkWh)*priceGain_kWhpeur;
	}*/
	
	//double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + 1.0*(energyModel.v_epexForecast_eurpkWh - v_electricityPriceLowPassed_eurpkWh) + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
	double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
	chargeSetpoint_kW = p_batteryAsset.getElectricCapacity_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_kWhpeur;
					
	chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1678114662587</Id>
					<Name><![CDATA[f_batteryManagementBalanceGrid]]></Name>
					<Description><![CDATA[Regeling voor balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>800</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[batterySOC]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[GridNode node = l_parentNodeElectric.getConnectedAgent();
if (p_batteryAsset.getStorageCapacity_kWh() != 0){	
	double currentCoopElectricitySurplus_kW = 0;
	double CoopConnectionCapacity_kW = 0;
	double v_previousPowerBattery_kW = v_previousPowerElectricity_kW;// Assumes battery is only asset on gridconnection!! p_batteryAsset.electricityConsumption_kW-p_batteryAsset.electricityProduction_kW;
	//traceln("Previous battery power: " + v_previousPowerElectricity_kW);
	GridNode GN = l_parentNodeElectric.getConnectedAgent();
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		if(((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent instanceof EnergyCoop ) { // get electricity balance from Coop 			
			currentCoopElectricitySurplus_kW = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_electricitySurplus_kW + v_previousPowerBattery_kW;
			CoopConnectionCapacity_kW = 0.9*((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay			
		} else { // Get gridload directly from node
			currentCoopElectricitySurplus_kW = -GN.v_currentLoadElectricity_kW + v_previousPowerBattery_kW;			
			CoopConnectionCapacity_kW = 0.9*GN.p_capacity_kW; // Use only 90% of capacity for robustness against delay
		}
	} else { // Get gridload directly from node
		currentCoopElectricitySurplus_kW = -node.v_currentLoadElectricity_kW + v_previousPowerBattery_kW;			
		CoopConnectionCapacity_kW = 0.95*node.p_capacity_kW; // Use only 90% of capacity for robustness against delay
	}
	//traceln("Operating buurtbatterij, current local surplus is %s kW.", currentCoopElectricitySurplus_kW);	
		
	double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity
	double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity
	double FeedbackGain_kWpSOC = 3 * p_batteryAsset.getElectricCapacity_kW(); // How strongly to aim for SOC setpoint
	double FeedforwardGain_kWpKw = 0.1; // Feedforward based on current surpluss in Coop
	double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.
	double chargeSetpoint_kW = 0;
	
	/*
	// ----------------------------------------------------
	//FeedforwardGain_kWpKw = 0.3; // Feedforward based on current surpluss in Coop
	//FeedbackGain_kWpSOC = 1.5 * 0.6 * p_batteryAsset.getElectricCapacity_kW();
	double SOC_setp_fr = 0.8;
	SOC_setp_fr = (0.5 + 0.4 * Math.sin(2*Math.PI*(energyModel.t_h-18)/24))-3*GN.v_electricityYieldForecast_fr; // Sinusoidal setpoint: aim for high SOC at 18:00h
	
	chargeSetpoint_kW = FeedforwardGain_kWpKw * (currentCoopElectricitySurplus_kW - chargeOffset_kW) + (SOC_setp_fr - batterySOC) * FeedbackGain_kWpSOC;
	chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power	
	//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");
	//traceln("hello?");
	
	*/
	
	
	// ----------------------------------------------------
	// p_forecastTime_h = 10
	//traceln("availableDischargePower_kW: %s", availableDischargePower_kW);
	if (availableChargePower_kW < 0) { // prevent congestion
		p_batteryAsset.v_powerFraction_fr = max(-1, availableChargePower_kW / p_batteryAsset.getElectricCapacity_kW());
		return;
	}
	double expectedWind_kWh = node.v_totalInstalledWindPower_kW * energyModel.v_WindYieldForecast_fr * energyModel.p_forecastTime_h;
	double expectedSolar_kWh = node.v_totalInstalledPVPower_kW * energyModel.v_SolarYieldForecast_fr * energyModel.p_forecastTime_h;
	double incomingPower_fr = (expectedSolar_kWh + expectedWind_kWh) / p_batteryAsset.getStorageCapacity_kWh();
	double SOC_setp_fr = 1 - incomingPower_fr;

	chargeSetpoint_kW = FeedbackGain_kWpSOC*(SOC_setp_fr - p_batteryAsset.getCurrentStateOfCharge());
	chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getCapacityElectric_kW()));
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1688369593905</Id>
					<Name><![CDATA[f_calculateEnergyBalance_overwrite]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>780</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_previousPowerElectricity_kW = v_currentPowerElectricity_kW;
v_currentPowerElectricity_kW = 0;
v_currentPowerMethane_kW = 0;
v_currentPowerHydrogen_kW = 0;
v_currentPowerHeat_kW = 0;
v_currentPowerDiesel_kW = 0;

v_currentElectricityConsumption_kW = 0;
v_currentElectricityProduction_kW = 0;
v_currentEnergyConsumption_kW = 0;
v_currentEnergyProduction_kW = 0;
v_currentEnergyCurtailed_kW = 0;


// Categorical power flows
v_fixedConsumptionElectric_kW = 0;
v_electricHobConsumption_kW = 0;
v_heatPumpElectricityConsumption_kW = 0;
v_hydrogenElectricityConsumption_kW = 0;
v_evChargingPowerElectric_kW = 0;
v_batteryPowerElectric_kW = 0;
v_windProductionElectric_kW = 0;
v_pvProductionElectric_kW = 0;
v_conversionPowerElectric_kW = 0;


f_operateFixedAssets();
f_operateFlexAssets();
f_curtailment();
f_connectionMetering();

//v_electricityTotalsCheck_kWh = v_electricityConsumedFixedProfile_kWh + v_electricityConvertedToX_kWh + v_electricityChargedByEVs_kWh  + v_electricityDeliveredToGrid_kWh 
//- v_electricityProducedPV_kWh - v_electricityProducedWind_kWh - v_electricityDrawnFromGrid_kWh - v_xConvertedToElectricity_kWh + v_electricityChargedByBattery_kWh - v_electricityDischargedByBattery_kWh;

/*
// Total Energy Use and Production
v_totalEnergyUsed_kWh = 0;
v_totalEnergyProduced_kWh = 0;
for (EnergyAsset EA : c_energyAssets ) {
	double energyUse_kWh=EA.j_ea.getEnergyUsed_kWh();
	if (EA.j_ea instanceof J_EAConversionCurtailer) {
		v_totalEnergyProduced_kWh -= max(0, energyUse_kWh);
	} else {
		v_totalEnergyUsed_kWh += max(0, energyUse_kWh);
		v_totalEnergyProduced_kWh -= min(0, energyUse_kWh);
	}
}

v_selfConsumption_fr = 1 - (v_electricityDeliveredToGrid_kWh + v_heatDelivered_kWh + v_methaneDelivered_kWh + v_hydrogenDelivered_kWh + v_dieselDelivered_kWh ) / v_totalEnergyProduced_kWh; // Doesn't make sense to sum different energy carriers!
v_selfSufficiency_fr = 1 - (v_electricityDrawnFromGrid_kWh + v_heatDrawn_kWh + v_methaneDrawn_kWh + v_hydrogenDrawn_kWh + v_dieselDrawn_kWh) / v_totalEnergyUsed_kWh; // Need to account for energy in storages
v_maxConnectionLoad_fr = max(v_maxConnectionLoad_fr, abs(v_currentPowerElectricity_kW / v_allowedCapacity_kW ));
*/
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1709827456110</Id>
					<Name><![CDATA[f_manageCurtailer]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>800</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[CurtailerAsset]]></Name>
						<Type><![CDATA[J_EAConversionCurtailer]]></Type>
					</Parameter>
					<Body><![CDATA[//traceln("Hello! " + CurtailerAsset.j_ea.getElectricCapacity_kW());
if (CurtailerAsset.getElectricCapacity_kW()>0) {
	double curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW + p_connectionCapacity_kW);
	double[] flowsArray = CurtailerAsset.f_updateAllFlows(curtailerSetpointElectric_kW/CurtailerAsset.getElectricCapacity_kW());
	v_conversionPowerElectric_kW = flowsArray[4] - flowsArray[0];
	/*if ( curtailerSetpointElectric_kW > 0 ) {
		traceln("Windfarm is curtailing " + curtailerSetpointElectric_kW + " kW!");
	}*/
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1710163119414</Id>
					<Name><![CDATA[f_batteryManagementBalanceSupply]]></Name>
					<Description><![CDATA[Regeling voor balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>800</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[batterySOC]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// Simply tries to prevent exceeding feedin grid capacity, but otherwise aims for an empty battery (so there is always 'absorbtion capacity' available)

if (p_batteryAsset.getStorageCapacity_kWh() != 0){	
	double currentCoopElectricitySurplus_kW = 0;
	double CoopConnectionCapacity_kW = 0;
	double v_previousPowerBattery_kW = v_previousPowerElectricity_kW;// Assumes battery is only asset on gridconnection!! p_batteryAsset.electricityConsumption_kW-p_batteryAsset.electricityProduction_kW;
	//traceln("Previous battery power: " + v_previousPowerElectricity_kW);
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		if(((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent instanceof EnergyCoop ) { // get electricity balance from Coop 			
			currentCoopElectricitySurplus_kW = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_electricitySurplus_kW + v_previousPowerBattery_kW;
			CoopConnectionCapacity_kW = 0.9*((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay			
		} else { // Get gridload directly from node
			GridNode node = l_parentNodeElectric.getConnectedAgent();
			currentCoopElectricitySurplus_kW = -node.v_currentLoadElectricity_kW + v_previousPowerBattery_kW;			
			CoopConnectionCapacity_kW = 0.95*node.p_capacity_kW; // Use only 90% of capacity for robustness against delay
		}
	} else { // Get gridload directly from node
		GridNode node = l_parentNodeElectric.getConnectedAgent();
		currentCoopElectricitySurplus_kW = -node.v_currentLoadElectricity_kW + v_previousPowerBattery_kW;			
		CoopConnectionCapacity_kW = 0.95*node.p_capacity_kW; // Use only 90% of capacity for robustness against delay
	}
	//traceln("Operating buurtbatterij, current local surplus is %s kW.", currentCoopElectricitySurplus_kW);
	
	double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity
	double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity
	
	double FeedbackGain_kWpSOC = 5 * p_batteryAsset.getElectricCapacity_kW(); // How strongly to aim for SOC setpoint
	double FeedforwardGain_kWpKw = 0.0; // Feedforward based on current surpluss in Coop
	double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.
	double chargeSetpoint_kW = 0;
	double SOC_setp_fr = 0.0;

	
	chargeSetpoint_kW = FeedforwardGain_kWpKw * (currentCoopElectricitySurplus_kW - chargeOffset_kW) + (SOC_setp_fr - batterySOC) * FeedbackGain_kWpSOC;
	chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getElectricCapacity_kW())); // Convert to powerFraction and limit power
	//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");
	//traceln("hello?");
}
]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1666956363814</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1666957377035</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1666956363818</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
    			<TimePlot>
					<Id>1682065741241</Id>
					<Name><![CDATA[SOC_plot]]></Name>
					<X>520</X><Y>560</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1682150400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[energyModel.p_timeStep_h]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>510</Width>
					<Height>270</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>430</Width>
						<Height>180</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[SOC]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-10496</Color>
					<Expression2><![CDATA[v_batterySOC_fr]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>192</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
				<Rectangle>
					<Id>1724948353249</Id>
					<Name><![CDATA[rectangle4]]></Name>
					<X>1450</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>600</Width>
					<Height>180</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724948367410</Id>
					<Name><![CDATA[text3]]></Name>
					<X>1450</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Adjusted by sliders in batUI: find the correct ones and adjust those instead TODO!!!]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1667726338857</Id>
			<Name><![CDATA[GIS_Object]]></Name>
			<Description><![CDATA[Generic Object for GISRegions. Is used for GridConnections of type: GCEnergyProduction, GCEnergyConversion, GCGridBattery, GCPublicCharger.]]></Description>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1667726338855</Id>
				<Name><![CDATA[1667726338855]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1667808000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1667726338853</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1667726338856</CurrentLevel>
			<ConnectionsId>1667726338852</ConnectionsId>
			<Variables>
				<Variable Class="Parameter">
					<Id>1697009799975</Id>
					<Name><![CDATA[gisRegion]]></Name>
					<X>50</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[GISRegion]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1697009799973</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1697009799980</Id>
					<Name><![CDATA[p_longitude]]></Name>
					<X>50</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1697009799978</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1697009799984</Id>
					<Name><![CDATA[p_latitude]]></Name>
					<X>50</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1697009799982</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1697464235545</Id>
					<Name><![CDATA[p_GISObjectType]]></Name>
					<X>50</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GISObjectType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1697464235543</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1702547667207</Id>
					<Name><![CDATA[p_GISRegion_coords]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1702547667205</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1705666644943</Id>
					<Name><![CDATA[p_id]]></Name>
					<X>50</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1705666644941</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721720988124</Id>
					<Name><![CDATA[p_defaultLineColor]]></Name>
					<X>390</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Color]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="LengthUnits"><![CDATA[METER]]></UnitOfValue>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1721720988122</Id>
							<EditorContolType>COLOR_PICKER</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721720988128</Id>
					<Name><![CDATA[p_defaultFillColor]]></Name>
					<X>390</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Color]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="LengthUnits"><![CDATA[METER]]></UnitOfValue>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1721720988126</Id>
							<EditorContolType>COLOR_PICKER</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721809734127</Id>
					<Name><![CDATA[p_defaultLineWidth]]></Name>
					<X>390</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="LengthUnits"><![CDATA[METER]]></UnitOfValue>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1721809734125</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721809794729</Id>
					<Name><![CDATA[p_defaultLineStyle]]></Name>
					<X>390</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[LineStyle]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="LengthUnits"><![CDATA[METER]]></UnitOfValue>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[LineStyle.LINE_STYLE_SOLID]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1721809794727</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721830375724</Id>
					<Name><![CDATA[p_annotation]]></Name>
					<X>50</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1721830375722</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1721726757949</Id>
					<Name><![CDATA[c_containedGridConnections]]></Name>
					<X>390</X><Y>120</Y>
					<Label><X>13</X><Y>4</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721720983063</Id>
					<Name><![CDATA[f_style]]></Name>
					<X>600</X><Y>55</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[fillColor]]></Name>
						<Type><![CDATA[Color]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[lineColor]]></Name>
						<Type><![CDATA[Color]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[width]]></Name>
						<Type><![CDATA[Double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[lineStyle]]></Name>
						<Type><![CDATA[LineStyle]]></Type>
					</Parameter>
					<Body><![CDATA[if (fillColor == null) {
	fillColor = p_defaultFillColor;
}
gisRegion.setFillColor( fillColor );
if (lineColor == null) {
	lineColor = p_defaultLineColor;
}
gisRegion.setLineColor( lineColor );
if (width == null) {
	width = p_defaultLineWidth;
}
gisRegion.setLineWidth( width );
if (lineStyle == null) {
	lineStyle = p_defaultLineStyle;
}
gisRegion.setLineStyle( lineStyle );]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1667726338852</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1697464974649</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1667726338856</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1672138285227</Id>
			<Name><![CDATA[GCUtility]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_operateFlexAssets(){
	f_operateFlexAssets_overwrite();
}

@Override
public void f_resetSpecificGCStates(){
	f_resetSpecificGCStates_overwrite();
}
]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1672138285225</Id>
				<Name><![CDATA[1672138285225]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1672214400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1672138285223</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1672138285226</CurrentLevel>
			<ConnectionsId>1672138285222</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1721138603371</Id>
					<Name><![CDATA[v_totalHydrogenUsed_MWh]]></Name>
					<X>1120</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721139587618</Id>
					<Name><![CDATA[v_enableFuelCell]]></Name>
					<X>270</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725879138068</Id>
					<Name><![CDATA[v_maxHydrogenPower_kW]]></Name>
					<X>1440</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1698936515692</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite]]></Name>
					<X>800</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[f_manageHeatingAssets();
/*for ( J_EAStorage e : c_storageAssets ) {
	v_currentPowerHeat_kW += e.heatConsumption_kW - e.heatProduction_kW; //peter 13-3-23: ik snap niet waarom dit hier staat. dit komt in de knoop met andere storage assets (zoals batterij)
}*/

f_manageCharging();

if (p_batteryAsset != null){ // TEST CODE
	if (p_batteryAsset.getStorageCapacity_kWh() > 0 && p_batteryAsset.getCapacityElectric_kW() > 0) {
		
		switch (p_batteryOperationMode) {
			case BALANCE:
				f_batteryManagementBalance(p_batteryAsset.getCurrentStateOfCharge());
				break;
			case SIMPLE:
				f_batteryManagementSimple();
				break;
			case PRICE:
				f_batteryManagementPrice(p_batteryAsset.getCurrentStateOfCharge());
				break;
			case NODAL_PRICING:
				f_batteryManagementNodalPricing(p_batteryAsset.getCurrentStateOfCharge());
				break;
		}
		
		double[] arr = p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);
		//traceln("flows:" + Arrays.toString(arr));
		//v_batteryPowerElectric_kW = arr[4] - arr[0];
	}
}
/*for( J_EAVehicle v: c_vehicleAssets) {
	v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
}*/

//v_currentLoadLowPassed_kW += v_lowPassFactorLoad_fr * ( v_currentPowerElectricity_kW - v_currentLoadLowPassed_kW ); //you want to do deterine the lowpassLoad BEFORE the using the battery. As this behavior of the battery should nog be dependent on the load of the battery in the previous timesteps

if (v_enableFuelCell) {
	f_manageFuelCell();
}

/*if( p_batteryAsset != null){
	switch (p_batteryOperationMode){
		case HOUSEHOLD_LOAD:
			f_batteryManagementBalance(v_batterySOC_fr);
		break;
		case PRICE:
			f_batteryManagementPrice_overwrite(v_batterySOC_fr);
		break;
		default:
		break;
	}
	v_batteryPowerElectric_kW =  p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
	v_currentPowerElectricity_kW +=v_batteryPowerElectric_kW;
	v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
}*/
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721138603366</Id>
					<Name><![CDATA[f_manageFuelCell]]></Name>
					<X>800</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Arbitrarely i'm deciding not to use more than 95% of the GC & GN capacity.
double capacityLimit_fr = 0.95;
if (v_currentPowerElectricity_kW > p_contractedDeliveryCapacity_kW * capacityLimit_fr || v_currentPowerElectricity_kW > l_parentNodeElectric.getConnectedAgent().p_capacity_kW * capacityLimit_fr) {
	J_EAConversionFuelCell fuelCellAsset = (J_EAConversionFuelCell) findFirst(c_conversionAssets, j_ea -> j_ea.getEAType() == OL_EnergyAssetType.FUEL_CELL);
	if (fuelCellAsset == null) {
		traceln("No fuel cell asset found");
	}
	else {
		double powerNeeded_kW = max(v_currentPowerElectricity_kW - p_contractedDeliveryCapacity_kW * capacityLimit_fr,  v_currentPowerElectricity_kW - l_parentNodeElectric.getConnectedAgent().p_capacity_kW * capacityLimit_fr);
		// For now i've assumed the only fuel cells being used are with a capacity of 1 MW and efficieny of 50%.
		double efficiency = fuelCellAsset.getEta_r();
		double ratioOfCapacity = powerNeeded_kW / (fuelCellAsset.getElectricCapacity_kW()*efficiency);
		
		// Check the amount of Hydrogen that has been generated so far
		// Only works because there is a single energy conversion site
		if (energyModel.EnergyConversionSites.get(0).v_hydrogenInStorage_kWh > 0 ) {
			// Calling operate directly instead of updateAllFlows, so that it's not bounded
			double[] arr = fuelCellAsset.operate(ratioOfCapacity);
			//traceln("fuel cell operated: " + Arrays.toString(arr));
			
			// Since not calling updateAllFlows, have to manually do this
			f_addFlows(arr, fuelCellAsset);
			
			// updating other variables
			//v_currentPowerHydrogen_kW += arr[0];
			//v_hydrogenInStorage_kWh -= arr[6] * energyModel.p_timeStep_h;
			energyModel.EnergyConversionSites.get(0).v_hydrogenInStorage_kWh -= arr[6] * energyModel.p_timeStep_h;
			if (energyModel.v_isRapidRun) {
				v_totalHydrogenUsed_MWh += arr[6] * energyModel.p_timeStep_h / 1000;
				if (arr[6] > v_maxHydrogenPower_kW) {
					v_maxHydrogenPower_kW = arr[6];
				}
			}
		}
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721138706438</Id>
					<Name><![CDATA[f_resetSpecificGCStates_overwrite]]></Name>
					<X>1140</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Reset variables 
v_totalHydrogenUsed_MWh = 0;
v_maxHydrogenPower_kW = 0;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1672138285222</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1696862765126</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>40</X><Y>-40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1672138285226</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1674662535386</Id>
			<Name><![CDATA[Actor]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1674662535384</Id>
				<Name><![CDATA[1674662535384]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1674720000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1674662535382</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1674662535385</CurrentLevel>
			<ConnectionsId>1674662535381</ConnectionsId>
			<Variables>
				<Variable Class="Parameter">
					<Id>1674662727346</Id>
					<Name><![CDATA[p_actorID]]></Name>
					<Description><![CDATA[Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>60</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1674662727344</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1674662727350</Id>
					<Name><![CDATA[p_actorType]]></Name>
					<Description><![CDATA[Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>60</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_ActorType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1674662727348</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1692112728484</Id>
					<Name><![CDATA[p_actorGroup]]></Name>
					<Description><![CDATA[Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>60</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1692112728482</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1692112731344</Id>
					<Name><![CDATA[p_actorSubgroup]]></Name>
					<Description><![CDATA[Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis]]></Description>
					<X>160</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1692112731342</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<AgentLinks>
				<AgentLink>
					<Id>1674662535381</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1704289471860</Id>
					<Name><![CDATA[gridConnections]]></Name>
					<X>60</X><Y>-20</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentReferenceId>1658499438203</AgentReferenceId>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<BidirectionalPeerId>1671020599243</BidirectionalPeerId>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1674662535385</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Line>
					<Id>1674662718508</Id>
					<Name><![CDATA[line]]></Name>
					<X>20</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>140</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1674662718511</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[ID & connections]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1676382560905</Id>
			<Name><![CDATA[GIS_Building]]></Name>
			<Description><![CDATA[Object for GISRegions of buildings. Contains information about the building. The addresses are available through the contained GridConnections.]]></Description>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GIS_Object]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[gisRegion]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISObjectType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISRegion_coords]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_id]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_defaultLineColor]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_defaultFillColor]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_defaultLineWidth]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_defaultLineStyle]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_annotation]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1676382560900</Id>
				<Name><![CDATA[1676382560900]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1676382560901</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1676382560913</CurrentLevel>
			<ConnectionsId>1676382560915</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1696856781368</Id>
					<Name><![CDATA[ar_countEnergyLabels]]></Name>
					<X>790</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696856781371</Id>
					<Name><![CDATA[ar_countHeatSystems]]></Name>
					<X>790</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1696858052529</Id>
					<Name><![CDATA[p_status]]></Name>
					<X>40</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1696858052527</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1696858052547</Id>
					<Name><![CDATA[p_useType]]></Name>
					<X>40</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1696858052545</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1696858052551</Id>
					<Name><![CDATA[p_buildingType]]></Name>
					<X>40</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_BuildingType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_BuildingType.Office]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1696858052549</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1696858052555</Id>
					<Name><![CDATA[p_buildingYear]]></Name>
					<X>40</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1696858052553</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1696858052560</Id>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
					<X>40</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1696858052558</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1696858052564</Id>
					<Name><![CDATA[p_floors]]></Name>
					<X>40</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1696858052562</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1714137583569</Id>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
					<X>40</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1714137583567</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1716898390947</Id>
					<Name><![CDATA[p_pandcluster_nr]]></Name>
					<X>40</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1716898390945</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1716898460038</Id>
					<Name><![CDATA[p_uniek_pand]]></Name>
					<X>40</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1716898460036</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1716898471373</Id>
					<Name><![CDATA[p_pand_nr]]></Name>
					<X>40</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1716898471371</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1721036302503</Id>
					<Name><![CDATA[p_pandNaam]]></Name>
					<X>40</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1721036302501</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1696924186553</Id>
					<Name><![CDATA[f_countEnergyLabels]]></Name>
					<X>760</X><Y>105</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[traceln("f_countEnergyLabels is not functional!");
]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1676382560915</Id>
					<Name><![CDATA[connections]]></Name>
					<X>250</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1676382645186</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1676382560913</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Text>
					<Id>1721721465291</Id>
					<Name><![CDATA[t_buildingDescription1]]></Name>
					<X>50</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Building Info]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1697018621698</Id>
					<Name><![CDATA[va_building]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1660572036696</Id>
			<Name><![CDATA[GIS_Parcel]]></Name>
			<Description><![CDATA[Object for GISRegions of empty parcels. c_containedGridConnections should always be empty, hence the address]]></Description>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GIS_Object]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[gisRegion]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISObjectType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISRegion_coords]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_id]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_defaultLineColor]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_defaultFillColor]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_defaultLineWidth]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_defaultLineStyle]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_annotation]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1660572036694</Id>
				<Name><![CDATA[1660572036694]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660636800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1660572036692</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1660572036695</CurrentLevel>
			<ConnectionsId>1660572036691</ConnectionsId>
			<Variables>
				<Variable Class="Parameter">
					<Id>1726152082148</Id>
					<Name><![CDATA[p_address]]></Name>
					<Description><![CDATA[A Java class that contains all the relevant information about the grid connection address. The class contains a method .getAddress() which returns a formatted String of the address.]]></Description>
					<X>50</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[J_Address]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726152082146</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<AgentLinks>
				<AgentLink>
					<Id>1660572036691</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<DrawLine>true</DrawLine>
					<LineStyle>DOTTED</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>ABOVE_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1721736146575</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1660572036695</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Text>
					<Id>1721721376067</Id>
					<Name><![CDATA[t_addressDescription]]></Name>
					<X>50</X><Y>170</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Address Info]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1717956409506</Id>
			<Name><![CDATA[GCPublicCharger]]></Name>
			<AdditionalClassCode><![CDATA[/*@Override
public void f_operateFixedAssets(){
	f_operateFixedAssets_overwrite();
}*/

@Override
public void f_operateFlexAssets(){
	f_operateFlexAssets_overwrite();
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1717956409512</Id>
				<Name><![CDATA[1717956409512]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1718006400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1717956409509</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1717956409513</CurrentLevel>
			<ConnectionsId>1717956409507</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1718899895524</Id>
					<Name><![CDATA[v_isActiveCharger]]></Name>
					<X>270</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720728863554</Id>
					<Name><![CDATA[v_netBewustLadenActive]]></Name>
					<X>270</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1717959948784</Id>
					<Name><![CDATA[p_gisregion]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[GISRegion]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1717959948782</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1718020204898</Id>
					<Name><![CDATA[p_nbOfChargers]]></Name>
					<X>1640</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1718020204896</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1718020213388</Id>
					<Name><![CDATA[p_maxChargingPower_kW]]></Name>
					<X>1640</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1718020213386</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1718020656896</Id>
					<Name><![CDATA[p_chargingVehicleType]]></Name>
					<X>1640</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1718020656894</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1718879495372</Id>
					<Name><![CDATA[p_CPOName]]></Name>
					<X>50</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1718879495370</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1718903294274</Id>
					<Name><![CDATA[p_isInitialCharger]]></Name>
					<X>270</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1718903294272</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1720377369145</Id>
					<Name><![CDATA[p_chargingProfileName]]></Name>
					<X>270</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1720377369143</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717956478582</Id>
					<Name><![CDATA[f_operateFixedAssets_overwrite]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>910</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for ( J_EAProfile e : c_profileAssets){
	double[] flowsArray = e.f_updateAllFlows( energyModel.t_h );		
	if (e.profileType == OL_ProfileAssetType.CHARGING){
		v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];
	}
	else if( e.profileType == OL_ProfileAssetType.ELECTRICITYBASELOAD){
		v_fixedConsumptionElectric_kW += flowsArray[4] - flowsArray[0];
	}
	else {
		traceln( "Profile type is not registered in GCPublicCharger");
	}
	//v_currentPowerElectricity_kW += flowsArray[4];		
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726749088568</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite]]></Name>
					<X>910</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Manage charging
f_manageCharging();]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1717956409507</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1717960182629</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1717956409513</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1718020159680</Id>
					<Name><![CDATA[rectangle4]]></Name>
					<X>1600</X><Y>40</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-65536</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1718020176410</Id>
					<Name><![CDATA[txt_chargingStationFunctions]]></Name>
					<X>1620</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Charging Centre Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1718724980083</Id>
			<Name><![CDATA[GCNeighborhood]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_operateFlexAssets(){
	f_operateFlexAssets_overwrite();
}

@Override
public void f_manageHeatingAssets(){
	f_manageHeatingAssets_overwrite();
}

@Override
public void f_connectToJ_EA_default(J_EA j_ea){
	f_connectToJ_EA_default_overwrite(j_ea);
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GridConnection]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1718724980089</Id>
				<Name><![CDATA[1718724980089]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1718784000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1718724980086</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1718724980090</CurrentLevel>
			<ConnectionsId>1718724980084</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1722514794122</Id>
					<Name><![CDATA[v_amountOfGasBurners_companies_fr]]></Name>
					<X>1690</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722514798317</Id>
					<Name><![CDATA[v_amountOfHybridHeatpump_companies_fr]]></Name>
					<X>1690</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722514800696</Id>
					<Name><![CDATA[v_amountOfElectricHeatpumps_companies_fr]]></Name>
					<X>1690</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722514802997</Id>
					<Name><![CDATA[v_amountOfDistrictHeating_companies_fr]]></Name>
					<X>1690</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722514805108</Id>
					<Name><![CDATA[v_amountOfGasBurners_houses_fr]]></Name>
					<X>1690</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722514809527</Id>
					<Name><![CDATA[v_amountOfHybridHeatpump_houses_fr]]></Name>
					<X>1690</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722514811890</Id>
					<Name><![CDATA[v_amountOfElectricHeatpumps_houses_fr]]></Name>
					<X>1690</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722514815083</Id>
					<Name><![CDATA[v_amountOfDistrictHeating_houses_fr]]></Name>
					<X>1690</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724397994084</Id>
					<Name><![CDATA[v_nbCurrentHouseholdsWithBattery]]></Name>
					<X>1680</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1718725906048</Id>
					<Name><![CDATA[p_gisRegion]]></Name>
					<X>50</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[GISRegion]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="TimeUnits"><![CDATA[SECOND]]></UnitOfValue>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1718725906046</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1722588367044</Id>
					<Name><![CDATA[p_thresholdCOP_hybridHeatpump]]></Name>
					<Description><![CDATA[Threshold for when the gas burner needs to kick in in a hybrid heatpump system]]></Description>
					<X>1720</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[3.5]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1722588367042</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722589144737</Id>
					<Name><![CDATA[c_heatDemandEA]]></Name>
					<X>1690</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[J_EAConsumption]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1719849166911</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite]]></Name>
					<X>1000</X><Y>240</Y>
					<Label><X>20</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Manage the heating assets
f_manageHeatingAssets();



/*for ( J_EAStorage e : c_storageAssets ) {
	v_currentPowerHeat_kW += e.heatConsumption_kW - e.heatProduction_kW; //peter 13-3-23: ik snap niet waarom dit hier staat. dit komt in de knoop met andere storage assets (zoals batterij)
}*/

f_manageCharging();

//Electric Storage
List<J_EAStorage> batteries = findAll(c_storageAssets, storage -> storage.getEAType() == OL_EnergyAssetType.STORAGE_ELECTRIC);
for(int i = 0; i < batteries.size() ; i++){
	if (batteries.get(i).getStorageCapacity_kWh() != 0){
	f_batteryManagementBalance(batteries.get(i).getCurrentStateOfCharge());
	//double[] arr = p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);
	//traceln("flows:" + Arrays.toString(arr));
	}
}


/*for( J_EAVehicle v: c_vehicleAssets) {
	v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;
}*/

v_currentLoadLowPassed_kW += v_lowPassFactorLoad_fr * ( v_currentPowerElectricity_kW - v_currentLoadLowPassed_kW ); //you want to do deterine the lowpassLoad BEFORE the using the battery. As this behavior of the battery should nog be dependent on the load of the battery in the previous timesteps

/*if( p_batteryAsset != null){
	switch (p_batteryOperationMode){
		case HOUSEHOLD_LOAD:
			f_batteryManagementBalance(v_batterySOC_fr);
		break;
		case PRICE:
			f_batteryManagementPrice_overwrite(v_batterySOC_fr);
		break;
		default:
		break;
	}
	v_batteryPowerElectric_kW =  p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;
	v_currentPowerElectricity_kW +=v_batteryPowerElectric_kW;
	v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
}*/
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722514612938</Id>
					<Name><![CDATA[f_setHeatingMethodPct_companies]]></Name>
					<X>1690</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[pctArray]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[v_amountOfGasBurners_companies_fr = pctArray[0]/100;
v_amountOfElectricHeatpumps_companies_fr = pctArray[1]/100;
v_amountOfHybridHeatpump_companies_fr = pctArray[2]/100;
v_amountOfDistrictHeating_companies_fr = pctArray[3]/100;

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722514620314</Id>
					<Name><![CDATA[f_setHeatingMethodPct_houses]]></Name>
					<X>1690</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[pctArray]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[v_amountOfGasBurners_houses_fr = pctArray[0]/100;
v_amountOfElectricHeatpumps_houses_fr = pctArray[1]/100;
v_amountOfHybridHeatpump_houses_fr = pctArray[2]/100;
v_amountOfDistrictHeating_houses_fr = pctArray[3]/100;

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722585552607</Id>
					<Name><![CDATA[f_manageHeatingAssets_overwrite]]></Name>
					<X>800</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if(p_primaryHeatingAsset == null){ // null check, as certain neighborhoods don't have thermal assets (fix dat niet elke tijdstep wordt aangeroepen)!
	return;
}

//Division of the power demand
double powerDemandDivision[] = f_dividePowerDemandHeatingAssets();

//Split the power fractions (powerDemandDivision[] = {Gasburner power request, HP power request, DH power request}
double powerFraction_GASBURNER = min(1, powerDemandDivision[0] / p_primaryHeatingAsset.getHeatCapacity_kW()); 
double powerFraction_HEATPUMP  = min(1, powerDemandDivision[1] / p_secondaryHeatingAsset.getHeatCapacity_kW());
double powerFraction_HEATDELIVERYSET = min(1, powerDemandDivision[2] / p_tertiaryHeatingAsset.getHeatCapacity_kW());

//p_primaryHeatingAsset.v_powerFraction_fr = powerFraction_GASBURNER;
//p_secondaryHeatingAsset.v_powerFraction_fr = powerFraction_HEATPUMP;
//p_tertiaryHeatingAsset.v_powerFraction_fr = powerFraction_HEATDELIVERYSET;			
			
		
//Gas burner control (always assigned to primary heating asset)	
p_primaryHeatingAsset.f_updateAllFlows(powerFraction_GASBURNER);

//Heatpump control (always assigned to secondary heating asset)
p_secondaryHeatingAsset.f_updateAllFlows(powerFraction_HEATPUMP);

//Heat delivery set control (always assigned to tertiary heating asset)
p_tertiaryHeatingAsset.f_updateAllFlows(powerFraction_HEATDELIVERYSET);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1722587530130</Id>
					<Name><![CDATA[f_dividePowerDemandHeatingAssets]]></Name>
					<X>1690</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Initialize power demand division array
double powerDemandDivision[] = {0, 0, 0}; // {Gasburner power request, HP power request, DH power request}

//Demanded total heating power at the current time step
double powerDemand_kW = v_currentPowerHeat_kW;

//Demanded heating power for companies and household seperatly the current time step

double powerDemand_companies_kW = c_heatDemandEA.get("COMPANIES").getLastFlows()[7];
double powerDemand_households_kW = c_heatDemandEA.get("HOUSEHOLDS").getLastFlows()[7];


//Get the current Heatpump COP
double HP_COP = ((J_EAConversionHeatPump)p_secondaryHeatingAsset).getCOP();

//Divide the powerdemand per heating type
double gasBurnerPowerDemand 		= powerDemand_companies_kW*v_amountOfGasBurners_companies_fr		 + powerDemand_households_kW*v_amountOfGasBurners_houses_fr;
double electricHPPowerDemand 		= powerDemand_companies_kW*v_amountOfElectricHeatpumps_companies_fr + powerDemand_households_kW*v_amountOfElectricHeatpumps_houses_fr;
double hybridHPPowerDemand 	   		= powerDemand_companies_kW*v_amountOfHybridHeatpump_companies_fr	 + powerDemand_households_kW*v_amountOfHybridHeatpump_houses_fr;
//double DistrictHeatingPowerDemand = powerDemand_companies_kW*v_amountOfDistrictHeating_companies_pct	 + powerDemand_households_kW*v_amountOfDistrictHeating_houses_pct;
double DistrictHeatingPowerDemand 	= (powerDemand_companies_kW+powerDemand_households_kW) - hybridHPPowerDemand - electricHPPowerDemand - gasBurnerPowerDemand; // To make sure all power demand is met


if ( HP_COP < p_thresholdCOP_hybridHeatpump ) { // switch to gasburner when HP COP is below treshold
	powerDemandDivision[0] = gasBurnerPowerDemand + hybridHPPowerDemand;
	powerDemandDivision[1] = electricHPPowerDemand;
	powerDemandDivision[2] = DistrictHeatingPowerDemand;
}
else{
	powerDemandDivision[0] = gasBurnerPowerDemand;
	powerDemandDivision[1] = electricHPPowerDemand + hybridHPPowerDemand;
	powerDemandDivision[2] = DistrictHeatingPowerDemand;
}

/*
//TESTER
	powerDemandDivision[0] = powerDemand_companies_kW*0.5 + powerDemand_households_kW*0.5;
	powerDemandDivision[1] = powerDemand_companies_kW*0.5 + powerDemand_households_kW*0.5;
	powerDemandDivision[2] = 0;
*/

return powerDemandDivision; //{Gasburner power request, HP power request, DH power request}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722595238227</Id>
					<Name><![CDATA[f_connectToJ_EA_default_overwrite]]></Name>
					<X>960</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[j_ea]]></Name>
						<Type><![CDATA[J_EA]]></Type>
					</Parameter>
					<Body><![CDATA[energyModel.c_energyAssets.add(j_ea);
c_energyAssets.add(j_ea);

if (j_ea instanceof J_EAVehicle) {
	J_EAVehicle vehicle = (J_EAVehicle)j_ea;
	if (vehicle instanceof J_EADieselVehicle) {
		c_dieselVehicles.add( (J_EADieselVehicle)vehicle );		
	} else if (vehicle instanceof J_EAHydrogenVehicle) {
		c_hydrogenVehicles.add((J_EAHydrogenVehicle)vehicle);		
	} else if (vehicle instanceof J_EAEV) {
		c_vehiclesAvailableForCharging.add((J_EAEV)vehicle);
		energyModel.c_EVs.add((J_EAEV)vehicle);		
	}
	c_vehicleAssets.add(vehicle);		
	J_ActivityTrackerTrips tripTracker = vehicle.getTripTracker();
	if (tripTracker == null) { // Only provide tripTracker when vehicle doesn't have it yet!
		if (vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK) {
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, rowIndex, energyModel.t_h*60, vehicle);
		} else if (vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_VAN || vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN) {// No mobility pattern for business vans available yet!! Falling back to truck mobility pattern
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, rowIndex, energyModel.t_h*60, vehicle);
		} else {
			//traceln("Adding passenger vehicle to gridconnection %s", this);
			int rowIndex = uniform_discr(0, 200);//getIndex() % 200;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsExcel, rowIndex, energyModel.t_h*60, vehicle);
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsExcel, 18, energyModel.t_h*60, vehicle);
			//int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, 2, energyModel.t_h*60, vehicle);
		}
		
		vehicle.tripTracker = tripTracker;	
	}
	c_tripTrackers.add( tripTracker );
	v_vehicleIndex ++;
} else if (j_ea instanceof J_EAConsumption) {
	c_consumptionAssets.add((J_EAConsumption)j_ea);	
	if (j_ea.energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION) {
		p_DHWAsset = (J_EAConsumption)j_ea;	
	}
} else if (j_ea instanceof J_EAProduction) {
	c_productionAssets.add((J_EAProduction)j_ea);
	//energyModel.c_productionAssets.add((J_EAProduction)j_ea);
	
	if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {
		v_hasPV = true;
		v_totalInstalledPVPower_kW += j_ea.getElectricCapacity_kW();
		if (l_parentNodeElectric.getConnectedAgent() != null) {
			l_parentNodeElectric.getConnectedAgent().v_totalInstalledPVPower_kW += j_ea.getElectricCapacity_kW();
		}
		energyModel.v_totalInstalledPVPower_kW += j_ea.getElectricCapacity_kW();
	}
	else if (j_ea.energyAssetType == OL_EnergyAssetType.WINDMILL) {
		v_totalInstalledWindPower_kW += j_ea.getElectricCapacity_kW();
		if (l_parentNodeElectric.getConnectedAgent() != null) {
			l_parentNodeElectric.getConnectedAgent().v_totalInstalledWindPower_kW += j_ea.getElectricCapacity_kW();
		}
		energyModel.v_totalInstalledWindPower_kW += j_ea.getElectricCapacity_kW();
	}
} else if (j_ea instanceof J_EAConversion) {
	c_conversionAssets.add((J_EAConversion)j_ea);
	if ( j_ea.energyAssetType == OL_EnergyAssetType.GAS_PIT | j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB){
		//traceln("Adding HOB to house" + this);
		if (p_cookingTracker == null) {
			//traceln("Adding cookingTracker to house" + this);
			int rowIndex = uniform_discr(2, 300); 
			p_cookingTracker = new J_ActivityTrackerCooking(energyModel.p_cookingPatternExcel, rowIndex, energyModel.t_h*60, (J_EAConversion)j_ea );			
		} else {
			p_cookingTracker.HOB = (J_EAConversion)j_ea;
		}
	} else if (j_ea instanceof J_EAConversionGasBurner) {
		p_primaryHeatingAsset = (J_EAConversion)j_ea;
	} else if (j_ea instanceof J_EAConversionHeatPump) {
		energyModel.c_ambientAirDependentAssets.add(j_ea);
		p_secondaryHeatingAsset = (J_EAConversion)j_ea;
	//} else if (j_ea instanceof J_EAConversionHydrogenBurner) {
	//		p_primaryHeatingAsset = (J_EAConversion)j_ea;
	} else if (j_ea instanceof J_EAConversionHydrogenBurner) {
		p_tertiaryHeatingAsset = (J_EAConversion)j_ea;
	//} else if (j_ea instanceof J_EAConversionCurtailer) {
	//		p_curtailer = (J_EAConversionCurtailer)j_ea;
	}
} else if  (j_ea instanceof J_EAStorage) {
	c_storageAssets.add((J_EAStorage)j_ea);
	energyModel.c_storageAssets.add((J_EAStorage)j_ea);
	if (j_ea.energyAssetType == OL_EnergyAssetType.BUILDINGTHERMALS) {
		//traceln("Adding buildingThermals to gridconnection");	
		p_BuildingThermalAsset = (J_EABuilding)j_ea;
			/*if ( p_energyLabel != null & p_gridConnectionType != null){ // Get building thermals from lookup table when isolation label and house type are available
				double lossFactor_WpK2 = energyModel.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_energyLabel.name()).path("lossFactor_WpK").doubleValue();
				double heatCapacity_JpK2 = energyModel.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_energyLabel.name()).path("heatCapacity_JpK").doubleValue();
				p_BuildingThermalAsset.lossFactor_WpK = lossFactor_WpK2;
				p_BuildingThermalAsset.heatCapacity_JpK = heatCapacity_JpK2;
				traceln("House thermal model updated!");
				traceln("House type: %s, energy label: %s", p_gridConnectionType, p_energyLabel);
				traceln("lossfactor %s, heatcapacity %s", lossFactor_WpK2, heatCapacity_JpK2);
			}*/ // Deprecated get lossfactor and heatcapacity from json-input. Replace with other datasource!
		p_BuildingThermalAsset.updateAmbientTemperature( energyModel.v_currentAmbientTemperature_degC );
		//v_tempSetpoint_degC = p_BuildingThermalAsset.setTemperature_degC;		
		energyModel.c_ambientAirDependentAssets.add(p_BuildingThermalAsset);
	} else if (j_ea instanceof J_EAStorageGas) {
		p_gasBuffer = (J_EAStorageGas)j_ea;
	} else if (j_ea instanceof J_EAStorageElectric) {
		p_batteryAsset = (J_EAStorageElectric)j_ea;
	} else if (j_ea instanceof J_EAStorageHeat) {
		energyModel.c_ambientAirDependentAssets.add(j_ea);
	}
} else if  (j_ea instanceof J_EAProfile) {
	//p_energyProfile = (J_EAProfile)j_ea;
	c_profileAssets.add((J_EAProfile)j_ea);
} else {
	traceln("Unrecognized energy asset %s in gridconnection %s", j_ea, this);
}
]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1718724980084</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1718797589418</Id>
					<Name><![CDATA[energyModel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1718724980090</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1722502672021</Id>
					<Name><![CDATA[rect_heatSliderFunctionality]]></Name>
					<X>1650</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-65536</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>430</Width>
					<Height>390</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722502691313</Id>
					<Name><![CDATA[txt_heatSliderFunctionality]]></Name>
					<X>1680</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Heat sliders functionality]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1724397965238</Id>
					<Name><![CDATA[rect_batterySliderFunctionality]]></Name>
					<X>1650</X><Y>400</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16711936</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>430</Width>
					<Height>170</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724397981363</Id>
					<Name><![CDATA[txt_batterySliderFunctionality]]></Name>
					<X>1670</X><Y>420</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Battery sliders functionality]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
	</ActiveObjectClasses>
	<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
	<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
	<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
	<AbsoluteAccuracy>1.0</AbsoluteAccuracy>
	<FixedTimeStep>1.0</FixedTimeStep>
	<RelativeAccuracy>1.0</RelativeAccuracy>
	<TimeAccuracy>0.1</TimeAccuracy>
	<Frame>
		<Width>1920</Width>
		<Height>980</Height>
	</Frame>
	<Database>
		<Logging>false</Logging>
		<AutoExport>false</AutoExport>
		<ShutdownCompact>false</ShutdownCompact>
		<ImportSettings>
		</ImportSettings>
		<ExportSettings>
		</ExportSettings>
	</Database>

	<RunConfiguration ActiveObjectClassId="1658477103140">
		<Id>1658477103163</Id>
		<Name><![CDATA[RunConfiguration]]></Name>
		<MaximumMemory>4096</MaximumMemory>
		<ModelTimeProperties>
			<StopOption><![CDATA[Stop at specified date]]></StopOption>
			<InitialDate><![CDATA[1672531200000]]></InitialDate>	
			<InitialTime><![CDATA[0.0]]></InitialTime>	
			<FinalDate><![CDATA[1704067200000]]></FinalDate>	
			<FinalTime><![CDATA[8760.0]]></FinalTime>	
		</ModelTimeProperties>
		<AnimationProperties>
			<StopNever>false</StopNever>
			<ExecutionMode>realTimeScaled</ExecutionMode>
			<RealTimeScale>10.0</RealTimeScale>
			<EnableZoomAndPanning>true</EnableZoomAndPanning>
			<EnableDeveloperPanel>true</EnableDeveloperPanel>
			<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
		</AnimationProperties>
		<Inputs>
    		<RunConfigurationInput>
				<Id>1661517220706</Id>
				<Name><![CDATA[P time step h]]></Name>
				<InputReference>
					<PackageName><![CDATA[zero_engine]]></PackageName>
					<ClassName><![CDATA[EnergyModel]]></ClassName>
					<ItemName><![CDATA[p_timeStep_h]]></ItemName>
				</InputReference>
    		</RunConfigurationInput>
    		<RunConfigurationInput>
				<Id>1661517213660</Id>
				<Name><![CDATA[B add kpi visuals]]></Name>
				<InputReference>
					<PackageName><![CDATA[zero_engine]]></PackageName>
					<ClassName><![CDATA[EnergyModel]]></ClassName>
					<ItemName><![CDATA[b_parallelizeConnectionOwners]]></ItemName>
				</InputReference>
    		</RunConfigurationInput>
    		<RunConfigurationInput>
				<Id>1663577689860</Id>
				<Name><![CDATA[P parallelize]]></Name>
				<InputReference>
					<PackageName><![CDATA[zero_engine]]></PackageName>
					<ClassName><![CDATA[EnergyModel]]></ClassName>
					<ItemName><![CDATA[b_parallelizeGridConnections]]></ItemName>
				</InputReference>
    		</RunConfigurationInput>		
		</Inputs>
		<Outputs>
		</Outputs>
	</RunConfiguration>
	<JavaClasses>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659091451342</Id>
			<Name><![CDATA[J_EAProduction]]></Name>
			<Text><![CDATA[/**
 * J_EAProduction
 */
public class J_EAProduction extends zero_engine.J_EA implements Serializable {
	protected J_profilePointer profilePointer;
	//public double yearlyProductionElectricity_kWh;
	//public double yearlyProductionHeat_kWh;
	public double yearlyProductionHydrogen_kWh;
	public double yearlyProductionMethane_kWh;
	protected double outputTemperature_degC;
	//private J_profilePointer profile;
    /**
     * Default constructor
     */
	public J_EAProduction() {
    }

	/**
     * Constructor initializing the fields
     */
	public J_EAProduction(Agent parentAgent, OL_EnergyAssetType type, String name, double capacityElectric_kW ,double capacityHeat_kW, double yearlyProductionMethane_kWh, double yearlyProductionHydrogen_kWh, double timestep_h, double outputTemperature_degC, J_profilePointer profile) {
	    this.parentAgent = parentAgent;
	    this.energyAssetType = type;
	    this.energyAssetName = name;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.capacityHeat_kW = capacityHeat_kW;
		this.yearlyProductionHydrogen_kWh = yearlyProductionHydrogen_kWh;
		this.yearlyProductionMethane_kWh = yearlyProductionMethane_kWh;
	    this.timestep_h = timestep_h;
	    this.outputTemperature_degC = outputTemperature_degC;
		if (profile == null) {
			profilePointer = ((GridConnection)parentAgent).energyModel.f_findProfile(name);
		} else {
			profilePointer = profile;
		}
//	    traceln("I am instantiated! "+this+" owned by "+ownerAsset);
		registerEnergyAsset();
	}
	
	public void setCapacityElectric_kW(double capacityElectric_kW) {
		// Calculate the difference with the set and the previous capacity to update totals in GC, GN and EnergyModel
		double difference_kW = capacityElectric_kW - this.capacityElectric_kW;
		if (this.energyAssetType == OL_EnergyAssetType.WINDMILL && this.parentAgent instanceof GridConnection) {		
			((GridConnection) this.parentAgent).v_totalInstalledWindPower_kW += difference_kW;
			if (((GridConnection) this.parentAgent).l_parentNodeElectric.getConnectedAgent() != null) {
				((GridConnection) this.parentAgent).l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, difference_kW, true);
			}
			((GridConnection) this.parentAgent).energyModel.v_totalInstalledWindPower_kW += difference_kW;
		}
		else if (this.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC && this.parentAgent instanceof GridConnection) {
			((GridConnection) this.parentAgent).v_totalInstalledPVPower_kW += difference_kW;
			if (((GridConnection) this.parentAgent).l_parentNodeElectric.getConnectedAgent() != null) {
				((GridConnection) this.parentAgent).l_parentNodeElectric.getConnectedAgent().f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, difference_kW, true);
			}
			((GridConnection) this.parentAgent).energyModel.v_totalInstalledPVPower_kW += difference_kW;
		}

		this.capacityElectric_kW = capacityElectric_kW;
	}
	
	public double getCapacityElectric_kW() {
		return this.capacityElectric_kW;
	}
	
	public String getName() {
		return this.energyAssetName;
	}
	
	@Override
    public double[] operate(double ratioOfCapacity) {
		if (profilePointer != null) {			
			ratioOfCapacity = profilePointer.getValue();
		}
		
    	this.electricityProduction_kW = ratioOfCapacity * capacityElectric_kW;
    	this.heatProduction_kW = ratioOfCapacity * capacityHeat_kW;
    	this.hydrogenProduction_kW = ratioOfCapacity * yearlyProductionHydrogen_kWh;
    	this.methaneProduction_kW = ratioOfCapacity * yearlyProductionMethane_kWh;
    	energyUse_kW = -(electricityProduction_kW + heatProduction_kW + hydrogenProduction_kW + methaneProduction_kW);
    	energyUsed_kWh += energyUse_kW * timestep_h;
    	//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
    	// debugging checks:
    	this.heatProduced_kWh += this.heatProduction_kW * timestep_h;
    	
    	return returnEnergyFlows();
	}

    public double[] curtailElectricityProduction(double curtailmentSetpoint_kW) {
    	double currentElectricityProduction_kW = lastFlowsArray[0];
    	double curtailmentPower_kW = max(0,min(currentElectricityProduction_kW, curtailmentSetpoint_kW));
    	energyUsed_kWh += curtailmentPower_kW * timestep_h;
    	double[] arr = {-curtailmentPower_kW, 0, 0, 0, 0, 0, 0, 0, 0, curtailmentPower_kW};
    	lastFlowsArray[0] -= curtailmentPower_kW;
    	lastFlowsArray[9] += curtailmentPower_kW;
    	//traceln("Electricity production of asset %s curtailed by %s kW!", this, curtailmentPower_kW);
    	if (parentAgent instanceof GridConnection) {    		
    		((GridConnection)parentAgent).f_removeFlows(arr, this);
    	}
    	if (ui_energyAsset!= null) {
    		ui_energyAsset.f_removeFlows(arr);
    	}
    	return arr;
    }
	
	@Override
	public String toString() {
		return
			"type = " + this.getClass().toString() + " " +
			"parentAgent = " + parentAgent +" " +
			"capacityElectricity_kW = " + capacityElectric_kW +" "+
			"capacityHeat_kW = " + capacityHeat_kW +" "+
			"outputTemperature_degC = " + outputTemperature_degC + " "+
			"heatProduced_kWh = "+ this.heatProduced_kWh +  " ";
	}

	public String getOwnerAgent() {
		return parentAgent.agentInfo();
	}

	public double getCurrentTemperature() {
		return outputTemperature_degC;
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659091479591</Id>
			<Name><![CDATA[J_EAStorage]]></Name>
			<Text><![CDATA[/**
 * J_EAStorage
 */
public class J_EAStorage extends J_EA implements Serializable {

	protected OL_EnergyCarrierType storageMedium;
	protected double storageCapacity_kWh;
	protected double stateOfCharge_r;
	protected double initialStateOfCharge_r;
	protected double stateOfChargeStored_r;
	protected double lossFactor_r;
	protected double timestep_h;
	protected double ambientTemperature_degC;
	protected String ambientTempType;
	protected double discharged_kWh = 0;
	protected double charged_kWh = 0;

    /**
     * Default constructor
     */
    public J_EAStorage() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAStorage(Agent parentAgent, double chargeCapacityElectric_kW, double chargeCapacityHeat_kW, OL_EnergyCarrierType storageMedium, double storageCapacity_kWh, double stateOfCharge, double lossFactor, double timestep_h, String ambientTempType) {
		this.parentAgent = parentAgent;
		this.capacityElectric_kW = chargeCapacityElectric_kW;  // capacity for charging/discharging in kW
		this.capacityHeat_kW = chargeCapacityHeat_kW;				// capacity for charging/discharging in kW
		this.storageMedium = storageMedium;
		this.storageCapacity_kWh = storageCapacity_kWh;
		this.initialStateOfCharge_r = stateOfCharge;
		this.stateOfCharge_r = initialStateOfCharge_r;
		this.lossFactor_r = lossFactor;
		this.timestep_h = timestep_h;
		this.ambientTempType = ambientTempType;
		registerEnergyAsset();
    }

    public void calculateLoss() {
    	//
    }

    public double[] operate(double ratioOfChargeCapacity_r) {
    	// traceln("storage operate! ");
    	//double[] arr = {0,0,0,0,0,0,0,0};
    	//return arr;
    	return returnEnergyFlows();
    }

	protected void updateStateOfCharge( double deltaEnergy_kWh ) {
		stateOfCharge_r += deltaEnergy_kWh / storageCapacity_kWh;
	}
	
    @Override
    public void storeStatesAndReset() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsedStored_kWh = energyUsed_kWh;
    	energyUsed_kWh = 0.0;
    	stateOfChargeStored_r = stateOfCharge_r;
    	stateOfCharge_r = initialStateOfCharge_r;    
    	charged_kWh = 0;
    	discharged_kWh = 0;
    	resetFlows();    	
    }
    
	@Override
    public void restoreStates() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsed_kWh = energyUsedStored_kWh;    	
    	stateOfCharge_r = stateOfChargeStored_r;
    }
    
	// acces current state of charge
	@Override
	public double getCurrentStateOfCharge() {
    	return stateOfCharge_r;
	}

	public double getStorageCapacity_kWh() {
		return storageCapacity_kWh;
	}
	
	@Override
	public double getCurrentTemperature() {
		return 0;
	}

	@Override
	public void updateAmbientTemperature(double currentAmbientTemperature_degC) {
		//
	}

    @Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659091488030</Id>
			<Name><![CDATA[J_EAConversion]]></Name>
			<Text><![CDATA[/**
 * J_EAConversion
 */
public class J_EAConversion extends zero_engine.J_EA implements Serializable {

	protected OL_EnergyCarrierType energyCarrierProduced;
	protected OL_EnergyCarrierType energyCarrierConsumed;
	/**
     * Default constructor
     */
    public J_EAConversion() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversion(Agent parentAgent, double capacityElectric_kW, double capacityHeat_kW, double efficiency_r, OL_EnergyCarrierType energyCarrierProduced, OL_EnergyCarrierType energyCarrierConsumed, double timestep_h) {
	    this.parentAgent = parentAgent;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.capacityHeat_kW = capacityHeat_kW;
	    this.eta_r = efficiency_r;
	    this.energyCarrierProduced = energyCarrierProduced;
	    this.energyCarrierConsumed = energyCarrierConsumed;
	    this.timestep_h = timestep_h;
		registerEnergyAsset();
	}

	@Override
	public double[] operate(double ratioOfCapacity) {
		//
		double[] arr = {0,0,0,0,0,0,0,0,0 };
    	return arr;
	}

    @Override
	public String toString() {
		return super.toString();
	}

	public String getOwnerAgent() {
		return parentAgent.agentInfo();
	}
	


	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}                         ]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659104834899</Id>
			<Name><![CDATA[J_EAConsumption]]></Name>
			<Text><![CDATA[/**
 * J_EAConsumption
 */
public class J_EAConsumption extends zero_engine.J_EA implements Serializable {
	protected J_profilePointer profilePointer;
	public double yearlyDemandElectricity_kWh;
	public double yearlyDemandHeat_kWh;
	public double yearlyDemandHydrogen_kWh;
	public double yearlyDemandMethane_kWh;
	public double yearlyDemandDiesel_kWh;
	private double consumptionScaling_fr = 1;
	public double loadLoad_kWh = 0;
	//private J_profilePointer profilePointer;
	/**
     * Default constructor
     */
    public J_EAConsumption() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConsumption(Agent parentAgent, OL_EnergyAssetType type, String name, double yearlyDemandElectricity_kWh, double yearlyDemandHeat_kWh, double yearlyDemandHydrogen_kWh, double yearlyDemandMethane_kWh, double yearlyDemandDiesel_kWh, double timestep_h, J_profilePointer profile) {
		this.energyAssetName = name;
		this.energyAssetType = type;
    	this.parentAgent = parentAgent;
		this.yearlyDemandElectricity_kWh = yearlyDemandElectricity_kWh;
		this.yearlyDemandHeat_kWh = yearlyDemandHeat_kWh;
		this.yearlyDemandHydrogen_kWh = yearlyDemandHydrogen_kWh;
		this.yearlyDemandMethane_kWh = yearlyDemandMethane_kWh;
		this.yearlyDemandDiesel_kWh = yearlyDemandDiesel_kWh;
		this.timestep_h = timestep_h;
		if (profile == null) {
			profilePointer = ((GridConnection)parentAgent).energyModel.f_findProfile(name);
		} else {
			profilePointer = profile;
		}
		
		registerEnergyAsset();
    }
    
    public String getAssetName() {
    	return this.energyAssetName;
    }
    
    public void setConsumptionScaling_fr(double consumptionScaling_fr) {
    	this.consumptionScaling_fr = consumptionScaling_fr;
    }
    
    public double getConsumptionScaling_fr() {
    	return this.consumptionScaling_fr;
    }
    
	@Override
    public double[] operate(double ratioOfCapacity) {
		
		if (profilePointer != null) {			
			ratioOfCapacity = profilePointer.getValue();
		}
		
    	this.electricityConsumption_kW = ratioOfCapacity * yearlyDemandElectricity_kWh*consumptionScaling_fr;
    	this.heatConsumption_kW = ratioOfCapacity * yearlyDemandHeat_kWh*consumptionScaling_fr;
    	this.hydrogenConsumption_kW = ratioOfCapacity * yearlyDemandHydrogen_kWh*consumptionScaling_fr;
    	this.methaneConsumption_kW = ratioOfCapacity * yearlyDemandMethane_kWh*consumptionScaling_fr;
    	this.dieselConsumption_kW = ratioOfCapacity * yearlyDemandDiesel_kWh*consumptionScaling_fr;
    	//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
    	energyUse_kW = electricityConsumption_kW + heatConsumption_kW + hydrogenConsumption_kW + methaneConsumption_kW + dieselConsumption_kW;
    	energyUsed_kWh += energyUse_kW * timestep_h;
    	return returnEnergyFlows();
   	}
	
    public double[] curtailElectricityConsumption(double curtailmentSetpoint_kW) {
    	double currentElectricityProduction_kW = lastFlowsArray[4];
    	double curtailmentPower_kW = max(0,min(currentElectricityProduction_kW, curtailmentSetpoint_kW));
    	energyUsed_kWh -= curtailmentPower_kW * timestep_h;
    	loadLoad_kWh += curtailmentPower_kW * timestep_h;
    	double[] arr = {0, 0, 0, 0, -curtailmentPower_kW, 0, 0, 0, 0, -curtailmentPower_kW};
    	lastFlowsArray[4] -= curtailmentPower_kW;
    	lastFlowsArray[9] -= curtailmentPower_kW;
    	//traceln("Electricity production of asset %s curtailed by %s kW!", this, curtailmentPower_kW);
    	if (parentAgent instanceof GridConnection) {    		
    		((GridConnection)parentAgent).f_removeFlows(arr, this);
    	}
    	if (ui_energyAsset!= null) {
    		ui_energyAsset.f_removeFlows(arr);
    	}

    	return arr;
    }

	@Override
	public String toString() {
		return
			"type = " + this.getClass().toString() + " " +
			"parentAgent = " + parentAgent +" " +
			"yearlyDemandElectricity_kWh = " + yearlyDemandElectricity_kWh +" "+
			"yearlyDemandHeat_kWh = " + yearlyDemandHeat_kWh +" "+
			"yearlyDemandHydrogen_kWh = " + yearlyDemandHydrogen_kWh +" "+
			"yearlyDemandMethane_kWh = " + yearlyDemandMethane_kWh +" " +
			"yearlyDemandDiesel_kWh = " + yearlyDemandDiesel_kWh +" ";
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659108919926</Id>
			<Name><![CDATA[J_EA]]></Name>
			<Text><![CDATA[/**
 * J_EA
 */
public class J_EA implements Cloneable {

	 protected Agent parentAgent;
	 
	 public OL_EnergyAssetType energyAssetType;
	 public String energyAssetName;
	 public double v_powerFraction_fr = 0;
	 public UI_EnergyAsset ui_energyAsset = null;

	 protected double capacityElectric_kW;
	 protected double capacityHeat_kW;
	 protected double capacityGas_kW;
	 protected double energyUsed_kWh = 0.0;
	 protected double energyUse_kW = 0.0;
	 protected double energyUsedStored_kWh = 0.0;
  	 protected double timestep_h;
  	 public double eta_r;

	 public double electricityProduction_kW = 0.0;
	 public double heatProduction_kW = 0.0;
	 public double methaneProduction_kW = 0.0;
	 public double hydrogenProduction_kW = 0.0;
	 public double electricityConsumption_kW = 0.0;
	 public double methaneConsumption_kW = 0.0;
	 public double hydrogenConsumption_kW = 0.0;
	 public double heatConsumption_kW = 0.0;
	 public double dieselConsumption_kW = 0.0;
	 
	 public double[] lastFlowsArray = new double[10];
	 
	 // debugging purposes!
	 protected double heatProduced_kWh = 0.0;
	 protected double heatConsumed_kWh = 0.0;
	 protected double electricityProduced_kWh = 0.0;
    /**
     * Default constructor
     */
    public J_EA() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EA(Agent parentAgent, double capacityElectric_kW, double capacityHeat_kW, double capacityGas_kW) {
		this.parentAgent = parentAgent;
		this.capacityElectric_kW = capacityElectric_kW;
		this.capacityHeat_kW = capacityHeat_kW;
		this.capacityGas_kW = capacityGas_kW;
		registerEnergyAsset();
    }
    
    protected void registerEnergyAsset() {    	
    	if ( parentAgent instanceof GridConnection) {
    		((GridConnection)parentAgent).f_connectToJ_EA(this);
    	} else {    		
    		traceln("Energy asset %s doesn't have a valid parent agent! Will not be operated!", this);
    	}
    }
    
    public void removeEnergyAsset() {
    	if ( parentAgent instanceof GridConnection) {
    		((GridConnection)parentAgent).f_removeTheJ_EA(this);
    	} else {    		
    		traceln("Energy asset %s doesn't have a valid parent agent! Energy Asset not removed!", this);
    	}
    	
    }

    /*
    protected void findProfile(String assetName) {
    	profilePointer = findFirst(((GridConnection)parentAgent).energyModel.c_profiles, p -> p.name.equals(assetName));
    	traceln("J_EAConsumption with name %s found profile asset: %s", assetName, profilePointer);
    	if (profilePointer == null) {    		
    		throw new RuntimeException(String.format("Consumption or production asset without valid profile!") );
    	}
    }*/
    
    public double[] f_updateAllFlows(double powerFraction_fr) {

     	double powerFractionBounded_fr = min(1,max(-1, powerFraction_fr));
    	double[] arr = operate(powerFractionBounded_fr);
    	//double[] arr=operateBounded(powerFraction_fr);
    	//return arr;
    	if (parentAgent instanceof GridConnection) {    		
    		((GridConnection)parentAgent).f_addFlows(arr, this);
    	}
    	if (ui_energyAsset!= null) {
    		ui_energyAsset.f_addFlows(arr);
    	}
    	resetFlows();
    	this.lastFlowsArray = arr;
    	return arr;
    }
    
    public void resetFlows() {
    	//traceln("parent energyAsset reset ");
    	electricityProduction_kW = 0;
    	heatProduction_kW = 0;
    	methaneProduction_kW = 0;
    	hydrogenProduction_kW = 0;
    	electricityConsumption_kW = 0;
    	methaneConsumption_kW = 0;
    	hydrogenConsumption_kW = 0;
    	heatConsumption_kW = 0;
    	dieselConsumption_kW = 0;
    	energyUse_kW = 0;
    	v_powerFraction_fr = 0;
    }

  /*  public double[] operateBounded(double ratioOfCapacity) { // There should not be an option to bypass this!
    	double limitedRatioOfCapacity = min(1,max(-1, ratioOfCapacity));
    	double[] arr = operate(limitedRatioOfCapacity);
    	return arr;
    }
   */
    public double[] operate(double ratioOfCapacity) {
    	traceln("***Warning*** Parent energyAsset operate! This is a dummy function, doing nothing!");
    	double[] arr = returnEnergyFlows(); //{electricityProduction_kW, methaneProduction_kW, hydrogenProduction_kW, heatProduction_kW, electricityConsumption_kW, methaneConsumption_kW, hydrogenConsumption_kW, heatConsumption_kW };
    	//resetFlows();
    	return arr;
    }

    public double[] returnEnergyFlows() {
    	//traceln("returning energy flows from superclass");
    	/*if (parentAgent instanceof GridConnection ) {
    		if(this instanceof J_EAConversionCurtailer) {    			
	    		((GridConnection)parentAgent).v_currentEnergyProduction_kW -= max(0,energyUse_kW);    			
	    		((GridConnection)parentAgent).v_currentEnergyCurtailed_kW += max(0,energyUse_kW);    			
    		} else {
	    		((GridConnection)parentAgent).v_currentEnergyConsumption_kW += max(0,energyUse_kW);
	    		((GridConnection)parentAgent).v_currentEnergyProduction_kW += max(0,-energyUse_kW);
    		}
    	}*/
    	double[] arr = {electricityProduction_kW, methaneProduction_kW, hydrogenProduction_kW, heatProduction_kW, electricityConsumption_kW, methaneConsumption_kW, hydrogenConsumption_kW, heatConsumption_kW, dieselConsumption_kW, energyUse_kW };    	
    	return arr;
    }
     
    public double getCurrentStateOfCharge() {
    	return 0;
    }

    public void storeStatesAndReset() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsedStored_kWh = energyUsed_kWh;
    	energyUsed_kWh = 0.0;
    	resetFlows();    	
    }
    
    public void restoreStates() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsed_kWh = energyUsedStored_kWh;
    }
    
    public double getCurrentTemperature() {
    	return 0;
    }
      
    public void updateAmbientTemperature(double currentAmbientTemperature_degC) {
    	// only for storage agents. Does it belong in this superclass?
    }

    public double getHeatCapacity_kW() {
    	return capacityHeat_kW;
    }
    
    public void setHeatCapacity_kW(double capacityHeat_kW) {
    	this.capacityHeat_kW = capacityHeat_kW;
    }

    public double getElectricCapacity_kW() {
    	return capacityElectric_kW;
    }

    public double getGasCapacity_kW() {
    	return capacityGas_kW;
    }
    
    public double getEnergyUsed_kWh() {
    	return energyUsed_kWh;
    }
    
    public double getElectricityProduced_kWh() {
    	return electricityProduced_kWh;
	}

    public double getSetTemperature_degC() {
    	return 0;
    }
    
    public double getMinTemperature_degC() {
    	return 0;
    }
    
    public double getMaxTemperature_degC() {
    	return 0;
    }
    
    public Agent getParentAgent() {
    	return parentAgent;
    }
    
    public void setUI_EnergyAsset(UI_EnergyAsset ui_energyAsset) {
    	this.ui_energyAsset = ui_energyAsset;
    }
    
    public double[] getLastFlows() {
    	return lastFlowsArray;
    }
    
	 public OL_EnergyAssetType getEAType() {
		 return energyAssetType;
	 }

	 public void setEnergyAssetName(String name) {
		 this.energyAssetName = name;
	 }
	 
	 public void setEnergyAssetType(OL_EnergyAssetType assetType) {
		 this.energyAssetType = assetType;
	 }
    
//    public double getOutputTemperature_degC() {
//   	return 0;
//    }
    @Override    
    public Object clone() { 
    	try {
    		return super.clone(); 
    	} catch (CloneNotSupportedException e) {
    		throw new RuntimeException(e);
    	}
    } 
    
	@Override
	public String toString() {
		return
			"ownerAgent = " + parentAgent.getIndex() +" ";
	}
}
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659117174456</Id>
			<Name><![CDATA[J_EAConversionGasBurner]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionGasBurner
 */
public class J_EAConversionGasBurner extends zero_engine.J_EAConversion implements Serializable {

	//private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HEAT;
	//private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.METHANE;
	protected double outputTemperature_degC;
    /**
     * Default constructor
     */
    public J_EAConversionGasBurner() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionGasBurner(Agent parentAgent, OL_EnergyAssetType assetType, double capacityThermal_kW, double efficiency, double timestep_h, double outputTemperature_degC) {
	    this.parentAgent = parentAgent;
	    this.energyAssetType = assetType;
	    this.capacityHeat_kW = capacityThermal_kW;
	    this.eta_r = efficiency;
	    this.timestep_h = timestep_h;
	    this.outputTemperature_degC = outputTemperature_degC;
	    //this.energyAssetType = OL_EnergyAssetType.GAS_BURNER;
	    
	    // Validation checks
	    if (capacityHeat_kW == 0) {
	    	throw new RuntimeException(String.format("Exception: J_EAGasBurner with capacityHeat_kW = 0, invalid state! Energy Asset: %s", this));
	    	
	    }
		registerEnergyAsset();
	}

    @Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");
    	this.heatProduction_kW = capacityHeat_kW * ratioOfCapacity;
		this.methaneConsumption_kW = heatProduction_kW / eta_r;
		this.energyUse_kW = (methaneConsumption_kW - heatProduction_kW);
		this.energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		this.heatProduced_kWh += heatProduction_kW * timestep_h;
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	@Override
	public String toString() {
		return
			"AssetType = " + energyAssetType + 
			" parentAgent = " + parentAgent +", Energy consumed = " + this.energyUsed_kWh +
			" capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"eta_r = " + this.eta_r+" " +
			"outputTemperature_degC = " + this.outputTemperature_degC + " "+
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " "+
			"heatProducted_kWh = " +this.heatProduced_kWh + " ";
	}
	
	@Override
	public double getCurrentTemperature() {
		return outputTemperature_degC;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659117174457</Id>
			<Name><![CDATA[J_EAConversionBiogasMethane]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionBiogasMethane
 */
public class J_EAConversionBiogasMethane extends zero_engine.J_EAConversion implements Serializable {

	//private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.METHANE;
	//private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.METHANE;
	public double capacityMethane_kW;
	//protected double outputTemperature_degC;
    /**
     * Default constructor
     */
    public J_EAConversionBiogasMethane() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionBiogasMethane(Agent parentAgent, double capacityMethane_kW, double efficiency, double timestep_h) {
	    this.parentAgent= parentAgent;
	    this.capacityMethane_kW = capacityMethane_kW;
	    this.eta_r = efficiency;
	    this.timestep_h = timestep_h;
		registerEnergyAsset();
	}

    @Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");
    	this.methaneProduction_kW = capacityMethane_kW * ratioOfCapacity;
		this.methaneConsumption_kW = methaneProduction_kW / eta_r;
		energyUse_kW = methaneConsumption_kW - methaneProduction_kW;   	
		this.energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +", Energy consumed = " + this.energyUsed_kWh +
			"capacityMethane_kW = " + this.capacityMethane_kW +" "+
			"eta_r = " + this.eta_r+" " +
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " ";
	}
	
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659117174458</Id>
			<Name><![CDATA[J_EAProfile]]></Name>
			<Text><![CDATA[/**
 * J_EAProfile
 */
public class J_EAProfile extends zero_engine.J_EA implements Serializable {

	//private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.METHANE;
	public OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.ELECTRICITY;
	//public double capacityMethane_kW;
	public double[] a_energyProfile_kWh;
	public OL_ProfileAssetType profileType;
	private double profileTimestep_h;
	//protected double outputTemperature_degC;
	public double loadLoad_kWh = 0;
	private double profileScaling_fr = 1;

	
    /**
     * Default constructor
     */
    public J_EAProfile() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAProfile(Agent parentAgent, OL_EnergyCarrierType energyCarrier, double[] profile_kWh, OL_ProfileAssetType profileType, double profileTimestep_h) {
	    this.parentAgent= parentAgent;
	    this.energyCarrierConsumed = energyCarrier;
	    this.a_energyProfile_kWh = profile_kWh;
	    this.profileType = profileType;
	    this.profileTimestep_h = profileTimestep_h;
	    if (parentAgent instanceof GridConnection) {
	    	this.timestep_h = ((GridConnection)parentAgent).energyModel.p_timeStep_h;
	    } else {
	    	this.timestep_h = profileTimestep_h;
	    }
		registerEnergyAsset();
	}

    @Override
    public double[] f_updateAllFlows(double time_h) {
    	//resetFlows();    	
    	double[] arr=operate(time_h);
    	//return arr;    	
    	if (parentAgent instanceof GridConnection) {    		
    		((GridConnection)parentAgent).f_addFlows(arr, this);
    	}
    	if (ui_energyAsset!= null) {
    		ui_energyAsset.f_addFlows(arr);
    	}
    	this.lastFlowsArray = arr;
    	return arr;
    }
    
    @Override
    public double[] operate(double time_h) {
    	if ( (int)floor(time_h/profileTimestep_h) >= a_energyProfile_kWh.length ) {
    		traceln("Time out of bounds for evaluating J_EAProfile power in profile asset %s!", this.energyAssetName);
    		time_h = a_energyProfile_kWh.length * profileTimestep_h - 1;
    	}
    	if (energyCarrierConsumed == OL_EnergyCarrierType.ELECTRICITY) {
    		this.electricityConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);
        	this.electricityProduction_kW = -min(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);        	
    	} else if (energyCarrierConsumed == OL_EnergyCarrierType.METHANE) {
    		this.methaneConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);
        	this.methaneProduction_kW = -min(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);    		    		
    	} else if (energyCarrierConsumed == OL_EnergyCarrierType.HYDROGEN) {
    		this.hydrogenConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);
        	this.hydrogenProduction_kW = -min(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);
    	} else if  (energyCarrierConsumed == OL_EnergyCarrierType.HEAT) {
    		this.heatConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);
        	this.heatProduction_kW = -min(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);
        	//traceln("Current heat consumption: %s", this.heatConsumption_kW);
    	} else if  (energyCarrierConsumed == OL_EnergyCarrierType.DIESEL) {
    		this.dieselConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);
    	}
		//traceln("Running custom demand profile for " + energyAssetName + " with current timestep demand " + (electricityConsumption_kW - electricityProduction_kW) + " kW. Array index is " + (int)floor(time_h/timestep_h) + ", time is: " + time_h + " hours, array size is " + a_energyProfile_kWh.length);	
    	this.energyUse_kW = (electricityConsumption_kW + methaneConsumption_kW + hydrogenConsumption_kW + heatConsumption_kW + dieselConsumption_kW - electricityProduction_kW - methaneProduction_kW - hydrogenProduction_kW - heatProduction_kW);
		this.energyUsed_kWh += timestep_h * energyUse_kW; 
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		double[] arr = returnEnergyFlows();
		resetFlows();
		return arr;
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

    public double[] curtailElectricityConsumption(double curtailmentSetpoint_kW) {
    	double currentElectricityProduction_kW = lastFlowsArray[4];
    	double curtailmentPower_kW = max(0,min(currentElectricityProduction_kW, curtailmentSetpoint_kW));
    	energyUsed_kWh -= curtailmentPower_kW * timestep_h;
    	loadLoad_kWh += curtailmentPower_kW * timestep_h;
    	double[] arr = {0, 0, 0, 0, -curtailmentPower_kW, 0, 0, 0, 0, -curtailmentPower_kW};
    	lastFlowsArray[4] -= curtailmentPower_kW;
    	lastFlowsArray[9] -= curtailmentPower_kW;
    	//traceln("Electricity production of asset %s curtailed by %s kW!", this, curtailmentPower_kW);
    	if (parentAgent instanceof GridConnection) {    		
    		((GridConnection)parentAgent).f_removeFlows(arr, this);
    	}
    	if (ui_energyAsset!= null) {
    		ui_energyAsset.f_removeFlows(arr);
    	}
    	return arr;
    }

    public void scaleEnergyProfile(double scaling_fr) {
    	if (scaling_fr == 0) {
    		traceln("Failed to scale J_EAProfile with factor of 0 to prevent loss of information.");
    		return;
    	}
    	this.profileScaling_fr *= scaling_fr;
    	for (int i = 0; i < a_energyProfile_kWh.length; i++) {
    		a_energyProfile_kWh[i] = a_energyProfile_kWh[i] * scaling_fr;
    	}
    	return;
    }
    
    public void resetEnergyProfile() {
    	if (this.profileScaling_fr == 1) {
    		return;
    	}
    	for (int i = 0; i < a_energyProfile_kWh.length; i++) {
    		a_energyProfile_kWh[i] = a_energyProfile_kWh[i] / this.profileScaling_fr;
    	}
    	this.profileScaling_fr = 1;
    	return;
    }
	
    public double getProfileScaling_fr() {
    	return profileScaling_fr;
    }
    
	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +", Energy consumed = " + this.energyUsed_kWh +
			"current power = " + (electricityConsumption_kW + methaneConsumption_kW + hydrogenConsumption_kW + heatConsumption_kW + dieselConsumption_kW - electricityProduction_kW - methaneProduction_kW - hydrogenProduction_kW - heatProduction_kW) +" "+
			"eta_r = " + this.eta_r+" " +
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " ";
	}
	
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659446215929</Id>
			<Name><![CDATA[J_EAStorageElectric]]></Name>
			<Text><![CDATA[/**
 * J_EAStorageElectric
 */
public class J_EAStorageElectric extends J_EAStorage implements Serializable {

	private OL_EnergyCarrierType storageMedium = OL_EnergyCarrierType.ELECTRICITY;
	
	private double etaCharge_r; // charging efficiency
	private double etaDischarge_r;
    /**
     * Default constructor
     */
    public J_EAStorageElectric() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAStorageElectric(Agent parentAgent, double capacityElectric_kW, double storageCapacity_kWh, double stateOfCharge_r, double timestep_h ) {
		this.parentAgent = parentAgent;
		this.capacityElectric_kW = capacityElectric_kW;
		this.storageCapacity_kWh = storageCapacity_kWh;
		this.stateOfCharge_r = stateOfCharge_r;
		this.timestep_h = timestep_h;
		this.energyAssetType = OL_EnergyAssetType.STORAGE_ELECTRIC;
		double eta_r=0.9; // Default cycle efficiency of 90%. Add this as an argument to constructor?
		this.etaCharge_r = Math.sqrt(eta_r);
		this.etaDischarge_r = Math.sqrt(eta_r);
		registerEnergyAsset();
    }

	@Override
	public double[] operate(double ratioOfChargeCapacity_r) {
    	double inputPower_kW = ratioOfChargeCapacity_r * capacityElectric_kW; // Electric power going into battery, before losses.
    	double deltaEnergy_kWh;   // The change in energy stored in the battery this timestep ('internal' energy)
    	
    	// charging/discharging losses
    	if (inputPower_kW > 0) { // charging (the battery 'consumes' electricity)
    		deltaEnergy_kWh = etaCharge_r * inputPower_kW * timestep_h; // Actual change of energy content of battery after losses. deltaEnergy_kWh is smaller than inputPower_kW * timestep_h!
    	} else { // discharging (the battery 'produces' electricity)
    		deltaEnergy_kWh = inputPower_kW / etaDischarge_r * timestep_h; // Actual change of energy content of battery after losses. deltaEnergy_kWh is larger than inputPower_kW * timestep_h!
    	}

    	// Limit SoC to feasible range (0-1)
    	deltaEnergy_kWh = - min( -deltaEnergy_kWh, (stateOfCharge_r * storageCapacity_kWh) ); // Prevent negative charge
    	deltaEnergy_kWh = min(deltaEnergy_kWh, (1 - stateOfCharge_r) * storageCapacity_kWh ); // Prevent overcharge
    	
    	if (deltaEnergy_kWh > 0) { // charging, deltaEnergy_kWh and inputPower_kW positive
    		inputPower_kW = deltaEnergy_kWh / timestep_h / etaCharge_r;
    		electricityConsumption_kW = inputPower_kW;
    		electricityProduction_kW = 0;
    		energyUse_kW = (1-etaCharge_r)*inputPower_kW;    		
    	} else { // discharging, deltaEnergy_kWh and inputPower_kW negative
    		inputPower_kW = deltaEnergy_kWh / timestep_h * etaDischarge_r;
    		electricityConsumption_kW = 0;
    		electricityProduction_kW = -inputPower_kW; 
    		energyUse_kW = -deltaEnergy_kWh / timestep_h * (1-etaDischarge_r);
    	}
    	energyUsed_kWh += energyUse_kW * timestep_h;
    	
		discharged_kWh += electricityProduction_kW * timestep_h; // Not the change-in-SoC, but the energy flowing out of the battery after losses.
		charged_kWh += electricityConsumption_kW * timestep_h; // Not the change-in-SoC, but the energy flowing into the battery before losses.
		
		updateStateOfCharge( deltaEnergy_kWh );
		//traceln("Battery SoC: %s", stateOfCharge_r);
		return returnEnergyFlows();
	}
	
	public void setBatteryEfficiency_r(double eta_r) {
		if (eta_r < 0 || eta_r > 1) {
			traceln("Infeasible eta_r! Should be larger than 0 and no larger than 1! Setting eta_r=1. Input value is: %s", eta_r);
			this.etaCharge_r = 1;			
			this.etaDischarge_r = 1;
		} else {
			this.etaCharge_r = Math.sqrt(eta_r);			
			this.etaDischarge_r = Math.sqrt(eta_r);
		}		
	}

	@Override
	public String toString() {
		return 
			"type = " + this.getClass().toString() + " " +
			"parentAgent = " + parentAgent +" " +
			"stateOfCharge_r = " + this.stateOfCharge_r+" "+
			"storageCapacity_kWh = " + this.storageCapacity_kWh +" "+
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"discharged_kWh " + this.discharged_kWh+" "+
			"charged_kWh " + this.charged_kWh+" ";
	}

	@Override
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {
		stateOfCharge_r += deltaEnergy_kWh / storageCapacity_kWh;
	}

	@Override
	public double getCurrentStateOfCharge() {
    	return this.stateOfCharge_r;
	}

	public double getCapacityAvailable_kW() {
		double availableCapacity_kW;
		if ( stateOfCharge_r * storageCapacity_kWh  > capacityElectric_kW * timestep_h) {
			availableCapacity_kW = capacityElectric_kW;
		}
		else {
			availableCapacity_kW =  stateOfCharge_r * storageCapacity_kWh / timestep_h; // Allow to drain completely
		}
		return availableCapacity_kW;
	}
	
	public double getCapacityElectric_kW() {
		return this.capacityElectric_kW;
	}
	
	public double getStorageCapacity_kWh() {
		return this.storageCapacity_kWh;
	}

	public double getTotalChargeAmount_kWh() {
		return this.charged_kWh;
	}
	public double getTotalDischargeAmount_kWh() {
		return this.discharged_kWh;
	}
	
	public void setStorageCapacity_kWh(double storageCapacity_kWh) {
		this.storageCapacity_kWh = storageCapacity_kWh;
		if (storageCapacity_kWh == 0) {			
			Arrays.fill(lastFlowsArray,0);
		}
	}

	public void setCapacityElectric_kW(double capacityElectric_kW) {
		this.capacityElectric_kW = capacityElectric_kW;
		if (capacityElectric_kW == 0) {			
			Arrays.fill(lastFlowsArray,0);			
		}
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659446215929</Id>
			<Name><![CDATA[J_EAStorageGas]]></Name>
			<Text><![CDATA[/*package zero_engine;

import java.io.Serializable;*/

/**
 * J_EAStorageGas
 */
public class J_EAStorageGas extends zero_engine.J_EAStorage implements Serializable {

	private OL_EnergyCarrierType storageMedium = OL_EnergyCarrierType.METHANE;
	private double lossFactor_r = 0;

	//public double capacityGas_kW = 0;

    /**
     * Default constructor
     */
    public J_EAStorageGas() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAStorageGas(Agent parentAgent, double capacityGas_kW, double storageCapacity_kWh, double stateOfCharge_r, double timestep_h ) {
		this.parentAgent = parentAgent;
		this.capacityGas_kW = capacityGas_kW;
		this.storageCapacity_kWh = storageCapacity_kWh;
		this.stateOfCharge_r = stateOfCharge_r;
		this.timestep_h = timestep_h;
		registerEnergyAsset();
    }

	@Override
	public void calculateLoss() {
		//no loss for gas storage modeled.
		energyUse_kW = 0;
		energyUsed_kWh += energyUse_kW * timestep_h;
	}

	@Override
	public double[] operate(double ratioOfChargeCapacity_r) {
    	double deltaEnergy_kWh;   // to check the request with the energy currently in storage
    	double inputPower_kW = ratioOfChargeCapacity_r * capacityGas_kW; // Gas power going into Storage, negative if going out.

    	deltaEnergy_kWh = inputPower_kW * timestep_h;
    	deltaEnergy_kWh = - min( -deltaEnergy_kWh, (stateOfCharge_r * storageCapacity_kWh) ); // Prevent negative charge
    	deltaEnergy_kWh = min(deltaEnergy_kWh, (1 - stateOfCharge_r) * storageCapacity_kWh ); // Prevent overcharge

    	inputPower_kW = deltaEnergy_kWh / timestep_h;

		methaneProduction_kW = max(-inputPower_kW, 0);
		methaneConsumption_kW = max(inputPower_kW, 0);
		discharged_kWh += methaneProduction_kW * timestep_h;
		charged_kWh += methaneConsumption_kW * timestep_h;
		
		updateStateOfCharge( deltaEnergy_kWh );
		//double[] arr = {electricityProduction_kW, methaneProduction_kW, hydrogenProduction_kW, heatProduction_kW, electricityConsumption_kW, methaneConsumption_kW, hydrogenConsumption_kW, heatConsumption_kW };
    	//return arr;
		return returnEnergyFlows();
	}

	@Override
	public String toString() {
		return 
			"type = " + this.getClass().toString() + " " +
			"parentAgent = " + parentAgent +" " +
			"stateOfCharge_r = " + this.stateOfCharge_r+" "+
			"storageCapacity_kWh = " + this.storageCapacity_kWh +" "+
			"capacityGas_kW = " + this.capacityGas_kW +" "+
			"discharged_kWh " + this.discharged_kWh+" "+
			"charged_kWh " + this.charged_kWh+" ";
	}

	@Override
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {
		stateOfCharge_r += deltaEnergy_kWh / storageCapacity_kWh;
	}

	@Override
	public double getCurrentStateOfCharge() {
    	return stateOfCharge_r;
	}

	public double getCapacityAvailable_kW() {
		double availableCapacity_kW;
		if ( stateOfCharge_r * storageCapacity_kWh  > capacityGas_kW * timestep_h) {
			availableCapacity_kW = capacityGas_kW;
		}
		else {
			availableCapacity_kW =  stateOfCharge_r * storageCapacity_kWh / timestep_h; // Allow to drain completely
		}
		return availableCapacity_kW;
	}
	
	public double getTotalChargeAmount_kWh() {
		return charged_kWh;
	}
	public double getTotalDischargeAmount_kWh() {
		return discharged_kWh;
	}


	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

} 
 
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659447107390</Id>
			<Name><![CDATA[J_EAStorageHeat]]></Name>
			<Text><![CDATA[/**
 * J_EAStorageHeat
 */
public class J_EAStorageHeat extends zero_engine.J_EAStorage implements Serializable {

	private double capacityElectric_kW = 0;
	public OL_EnergyCarrierType storageMedium = OL_EnergyCarrierType.HEAT;
	public OL_EAStorageTypes heatStorageType;
	private double storageCapacity_kWh;
	
	private double stateOfCharge_r;
	protected double lossFactor_WpK;
	private double timestep_h;
	private double temperature_degC;
	private double temperatureStored_degC;
	private double initialTemperature_degC;
	private double minTemperature_degC;
	private double maxTemperature_degC;
	private double setTemperature_degC;
	protected double heatCapacity_JpK;
	private double ambientTemperature_degC;
	public boolean requiresHeat = false;
	public double energyAbsorbed_kWh=0;
	public double energyAbsorbedStored_kWh=0;
	


    /**
     * Default constructor
     */
    public J_EAStorageHeat() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAStorageHeat(Agent parentAgent, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType ) {
		this.parentAgent = parentAgent;
		this.heatStorageType = heatStorageType;
		this.capacityHeat_kW = capacityHeat_kW;
		this.lossFactor_WpK = lossFactor_WpK;
		this.timestep_h = timestep_h;
		this.temperature_degC = initialTemperature_degC;
		this.initialTemperature_degC = initialTemperature_degC;
		this.minTemperature_degC = minTemperature_degC;
		this.maxTemperature_degC = maxTemperature_degC;
		this.setTemperature_degC = setTemperature_degC;
		this.heatCapacity_JpK = heatCapacity_JpK;
		this.ambientTempType = ambientTempType;
		this.storageCapacity_kWh = ( maxTemperature_degC - minTemperature_degC ) * heatCapacity_JpK / 3.6e+6;
		this.stateOfCharge_r = (( initialTemperature_degC - minTemperature_degC ) / (maxTemperature_degC - minTemperature_degC ) );
		registerEnergyAsset();
    }

	@Override
	public void calculateLoss() {
		double heatLoss_W = lossFactor_WpK * ( temperature_degC - ambientTemperature_degC );
		double deltaEnergy_kWh = ( -heatLoss_W / 1000 ) * timestep_h;
		energyUse_kW = heatLoss_W / 1000;
		energyUsed_kWh += max(0,energyUse_kW * timestep_h); // Only heat loss! Not heat gain when outside is hotter than inside!
		energyAbsorbed_kWh += max(0,-energyUse_kW * timestep_h); // Only heat gain when outside is hotter than inside!
		//traceln("Ambient temperature " + ambientTemperature_degC);
		//traceln("heatCapacity JpK " + heatCapacity_JpK );
		//traceln("tempdelta loss"+tempDelta);
		//traceln("lossfacter: " + lossFactor_WpK);
		
		updateStateOfCharge( deltaEnergy_kWh );
	}

	@Override
	public double[] operate(double ratioOfChargeCapacity_r) {
		//traceln("StorageAsset Heat Operatefunctie: ambienttemperature = "+ambientTemperature_degC);
		//traceln("StorageAsset Heat Operatefunctie: ambienttemperature = "+ambientTemperature_degC+" | powerFraction_fr = " + ratioOfChargeCapacity_r + ".");
		//traceln("<><><><> heatstorage reset heatproduction = "+heatProduction_kW+", heatconsumption_kW = "+heatConsumption_kW+" heatProduced_kWh = "+heatProduced_kWh + "heatConsumed = "+heatConsumed_kWh + ", losses= "+energyUsed_kWh );
		
		calculateLoss(); // Heat lost to the environment; this call also updates energyUse_kW and the 'state of charge' (temperature).

		double inputPower_kW = ratioOfChargeCapacity_r * capacityHeat_kW; // positive power means adding heat to the buffer
    	double deltaEnergy_kWh = inputPower_kW * timestep_h; // to check the request with the energy currently in storage

		heatProduction_kW = max(-inputPower_kW, 0);
		heatConsumption_kW = max(inputPower_kW, 0);
		heatProduced_kWh += heatProduction_kW * timestep_h;
		heatConsumed_kWh += heatConsumption_kW * timestep_h;
		//traceln("tempdelta charge: "+deltaTemp_degC);
		//traceln(">> Heat storage heatproduction = "+ heatProduced_kWh + ", heatconsumption_kW = "+ heatConsumption_kW +" heatConsumed_kWh = "+ heatConsumed_kWh +", heatProduced_kWh = "+ heatProduced_kWh );
		
		updateStateOfCharge( deltaEnergy_kWh );
		//traceln("<><><><> heatstorage <"+ownerAsset.getId()+"> calculated heatproduction = "+heatProduction_kW+", heatconsumption_kW = "+heatConsumption_kW+", heatProduced_kWh = "+heatProduced_kWh + ", heatConsumed = "+heatConsumed_kWh + ", losses= "+energyUsed_kWh );

		//double[] arr = {electricityProduction_kW, methaneProduction_kW, hydrogenProduction_kW, heatProduction_kW, electricityConsumption_kW, methaneConsumption_kW, hydrogenConsumption_kW, heatConsumption_kW };
    	//return arr;
		return returnEnergyFlows();
	}
	
	@Override
    public void storeStatesAndReset() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsedStored_kWh = energyUsed_kWh;
    	energyAbsorbedStored_kWh = energyAbsorbed_kWh;
    	energyUsed_kWh = 0.0;
    	energyAbsorbed_kWh = 0.0;
    	temperatureStored_degC = temperature_degC;
    	temperature_degC = initialTemperature_degC;
    	resetFlows();    	
    }
    
	@Override
    public void restoreStates() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsed_kWh = energyUsedStored_kWh;
    	energyAbsorbed_kWh = energyAbsorbedStored_kWh;
    	temperature_degC = temperatureStored_degC;
    }

	@Override
	public String toString() {
		return
			"type = " + this.getClass().toString() + " " +
			"Energy consumed = " + this.energyUsed_kWh +
			" temp = " + this.temperature_degC + " " +
			"parentAgent = " + parentAgent +" " +
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"stateOfCharge_r = " + this.stateOfCharge_r+" "+
			"minTemperature_degC = " + this.minTemperature_degC+" "+
			"maxTemperature_degC = " + this.maxTemperature_degC+" "+
			"setTemperature_degC = " + this.setTemperature_degC+" "+			
			"ambientTemperature_degC = "+this.ambientTemperature_degC+" "+
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " "+
			"heatProduced_kWh = "+ this.heatProduced_kWh + " "+
			"heatConsumed_kWh = "+ this.heatConsumed_kWh + " ";
	}

	@Override
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {
		double tempDelta_degC = deltaEnergy_kWh / (heatCapacity_JpK / 3.6E6 );
		temperature_degC += tempDelta_degC;
		stateOfCharge_r = ( temperature_degC - minTemperature_degC) / (maxTemperature_degC - minTemperature_degC);
		if (temperature_degC < setTemperature_degC) {
			requiresHeat = true;
		}
		else if ( temperature_degC >= maxTemperature_degC ) {
			requiresHeat = false;
		}
	}

	@Override
	public double getCurrentStateOfCharge() {
    	return stateOfCharge_r;
	}

	@Override
	public double getCurrentTemperature() {
		return temperature_degC;
	}

	@Override
	public double getSetTemperature_degC() {
		return setTemperature_degC;
	}
	
	@Override
	public double getMinTemperature_degC() {
		return minTemperature_degC;
	}
	
	@Override
	public double getMaxTemperature_degC() {
		return maxTemperature_degC;
	}

	public double getStorageCapacity_kWh() {
		return storageCapacity_kWh;
	}

	public double getHeatCapacity_JpK() {
		return heatCapacity_JpK;
	}
	
	public double getLossFactor_WpK() {
		return lossFactor_WpK;
	}

	/*
	@Override
	public double getHeatCapacity_kW() {
    	return capacityHeat_kW;
    }
	*/
	
	/*@Override //Storage assets limiteren de opname van warmte niet met 1. Dat is nodig voor de buffer. Die kan wel maximaal zijn capaciteit leverern, maar kan meer opnemen. @Gillis is dat logisch of willen we andere oplossing?
    public double[] operateBounded(double ratioOfCapacity) {
    	double limitedRatioOfCapacity = max(-1, ratioOfCapacity);
    	double[] arr = operate(limitedRatioOfCapacity);
    	return arr;
    }*/

	@Override
	public void updateAmbientTemperature(double currentAmbientTemperature_degC) { // TODO: Hoe zorgen we dat we deze niet vergeten aan te roepen??
		ambientTemperature_degC = currentAmbientTemperature_degC;
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659447107391</Id>
			<Name><![CDATA[J_EABuilding]]></Name>
			<Text><![CDATA[/**
 * J_EABuilding
 */
public class J_EABuilding extends zero_engine.J_EAStorageHeat implements Serializable {

	//EnergyAsset ownerAsset;
	private double capacityElectric_kW = 0;
	//public OL_EnergyCarrierType storageMedium = OL_EnergyCarrierType.HEAT;
	public OL_EAStorageTypes heatStorageType;
	//private double storageCapacity_kWh;
	private double stateOfCharge_r;
	//private double lossFactor_WpK;
	private double timestep_h;
	private double temperature_degC;
	private double temperatureStored_degC;
	private double initialTemperature_degC;
	private double minTemperature_degC;
	private double maxTemperature_degC;
	//public double setTemperature_degC;
	//private double heatCapacity_JpK;
	private double ambientTemperature_degC;
	private double solarAbsorptionFactor_m2;
	private double solarRadiation_Wpm2=0;
	public double energyAbsorbed_kWh=0;
	public double energyAbsorbedStored_kWh=0;
	
	//public boolean requiresHeat = false;


    /**
     * Default constructor
     */
    public J_EABuilding() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EABuilding(Agent parentAgent, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double heatCapacity_JpK, double solarAbsorptionFactor_m2 ) {
		this.parentAgent = parentAgent;
		this.heatStorageType = OL_EAStorageTypes.HEATMODEL_BUILDING;
		this.capacityHeat_kW = capacityHeat_kW;
		this.lossFactor_WpK = lossFactor_WpK;
		//traceln(this.getLossFactor_WpK());
		//traceln(this.lossFactor_WpK);
		this.timestep_h = timestep_h;
		this.initialTemperature_degC = initialTemperature_degC;
		this.temperature_degC = initialTemperature_degC;
		this.heatCapacity_JpK = heatCapacity_JpK;
		this.ambientTempType = "AIR";
		//this.storageCapacity_kWh = ( maxTemperature_degC - minTemperature_degC ) * heatCapacity_JpK / 3.6e+6;
		this.solarAbsorptionFactor_m2 = solarAbsorptionFactor_m2;
		this.energyAssetType = OL_EnergyAssetType.BUILDINGTHERMALS;
		registerEnergyAsset();
    }

	@Override
	public void calculateLoss() {
		double heatLoss_W = lossFactor_WpK * ( temperature_degC - ambientTemperature_degC );
		double deltaEnergy_kWh = ( -heatLoss_W / 1000 ) * timestep_h;
		energyUse_kW = ( heatLoss_W / 1000 );
		energyUsed_kWh += max(0,energyUse_kW * timestep_h); // Only heat loss! Not heat gain when outside is hotter than inside!
		energyAbsorbed_kWh += max(0,-energyUse_kW * timestep_h); // Only heat gain when outside is hotter than inside!
		//traceln("Ambient temperature " + ambientTemperature_degC);
		//traceln("heatCapacity JpK " + heatCapacity_JpK );
		//traceln("tempdelta loss in thermal building asset (kW) " + energyUse_kW);
		//traceln("lossfacter: " + lossFactor_WpK);
		updateStateOfCharge( deltaEnergy_kWh );
	}

	public void solarHeating() {
		double solarHeating_W = solarAbsorptionFactor_m2 * solarRadiation_Wpm2;
		double deltaEnergy_kWh = ( solarHeating_W / 1000 ) * timestep_h; // Is always positive
		energyAbsorbed_kWh += deltaEnergy_kWh;
		//traceln("Solar heating of building! Temp increase this timestep %s degC, solarRadiation %s Wpm2", tempDelta, solarRadiation_Wpm2);
		//traceln("SolarAbsorptionFactor_m2 is %s, energyGain_kWh is %s", solarAbsorptionFactor_m2, energyAbsorbed_kWh);
		//traceln("Energy gain of building heatmodel from sun = " + energyUse_kW);
		updateStateOfCharge( deltaEnergy_kWh );
	}

	@Override
	public double[] operate(double ratioOfChargeCapacity_r) {
		//traceln("Building heatCapacity_JpK: %s", this.heatCapacity_JpK);
		//traceln("StorageAsset Heat Operatefunctie: ambienttemperature = "+ambientTemperature_degC);
		//traceln("StorageAsset Heat Operatefunctie: ambienttemperature = "+ambientTemperature_degC+" | powerFraction_fr = " + ratioOfChargeCapacity_r + ".");
		//traceln("<><><><> heatstorage reset heatproduction = "+heatProduction_kW+", heatconsumption_kW = "+heatConsumption_kW+" heatProduced_kWh = "+heatProduced_kWh + "heatConsumed = "+heatConsumed_kWh + ", losses= "+energyUsed_kWh );

		calculateLoss(); // Heat exchange with environment through convection
		solarHeating(); // Heat influx from sunlight
  		
		
		double inputPower_kW = ratioOfChargeCapacity_r * capacityHeat_kW; // positive power means lowering the buffer temperature!
    	double deltaEnergy_kWh = inputPower_kW * timestep_h; // to check the request with the energy currently in storage
    	
		heatProduction_kW = max(-inputPower_kW, 0);
		heatConsumption_kW = max(inputPower_kW, 0);
		heatProduced_kWh += heatProduction_kW * timestep_h;
		heatConsumed_kWh += heatConsumption_kW * timestep_h;
		//traceln("Heat consumption delivered by heating asset kW " + heatConsumption_kW);
		//traceln("Heatcapacity kWh: " + (heatCapacity_JpK / 3.6E6 ));
		//traceln("tempdelta charge: " + deltaTemp_degC);
		//traceln(">> Heat storage heatproduction = "+ heatProduced_kWh + ", heatconsumption_kW = "+ heatConsumption_kW +" heatConsumed_kWh = "+ heatConsumed_kWh +", heatProduced_kWh = "+ heatProduced_kWh );

		updateStateOfCharge( deltaEnergy_kWh );
		//traceln("<><><><> heatstorage <"+ownerAsset.getId()+"> calculated heatproduction = "+heatProduction_kW+", heatconsumption_kW = "+heatConsumption_kW+", heatProduced_kWh = "+heatProduced_kWh + ", heatConsumed = "+heatConsumed_kWh + ", losses= "+energyUsed_kWh );
		double[] arr = returnEnergyFlows();
		return arr;
		
	}

	@Override
	public String toString() {
		return
			this.getClass().toString() + " " +
			"Energy consumed = " + this.energyUsed_kWh +
			" temp = " + this.temperature_degC + " " +
			"oarentAgent = " + parentAgent +" " +
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"ambientTemperature_degC = "+this.ambientTemperature_degC+" "+
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " "+
			"heatProduced_kWh = "+ this.heatProduced_kWh + " "+
			"heatConsumed_kWh = "+ this.heatConsumed_kWh + " ";
	}

	@Override
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {
		double tempDelta_degC = deltaEnergy_kWh / (heatCapacity_JpK / 3.6E6 );
		temperature_degC += tempDelta_degC;
		stateOfCharge_r = ( temperature_degC - minTemperature_degC) / (maxTemperature_degC - minTemperature_degC);
		//traceln("SOC: " + stateOfCharge_r);
		
		/*if (temperature_degC < setTemperature_degC) {
			requiresHeat = true;
		}
		else if ( temperature_degC >= maxTemperature_degC ) {
			requiresHeat = false;
		}*/
	}

	@Override
	public double getCurrentStateOfCharge() {
    	return stateOfCharge_r;
	}

	@Override
	public double getCurrentTemperature() {
		return temperature_degC;
	}
	
	@Override
	public double getLossFactor_WpK() {
		return lossFactor_WpK;
	}
	

	/*@Override
	public double getHeatCapacity_JpK() {
		return heatCapacity_JpK;
	}*/
	
	@Override
    public void storeStatesAndReset() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsedStored_kWh = energyUsed_kWh;
    	energyAbsorbedStored_kWh = energyAbsorbed_kWh;
    	energyUsed_kWh = 0.0;
    	energyAbsorbed_kWh = 0.0;
    	temperatureStored_degC = temperature_degC;
    	temperature_degC = initialTemperature_degC;
    	resetFlows();    	
    }
    
	@Override
    public void restoreStates() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsed_kWh = energyUsedStored_kWh;
    	energyAbsorbed_kWh = energyAbsorbedStored_kWh;
    	temperature_degC = temperatureStored_degC;
    }

	/*@Override
	public double getMinTemperature_degC() {
		return minTemperature_degC;
	}*/

	/*@Override
	public double getMaxTemperature_degC() {
		return maxTemperature_degC;
	}*/

	/*public double getStorageCapacity() {
		return storageCapacity_kWh;
	}*/

	/*public double getHeatCapacity_JpK() {
		return heatCapacity_JpK;
	}*/

	/*
	@Override
	public double getHeatCapacity_kW() {
    	return capacityHeat_kW;
    }
	*/

	/*@Override //Storage assets limiteren de opname van warmte niet met 1. Dat is nodig voor de buffer. Die kan wel maximaal zijn capaciteit leverern, maar kan meer opnemen. @Gillis is dat logisch of willen we andere oplossing?
    public double[] operateBounded(double ratioOfCapacity) {
    	double limitedRatioOfCapacity = max(-1, ratioOfCapacity);
    	double[] arr = operate(limitedRatioOfCapacity);
    	return arr;
    }*/

	@Override
	public void updateAmbientTemperature(double currentAmbientTemperature_degC) { // TODO: Hoe zorgen we dat we deze niet vergeten aan te roepen??
		this.ambientTemperature_degC = currentAmbientTemperature_degC;
	}

	public void updateSolarRadiation(double solarRadiation_Wpm2) { // TODO: Hoe zorgen we dat we deze niet vergeten aan te roepen??
		this.solarRadiation_Wpm2 = solarRadiation_Wpm2;
		//traceln("Updating solarRadiation of building to %s Wpm2!", solarRadiation_Wpm2);
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659513814164</Id>
			<Name><![CDATA[J_EAConversionHeatPump]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionHeatPump
 */
public class J_EAConversionHeatPump extends zero_engine.J_EAConversion implements Serializable {
	private double capacityHeat_kW = 0;
	private double COP_r;
	private double belowZeroHeatpumpEtaReductionFactor;
	//private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HEAT;
	//private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.ELECTRICITY;
	protected double outputTemperature_degC;
	private double baseTemperature_degC;
	private double sourceAssetHeatPower_kW; // for water-water heatpump functionality
	protected String ambientTempType;
	public double totalElectricityConsumed_kWh =0;
	public J_EA p_linkedSourceEnergyAsset;
	public double p_baseTemperatureReference;

    /**
     * Default constructor
     */
    public J_EAConversionHeatPump() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionHeatPump(Agent parentAgent, double timestep_hr, double capacityElectric_kW, double eta_r, double baseTemperature_degC, double outputTemperature_degC, String ambientTempType, double sourceAssetHeatPower_kW, double belowZeroHeatpumpEtaReductionFactor ) {
	    this.parentAgent = parentAgent;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.timestep_h = timestep_hr;
	    this.eta_r = eta_r;
	    this.baseTemperature_degC = baseTemperature_degC;
	    this.outputTemperature_degC = outputTemperature_degC;
	    this.COP_r = eta_r * ( 273.15 + outputTemperature_degC ) / ( outputTemperature_degC - baseTemperature_degC );
	    this.capacityHeat_kW = capacityElectric_kW * this.COP_r;
	    this.ambientTempType = ambientTempType;
	    this.sourceAssetHeatPower_kW = sourceAssetHeatPower_kW;
	    this.belowZeroHeatpumpEtaReductionFactor = belowZeroHeatpumpEtaReductionFactor;
	    //this.energyAssetName = "Heatpump";
		registerEnergyAsset();
	}

	public void updateParameters(double baseTemperature_degC, double outputTemperature_degC) {
		this.baseTemperature_degC = baseTemperature_degC;
		this.outputTemperature_degC = outputTemperature_degC;
		if ( this.baseTemperature_degC > this.outputTemperature_degC) {
			traceln("**** EXCEPTION **** Heatpump baseTemperature ( " + baseTemperature_degC + ") > outputTemperature ( " + outputTemperature_degC + ") ");
		}
		this.COP_r = this.eta_r * ( 273.15 + outputTemperature_degC ) / ( outputTemperature_degC - baseTemperature_degC );
		
		// water heatpump should take sourceAsset power transfer limitations into account (e.g. residual heat). Ugly but effectively limiting heat power output.
    	
		if( this.sourceAssetHeatPower_kW > 0) {
	    	this.capacityHeat_kW = min( this.capacityHeat_kW, this.sourceAssetHeatPower_kW / (1 - (1 / COP_r )));
	    	//traceln("Water water heatpump heat capacity limited from source! =" + this.capacityHeat_kW);
		} 
		else {
				this.capacityHeat_kW = this.capacityElectric_kW * this.COP_r; 
				//traceln("heatpump updating temp: " + baseTemperature_degC);
				if( baseTemperature_degC < 0 ) {
					COP_r = COP_r / belowZeroHeatpumpEtaReductionFactor;
				}
		}
    	//traceln("J_EAConversionHeatpump capacityHeat_kW = "+ this.capacityHeat_kW + ", sourceAssetHeatPower_kW " + this.sourceAssetHeatPower_kW );
    
	}

	public void updateAmbientTemperature(double baseTemperature_degC) {
		// water heatpump should take sourceAsset power transfer limitations into account (e.g. residual heat). Ugly but effectively limiting heat power output.
    	
		//traceln("J_EAHeatpump capacityHeat_kW = " + this.capacityHeat_kW + ", baseTemperature = "+ baseTemperature_degC + ", outputtemperature = "+ outputTemperature_degC);
		updateParameters(baseTemperature_degC, outputTemperature_degC);
		this.COP_r = this.eta_r * ( 273.15 + outputTemperature_degC ) / ( outputTemperature_degC - baseTemperature_degC );
	    this.capacityHeat_kW = capacityElectric_kW * COP_r;
	}

	public double getCOP() {
		//traceln("Heatpump output temperature: " + this.outputTemperature_degC);

		return this.COP_r;

	}

	@Override
	public double[] operate(double ratioOfCapacity) {
		//traceln("this "+ this.toString() + ", " + ratioOfCapacity * this.capacityElectric_kW + " **** " + ratioOfCapacity * this.capacityHeat_kW / this.COP_r);
		this.electricityConsumption_kW = min(ratioOfCapacity * this.capacityElectric_kW, ratioOfCapacity * this.capacityHeat_kW / this.COP_r);
		this.totalElectricityConsumed_kWh += electricityConsumption_kW * timestep_h ;
		//this.electricityConsumption_kW = ratioOfCapacity * this.capacityElectric_kW;
    	this.heatProduction_kW = this.electricityConsumption_kW * this.COP_r;
    	// account energy extracted by water/water heatpumps:
    	//traceln("test water heatpump EA code for heat consumption. ambientTempType = " + this.ambientTempType);
    	
    	if(this.ambientTempType.equals("WATER")) {
    		//traceln("test water heatpump EA code for heat consumption. WATER ambient temp type detected ");
    		double maxAvailableSourcePower_kW = this.sourceAssetHeatPower_kW;
    		
    		this.heatConsumption_kW = this.heatProduction_kW - this.electricityConsumption_kW;
    		//update effective energy production of source asset!
    		this.p_linkedSourceEnergyAsset.v_powerFraction_fr += ( this.heatConsumption_kW / this.p_linkedSourceEnergyAsset.capacityHeat_kW );
//    		this.ownerAsset.p_linkedSourceEnergyAsset.j_ea.heatProduction_kW += this.heatConsumption_kW;
       	}
    	this.energyUse_kW = (this.electricityConsumption_kW - ( this.heatProduction_kW - this.heatConsumption_kW ) ); 
		this.energyUsed_kWh += timestep_h * energyUse_kW;
		
    	//traceln("test water heatpump EA code for heat consumption. sourceAssetHeatPower_kW = "+this.sourceAssetHeatPower_kW+ ", heatProduction_kW = "+ this.heatProduction_kW + ", heatConsumption = " + this.heatConsumption_kW);
    	//traceln("energyUsed_kWh " + energyUsed_kWh );
    	//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
    	//traceln("J_EAConversionHeatPump operate function debug | operating @ "+ratioOfCapacity*100+" % capacity ** capacityElectric_kW = "+capacityElectric_kW+", eta_r = "+eta_r+", baseTemperature_degC = "+baseTemperature_degC+", deliveryTemp_degC = "+outputTemperature_degC+", COP_r = "+COP_r+", capacityHeat_kW = "+capacityHeat_kW+". ");
    	return returnEnergyFlows();
	}

	@Override
    public double getHeatCapacity_kW() {
    	return this.capacityHeat_kW;
    }

	@Override
	public String toString() {
		return
			"type = " + this.getClass().toString() + " " +
			"parentAgent = " + parentAgent +" " +
			"capacityElectricity_kW = " + capacityElectric_kW +" "+
			"capacityHeat_kW = " + capacityHeat_kW +" "+
			"baseTemperature_degC = " + baseTemperature_degC + " "+
			"ambientTempType = " + ambientTempType + " "+
			"sourceAssetHeatPower_kW = " + sourceAssetHeatPower_kW + " " +
			"outputTemperature_degC = " + outputTemperature_degC +" "+
			"energyUsed_kWh = " + energyUsed_kWh + " "+
			"heatProduced_kWh = " + heatProduced_kWh + " "+
			"heatConsumed_kWh = " + heatConsumed_kWh + " ";
	}
	
	public String getAmbientTempType() {
		return this.ambientTempType.toString();
	
	}
	
	public void setSourceAssetHeatPower(double sourceAssetHeatPower_kW) {
		this.sourceAssetHeatPower_kW = sourceAssetHeatPower_kW;
		//traceln("sourceAssetHeatPower_kW is set to: "+sourceAssetHeatPower_kW);
	}
	
	public void f_setLinkedVariable(EnergyModel main, String ambientTempType, J_EA j_ea) {
		switch( ambientTempType ) {
		case "AIR":
			this.p_baseTemperatureReference = main.v_currentAmbientTemperature_degC ;
		break;
		case "GROUND":
			this.p_baseTemperatureReference= main.p_undergroundTemperature_degC ;
		break;
		case "WATER":
			//traceln("f_setLinkedVariable: water type parameter update!");
			this.p_baseTemperatureReference = j_ea.getCurrentTemperature() ;
			this.updateAmbientTemperature( p_baseTemperatureReference );
		break;
		default:
			traceln("EXCEPTION: ENERGY ASSET WITH A NON-EXISTENT AMBIENT TEMPERATURE TYPE");				
	}
	}
	
	@Override
	public double getCurrentTemperature() {
		return outputTemperature_degC;
	}
	
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;
}
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1659534704067</Id>
			<Name><![CDATA[J_EAEV]]></Name>
			<Text><![CDATA[/**
* J_EAEV
*/
public class J_EAEV extends J_EAVehicle implements Serializable {
 
 
	public OL_EnergyCarrierType storageMedium = OL_EnergyCarrierType.ELECTRICITY;
	private double stateOfCharge_r;
	private double initialStateOfCharge_r;
	private double stateOfChargeStored_r;
	
	private double storageCapacity_kWh;
 
	// Should this be in here?	
	public double energyNeedForNextTrip_kWh;
	public OL_EVChargingNeed chargingNeed;
	private double energyChargedOutsideModelArea_kWh = 0;
	private double energyChargedOutsideModelAreaStored_kWh;
	public double charged_kWh = 0;
	public double discharged_kWh = 0;
    /**
     * Default constructor
     */
    public J_EAEV() {
    }
 
    /**
     * Constructor initializing the fields
     */
    public J_EAEV(Agent parentAgent, double capacityElectricity_kW, double storageCapacity_kWh, double stateOfCharge_r, double timestep_h, double energyConsumption_kWhpkm, double vehicleScaling, OL_EnergyAssetType energyAssetType, J_ActivityTrackerTrips tripTracker) {
		this.parentAgent = parentAgent;
		this.capacityElectric_kW = capacityElectricity_kW; // for EV, this is max charging power.
		this.storageCapacity_kWh = storageCapacity_kWh;
		this.initialStateOfCharge_r = stateOfCharge_r;
		this.stateOfCharge_r = initialStateOfCharge_r;
		this.timestep_h = timestep_h;
		this.energyConsumption_kWhpkm = energyConsumption_kWhpkm;
		this.vehicleScaling = vehicleScaling;
	    this.energyAssetType = energyAssetType; //OL_EnergyAssetType.ELECTRIC_VEHICLE; // AANPASSING ATE: VRAGEN AAN GILLIS: asset type meegeven in functie J_EAV, want scheelt switch statement in iEA functie.
	    this.tripTracker = tripTracker;
	    if (tripTracker != null) {
	    	tripTracker.Vehicle=this;	    	
	    }
	    // Validation checks
	    if (capacityElectric_kW == 0 || storageCapacity_kWh == 0 || timestep_h == 0 || energyConsumption_kWhpkm == 0) {
	    	throw new RuntimeException(String.format("Exception: J_EAEV in invalid state! Energy Asset: %s, capacityElectric_kW: %s, storageCapacity_kWh: %s, timestep_h: %s, energyConsumption_kWhpkm %s", this, capacityElectric_kW, storageCapacity_kWh, timestep_h, energyConsumption_kWhpkm));
	    	
	    }
		registerEnergyAsset();
    }
 
	@Override
	public double[] operate(double ratioOfChargeCapacity_r) {
		//traceln( "ratio: " + ratioOfChargeCapacity_r);
		if (true) {
	    	double discharge_kW = 0;
	    	double deltaEnergy_kWh;   // to check the request with the energy currently in storage
	    	
	    	deltaEnergy_kWh = ( ratioOfChargeCapacity_r * (capacityElectric_kW * vehicleScaling) * timestep_h ) ;
	    	deltaEnergy_kWh = - min( -deltaEnergy_kWh, (stateOfCharge_r * (storageCapacity_kWh * vehicleScaling)) ); // Prevent negative charge
	    	deltaEnergy_kWh = min(deltaEnergy_kWh, ratioOfChargeCapacity_r * (capacityElectric_kW * vehicleScaling) * timestep_h ); // prevent charging faster than allowed
	    	deltaEnergy_kWh = min(deltaEnergy_kWh, (1 - stateOfCharge_r) * (storageCapacity_kWh * vehicleScaling) ); // Prevent overcharge
	    
			discharge_kW = -deltaEnergy_kWh / timestep_h;
			//traceln("state of charge: " + stateOfCharge_r * storageCapacity_kWh + ", charged: " + discharge_kW / 4+ " kWh, charging power kW: " + discharge_kW);
			electricityProduction_kW = max(discharge_kW, 0);
			electricityConsumption_kW = max(-discharge_kW, 0);
			updateStateOfCharge( discharge_kW );
			//traceln("new state of charge: " + stateOfCharge_r * storageCapacity_kWh);
			updateChargingHistory( electricityProduction_kW, electricityConsumption_kW );
		}
		double[] arr = returnEnergyFlows();
		return arr;		
	}
 
	public void updateStateOfCharge( double power_kW ) {
		stateOfCharge_r -= ( power_kW * timestep_h ) / (storageCapacity_kWh * vehicleScaling);
	}
 
	@Override
	public double getCurrentStateOfCharge() {
    	return stateOfCharge_r;
	}
 
	@Override
	public boolean startTrip() {
		if (available) {
			this.available = false;
			//traceln("storage capacity start of trip: " + storageCapacity_kWh + ", state of charge: " + stateOfCharge_r);
			((GridConnection)this.parentAgent).c_vehiclesAvailableForCharging.remove(this);
			return true;
		} else {
			traceln("Trip not started because EV not available!");
			return false; // Trip not started because EV not available!
		}
	}
 
	@Override
	public boolean endTrip(double tripDist_km) {
	
		if(available) {
			traceln("Trip not ended because EV never left!");
			return false;
		}else if (this.vehicleScaling == 0) {
			this.available = true;
			((GridConnection)this.parentAgent).c_vehiclesAvailableForCharging.add(this);
			return true;
		} else {
			mileage_km += tripDist_km;
			//traceln( "J_EAEV comes back, trip distance: " + tripDist_km + ", energy consumption: " + tripDist_km * energyConsumption_kWhpkm);
			//traceln("EV of type: " + this.energyAssetType + "state of charge: " + stateOfCharge_r);
			stateOfCharge_r -= (tripDist_km * vehicleScaling * energyConsumption_kWhpkm) / (storageCapacity_kWh * vehicleScaling);
			//traceln("storage capacity: " + storageCapacity_kWh + ", state of charge: " + stateOfCharge_r);
			energyUsed_kWh += tripDist_km * vehicleScaling * energyConsumption_kWhpkm;
			energyUse_kW += tripDist_km * vehicleScaling * energyConsumption_kWhpkm / timestep_h;
			//traceln("EV energy use at end of trip: %s kWh", tripDist_km * vehicleScaling * energyConsumption_kWhpkm );
			if (stateOfCharge_r < 0) {
				//traceln( ownerAsset.date());
				//traceln( "Trip distance: " + tripDist_km + ", vehicle scaling: " + vehicleScaling + ", energy cons_kWhpkm: " + energyConsumption_kWhpkm );
				traceln("EV of type: " + this.energyAssetType + " from GC " + this.parentAgent + " arrived home with negative SOC: " + stateOfCharge_r );
						
				//energyChargedOutsideModelArea_kWh += -stateOfCharge_r * storageCapacity_kWh;
				//traceln("energyChargedOutsideModelArea_kWh: " + energyChargedOutsideModelArea_kWh);
				//stateOfCharge_r = 0;
			}
			this.available = true;
			((GridConnection)this.parentAgent).c_vehiclesAvailableForCharging.add(this);
			//maxSpreadChargingRatio = (1-stateOfCharge_r) * storageCapacity_kWh / (timeToNextTrip_min/60);
			return true;
		}
	}
 
	public void updateChargingHistory(double electricityProduced_kW, double electricityConsumed_kW) {
		discharged_kWh += electricityProduced_kW * timestep_h;
		charged_kWh += electricityConsumed_kW * timestep_h;
	}
 
	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}
 
	public double getStorageCapacity_kWh() {
		return storageCapacity_kWh * vehicleScaling;
	}
	
	@Override
	public double getElectricCapacity_kW() {
		return capacityElectric_kW * vehicleScaling;
	}
	public double getTotalChargeAmount_kWh() {
		return charged_kWh;
	}
	public double getTotalDischargeAmount_kWh() {
		return discharged_kWh;
	}
 
	public double getEnergyConsumption_kWhpkm() {
		return energyConsumption_kWhpkm * vehicleScaling;
	}
	
	public double getEnergyNeedForNextTrip_kWh() {
		return energyNeedForNextTrip_kWh * vehicleScaling;
	}
 
	public boolean getAvailability() {
		return available;
	}
 
	public double getChargingTimeToFull_MIN() {
		double chargingTime_min = ceil( 60 * ((storageCapacity_kWh * vehicleScaling) - (storageCapacity_kWh * vehicleScaling) * stateOfCharge_r) / (capacityElectric_kW * vehicleScaling) ) ;
		return chargingTime_min;
	}
 
	public double getEnergyChargedOutsideModelArea_kWh() {
		return energyChargedOutsideModelArea_kWh;
	}
	@Override
    public void storeStatesAndReset() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsedStored_kWh = energyUsed_kWh;
    	energyUsed_kWh = 0.0;
    	stateOfChargeStored_r = stateOfCharge_r;
    	stateOfCharge_r = initialStateOfCharge_r;
    	availableStored = available;
    	available = true;
    	energyChargedOutsideModelAreaStored_kWh = energyChargedOutsideModelArea_kWh;
    	energyChargedOutsideModelArea_kWh = 0;
    	mileage_km = 0;
    	charged_kWh = 0;
    	discharged_kWh = 0;
    	resetFlows();    	
    }
    
	@Override
    public void restoreStates() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsed_kWh = energyUsedStored_kWh;    	
    	stateOfCharge_r = stateOfChargeStored_r;
    	available = availableStored;
    	energyChargedOutsideModelArea_kWh = energyChargedOutsideModelAreaStored_kWh;
    	charged_kWh = 0;
    	discharged_kWh = 0;
    }
	
	@Override
	public String toString() {
		return
			"SOC = " + roundToDecimal( stateOfCharge_r, 2 ) + " " +
			"storageCapacity_kWh = " + storageCapacity_kWh + " " +
			"charged_kWh = " + roundToDecimal( charged_kWh, 2 ) + " " +
			"mileage = " + roundToDecimal( mileage_km, 2 ) + " ";
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;
 
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1660131551684</Id>
			<Name><![CDATA[J_EAConversionHeatDeliverySet]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionHeatDeliverySet
 */
public class J_EAConversionHeatDeliverySet extends zero_engine.J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HEAT;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.HEAT;
	protected double outputTemperature_degC;
    /**
     * Default constructor
     */
    public J_EAConversionHeatDeliverySet() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionHeatDeliverySet(Agent parentAgent, double capacityThermal_kW, double efficiency, double outputTemperature_degC, double timestep_h) {
	    this.parentAgent = parentAgent;
	    this.capacityHeat_kW = capacityThermal_kW;
	    this.eta_r = efficiency;
	    this.outputTemperature_degC = outputTemperature_degC;
	    this.timestep_h = timestep_h;
		registerEnergyAsset();
	}

    @Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("I convert now! HeatDeliverySet @ " + (ratioOfCapacity * 100) + " %");
		heatProduction_kW = capacityHeat_kW * ratioOfCapacity;
		heatConsumption_kW = heatProduction_kW / eta_r;
		//debugging checks:
		heatProduced_kWh += heatProduction_kW * timestep_h;
		heatConsumed_kWh += heatConsumption_kW * timestep_h;
		energyUse_kW = ( heatConsumption_kW -  heatProduction_kW);
		energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		return returnEnergyFlows();
    }

	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +" " +
			"capacityElectric_kW = " + capacityElectric_kW +" "+
			"capacityHeat_kW = " + capacityHeat_kW +" "+
			"eta_r = " + eta_r+" "+
			"outputTemperature_degC = "+ outputTemperature_degC+" "+
			"heatProduced_kWh = "+ heatProduced_kWh+" "+
			"heatConsumed_kWh = " + heatConsumed_kWh + " "+
			"energyUsed_kWh = " + energyUsed_kWh + " ";
		
		
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1661266990567</Id>
			<Name><![CDATA[J_ExperimentSettingsData]]></Name>
			<Text><![CDATA[/**
 * J_ExperimentSettingsData
 */
public class J_ExperimentSettingsData implements Serializable {

	public String timeStep_h = "";
	public String timeStepsElapsed = "";
	public String modelHoursElapsed_h = "";
	public String modelStartUpDuration_s = "";
	public String modelRunDuration_s = "";
	public String nGridNodes = "";
	public String nGridConnections = "";
	public String nEnergyAssets = "";
	public String nConnectionOwners = "";
	public String nEnergySuppliers = "";
	public String nEnergyCoops = "";
	public String nGridOperators = "";
	public String nNationalEnergyMarket = "";
	public double shareElectricvehiclesInHouseholds = 0.0;

	 /**
     * Default constructor
     */
    public J_ExperimentSettingsData() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_ExperimentSettingsData(String timeStep_h) {
		this.timeStep_h = timeStep_h;
    }

	@Override
	public String toString() {
		return
			"timeStep_h = " + timeStep_h +" " +
			"timeStepsElapsed = " + timeStepsElapsed +" " +
			"modelHoursElapsed_h = " + modelHoursElapsed_h + " " +
			"modelStartUpDuration_s = " + modelStartUpDuration_s + " " +
			"modelRunDuration_s = " + modelRunDuration_s + " " +
			"nGridNodes = " + nGridNodes + " " +
			"nGridConnections = " + nGridConnections + " " +
			"nEnergyAssets = " +	nEnergyAssets + " " +
			"nConnectionOwners = " + nConnectionOwners + " " +
			"nEnergySuppliers = "+ nEnergySuppliers + " " +
			"nEnergyCoops = " + nEnergyCoops + " " +
			"nGridOperators = " + nGridOperators + " " +
			"nNationalEnergyMarket = " + nNationalEnergyMarket +
			"shareElectricvehiclesInHouseholds = " + shareElectricvehiclesInHouseholds
			;
	}

	public void updateData(String timeStep_h, String timeStepsElapsed, String modelHoursElapsed_h, String modelStartUpDuration_s, String modelRunDuration_s, String nGridNodes,	String nGridConnections, String nEnergyAssets, String nConnectionOwners, String nEnergySuppliers, String nEnergyCoops, String nGridOperators, String nNationalEnergyMarket, double shareElectricvehiclesInHouseholds) {
		this.timeStep_h = timeStep_h;
		this.timeStepsElapsed = timeStepsElapsed;
		this.modelHoursElapsed_h = modelHoursElapsed_h;
		this.modelStartUpDuration_s = modelStartUpDuration_s;
		this.modelRunDuration_s = modelRunDuration_s;
		this.nGridNodes = nGridNodes;
		this.nGridConnections = nGridConnections;
		this.nEnergyAssets = nEnergyAssets;
		this.nConnectionOwners = nConnectionOwners;
		this.nEnergySuppliers = nEnergySuppliers;
		this.nEnergyCoops = nEnergyCoops;
		this.nGridOperators = nGridOperators;
		this.nNationalEnergyMarket = nNationalEnergyMarket;
		this.shareElectricvehiclesInHouseholds = shareElectricvehiclesInHouseholds;
	}


	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1661349111073</Id>
			<Name><![CDATA[DataOut]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<Text><![CDATA[/**
 * DataOut
 */
public class DataOut implements Serializable {

	public ArrayList actorData = new ArrayList();
	public ArrayList runSettingsData = new ArrayList(1);
	public ArrayList simulationResults = new ArrayList(2);
	public ArrayList hourlyCurvesData = new ArrayList();
	public ArrayList contractData = new ArrayList();
	//public DataSet dataSet = new DataSet(8760); // Test to make dataobject with simulation results per agent, universal for different agenttypes, such as model-wide, gridconnection (building), gridconnection (neighbourhood)

	public void clearData() {
		actorData.clear();
		runSettingsData.clear();
		simulationResults.clear();
		hourlyCurvesData.clear();
		contractData.clear();
	}
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1663238817163</Id>
			<Name><![CDATA[J_ActorData]]></Name>
			<Text><![CDATA[/**
 * J_ActorData
 */
public class J_ActorData implements Serializable {

	public String actorID;
	public String group;
	public String gridOperator;
	public String parentCoop;
	public String energySupplier;
	public String ownedGridConnection;
	public String energySupplierDistrictHeat;
	public String electricityVolume_kWh;
	public String heatVolume_kWh;
	public String methaneVolume_kWh;
	public String hydrogenVolume_kWh;
	public String dieselVolume_kWh;
	//public String electricityContractType;
	//public String heatContractType;
	//public String methaneContractType;
	//public String hydrogenContractType;
	public String balanceElectricity_eur;
	public String balanceElectricityDelivery_eur;
	public String balanceElectricityTransport_eur;
	public String balanceElectricityTax_eur;
	public String deliveryContractScope;
	public String transportContractScope;
	public String taxContractScope;
	public boolean b_methaneUsedWithoutContracts;
	public boolean b_hydrogenUsedWithoutContracts;
	 /**
     * Default constructor
     */
    public J_ActorData() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_ActorData(String actorID, String group) {
		this.actorID = actorID;
		this.group = group;
		this.gridOperator = "";
		this.parentCoop = "";
		this.energySupplier = "";
		this.ownedGridConnection = "";
		this.energySupplierDistrictHeat = "";
		this.electricityVolume_kWh = "";
		this.heatVolume_kWh = "";
		this.methaneVolume_kWh = "";
		this.hydrogenVolume_kWh = "";
		this.dieselVolume_kWh = "";
		//this.electricityContractType = "";
		//this.heatContractType = "";
		//this.methaneContractType = "";
		//this.hydrogenContractType = "";
		this.balanceElectricity_eur = "";
		this.balanceElectricityDelivery_eur = "";
		this.balanceElectricityTransport_eur = "";
		this.balanceElectricityTax_eur = "";
		this.deliveryContractScope = "";
		this.transportContractScope = "";
		this.taxContractScope = "";
		this.b_methaneUsedWithoutContracts = false;
		this.b_hydrogenUsedWithoutContracts = false;
		
    }

	@Override
	public String toString() {
		return
			"actorID = " + actorID +" " +
			"group = " + group +" " +
			"gridOperator = " + gridOperator +" " +
			"parentCoop = " + parentCoop +" " +
			"energySupplier = " + energySupplier +" " +
			"ownedGridConnection = " + ownedGridConnection +" " +
			"energySupplierDistrictHeat = " + energySupplierDistrictHeat +" " +
			"electricityVolume_kWh = " + electricityVolume_kWh +" " +
			"heatVolume_kWh = " + heatVolume_kWh +" " +
			"methaneVolume_kWh = " + methaneVolume_kWh +" " +
			"hydrogenVolume_kWh = " + hydrogenVolume_kWh +" " +
			"dieselVolume_kWh = " + dieselVolume_kWh + " " +
			//"electricityContractType = " + electricityContractType +" " +
			//"heatContractType = " + heatContractType +" " +
			//"methaneContractType = " + methaneContractType +" " +
			//"hydrogenContractType = " + hydrogenContractType +" " +
			"balanceElectricity_eur = " + balanceElectricity_eur +" " +
			"balanceElectricityDelivery_eur = " + balanceElectricityDelivery_eur +" " +
			"balanceElectricityTransport_eur = " + balanceElectricityTransport_eur +" " +
			"balanceElectricityTax_eur = " + balanceElectricityTax_eur +" " +
			"deliveryContractScope = " + deliveryContractScope +" "+
			"transportContractScope = " + transportContractScope +" "+
			"taxContractScope = " + taxContractScope + " ";
	}

	public void updateData(String actorID, String group, String gridOperator, String parentCoop, String energySupplier, String ownedGridConnection, String energySupplierDistrictHeat,double electricityVolume_kWh, double heatVolume_kWh, double methaneVolume_kWh, double hydrogenVolume_kWh, double dieselVolume_kWh, /*String electricityContractType, String heatContractType, String methaneContractType, String hydrogenContractType,*/ double balanceElectricity_eur, double balanceElectricityDelivery_eur, double balanceElectricityTransport_eur, double balanceElectricityTax_eur, String deliveryContractScope, String transportContractScope, String taxContractScope, boolean b_methaneUsedWithoutContracts, boolean b_hydrogenUsedWithoutContracts) {
		this.actorID = actorID;
		this.group = group;
		this.gridOperator = gridOperator;
		this.parentCoop = parentCoop;
		this.energySupplier = energySupplier;
		this.ownedGridConnection = ownedGridConnection;
		this.energySupplierDistrictHeat = energySupplierDistrictHeat +"";
		this.electricityVolume_kWh = electricityVolume_kWh + "";
		this.heatVolume_kWh = heatVolume_kWh  + "";
		this.methaneVolume_kWh = methaneVolume_kWh + "";
		this.hydrogenVolume_kWh = hydrogenVolume_kWh + "";
		this.dieselVolume_kWh = dieselVolume_kWh + "";
		//this.electricityContractType = electricityContractType + "";
		//this.heatContractType = heatContractType + "";
		//this.methaneContractType = methaneContractType + "";
		//this.hydrogenContractType = hydrogenContractType + "";
		this.balanceElectricity_eur = balanceElectricity_eur + "";
		this.balanceElectricityDelivery_eur = balanceElectricityDelivery_eur + "";
		this.balanceElectricityTransport_eur = balanceElectricityTransport_eur + "";
		this.balanceElectricityTax_eur = balanceElectricityTax_eur + "";
		this.deliveryContractScope = deliveryContractScope + "";
		this.transportContractScope = transportContractScope + "";
		this.taxContractScope = taxContractScope + "";	
		this.b_methaneUsedWithoutContracts = b_methaneUsedWithoutContracts;
		this.b_hydrogenUsedWithoutContracts = b_hydrogenUsedWithoutContracts;
	}
	/*
	public ArrayList returnData() {
		ArrayList data = new ArrayList({actorID, actorType, parentActorID, energySupplier, ownedGridConnection.toString(), energySupplierDistrictHeat.toString(), electricityVolume_kWh, heatVolume_kWh, methaneVolume_kWh, hydrogenVolume_kWh, balanceElectricity_eur, balanceHeat_eur, balanceMethane_eur, balanceHydrogen_eur});
		return data;

	}*/
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1665502017804</Id>
			<Name><![CDATA[J_EAConversionHydrogenBurner]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionGasBurner
 */
public class J_EAConversionHydrogenBurner extends zero_engine.J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HEAT;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.HYDROGEN;
	protected double outputTemperature_degC;
    /**
     * Default constructor
     */
    public J_EAConversionHydrogenBurner() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionHydrogenBurner(Agent parentAgent, OL_EnergyAssetType assetType, double capacityThermal_kW, double efficiency, double timestep_h, double outputTemperature_degC) {
	    this.parentAgent = parentAgent;
	    this.energyAssetType = assetType;
	    this.capacityHeat_kW = capacityThermal_kW;
	    this.eta_r = efficiency;
	    this.timestep_h = timestep_h;
	    this.outputTemperature_degC = outputTemperature_degC;
	    //this.energyAssetType = OL_EnergyAssetType.HYDROGEN_FURNACE;
		registerEnergyAsset();
	}

    @Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");
		this.heatProduction_kW = capacityHeat_kW * ratioOfCapacity;
		this.hydrogenConsumption_kW = heatProduction_kW / eta_r;
		this.energyUse_kW = (hydrogenConsumption_kW - heatProduction_kW);
		this.energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		this.heatProduced_kWh += heatProduction_kW * timestep_h;
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}
	
	@Override
	public String toString() {
		return
			"AssetType = " + energyAssetType + 
			" parentAgent = " + parentAgent +", Energy consumed = " + this.energyUsed_kWh +
			" capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"eta_r = " + this.eta_r+" " +
			"outputTemperature_degC = " + this.outputTemperature_degC + " "+
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " "+
			"heatProducted_kWh = " +this.heatProduced_kWh + " ";
	}
	
	@Override
	public double getCurrentTemperature() {
		return outputTemperature_degC;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1666189454452</Id>
			<Name><![CDATA[J_EAConversionElectricHeater]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionElectricHeater
 */
public class J_EAConversionElectricHeater extends J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HEAT;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.ELECTRICITY;
	protected double outputTemperature_degC;
    /**
     * Default constructor
     */
    public J_EAConversionElectricHeater(Agent parentAgent, double capacityElectric_kW, double efficiency, double timestep_h, double outputTemperature_degC) {
	    this.parentAgent = parentAgent;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.eta_r = efficiency;
	    this.capacityHeat_kW = this.capacityElectric_kW * this.eta_r;
	    this.timestep_h = timestep_h;
	    this.outputTemperature_degC = outputTemperature_degC;
		registerEnergyAsset();
    }

    @Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("I convert now! ElectricHeater @ " + (ratioOfCapacity * 100) + " %, capacity: " + capacityElectric_kW);
		this.heatProduction_kW = capacityElectric_kW * ratioOfCapacity * eta_r;
		this.electricityConsumption_kW = capacityElectric_kW * ratioOfCapacity;
		this.energyUse_kW = (electricityConsumption_kW - heatProduction_kW);
		this.energyUsed_kWh += timestep_h * energyUse_kW;  // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		this.heatProduced_kWh += timestep_h * heatProduction_kW;
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	@Override
	public String toString() {
		return 
			"parentAgent = " + parentAgent +" " +
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"eta_r = " + this.eta_r+" "+
			"energyUsed_kWh"+ this.energyUsed_kWh+" "+
			"heatProduced_kWh = " + this.heatProduced_kWh + " ";
	}
	
	@Override
	public double getCurrentTemperature() {
		return outputTemperature_degC;
	}
	
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1666189454453</Id>
			<Name><![CDATA[J_EAConversionCurtailer]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<Text><![CDATA[/**
 * J_EAConversionCurtailer
 */
public class J_EAConversionCurtailer extends J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HEAT;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.ELECTRICITY;
    /**
     * Default constructor
     */
    public J_EAConversionCurtailer(Agent parentAgent, double capacityElectric_kW, double efficiency, double timestep_h) {
	    this.parentAgent = parentAgent;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.eta_r = efficiency;
	    this.capacityHeat_kW = this.capacityElectric_kW * this.eta_r;
	    this.timestep_h = timestep_h;
		registerEnergyAsset();
    }

    @Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");
		this.heatProduction_kW = capacityElectric_kW * ratioOfCapacity * eta_r;
		this.electricityConsumption_kW = capacityElectric_kW * ratioOfCapacity;
		this.energyUse_kW = (electricityConsumption_kW - heatProduction_kW);
		this.energyUsed_kWh += timestep_h * (energyUse_kW); // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	public void setCapacityElectric_kW(double capacityElectric_kW) {
		this.capacityElectric_kW = capacityElectric_kW;
	}
	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1666879973864</Id>
			<Name><![CDATA[J_SimulationResults]]></Name>
			<Text><![CDATA[/**
 * J_SimulationResults
 */
public class J_SimulationResults implements Serializable {

	public double HSMSPeakLoadElectricity_kW;
	public double MSLSPeakLoadElectricity_kW;
	public double cumulativeCapacityHS;
	public double cumulativeCapacityLS;
	public double netOverload_pct;
	public Map<String,Double> timesOfNodePeakLoads_h = new LinkedHashMap<String,Double>();
	public Map<String,Double> gridConnectionMaxLoad_fr = new LinkedHashMap<String,Double>();
	public double MSLSnodePeakPositiveLoadElectricity_kW;
	public double MSLSnodePeakNegativeLoadElectricity_kW;
	//public double checkSumHourlyElectricityImport_MWh;
	//public double checkSumHourlyElectricityExport_MWh;
	public double totalElectricityImport_MWh;
	public double totalElectricityExport_MWh;
	public double totalMethaneImport_MWh;
	public double totalMethaneExport_MWh;
	public double totalHydrogenImport_MWh;
	public double totalHydrogenExport_MWh;
	public double totalDieselImport_MWh;
	public Map<String,Double> totalBatteryUnitsInstalled = new LinkedHashMap<String,Double>();
	public Map<String,Double> totalBatteryChargeAmount_MWh = new LinkedHashMap<String,Double>();
	public Map<String,Double> totalBatteryDischargeAmount_MWh = new LinkedHashMap<String,Double>();
	public Map<String,Double> totalBatteryInstalledCapacity_MWh = new LinkedHashMap<String,Double>();
	//public Map<Integer,Double> SystemHourlyElectricityImport_MWh = new LinkedHashMap<Integer,Double>();
	//public Map<Integer,Double> SystemHourlyElectricityExport_MWh = new LinkedHashMap<Integer,Double>();
	//public Map<Integer,Double> totalEVHourlyChargingProfile_kWh = new LinkedHashMap<Integer,Double>();
	//public Map<Integer,Double> totalEHGVHourlyChargingProfile_kWh = new LinkedHashMap<Integer,Double>();
	//public Map<Integer,Double> totalBatteryHourlyChargingProfile_kWh = new LinkedHashMap<Integer, Double>();
	public double totalSelfConsumption_fr;
	public double totalSelfSufficiency_fr;
	public double TotalEnergyUsed_MWh;
	public double TotalEnergyProduced_MWh;
	public double TotalEnergyCurtailed_MWh;
	public double shareElectricvehiclesInHouseholds;

	 /**
     * Default constructor
     */
    public J_SimulationResults() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_SimulationResults( double v_gridNodeLoadElectricityHSMS_kW, double v_gridNodeLoadElectricityMSLS_kW, double cumulativeCapacityHS, double cumulativeCapacityLS, double netOverload_pct, LinkedHashMap<String,Double> c_timesOfNodePeakLoads_h, LinkedHashMap<String,Double> gridConnectionMaxLoad_fr, double MSLSnodePeakPositiveLoadElectricity_kW, double MSLSnodePeakNegativeLoadElectricity_kW, double totalElectricityImport_MWh, double totalElectricityExport_MWh, double totalMethaneImport_MWh, double totalMethaneExport_MWh, double totalHydrogenImport_MWh, double totalHydrogenExport_MWh, double totalDieselImport_MWh, LinkedHashMap<String,Double> totalBatteryUnitsInstalled, LinkedHashMap<String,Double> totalBatteryChargeAmount_MWh, LinkedHashMap<String,Double> totalBatteryDischargeAmount_MWh, LinkedHashMap<String,Double> totalBatteryInstalledCapacity_MWh, LinkedHashMap<Integer,Double> c_globalElectricityImportProfile_MWhph, LinkedHashMap<Integer,Double> c_globalElectricityExportProfile_MWhph, LinkedHashMap<Integer,Double> totalEVHourlyChargingProfile_kWh, LinkedHashMap<Integer,Double> totalEHGVHourlyChargingProfile_kWh, LinkedHashMap<Integer,Double> totalBatteryHourlyChargingProfile_kWh, double totalSelfConsumption_fr, double totalSelfSufficiency_fr, double TotalEnergyUsed_MWh, double TotalEnergyProduced_MWh, double TotalEnergyCurtailed_MWh, double shareElectricvehiclesInHouseholds) {
		this.HSMSPeakLoadElectricity_kW = v_gridNodeLoadElectricityHSMS_kW;
		this.MSLSPeakLoadElectricity_kW = v_gridNodeLoadElectricityMSLS_kW;
		this.cumulativeCapacityHS = cumulativeCapacityHS;
		this.cumulativeCapacityLS = cumulativeCapacityLS;
		this.netOverload_pct = netOverload_pct;
		this.timesOfNodePeakLoads_h = c_timesOfNodePeakLoads_h;
		this.gridConnectionMaxLoad_fr = gridConnectionMaxLoad_fr;
		this.MSLSnodePeakPositiveLoadElectricity_kW = MSLSnodePeakPositiveLoadElectricity_kW;
		this.MSLSnodePeakNegativeLoadElectricity_kW = MSLSnodePeakNegativeLoadElectricity_kW;
		this.totalElectricityImport_MWh = totalElectricityImport_MWh;
		this.totalElectricityExport_MWh = totalElectricityExport_MWh;
		this.totalMethaneImport_MWh = totalMethaneImport_MWh;
		this.totalMethaneExport_MWh = totalMethaneExport_MWh;
		this.totalHydrogenImport_MWh = totalHydrogenImport_MWh;
		this.totalHydrogenExport_MWh = totalHydrogenExport_MWh;
		this.totalDieselImport_MWh = totalDieselImport_MWh;
		this.totalBatteryUnitsInstalled = totalBatteryUnitsInstalled;
		this.totalBatteryChargeAmount_MWh = totalBatteryChargeAmount_MWh;
		this.totalBatteryDischargeAmount_MWh = totalBatteryDischargeAmount_MWh;
		this.totalBatteryInstalledCapacity_MWh = totalBatteryInstalledCapacity_MWh;
		//this.SystemHourlyElectricityImport_MWh = c_globalElectricityImportProfile_MWhph;
		//this.SystemHourlyElectricityExport_MWh = c_globalElectricityExportProfile_MWhph;
		//this.totalEVHourlyChargingProfile_kWh = totalEVHourlyChargingProfile_kWh;
		//this.totalEHGVHourlyChargingProfile_kWh = totalEHGVHourlyChargingProfile_kWh;
		//this.totalBatteryHourlyChargingProfile_kWh = totalBatteryHourlyChargingProfile_kWh;
		this.totalSelfConsumption_fr = totalSelfConsumption_fr;
		this.totalSelfSufficiency_fr = totalSelfSufficiency_fr;
		this.TotalEnergyUsed_MWh = TotalEnergyUsed_MWh;
		this.TotalEnergyProduced_MWh = TotalEnergyProduced_MWh;
		this.TotalEnergyCurtailed_MWh = TotalEnergyCurtailed_MWh;
		this.shareElectricvehiclesInHouseholds = shareElectricvehiclesInHouseholds;
    }

	@Override
	public String toString() {
		return
			"HSMSPeakLoadElectricity_kW = " + HSMSPeakLoadElectricity_kW + " " +
			"MSLSPeakLoadElectricity_kW = " + MSLSPeakLoadElectricity_kW + " " +
			"MSLSnodePeakPositiveLoadElectricity_kW = " + MSLSnodePeakPositiveLoadElectricity_kW + " " +
			"MSLSnodePeakNegativeLoadElectricity_kW = " + MSLSnodePeakNegativeLoadElectricity_kW + " " +
			//"checkSumHourlyElectricityImport_MWh = " + checkSumHourlyElectricityImport_MWh + " " +
			//"checkSumHourlyElectricityExport_MWh = " + checkSumHourlyElectricityExport_MWh + " " +
			"totalElectricityImport_MWh = " + totalElectricityImport_MWh + " " +
			"totalElectricityExport_MWh = " + totalElectricityExport_MWh + " " +
			"totalMethaneImport_MWh = " + totalMethaneImport_MWh + " " +
			"totalMethaneExport_MWh = " + totalMethaneExport_MWh + " " +
			"totalHydrogenImport_MWh = " + totalHydrogenImport_MWh + " " +
			"totalHydrogenExport_MWh = " + totalHydrogenExport_MWh + " "+
			"totalDieselImport_MWh = " + totalDieselImport_MWh + " " +
			"totalBatteryUnitsInstalled = " + totalBatteryUnitsInstalled + " "+
			"totalBatteryChargeAmount_MWh = " + totalBatteryChargeAmount_MWh + " "+
			"totalBatteryDischargeAmount_MWh = " + totalBatteryDischargeAmount_MWh + " "+
			"totalBatteryInstalledCapacity_MWh = " + totalBatteryInstalledCapacity_MWh + " "+
			//"SystemHourlyElectricityImport_MWh = " + SystemHourlyElectricityImport_MWh.toString() + " " +
			//"SystemHourlyElectricityExport_MWh = " + SystemHourlyElectricityExport_MWh.toString() + " " +
			//"totalEVHourlyChargingProfile_kWh = " + totalEVHourlyChargingProfile_kWh + " "+
			//"totalEHGVHourlyChargingProfile_kWh = " + totalEHGVHourlyChargingProfile_kWh + " "+
			//"totalBatteryHourlyChargingProfile_kWh = " + totalBatteryHourlyChargingProfile_kWh + " " +
			"totalSelfConsumption_fr = " + totalSelfConsumption_fr*100 + " %" +
			"totalSelfSufficiency_fr = " + totalSelfSufficiency_fr*100 + " %" +
			"totalEnergyUsed_MWh = " + TotalEnergyUsed_MWh + " MWh" +
			"TotalEnergyProduced_MWh = " + TotalEnergyProduced_MWh + " MWh" +
			"TotalEnergyCurtailed_MWh = " + TotalEnergyCurtailed_MWh + " MWh" +
			"shareElectricvehiclesInHouseholds = " + shareElectricvehiclesInHouseholds + " fr";
	}

	public void updateData( double v_gridNodePeakLoadElectricityHSMS_kW, double v_gridNodePeakLoadElectricityMSLS_kW, double cumulativeCapacityHS, double cumulativeCapacityLS, double netOverload_pct, LinkedHashMap<String,Double> c_timesOfNodePeakLoads_h, LinkedHashMap<String,Double> gridConnectionMaxLoad_fr, double MSLSnodePeakPositiveLoadElectricity_kW, double MSLSnodePeakNegativeLoadElectricity_kW, double totalElectricityImport_MWh, double totalElectricityExport_MWh, double totalMethaneImport_MWh, double totalMethaneExport_MWh, double totalHydrogenImport_MWh, double totalHydrogenExport_MWh, double totalDieselImport_MWh, LinkedHashMap<String,Double> totalBatteryUnitsInstalled, LinkedHashMap<String,Double> totalBatteryChargeAmount_MWh, LinkedHashMap<String,Double> totalBatteryDischargeAmount_MWh, LinkedHashMap<String,Double> totalBatteryInstalledCapacity_MWh, double totalSelfConsumption_fr, double totalSelfSufficiency_fr, double TotalEnergyUsed_MWh, double TotalEnergyProduced_MWh, double TotalEnergyCurtailed_MWh, double shareElectricvehiclesInHouseholds) {
		this.HSMSPeakLoadElectricity_kW = v_gridNodePeakLoadElectricityHSMS_kW;
		this.MSLSPeakLoadElectricity_kW = v_gridNodePeakLoadElectricityMSLS_kW;
		this.cumulativeCapacityHS =cumulativeCapacityHS;
		this.cumulativeCapacityLS = cumulativeCapacityLS;
		this.netOverload_pct = netOverload_pct;
		this.timesOfNodePeakLoads_h = c_timesOfNodePeakLoads_h;
		this.gridConnectionMaxLoad_fr = gridConnectionMaxLoad_fr;
		this.MSLSnodePeakPositiveLoadElectricity_kW = MSLSnodePeakPositiveLoadElectricity_kW;
		this.MSLSnodePeakNegativeLoadElectricity_kW = MSLSnodePeakNegativeLoadElectricity_kW;
		this.totalElectricityImport_MWh = roundToDecimal( totalElectricityImport_MWh , 2 );
		this.totalElectricityExport_MWh = roundToDecimal( totalElectricityExport_MWh, 2 );
		this.totalMethaneImport_MWh = roundToDecimal( totalMethaneImport_MWh, 2 );
		this.totalMethaneExport_MWh = roundToDecimal( totalMethaneExport_MWh, 2 );
		this.totalHydrogenImport_MWh = roundToDecimal( totalHydrogenImport_MWh, 2 );
		this.totalHydrogenExport_MWh = roundToDecimal( totalHydrogenExport_MWh, 2 );
		this.totalDieselImport_MWh = roundToDecimal( totalDieselImport_MWh, 2 );
		this.totalBatteryUnitsInstalled = totalBatteryUnitsInstalled;
		this.totalBatteryChargeAmount_MWh = totalBatteryChargeAmount_MWh;
		this.totalBatteryDischargeAmount_MWh = totalBatteryDischargeAmount_MWh;
		this.totalBatteryInstalledCapacity_MWh = totalBatteryInstalledCapacity_MWh;
		//this.SystemHourlyElectricityImport_MWh = c_globalElectricityImportProfile_MWhph;
		//this.SystemHourlyElectricityExport_MWh = c_globalElectricityExportProfile_MWhph;
		//this.checkSumHourlyElectricityImport_MWh = SystemHourlyElectricityImport_MWh.values().stream().mapToDouble(d -> d).sum();
		//this.checkSumHourlyElectricityExport_MWh = SystemHourlyElectricityExport_MWh.values().stream().mapToDouble(d -> d).sum();
		//this.totalEVHourlyChargingProfile_kWh = totalEVHourlyChargingProfile_kWh;
		//this.totalEHGVHourlyChargingProfile_kWh = totalEHGVHourlyChargingProfile_kWh;
		//this.totalBatteryHourlyChargingProfile_kWh = totalBatteryHourlyChargingProfile_kWh;
		this.totalSelfConsumption_fr = totalSelfConsumption_fr;
		this.totalSelfSufficiency_fr = totalSelfSufficiency_fr;
		this.TotalEnergyUsed_MWh = TotalEnergyUsed_MWh;
		this.TotalEnergyProduced_MWh = TotalEnergyProduced_MWh;
		this.TotalEnergyCurtailed_MWh = TotalEnergyCurtailed_MWh;
		this.shareElectricvehiclesInHouseholds = shareElectricvehiclesInHouseholds;
	}


	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1666879973865</Id>
			<Name><![CDATA[J_HourlyCurvesData]]></Name>
			<Text><![CDATA[/**
 * J_HourlyCurvesData
 */
public class J_HourlyCurvesData implements Serializable {

	public double checkSumHourlyElectricityImport_MWh;
	public double checkSumHourlyElectricityExport_MWh;
	public Map<Integer,Double> SystemHourlyElectricityImport_MWh = new LinkedHashMap<Integer,Double>();
	public Map<Integer,Double> SystemHourlyElectricityExport_MWh = new LinkedHashMap<Integer,Double>();
	public Map<Integer,Double> totalEVHourlyChargingProfile_kWh = new LinkedHashMap<Integer,Double>();
	public Map<Integer,Double> totalEHGVHourlyChargingProfile_kWh = new LinkedHashMap<Integer,Double>();
	public Map<Integer,Double> totalBatteryHourlyChargingProfile_kWh = new LinkedHashMap<Integer, Double>();

	 /**
     * Default constructor
     */
    public J_HourlyCurvesData() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_HourlyCurvesData(LinkedHashMap<Integer,Double> c_globalElectricityImportProfile_MWhph, LinkedHashMap<Integer,Double> c_globalElectricityExportProfile_MWhph, LinkedHashMap<Integer,Double> totalEVHourlyChargingProfile_kWh, LinkedHashMap<Integer,Double> totalEHGVHourlyChargingProfile_kWh, LinkedHashMap<Integer,Double> totalBatteryHourlyChargingProfile_kWh) {

		this.SystemHourlyElectricityImport_MWh = c_globalElectricityImportProfile_MWhph;
		this.SystemHourlyElectricityExport_MWh = c_globalElectricityExportProfile_MWhph;
		this.totalEVHourlyChargingProfile_kWh = totalEVHourlyChargingProfile_kWh;
		this.totalEHGVHourlyChargingProfile_kWh = totalEHGVHourlyChargingProfile_kWh;
		this.totalBatteryHourlyChargingProfile_kWh = totalBatteryHourlyChargingProfile_kWh;
		this.checkSumHourlyElectricityImport_MWh = 0;
		this.checkSumHourlyElectricityExport_MWh = 0;	

    }

	@Override
	public String toString() {
		return
			"SystemHourlyElectricityImport_MWh = " + SystemHourlyElectricityImport_MWh.toString() + " " +
			"SystemHourlyElectricityExport_MWh = " + SystemHourlyElectricityExport_MWh.toString() + " " +
			"totalEVHourlyChargingProfile_kWh = " + totalEVHourlyChargingProfile_kWh + " "+
			"totalEHGVHourlyChargingProfile_kWh = " + totalEHGVHourlyChargingProfile_kWh + " "+
			"totalBatteryHourlyChargingProfile_kWh = " + totalBatteryHourlyChargingProfile_kWh + " " ;
	}

	public void updateData(LinkedHashMap<Integer,Double> c_globalElectricityImportProfile_MWhph, LinkedHashMap<Integer,Double> c_globalElectricityExportProfile_MWhph, LinkedHashMap<Integer,Double> totalEVHourlyChargingProfile_kWh, LinkedHashMap<Integer,Double> totalEHGVHourlyChargingProfile_kWh, LinkedHashMap<Integer,Double> totalBatteryHourlyChargingProfile_kWh) {
		this.SystemHourlyElectricityImport_MWh = c_globalElectricityImportProfile_MWhph;
		this.SystemHourlyElectricityExport_MWh = c_globalElectricityExportProfile_MWhph;
		this.totalEVHourlyChargingProfile_kWh = totalEVHourlyChargingProfile_kWh;
		this.totalEHGVHourlyChargingProfile_kWh = totalEHGVHourlyChargingProfile_kWh;
		this.totalBatteryHourlyChargingProfile_kWh = totalBatteryHourlyChargingProfile_kWh;
		this.checkSumHourlyElectricityImport_MWh = SystemHourlyElectricityImport_MWh.values().stream().mapToDouble(d -> d).sum();
		this.checkSumHourlyElectricityExport_MWh = SystemHourlyElectricityExport_MWh.values().stream().mapToDouble(d -> d).sum();
	}


	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1668600448637</Id>
			<Name><![CDATA[J_EAHydrogenVehicle]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionHydrogenVehicle
 */
public class J_EAHydrogenVehicle extends J_EAVehicle implements Serializable {

	//private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.HYDROGEN;

	/**
     * Default constructor
     */
    public J_EAHydrogenVehicle() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAHydrogenVehicle(Agent ownerAssetAgent, double energyConsumption_kWhpkm, double timestep_h, double vehicleScaling, OL_EnergyAssetType energyAssetType, J_ActivityTrackerTrips tripTracker) {
	    this.parentAgent = ownerAssetAgent;
	    this.energyConsumption_kWhpkm = energyConsumption_kWhpkm;
	    this.timestep_h = timestep_h;
	    this.vehicleScaling = vehicleScaling;
	    this.energyAssetType = energyAssetType;
	    this.tripTracker = tripTracker;
	    if (tripTracker != null) {
	    	tripTracker.Vehicle=this;	    	
	    }
		registerEnergyAsset();
	}
    
    @Override
    public double[] f_updateAllFlows(double powerFraction_fr) {
    	//operateBounded(powerFraction_fr);
    	double[] arr=returnEnergyFlows();    	
    	
    	//return arr;
    	if (parentAgent instanceof GridConnection) {    		
    		((GridConnection)parentAgent).f_addFlows(arr, this);
    	}
    	resetFlows();
    	return arr;
    }
    
    /*public double[] operate(double ratioOfChargeCapacity_r) {
    	return returnEnergyFlows();
    }*/
    
	@Override
	public boolean startTrip() {
		if (available) {
			available = false;
			//traceln("storage capacity start of trip: " + storageCapacity_kWh + ", state of charge: " + stateOfCharge_r);
			//traceln("Hydrogen vehicle starting trip!");
			return true;
		} else {
			traceln("Trip not started because vehicle not available!");
			return false; // Trip not started because vehicle not available!
		}
	}	

	@Override
    public boolean endTrip(double tripDist_km) {
		
		if(available) {
			traceln("Trip not ended because EV never left!");
			return false;
		} else {
	    	available = true;
	    	//traceln("Hydrogen vehicle finished trip!");
	    	return true;

		}
    	//traceln("Current milage: " + mileage + ", energy consumption per km: " + energyConsumption_kWhpkm);
    }
	
	public boolean progressTrip(double marginalTripDist_km) {
		if( available) {
			traceln("Trip not updated because vehicle never left!");
			return false;
		}
		else {
			mileage_km += marginalTripDist_km;
	    	double energyUsedThisTimestep_kWh = marginalTripDist_km * vehicleScaling * energyConsumption_kWhpkm;
	    	energyUsed_kWh += energyUsedThisTimestep_kWh;
	    	hydrogenConsumption_kW = energyUsedThisTimestep_kWh / timestep_h;
	    	energyUse_kW += hydrogenConsumption_kW;
			return true;
		}
	}
	
	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}
	
	public boolean getAvailability() {
		return available;
	}

	@Override
    public void storeStatesAndReset() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsedStored_kWh = energyUsed_kWh;
    	energyUsed_kWh = 0.0;
    	availableStored = available;
    	available = true;
    	mileage_km = 0;
    	resetFlows();    	
    }
    
	@Override
    public void restoreStates() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsed_kWh = energyUsedStored_kWh;    	
    	available = availableStored;
    }
	
	
	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +" " +
			"energyConsumption_kWhpkm =" + energyConsumption_kWhpkm +" " +
			"vehicleScaling = " + vehicleScaling;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1671107396262</Id>
			<Name><![CDATA[J_EAConversionElektrolyser]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionElektrolyser
 */
public class J_EAConversionElektrolyser extends zero_engine.J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HYDROGEN;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.ELECTRICITY;
    /**
	/**
     * Default constructor
     */
    public J_EAConversionElektrolyser() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionElektrolyser(Agent parentAgent, double capacityElectric_kW, double efficiency_r, double  timestep_h) {
	    this.parentAgent = parentAgent;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.eta_r = efficiency_r;
	    this.timestep_h = timestep_h;
		registerEnergyAsset();
	}

    @Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");
    	ratioOfCapacity=max(0,ratioOfCapacity); // Prevent negative elektrolyser power. This is not a fuel cell! ^^
		this.electricityConsumption_kW = capacityElectric_kW * ratioOfCapacity;
    	this.hydrogenProduction_kW = electricityConsumption_kW * eta_r;
    	this.energyUse_kW = (electricityConsumption_kW - hydrogenProduction_kW);
		this.energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses! Optionally, this could also be a waste-heat source
    	//return arr;
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	public double getEta_r() {
		return this.eta_r;
	}
	
	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +" " +
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"eta_r = " + this.eta_r+" ";
	}

	public String getOwnerAgent() {
		return parentAgent.agentInfo();
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}                         ]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1671522756085</Id>
			<Name><![CDATA[J_EAConversionGasCHP]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionGasCHP
 */
public class J_EAConversionGasCHP extends zero_engine.J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.ELECTRICITY;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.METHANE;
	protected double outputTemperature_degC;
    /**
     * Default constructor
     */
    public J_EAConversionGasCHP() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionGasCHP(Agent parentAgent, double capacityElectric_kW, double capacityHeat_kW, double efficiency, double timestep_h, double outputTemperature_degC ) {
	    this.parentAgent = parentAgent;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.eta_r = efficiency;
	    this.capacityHeat_kW = capacityHeat_kW; 
	    this.timestep_h = timestep_h;
	    this.outputTemperature_degC = outputTemperature_degC;
		registerEnergyAsset();
	}

	@Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("CHP can produce " + capacityElectric_kW + " kW electricity");
    	this.electricityProduction_kW = capacityElectric_kW * ratioOfCapacity;
		this.heatProduction_kW = capacityHeat_kW * ratioOfCapacity;
		
		this.methaneConsumption_kW = (electricityProduction_kW  + heatProduction_kW )/ eta_r ;
		this.energyUse_kW = (methaneConsumption_kW - heatProduction_kW - electricityProduction_kW)  ;
		this.energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		this.heatProduced_kWh += this.heatProduction_kW * timestep_h;
		this.electricityProduced_kWh += this.electricityProduction_kW * timestep_h;
		//this.electricityProduced_kWh = this.electricityProduction_kW * timestep_h;
				
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +" " +
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"eta_r = " + this.eta_r+" "+
			"energyUsed_kWh"+ this.energyUsed_kWh+" "+
			"heatProduced_kWh = " + this.heatProduced_kWh + " ";
	}
	
	@Override
	public double getCurrentTemperature() {
		return outputTemperature_degC;
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1673445448881</Id>
			<Name><![CDATA[J_EAElectricHob]]></Name>
			<Text><![CDATA[/**
 * J_EAElectricHob
 */	
public class J_EAElectricHob extends J_EAConversion implements Serializable {

	//private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HEAT;
	//private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.ELECTRICITY;
	protected double outputTemperature_degC;

    /**
     * Default constructor
     */
    public J_EAElectricHob(Agent ownerAgent, double capacityThermal_kW, double efficiency, double timestep_h, double outputTemperature_degC) {
    	this.parentAgent= ownerAgent;
	    this.capacityHeat_kW = capacityThermal_kW;
	    this.eta_r = efficiency;
	    //this.capacityElectric_kW = capacityThermal_kW / eta_r;
	    this.timestep_h = timestep_h;
	    this.outputTemperature_degC = outputTemperature_degC;
	    this.energyAssetType = OL_EnergyAssetType.ELECTRIC_HOB;
		registerEnergyAsset();
    }

    @Override 
    public double[] operate( double ratioOfCapacity ) {
    	//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");
    	this.heatProduction_kW = capacityHeat_kW * ratioOfCapacity;
		this.electricityConsumption_kW = heatProduction_kW / eta_r;
		this.energyUse_kW = (electricityConsumption_kW - heatProduction_kW);
		this.energyUsed_kWh += timestep_h * (electricityConsumption_kW - heatProduction_kW); // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		this.heatProduced_kWh += heatProduction_kW * timestep_h;
		return returnEnergyFlows();
    }
    
	@Override
	public String toString() {
		return
			"AssetType = " + energyAssetType + 
			" parentAgent = " + parentAgent +", Energy consumed = " + this.energyUsed_kWh +
			" capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"eta_r = " + this.eta_r+" " +
			"outputTemperature_degC = " + this.outputTemperature_degC + " "+
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " "+
			"heatProducted_kWh = " +this.heatProduced_kWh + " ";
	}
	
	@Override
	public double getCurrentTemperature() {
		return outputTemperature_degC;
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1673445438882</Id>
			<Name><![CDATA[J_Contract]]></Name>
			<Text><![CDATA[
public class J_Contract implements Serializable {

	public String contractScope; // Kan energySupplier of Coop zijn  (dus kan niet specifieker zijn dan 'String' hier, tenzij we Interfaces gaan gebruiken. ('Implements energy supplier')
	public OL_EnergyCarrierType energyCarrier;
	public OL_ContractType contractType;
	public double EnergyTransactionVolume_kWh=0;
	public double FinancialTransactionVolume_eur=0;
	public String contractHolder;
	public double annualFee_eur=0;
	
    public J_Contract() {
    }
	  /**
     * Constructor initializing the fields
     */
    public J_Contract(String contractScope, OL_EnergyCarrierType energyCarrier) {
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.
	    //this.contractType = contractType; // Fixed or variable energy price?
	    this.energyCarrier = energyCarrier;
	}
    
    @Override
	public String toString() {
		return
			"type = " + this.getClass().toString() + " " +
			"contractScope = " + contractScope +" ";
	}
}

]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1673445448882</Id>
			<Name><![CDATA[J_DeliveryContract]]></Name>
			<Text><![CDATA[/**
 * J_DeliveryContract
 */
public class J_DeliveryContract extends zero_engine.J_Contract implements Serializable {

	//public String contractScope; // Kan energySupplier of Coop zijn  (dus kan niet specifieker zijn dan 'String' hier, tenzij we Interfaces gaan gebruiken. ('Implements energy supplier')
	public OL_DeliveryContractType deliveryContractType; // Fixed of variable
	public double deliveryPrice_eurpkWh;
	public double feedinPrice_eurpkWh;
	public double idx;
	//public OL_EnergyCarrierType energyCarrier;
	
	  /**
     * Constructor initializing the fields
     */
    public J_DeliveryContract(String contractScope, OL_DeliveryContractType contractType, OL_EnergyCarrierType energyCarrier, double deliveryPrice_eurpkWh, double feedinPrice_eurpkWh, double annualFee_eur ) {
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.
	    this.deliveryContractType = contractType; // Fixed or variable energy price?
	    this.energyCarrier = energyCarrier;
	    this.deliveryPrice_eurpkWh = deliveryPrice_eurpkWh;
	    this.feedinPrice_eurpkWh = feedinPrice_eurpkWh;
	    this.contractType = OL_ContractType.DELIVERY;
	    this.annualFee_eur = annualFee_eur;
	}
    
    @Override
	public String toString() {
		return
			"type = " + this.getClass().toString() + " " +
			"contractScope = " + contractScope +" " +
			"deliveryContractType = " + deliveryContractType.toString() +" "+
			"deliveryPrice_eurpkWh = " + deliveryPrice_eurpkWh +" "+
			"feedinPrice_eurpkWh = " + feedinPrice_eurpkWh +" ";
	}
}

]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1673445448883</Id>
			<Name><![CDATA[J_TransportContract]]></Name>
			<Text><![CDATA[/**
 * J_TransportContract
 */
public class J_TransportContract extends zero_engine.J_Contract implements Serializable {

	//public String contractScope; // Kan GridOperator of Coop zijn (dus kan niet specifieker zijn dan 'String' hier, tenzij we Interfaces gaan gebruiken. ('Implements grid operator')
	//public OL_TransportContractType contractType; // Nodal-pricing, bandwidth, peak
	public OL_TransportContractType transportContractType; //
	public double bandwidthTreshold_kW;
	public double bandwidthTariff_eurpkWh;
	public double idx;
	//public OL_EnergyCarrierType energyCarrier;
	
	  /**
     * Constructor initializing the fields
     */
    public J_TransportContract(String contractScope, OL_TransportContractType transportContractType, OL_EnergyCarrierType energyCarrier, double bandwidthTreshold_kW, double bandwidthTariff_eurpkWh, double annualFee_eur ) {
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.	    
	    this.energyCarrier = energyCarrier;
	    this.transportContractType = transportContractType;
	    this.bandwidthTreshold_kW = bandwidthTreshold_kW;
	    this.bandwidthTariff_eurpkWh = bandwidthTariff_eurpkWh;
	    this.contractType = OL_ContractType.TRANSPORT;
	    this.annualFee_eur = annualFee_eur;
	}
    
    @Override
   	public String toString() {
   		return
   			"type = " + this.getClass().toString() + " " +
   			"contractScope = " + contractScope +" ";
   	}
}
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1673445448884</Id>
			<Name><![CDATA[J_TaxContract]]></Name>
			<Text><![CDATA[/**
 * J_TaxContract
 */
public class J_TaxContract extends zero_engine.J_Contract implements Serializable {

	//public String contractScope; // Kan energySupplier of Coop zijn
	//public OL_ContractType contractType; // Fixed of variable
	public double deliveryTax_eurpkWh;
	public double feedinTax_eurpkWh;
	public double proportionalTax_pct;
	public double idx;
	//public OL_EnergyCarrierType energyCarrier;
	
	  /**
     * Constructor initializing the fields
     */
    public J_TaxContract(String contractScope, OL_EnergyCarrierType energyCarrier, double deliveryTax_eurpkWh, double feedinTax_eurpkWh, double proportionalTax_pct, double annualFee_eur ) {
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.	    
	    this.energyCarrier = energyCarrier;
	    this.deliveryTax_eurpkWh = deliveryTax_eurpkWh;
	    this.feedinTax_eurpkWh = feedinTax_eurpkWh;
	    this.proportionalTax_pct = proportionalTax_pct;
	    this.contractType = OL_ContractType.TAX;
	    this.annualFee_eur = annualFee_eur;
	}
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1673445448885</Id>
			<Name><![CDATA[J_ConnectionContract]]></Name>
			<Text><![CDATA[/**
 * J_ConnectionContract
 */
public class J_ConnectionContract extends zero_engine.J_Contract implements Serializable {

	//public String contractScope; // Kan energySupplier of Coop zijn
	public OL_ConnectionContractType connectionContractType; // Fixed of variable
	public double nfATOstart_h = 0;
	public double nfATOend_h = 0;
	public double nfATOpower_kW = 0;
	public double idx;
	
    public J_ConnectionContract() {
    }
	  /**
     * Constructor initializing the fields
     */
    public J_ConnectionContract(String contractScope, OL_ConnectionContractType contractType, OL_EnergyCarrierType energyCarrier, double nfATOstart_h, double nfATOend_h, double nfATOpower_kW, double annualFee_eur ) {
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.
	    this.connectionContractType = contractType; // Fixed or variable energy price?
	    this.energyCarrier = energyCarrier;
	    this.nfATOstart_h = nfATOstart_h;
	    this.nfATOend_h = nfATOend_h;
	    this.nfATOpower_kW = nfATOpower_kW;
	    this.contractType = OL_ContractType.CONNECTION;
	    this.annualFee_eur = annualFee_eur;
	}
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1678469210821</Id>
			<Name><![CDATA[J_EAConversionCurtailerHeat]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<Text><![CDATA[/**
 * J_EAConversionCurtailerHeat
 */
public class J_EAConversionCurtailerHeat extends J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HEAT;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.HEAT;
    /**
     * Default constructor
     */
    public J_EAConversionCurtailerHeat(Agent parentAgent, double capacityHeat_kW, double efficiency, double timestep_h) {
	    this.parentAgent = parentAgent;
	    this.capacityHeat_kW = capacityHeat_kW;
	    this.eta_r = efficiency;
//	    this.capacityHeat_kW = this.capacityHeat_kW * this.eta_r;
	    this.timestep_h = timestep_h;
		registerEnergyAsset();
    }

    @Override
    public double[] operate(double ratioOfCapacity) {
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");
		heatProduction_kW = capacityHeat_kW * ratioOfCapacity * eta_r;
		heatConsumption_kW = capacityHeat_kW * ratioOfCapacity;
		energyUse_kW = (heatConsumption_kW - heatProduction_kW);
		energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses!
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };
    	//return arr;
		heatConsumed_kWh += heatConsumption_kW * timestep_h;
		heatProduced_kWh += heatProduction_kW * timestep_h;
		
		return returnEnergyFlows();
    }
    
    @Override
	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}
	
	@Override
	public double getHeatCapacity_kW() {
		return capacityHeat_kW;
	}

	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +", Energy consumed = " + energyUsed_kWh + " " +
			"capacityHeat_kW = " + capacityHeat_kW +" "+
			"eta_r = " + eta_r+" " +
			"energyUsed_kWh (losses) = " + energyUsed_kWh + " "+
			"heatConsumed_kWh = " + heatConsumed_kWh + " "+
			"heatProduced_kWh = " + heatProduced_kWh + " ";
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1692861398767</Id>
			<Name><![CDATA[J_ActivityTracker]]></Name>
			<Text><![CDATA[/**
 * J_ActivityTracker
 */	
public class J_ActivityTracker implements Serializable {
	protected EnergyModel energyModel;

	// Tripdata
	protected ArrayList<Double> starttimes_min = new ArrayList<>();
	protected ArrayList<Double> endtimes_min = new ArrayList<>();
	//private ArrayList<Double> eventMagnitude = new ArrayList<>();
    public int nbActivities = 0;
	public int v_eventIndex = 0;
	private int v_eventIndexStored =0;

	
    /**
     * Default constructor
     */
    public J_ActivityTracker() {
    }
    
    public J_ActivityTracker(EnergyModel main, int rowIndex, double time_min) {
    }
    
    public void storeAndResetState() {
    	v_eventIndexStored = v_eventIndex;
    	v_eventIndex = 0;
    }
    
    public void restoreState() {
    	v_eventIndex = v_eventIndexStored;
	}
    

	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1692862190945</Id>
			<Name><![CDATA[J_ActivityTrackerTrips]]></Name>
			<Text><![CDATA[/**
 * J_ActivityTrackerTrips
 */	
public class J_ActivityTrackerTrips extends J_ActivityTracker implements Serializable {
	
	public ArrayList<Double> distances_km = new ArrayList<>();
	private int rowIndex;
	public J_EAVehicle Vehicle;
	public double v_idleTimeToNextTrip_min;
	public double v_tripDist_km;
	public double v_energyNeedForNextTrip_kWh;
	public double v_nextEventStartTime_min;
	public double distanceScaling_fr = 1.0;
	public double currentTripTimesteps_n;
	public String tripPatternIdentifier; 
	
    /**
     * Default constructor
     */
    public J_ActivityTrackerTrips() {
    }
    
    public J_ActivityTrackerTrips(EnergyModel main, ExcelFile tripsExcel, int rowIndex, double time_min, J_EAVehicle Vehicle) {
    	this.energyModel = main;
    	this.rowIndex = rowIndex;
    	this.Vehicle = Vehicle;		
		this.nbActivities = roundToInt(tripsExcel.getCellNumericValue("sheet1", rowIndex + 2, 2));
		this.tripPatternIdentifier = "";// tripsExcel.getCellStringValue("sheet1", rowIndex + 2, 1);
		
	    for (int i = 0; i < nbActivities; i++){
	    	starttimes_min.add(tripsExcel.getCellNumericValue("sheet1", rowIndex + 2, 3 + i * 3));
	    	endtimes_min.add(tripsExcel.getCellNumericValue("sheet1", rowIndex + 2, 4 + i * 3));
	    	distances_km.add(tripsExcel.getCellNumericValue("sheet1", rowIndex + 2, 5 + i * 3));		    
	    }
	    
	    // If trips have in inputdata have a 1-week schedule (endtime < 10080), then duplicate activities until the end of the year
    	if (endtimes_min.get(nbActivities-1) < 10080) {
		    for (int weeks = 1; weeks < 53; weeks++) {
		    	for (int eventIdx = 0; eventIdx < nbActivities; eventIdx++) {
		    		starttimes_min.add(starttimes_min.get(eventIdx) + 10080*weeks);
		    		endtimes_min.add(endtimes_min.get(eventIdx) + 10080*weeks);
		    		distances_km.add(distances_km.get(eventIdx));
		    	}
		    }
	    }
    	
	    // 'forward' to current activity if tripTracker is instantiated not at the start of the simulation or year
	    while ( starttimes_min.get(v_eventIndex) < time_min ) {	
	    	v_eventIndex++;
	    	if ( v_eventIndex > starttimes_min.size() - 1 ) {	
	    		break;
	    	}
	    }
	    prepareNextActivity(time_min);    	
    }
   
   public void setVehicle(J_EAVehicle Vehicle) {
	   this.Vehicle = Vehicle;
   }
   
   public void setDistanceScaling_fr(double distanceScaling_fr) {
	   this.distanceScaling_fr = distanceScaling_fr;
   }
   
   public void setAnnualDistance_km(double desiredAnnualDistance_km) { // Scale trips to come to a certain total annual distance traveled. This can lead to unfeasibly long trips for EVs!!
	   /* double currentAnnualDistance_km = 0;
	   int tripNo=0;
	   // Get current annual distance
	   while (endtimes_min.get(tripNo) < 60*24*365) {
		   currentAnnualDistance_km += distances_km.get(tripNo);
		   tripNo++;
	   }
	   */
	   double currentAnnualDistance_km = distances_km.stream().mapToDouble(a -> a).sum();
	   double scalingFactor_f = desiredAnnualDistance_km / currentAnnualDistance_km;
	   
	   //distances_km = (ArrayList<Double>)distances_km.stream().map(a -> scalingFactor_f*a).toList();
       ListIterator<Double> iterator = distances_km.listIterator();                                                              
	   for (int i = 0; i<distances_km.size(); i++) {
		   //distances_km[i] = distances(i)*scalingFactor_f;		   
		     iterator.next();
		     iterator.set(distances_km.get(i)*scalingFactor_f);
	   }
	   //traceln("Annual distance of triptracker set to: %s km", distances_km.stream().mapToDouble(a -> a).sum());                                
	   //traceln("Desired annual distance was: %s km", desiredAnnualDistance_km);
   }
    
   public void manageActivities(double time_min) {
    	if (Vehicle.getAvailability()) { // at start of timestep! check for multiple 'events' in timestep!
    		//if (time_min == roundToInt(starttimes_min.get(v_eventIndex) / (60*energyModel.p_timeStep_h)) * (energyModel.p_timeStep_h * 60) ) { // is a trip starting this timestep?
        	if (time_min >= starttimes_min.get(v_eventIndex) ) { // is a trip starting this timestep?
    			//currentTripDuration = roundToInt(endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex) / (energyModel.p_timeStep_h * 60));
    			currentTripTimesteps_n = max(1,roundToInt(((endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex)) / (energyModel.p_timeStep_h * 60))));

    			Vehicle.startTrip();
    			//main.v_activeTrips.incrementAndGet();
        		//if (time_min == roundToInt(endtimes_min.get(v_eventIndex) / (60*energyModel.p_timeStep_h)) * (energyModel.p_timeStep_h*60) ) { // is the trip also ending this timestep?
            	if (time_min >= endtimes_min.get(v_eventIndex) ) { // is the trip also ending this timestep?
        			Vehicle.endTrip(v_tripDist_km);
        			v_eventIndex++;
        			//main.v_activeTrips.decrementAndGet();
        			prepareNextActivity(time_min);
        		}
    		}

    	} else {
    		if (Vehicle instanceof J_EADieselVehicle) {
    			J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)Vehicle;
    			dieselVehicle.progressTrip(v_tripDist_km / currentTripTimesteps_n);
    		}
    		else if (Vehicle instanceof J_EAHydrogenVehicle) {
    			J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)Vehicle;
    			hydrogenVehicle.progressTrip(v_tripDist_km / currentTripTimesteps_n);
    		}
    		//if (time_min == roundToInt(endtimes_min.get(v_eventIndex)/ (60*energyModel.p_timeStep_h)) * 60*energyModel.p_timeStep_h ) { // is a trip ending this timestep?
        	if (time_min >= endtimes_min.get(v_eventIndex) ) { // is a trip ending this timestep?
    			Vehicle.endTrip(v_tripDist_km);
    			v_eventIndex++;
    			//main.v_activeTrips.decrementAndGet();
    			prepareNextActivity(time_min);
        		//if (time_min == roundToInt(starttimes_min.get(v_eventIndex) / (60*energyModel.p_timeStep_h)) * (energyModel.p_timeStep_h*60) ) { // is the next trip also starting this timestep?
            	if (time_min >= starttimes_min.get(v_eventIndex) ) { // is the next trip also starting this timestep?
        			//currentTripDuration = roundToInt(endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex) / (energyModel.p_timeStep_h * 60));
        			currentTripTimesteps_n = max(1,roundToInt(((endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex)) / (energyModel.p_timeStep_h * 60))));
        			//traceln("Hello! :P");
        			Vehicle.startTrip();
        			//main.v_activeTrips.incrementAndGet();
        		}
    		}

    	}
    }
    
    public void prepareNextActivity(double time_min) {
		if ( v_eventIndex >= starttimes_min.size()  ) {
			v_eventIndex = 0;
		}
		
	    v_nextEventStartTime_min = starttimes_min.get(v_eventIndex);
		v_idleTimeToNextTrip_min = v_nextEventStartTime_min - time_min;
		v_tripDist_km = distanceScaling_fr * distances_km.get( v_eventIndex ); // Update upcoming trip distance

		if (Vehicle instanceof J_EAEV) {
			J_EAEV EV = (J_EAEV)Vehicle;
			v_energyNeedForNextTrip_kWh = EV.energyConsumption_kWhpkm * v_tripDist_km;

			// Check if more charging is needed for next trip!
			double nextTripDist_km = 0;
			double nextTripStartTime_min = 0;

			if ( v_eventIndex == starttimes_min.size() - 1 ) {
				nextTripDist_km = 0;//distances_km.get( 0 );
				nextTripStartTime_min = endtimes_min.get(v_eventIndex);
			} else {		
				nextTripDist_km = distanceScaling_fr*distances_km.get( v_eventIndex+1 );
				nextTripStartTime_min = starttimes_min.get( v_eventIndex+1 );
			}
			double additionalChargingNeededForNextTrip_kWh = max(0,nextTripDist_km * EV.energyConsumption_kWhpkm - (nextTripStartTime_min - endtimes_min.get(v_eventIndex))/60*EV.capacityElectric_kW);
			//if (additionalChargingNeededForNextTrip_kWh>0) {
			//	traceln("*******Additional charging required to prepare for trip after next trip!*********");
			//}
			v_energyNeedForNextTrip_kWh += additionalChargingNeededForNextTrip_kWh;
			EV.energyNeedForNextTrip_kWh = v_energyNeedForNextTrip_kWh;
			/*if ( (v_energyNeedForNextTrip_kWh - EV.getCurrentStateOfCharge() * EV.getStorageCapacity_kWh()) / (v_idleTimeToNextTrip_min/60) > EV.capacityElectric_kW ) {
				traceln("Infeasible trip pattern for EV, not enough time to charge for next trip! Required charging power is: " + (v_energyNeedForNextTrip_kWh - EV.getCurrentStateOfCharge() * EV.getStorageCapacity_kWh()) / (v_idleTimeToNextTrip_min/60) + " kW");
				traceln("RowIndex: " + rowIndex + " tripDistance: " + v_tripDist_km + " km, time to next trip: " + v_idleTimeToNextTrip_min + " minutes");
			} */
		}
    }
    
	@Override
	public String toString() {
		return
			"Number of trips = " + this.nbActivities + " " + 
			"Row index = " + this.rowIndex + " " + 
			"Distance Scaling = " + this.distanceScaling_fr + " ";
	}
	
	public double getDistanceScaling_fr( ) {
		return this.distanceScaling_fr;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;
}
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1692862773194</Id>
			<Name><![CDATA[J_EAVehicle]]></Name>
			<Text><![CDATA[/**
 * J_EAVehicle
 */	
public class J_EAVehicle extends J_EA implements Serializable {
	public boolean available = true;
	protected boolean availableStored = true;
	protected double energyConsumption_kWhpkm;
	//private MobilityTracker mobilityTracker = null;
	public double vehicleScaling;
	public double mileage_km = 0;
	public J_ActivityTrackerTrips tripTracker;
    /**
     * Default constructor
     */
    public J_EAVehicle() {
    }

    public boolean startTrip() {
    	return false;
    }
    
    public boolean endTrip(double tripDist_km) {
    	return false;
    }
    
    public void setVehicleScaling(double vehicleScaling) {
    	this.vehicleScaling = vehicleScaling;
    }
    
	public void setTripTracker(J_ActivityTrackerTrips tracker) {
		tripTracker = tracker;
	}

	public J_ActivityTrackerTrips getTripTracker() {
		return tripTracker;
	}
    
	public boolean getAvailability() {
		return available;
	}
	
	public double getVehicleScaling() {
		return vehicleScaling;
	}
	
	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1692876125447</Id>
			<Name><![CDATA[J_ActivityTrackerCooking]]></Name>
			<Text><![CDATA[/**
 * J_ActivityTrackerCooking
 */	
public class J_ActivityTrackerCooking extends zero_engine.J_ActivityTracker implements Serializable {
	private ArrayList<Double> powerFractions_fr = new ArrayList<>();
	public J_EAConversion HOB;
	public double powerFraction_fr=0;
	private int rowIndex;
	private boolean cooking = false;
    /**
     * Default constructor
     */
    public J_ActivityTrackerCooking() {
    }

    public J_ActivityTrackerCooking(ExcelFile inputCookingActivities, int rowIndex, double time_min, J_EAConversion HOB) {
    	//this.energyModel = main;
    	this.rowIndex = rowIndex;
    	this.HOB=HOB;
    	
    	//int rowIndex = uniform_discr(2, 300); 
    	double v_cookingPatternIndex = inputCookingActivities.getCellNumericValue("sheet1", rowIndex, 1);
    	int nbOfCookingSessions = (int)(inputCookingActivities.getCellNumericValue("sheet1", rowIndex, 2));

    	for (int i = 0; i < nbOfCookingSessions; i++){
    		starttimes_min.add(inputCookingActivities.getCellNumericValue("sheet1", rowIndex, 3 + i * 3));
    		endtimes_min.add(inputCookingActivities.getCellNumericValue("sheet1", rowIndex, 4 + i * 3));
    		
    		double ratio = inputCookingActivities.getCellNumericValue("sheet1", rowIndex, 5 + i * 3) / HOB.getHeatCapacity_kW();
    		powerFractions_fr.add(ratio);
    	}

    	while ( starttimes_min.get(v_eventIndex) - time_min < 0) {
    		starttimes_min.set( v_eventIndex, starttimes_min.get(v_eventIndex) + 1440 );
    		endtimes_min.set( v_eventIndex, endtimes_min.get(v_eventIndex) + 1440 );
    		v_eventIndex++;
    		if ( v_eventIndex > starttimes_min.size() - 1 ) {
    			v_eventIndex = 0;
    		}
    	}

    	//traceln("Current model time in minutes: " + energyModel.t_h*60 + ", nb sessions: " + nbOfCookingSessions);
    }
    
    public void manageActivities(double time_min) {
    	//traceln("Cooking tracker current time: " + time_min);
    	if (cooking) {
	    	if (time_min >= endtimes_min.get(v_eventIndex) ) { // end cooking session. Also check if a new one starts in this timestep!

	    		//main.v_activeCookingSessions.decrementAndGet();
	    		//traceln("End of cooking session, currently active cooking sessions %s", main.v_activeCookingSessions);
	    		powerFraction_fr = 0;
	    		
				starttimes_min.set( v_eventIndex, starttimes_min.get(v_eventIndex) + 1440 );
				endtimes_min.set( v_eventIndex, endtimes_min.get(v_eventIndex) + 1440 );
				v_eventIndex++;
				if ( v_eventIndex >= starttimes_min.size() ) {
					v_eventIndex = 0;
				}
				cooking=false;
				
				if (time_min >= starttimes_min.get(v_eventIndex)) {
					powerFraction_fr = powerFractions_fr.get(v_eventIndex);	    		
					//main.v_activeCookingSessions.incrementAndGet();
					cooking=true;
					traceln("Starting next cooking session in same timestep as previous session ended!! Rowindex %s, eventIndex %s\", rowIndex, v_eventIndex");
				}
	    	}
    	} else if (time_min >= starttimes_min.get(v_eventIndex) ) { // start cooking session. Also check if it ends within this timestep!
    		/*if (endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex) > 100) {
			traceln("Cooking event longer than 100 minutes!! Rowindex %s, eventIndex %s.", rowIndex, v_eventIndex);
			}*/
   		
			powerFraction_fr = powerFractions_fr.get(v_eventIndex);	    		
			//main.v_activeCookingSessions.incrementAndGet();
			cooking=true;
			if (time_min >= endtimes_min.get(v_eventIndex) ) { // end cooking session in the same timestep? Still need to fix energy use for this case!! 
	    	
	    		//main.v_activeCookingSessions.decrementAndGet();
	    		//traceln("End of cooking session, currently active cooking sessions %s", main.v_activeCookingSessions);
	    		powerFraction_fr = 0;
	    		
				starttimes_min.set( v_eventIndex, starttimes_min.get(v_eventIndex) + 1440 );
				endtimes_min.set( v_eventIndex, endtimes_min.get(v_eventIndex) + 1440 );
				v_eventIndex++;
				if ( v_eventIndex >= starttimes_min.size() ) {
					v_eventIndex = 0;
				}
				cooking=false;
			}
    	} 
    	//if (powerFraction_fr > 0 ) { traceln("Cooking event in progress!"); }
    	HOB.f_updateAllFlows(powerFraction_fr);
    }
    
    @Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1707991094535</Id>
			<Name><![CDATA[J_EAConversionElectrolyser]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionElektrolyser
 */
public class J_EAConversionElectrolyser extends zero_engine.J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.HYDROGEN;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.ELECTRICITY;
    private OL_ElectrolyserState state;
    private int remaining_power_up_duration; // amount of time steps left in power up mode
    private double startUpTimeStandby_h;
	/**
	/**
     * Default constructor
     */
    public J_EAConversionElectrolyser() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionElectrolyser(Agent parentAgent, OL_ElectrolyserState state, double capacityElectric_kW, double efficiency_r, double  timestep_h, double loadChangeTime_s, double startUpTimeShutdown_s, double startUpTimeStandby_s, double startUpTimeIdle_s) {
	    this.parentAgent = parentAgent;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.eta_r = efficiency_r;
	    this.timestep_h = timestep_h;
	    this.state = state;
	    this.startUpTimeStandby_h = startUpTimeStandby_s/3600;
	    
		this.energyAssetType = OL_EnergyAssetType.ELECTROLYSER;
	    
	    //toegevoegd door Ate
	    double loadChangeTime_h = loadChangeTime_s/3600;
	    double startUpTimeShutdown_h = startUpTimeShutdown_s/3600;
	    double startUpTimeIdle_h = startUpTimeIdle_s/3600;
		registerEnergyAsset();
	}
    
    public void setState(OL_ElectrolyserState state) { // Used for regime control
    	this.state = state;
    }
    
    public void setCapacityElectric_kW(double capacityElectric_kW) { // Used for regime control
    	this.capacityElectric_kW = capacityElectric_kW;
    }
    
    public void setRemaining_power_up_duration(int remaining_power_up_duration) {
    	this.remaining_power_up_duration = remaining_power_up_duration;
    }

    @Override
    public double[] operate(double ratioOfCapacity) {
    	

		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");
    	ratioOfCapacity=max(0,ratioOfCapacity); // Prevent negative elektrolyser power. This is not a fuel cell! ^^
		this.electricityConsumption_kW = capacityElectric_kW * ratioOfCapacity;
		
		if (state == OL_ElectrolyserState.POWER_UP) {
			this.remaining_power_up_duration--;
			this.hydrogenProduction_kW = 0;
		}
		else if (state == OL_ElectrolyserState.IDLE) {
			this.hydrogenProduction_kW = 0;
		}
		else {
			this.hydrogenProduction_kW = electricityConsumption_kW * eta_r;
		}
    	
    	this.energyUse_kW = (electricityConsumption_kW - hydrogenProduction_kW);
		this.energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses! Optionally, this could also be a waste-heat source
    	//return arr;
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	public double getEta_r() {
		return this.eta_r;
	}
	
	public double getCapacityElectric_kW( ) {
		return this.capacityElectric_kW;
	}
	
	public OL_ElectrolyserState getState() { // Used for regime control
    	return this.state;
    }
	
    public int getRemaining_power_up_duration() {
    	return this.remaining_power_up_duration;
    }
    
    public double getstartUpTimeStandby_h() {
    	return this.startUpTimeStandby_h;
    }
	
 
	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +" " +
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"eta_r = " + this.eta_r+" ";
	}

	public String getOwnerAgent() {
		return parentAgent.agentInfo();
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}                         ]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1707992650964</Id>
			<Name><![CDATA[J_EAConversionFuelCell]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionFuelCell
 */
public class J_EAConversionFuelCell extends zero_engine.J_EAConversion implements Serializable {

	private OL_EnergyCarrierType energyCarrierProduced = OL_EnergyCarrierType.ELECTRICITY;
	private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.HYDROGEN;

    /**
	/**
     * Default constructor
     */
    public J_EAConversionFuelCell() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EAConversionFuelCell(Agent parentAgent, double capacityElectric_kW, double efficiency_r, double  timestep_h) {
	    this.parentAgent = parentAgent;
	    this.capacityElectric_kW = capacityElectric_kW;
	    this.eta_r = efficiency_r;
	    this.timestep_h = timestep_h;
	    this.energyAssetType = OL_EnergyAssetType.FUEL_CELL;
		registerEnergyAsset();
	}

    @Override
    public double[] operate(double ratioOfCapacity) {
    	ratioOfCapacity=max(0,ratioOfCapacity);
		this.hydrogenConsumption_kW = capacityElectric_kW * ratioOfCapacity;
    	this.electricityProduction_kW = hydrogenConsumption_kW * eta_r;
    	this.energyUse_kW = (hydrogenConsumption_kW - electricityProduction_kW);
		this.energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses! Optionally, this could also be a waste-heat source
    	//return arr;
		return returnEnergyFlows();
    }

	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	public double getEta_r() {
		return this.eta_r;
	}
	
	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +" " +
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+
			"eta_r = " + this.eta_r+" ";
	}

	public String getOwnerAgent() {
		return parentAgent.agentInfo();
	}
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}                         ]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1711009967838</Id>
			<Name><![CDATA[J_EADieselVehicle]]></Name>
			<Text><![CDATA[/**
 * J_EAConversionDieselVehicle
 */
public class J_EADieselVehicle extends J_EAVehicle implements Serializable {

	//private OL_EnergyCarrierType energyCarrierConsumed = OL_EnergyCarrierType.DIESEL;

	/**
     * Default constructor
     */
    public J_EADieselVehicle() {
    }

    /**
     * Constructor initializing the fields
     */
    public J_EADieselVehicle(Agent ownerAssetAgent, double energyConsumption_kWhpkm, double timestep_h, double vehicleScaling, OL_EnergyAssetType energyAssetType, J_ActivityTrackerTrips tripTracker ) {
	    this.parentAgent = ownerAssetAgent;
	    this.energyConsumption_kWhpkm = energyConsumption_kWhpkm;
	    /*if (energyAssetType == OL_EnergyAssetType.DIESEL_VAN) {
	    	traceln("DieselVan energyconsumption: %s", energyConsumption_kWhpkm);
	    }*/
	    this.timestep_h = timestep_h;
	    this.vehicleScaling = vehicleScaling;
	    this.energyAssetType = energyAssetType; //OL_EnergyAssetType.DIESEL_VEHICLE; // AANPASSING ATE, scheelt code in Interface
	    this.tripTracker = tripTracker; 
	    if (tripTracker != null) {
	    	tripTracker.Vehicle=this;
	    }
		registerEnergyAsset();
	}
    
    @Override
    public double[] f_updateAllFlows(double powerFraction_fr) {
    	//operateBounded(powerFraction_fr);
    	double[] arr=returnEnergyFlows();    	
    	
    	//return arr;
    	if (parentAgent instanceof GridConnection) {
    		((GridConnection)parentAgent).f_addFlows(arr, this);
    	}
    	resetFlows();
    	return arr;
    }
    
    /*public double[] operate(double ratioOfChargeCapacity_r) {
    	return returnEnergyFlows();
    }*/
    
	@Override
	public boolean startTrip() {
		if (available) {
			this.available = false;
			//traceln("storage capacity start of trip: " + storageCapacity_kWh + ", state of charge: " + stateOfCharge_r);
			//traceln("Diesel vehicle starting trip!");
			return true;
		} else {
			traceln("Trip not started because vehicle not available!");
			return false; // Trip not started because vehicle not available!
		}
	}	

	@Override
    public boolean endTrip(double tripDist_km) {
		
		if(available) {
			traceln("Trip not ended because vehicle never left!, tripIdentifier = " + tripTracker.tripPatternIdentifier);
			return false;
		} else {
	    	this.available = true;
	    	return true;
		}
    }

	public boolean progressTrip(double marginalTripDist_km) {
		if( available) {
			traceln("Trip not updated because vehicle never left!");
			return false;
		}
		else {
			mileage_km += marginalTripDist_km;
	    	double energyUsedThisTimestep_kWh = marginalTripDist_km * vehicleScaling * energyConsumption_kWhpkm;
	    	energyUsed_kWh += energyUsedThisTimestep_kWh;
	    	dieselConsumption_kW = energyUsedThisTimestep_kWh / timestep_h;
	    	energyUse_kW += dieselConsumption_kW;
			return true;
		}
	}
	
	public double getEnergyUsed_kWh() {
		return energyUsed_kWh;
	}

	@Override
    public void storeStatesAndReset() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsedStored_kWh = energyUsed_kWh;
    	energyUsed_kWh = 0.0;
    	availableStored = available;
    	available = true;
    	mileage_km = 0;
    	resetFlows();    	
    }
    
	@Override
    public void restoreStates() {
    	// Each energy asset that has some states should overwrite this function!
    	energyUsed_kWh = energyUsedStored_kWh;    	
    	available = availableStored;
    }
	
	
	@Override
	public String toString() {
		return
			"parentAgent = " + parentAgent +" " +
			"energyConsumption_kWhpkm =" + energyConsumption_kWhpkm +" " +
			"vehicleScaling = " + vehicleScaling;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1715862850276</Id>
			<Name><![CDATA[J_AVGC_data]]></Name>
			<Text><![CDATA[/**
 * J_AVGC_data
 */	
public class J_AVGC_data implements Serializable {
	public double p_avgHouseGasConsumption_m3_yr;
	public double p_avgHouseElectricityConsumption_kWh_yr;
	public double p_avgEVMaxChargePowerVan_kW;
	public double p_avgHouseConnectionCapacity_kW;
	public OL_GridConnectionHeatingType p_avgHouseHeatingMethod;
	public double p_ratioEVHousePersonalCars;
	public double p_avgEVMaxChargePowerCar_kW;
	public double p_avgEVMaxChargePowerTruck_kW;
	public double p_avgEVStorageCar_kWh;
	public double p_avgEVStorageVan_kWh;
	public double p_avgHousePVInstallationPower_kWp;
	public double p_avgEVStorageTruck_kWh;
	public double p_ratioHouseInstalledPV;
	public double p_gas_kWhpm3;
	public double p_diesel_kWhpl;
	public double p_gasoline_kWhpl;
	public OL_GridConnectionHeatingType p_avgUtilityHeatingMethod;
	public double p_avgUtilityConnectionCapacity_kW;
	public double p_avgUtilityPVPower_kWp;
	public double p_ratioElectricTrucks;
	public OL_GridConnectionHeatingType p_avgCompanyHeatingMethod;
	public double p_avgEVEnergyConsumptionCar_kWhpkm;
	public double p_avgEVEnergyConsumptionVan_kWhpkm;
	public double p_avgEVEnergyConsumptionTruck_kWhpkm;
	public double p_hydrogenEnergyDensity_kWh_Nm3;
	public double p_avgDieselConsumptionCar_kmpl;
	public double p_avgGasolineConsumptionCar_kmpl;
	public double p_hydrogenSpecificEnergy_kWh_kg;
	public double p_hydrogenDensity_kg_Nm3;
	public double p_oxygenDensity_kg_Nm3;
	public double p_avgCOPHeatpump;
	public double p_avgEfficiencyHeatpump;
	public double p_avgDieselConsumptionCar_kWhpkm;
	public double p_oxygenProduction_kgO2pkgH2;
	public double p_avgGasolineConsumptionCar_kWhpkm;
	public double p_avgDieselConsumptionVan_kmpl;
	public double p_avgDieselConsumptionVan_kWhpkm;
	public double p_avgDieselConsumptionTruck_kmpl;
	public double p_avgDieselConsumptionTruck_kWhpkm;
	public double p_avgOutputTemperatureHeatpump_degC;
	public double p_avgHydrogenConsumptionCar_kWhpkm;
	public double p_avgEfficiencyGasBurner;
	public double p_avgHydrogenConsumptionVan_kWhpkm;
	public double p_avgHydrogenConsumptionTruck_kWhpkm;
	public double p_avgOutputTemperatureGasBurner_degC;
	public double p_avgEfficiencyHydrogenBurner;
	public double p_avgOutputTemperatureHydrogenBurner_degC;
	public double p_avgPVPower_kWpm2;
	public double p_avgRatioRoofPotentialPV;
	public double p_avgRatioBatteryCapacity_v_Power;

	/**
     * Default constructor
     */
    public J_AVGC_data() {
    }

	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726148464063</Id>
			<Name><![CDATA[J_Address]]></Name>
			<Text><![CDATA[/**
 * J_Address
 */	
public class J_Address implements Serializable {

	private String streetName;
	private int houseNumber;
	private String houseLetter;
	private String houseAddition;
	private String postalcode;
	private String city;
	
    /**
     * Default constructor
     */
    public J_Address() {
    }
    
    public String getAddress() {
    	StringBuilder sb = new StringBuilder();
    	
    	sb.append(this.streetName);
    	sb.append(" ");
    	sb.append(this.houseNumber);
		if ( this.houseLetter != null ) {
	    	sb.append(" ");
	    	sb.append(this.houseLetter);
	    }
		if ( this.houseAddition != null ) {
	    	sb.append(" ");
	    	sb.append(this.houseAddition);
	    }
		sb.append(", ");
		sb.append(this.postalcode);
		sb.append(" ");
		sb.append(this.city);
		
		return sb.toString();
    }
    
    
    public void setStreetName( String streetName ) { 
        this.streetName = streetName;
	}
	public void setHouseNumber( int houseNumber ) { 
	        this.houseNumber = houseNumber;
	}
	public void setHouseLetter( String houseLetter ) { 
	        this.houseLetter = houseLetter;
	}
	public void setHouseAddition( String houseAddition ) { 
	        this.houseAddition = houseAddition;
	}
	public void setPostalcode( String postalcode ) { 
	        this.postalcode = postalcode;
	}
	public void setCity( String city ) {
	        this.city = city;
	}
	
	public String getStreetName() { 
        return this.streetName;
	}
	public int getHouseNumber() {
	        return this.houseNumber;
	}
	public String getHouseLetter() {
	        return this.houseLetter;
	}
	public String getHouseAddition() {
	        return this.houseAddition;
	}
	public String getPostalcode() {
	        return this.postalcode;
	}
	public String getCity() {
	        return this.city;
	}
	
	@Override
	public String toString() {
		return "J_Address(" + getAddress() + ")";
	}

	
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1727097730196</Id>
			<Name><![CDATA[J_profilePointer]]></Name>
			<Text><![CDATA[/**
 * profilePointer
 */	
public class J_profilePointer implements Serializable {
	public String name = "";
	private double currentValue = 0;
	private TableFunction tableFunction;
    /**
     * Default constructor
     */
    public J_profilePointer(String name, TableFunction tableFunction) {
    	this.name = name;
    	this.tableFunction = tableFunction;
    }

    public void updateValue(double t_h) {
    	currentValue = tableFunction.get(t_h);
    }
    
    public double getValue() {
    	return currentValue;
    }
    
	@Override
	public String toString() {
		String returnString = "profile " + this.name + " current value: " + this.currentValue;
		return returnString;
		//return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
	</JavaClasses>
	<ModelResources>
		<Resource>
			<Path><![CDATA[AlbatrossProcessedVehicleTrips.xlsx]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[ZeroMath.jar]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
	</ModelResources>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.anylogic.libraries.modules.markup_descriptors]]></LibraryName>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
	<ClassPathEntry>
		<ResourceReference>
			<PackageName><![CDATA[zero_engine]]></PackageName>
			<ClassName><![CDATA[ZeroMath.jar]]></ClassName>
		</ResourceReference>
		<Imported>true</Imported>
		<Folder>false</Folder>
	</ClassPathEntry>
	<CloudModelUuid><![CDATA[f5586290-2a06-4a7c-8c59-bd77840932c3]]></CloudModelUuid>
</Model>
</AnyLogicWorkspace>