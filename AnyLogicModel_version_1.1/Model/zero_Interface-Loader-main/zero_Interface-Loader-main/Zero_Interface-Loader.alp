<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File
*************************************************
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="8.9.1.202408021042" AlpVersion="8.9.1">
<Model>
	<Id>1658477103134</Id>
	<Name><![CDATA[Zero_Interface-Loader]]></Name>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[zerointerfaceloader]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Hour]]></ModelTimeUnit>
	<OptionLists>
		<OptionList>
			<Id>1658478100573</Id>
			<Name><![CDATA[OL_UNUSED1]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
		</OptionList>
		<OptionList>
			<Id>1660743989698</Id>
			<Name><![CDATA[OL_UNUSED2]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
		</OptionList>
		<OptionList>
			<Id>1660743989798</Id>
			<Name><![CDATA[OL_ProjectType]]></Name>
			<Option>
				<Id>1660743990769</Id>
				<Name><![CDATA[BUSINESSPARK]]></Name>
			</Option>
			<Option>
				<Id>1676307694256</Id>
				<Name><![CDATA[RESIDENTIAL]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1667742453792</Id>
			<Name><![CDATA[OL_UNUSED3]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
		</OptionList>
		<OptionList>
			<Id>1675025163072</Id>
			<Name><![CDATA[OL_UNUSED4]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
		</OptionList>
		<OptionList>
			<Id>1709718356700</Id>
			<Name><![CDATA[EnergyDemandTab]]></Name>
			<Option>
				<Id>1709718356702</Id>
				<Name><![CDATA[MOBILITY]]></Name>
			</Option>
			<Option>
				<Id>1709718356704</Id>
				<Name><![CDATA[ELECTRICITY]]></Name>
			</Option>
			<Option>
				<Id>1709718356706</Id>
				<Name><![CDATA[HEAT]]></Name>
			</Option>
			<Option>
				<Id>1714324722851</Id>
				<Name><![CDATA[HUB]]></Name>
			</Option>
			<Option>
				<Id>1721039647716</Id>
				<Name><![CDATA[NFATO]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1726584216672</Id>
			<Name><![CDATA[OL_IsolationLevelHouse]]></Name>
			<Option>
				<Id>1726584216674</Id>
				<Name><![CDATA[A]]></Name>
			</Option>
			<Option>
				<Id>1726584216676</Id>
				<Name><![CDATA[B]]></Name>
			</Option>
			<Option>
				<Id>1726584216678</Id>
				<Name><![CDATA[C]]></Name>
			</Option>
			<Option>
				<Id>1726584216680</Id>
				<Name><![CDATA[D]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1726584216682</Id>
			<Name><![CDATA[OL_SurveyType]]></Name>
			<Option>
				<Id>1726584216684</Id>
				<Name><![CDATA[ZORM]]></Name>
			</Option>
			<Option>
				<Id>1726584216686</Id>
				<Name><![CDATA[EXCEL]]></Name>
			</Option>
			<Option>
				<Id>1726584216688</Id>
				<Name><![CDATA[NONE]]></Name>
			</Option>
		</OptionList>
	</OptionLists>
	
	<Folders>
		
	</Folders>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1658477103140</Id>
			<Name><![CDATA[Zero_Interface]]></Name>
			<Import><![CDATA[import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.NumericNode;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.FileOutputStream;
import java.util.stream.Stream;
import java.util.Dictionary.*;
import java.util.Hashtable.*;
import java.util.*;
import java.util.stream.Collectors;

import java.io.*;
import java.io.File;
import java.io.IOException;
//import java.util.Date;  
import java.text.SimpleDateFormat;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;

//Possibility to turn of traceln
import java.io.OutputStream;
import java.io.PrintStream;

//Curves
import com.anylogic.engine.markup.AbstractCurve;
import com.anylogic.engine.markup.GISMarkupSegment;
import com.anylogic.engine.markup.GISPoint;]]></Import>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1658477103138</Id>
				<Name><![CDATA[1658477103138]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>GIS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>false</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[p_timeStep_h]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1658477103136</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1658477103139</CurrentLevel>
			<ConnectionsId>1658477103135</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1663238634515</Id>
					<Name><![CDATA[v_timeStepsElapsed]]></Name>
					<X>-240</X><Y>890</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759932</Id>
					<Name><![CDATA[v_LVGridColor]]></Name>
					<X>345</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[purple]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759935</Id>
					<Name><![CDATA[v_HVGridColor]]></Name>
					<X>345</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[red]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759938</Id>
					<Name><![CDATA[v_gasGridColor]]></Name>
					<X>345</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[brown]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759945</Id>
					<Name><![CDATA[v_energieLabelAColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>345</X><Y>1165</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[darkGreen]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759948</Id>
					<Name><![CDATA[v_energieLabelBColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>345</X><Y>1185</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[green]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759950</Id>
					<Name><![CDATA[v_energieLabelCColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>345</X><Y>1205</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[yellowGreen]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759953</Id>
					<Name><![CDATA[v_energieLabelDColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>345</X><Y>1225</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[gold]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759955</Id>
					<Name><![CDATA[v_energieLabelEColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>345</X><Y>1245</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[orange]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759958</Id>
					<Name><![CDATA[v_energieLabelFColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>345</X><Y>1265</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[orangeRed]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759961</Id>
					<Name><![CDATA[v_energieLabelOnbekendColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>345</X><Y>1305</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[peru]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759963</Id>
					<Name><![CDATA[v_energieLabelGColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>345</X><Y>1285</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[red]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696837759966</Id>
					<Name><![CDATA[v_MVGridColor]]></Name>
					<X>345</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[steelBlue]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696863329257</Id>
					<Name><![CDATA[v_clickedBuilding]]></Name>
					<X>50</X><Y>1580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[GIS_Object]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696863329260</Id>
					<Name><![CDATA[v_previousClickedBuilding]]></Name>
					<X>50</X><Y>1600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[GIS_Object]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1696863329269</Id>
					<Name><![CDATA[v_gridConnectionInBuildingIndex]]></Name>
					<X>50</X><Y>1630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701164360663</Id>
					<Name><![CDATA[b_resultsUpToDate]]></Name>
					<X>-240</X><Y>920</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701879001472</Id>
					<Name><![CDATA[v_clickedObjectText]]></Name>
					<X>50</X><Y>1650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA["None"]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1701879014361</Id>
					<Name><![CDATA[v_clickedObjectAdress]]></Name>
					<X>50</X><Y>1670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[""]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1702041370471</Id>
					<Name><![CDATA[v_simulationArea1Color]]></Name>
					<X>1310</X><Y>1230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(178, 34, 34, 0)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1702043349202</Id>
					<Name><![CDATA[v_companyBuildingColor]]></Name>
					<X>690</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[teal]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1702043408687</Id>
					<Name><![CDATA[v_detailedCompanyBuildingColor]]></Name>
					<X>690</X><Y>1110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[navy]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1702043479414</Id>
					<Name><![CDATA[v_houseBuildingColor]]></Name>
					<X>690</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(154, 208, 194)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1702043554935</Id>
					<Name><![CDATA[v_restBuildingColor]]></Name>
					<X>690</X><Y>1210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[gainsboro]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1702046920293</Id>
					<Name><![CDATA[v_clickedObjectDetails]]></Name>
					<X>50</X><Y>1690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[""]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704450852556</Id>
					<Name><![CDATA[v_solarParkColor]]></Name>
					<X>690</X><Y>1280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(250, 246, 179, 206)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704463271534</Id>
					<Name><![CDATA[v_selectionColor]]></Name>
					<X>50</X><Y>1740</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[yellow]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1704463281781</Id>
					<Name><![CDATA[v_selectionColorAddBuildings]]></Name>
					<X>50</X><Y>1760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[yellow]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705663820237</Id>
					<Name><![CDATA[v_HVMVNodeColor]]></Name>
					<X>1030</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(253, 223, 134, 206)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705663820239</Id>
					<Name><![CDATA[v_HVMVLineColor]]></Name>
					<X>1030</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[navy]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705663820242</Id>
					<Name><![CDATA[v_gridNodeColor_klant]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1030</X><Y>1390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[orange]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705663820244</Id>
					<Name><![CDATA[v_gridNodeColor_net]]></Name>
					<X>1030</X><Y>1370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[red]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705664070254</Id>
					<Name><![CDATA[v_solarParkLineColor]]></Name>
					<X>690</X><Y>1300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[gold]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705664575869</Id>
					<Name><![CDATA[v_electrolyserColor]]></Name>
					<X>690</X><Y>1415</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(33, 164, 195)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705664587285</Id>
					<Name><![CDATA[v_chargingStationColor]]></Name>
					<X>690</X><Y>1460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[cyan]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705668042403</Id>
					<Name><![CDATA[v_antiLayerColor]]></Name>
					<X>1310</X><Y>1210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(64, 64, 64, 65)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705668569794</Id>
					<Name><![CDATA[v_electrolyserLineColor]]></Name>
					<X>690</X><Y>1435</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[navy]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705668590932</Id>
					<Name><![CDATA[v_chargingStationLineColor]]></Name>
					<X>690</X><Y>1480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[darkBlue]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705673181898</Id>
					<Name><![CDATA[v_clickedGridNode]]></Name>
					<X>50</X><Y>1530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[GridNode]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705673647104</Id>
					<Name><![CDATA[v_previousClickedObjectType]]></Name>
					<X>50</X><Y>1500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_GISObjectType]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705673714784</Id>
					<Name><![CDATA[v_previousClickedGridNode]]></Name>
					<X>50</X><Y>1550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[GridNode]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705967311665</Id>
					<Name><![CDATA[v_simulationArea1LineColor]]></Name>
					<X>1310</X><Y>1250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[dimGray]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705967344378</Id>
					<Name><![CDATA[v_simulationArea2Color]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1310</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(178, 34, 34, 0)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705967344381</Id>
					<Name><![CDATA[v_simulationArea2LineColor]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1310</X><Y>1290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[dimGray]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706003981173</Id>
					<Name><![CDATA[v_isViewAreaMenuVisible]]></Name>
					<X>1312</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706003981175</Id>
					<Name><![CDATA[v_menuFrameColor]]></Name>
					<X>1312</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color (226,0,37,180)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706892713276</Id>
					<Name><![CDATA[GISregion_antiLaag]]></Name>
					<X>50</X><Y>1710</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[GISRegion]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706990909665</Id>
					<Name><![CDATA[v_themeColor]]></Name>
					<X>1312</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(208, 208, 245)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1706990958029</Id>
					<Name><![CDATA[v_backgroundColor]]></Name>
					<X>1312</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[(new Color(208, 208, 245)).brighter()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1707918668189</Id>
					<Name><![CDATA[v_clickedObjectType]]></Name>
					<X>50</X><Y>1480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[OL_GISObjectType]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708597346305</Id>
					<Name><![CDATA[v_connectionOwnerIndexNr]]></Name>
					<X>50</X><Y>1450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1709803708318</Id>
					<Name><![CDATA[v_gridNodeFeedinColor]]></Name>
					<X>50</X><Y>1780</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[orange]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1710162245199</Id>
					<Name><![CDATA[v_batteryColor]]></Name>
					<X>690</X><Y>1370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[green.darker()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1710162245201</Id>
					<Name><![CDATA[v_batteryLineColor]]></Name>
					<X>690</X><Y>1390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[green]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1710166484674</Id>
					<Name><![CDATA[v_windFarmColor]]></Name>
					<X>690</X><Y>1325</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[white]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1710166484676</Id>
					<Name><![CDATA[v_windFarmLineColor]]></Name>
					<X>690</X><Y>1345</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[black]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714137967101</Id>
					<Name><![CDATA[v_MVLVNodeColor]]></Name>
					<X>1030</X><Y>1200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[green]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714137970406</Id>
					<Name><![CDATA[v_MVLVLineColor]]></Name>
					<X>1030</X><Y>1220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[green.brighter()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714137978358</Id>
					<Name><![CDATA[v_gridNodeColorStrained]]></Name>
					<X>1030</X><Y>1275</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[orange]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714137980262</Id>
					<Name><![CDATA[v_gridNodeLineColorStrained]]></Name>
					<X>1030</X><Y>1295</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[orange.brighter()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714137982277</Id>
					<Name><![CDATA[v_gridNodeColorCongested]]></Name>
					<X>1030</X><Y>1320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[red]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714137984157</Id>
					<Name><![CDATA[v_gridLineColorCongested]]></Name>
					<X>1030</X><Y>1340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[red.brighter()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718264413499</Id>
					<Name><![CDATA[v_unknownConsumptionColor]]></Name>
					<X>345</X><Y>1145</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[white]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1718567214780</Id>
					<Name><![CDATA[b_updateCongestionColors]]></Name>
					<X>1030</X><Y>1420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719311576065</Id>
					<Name><![CDATA[v_newChargingStationColor]]></Name>
					<X>690</X><Y>1550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(173, 255, 47, 156)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719311576067</Id>
					<Name><![CDATA[v_newChargingStationLineColor]]></Name>
					<X>690</X><Y>1570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[green]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719830571563</Id>
					<Name><![CDATA[v_outsideTemperature]]></Name>
					<X>1240</X><Y>-260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719830581855</Id>
					<Name><![CDATA[v_solarIrradiance]]></Name>
					<X>1240</X><Y>-240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1719830591551</Id>
					<Name><![CDATA[v_windspeed]]></Name>
					<X>1240</X><Y>-220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720905248678</Id>
					<Name><![CDATA[v_selectedGridConnectionIndex]]></Name>
					<X>940</X><Y>-130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1720905365617</Id>
					<Name><![CDATA[v_nbGridConnectionsInSelectedBuilding]]></Name>
					<X>940</X><Y>-110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721290478430</Id>
					<Name><![CDATA[b_multiSelect]]></Name>
					<X>70</X><Y>1240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721652532124</Id>
					<Name><![CDATA[v_companyBuildingLineColor]]></Name>
					<X>690</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[black]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721652543732</Id>
					<Name><![CDATA[v_detailedCompanyBuildingLineColor]]></Name>
					<X>690</X><Y>1130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[black]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721652554195</Id>
					<Name><![CDATA[v_houseBuildingLineColor]]></Name>
					<X>690</X><Y>1180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[black]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721652564323</Id>
					<Name><![CDATA[v_restBuildingLineColor]]></Name>
					<X>690</X><Y>1230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721729327873</Id>
					<Name><![CDATA[v_parcelColor]]></Name>
					<X>690</X><Y>1600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[white]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721729331151</Id>
					<Name><![CDATA[v_parcelLineColor]]></Name>
					<X>690</X><Y>1620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[black]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721996776514</Id>
					<Name><![CDATA[v_MVMVNodeColor]]></Name>
					<X>1030</X><Y>1130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(253, 223, 134, 206)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721996776516</Id>
					<Name><![CDATA[v_MVMVLineColor]]></Name>
					<X>1030</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[navy]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721998215865</Id>
					<Name><![CDATA[v_HVMVNodeSize]]></Name>
					<X>1030</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[100]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721998236233</Id>
					<Name><![CDATA[v_MVMVNodeSize]]></Name>
					<X>1030</X><Y>1170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[50]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1721998240384</Id>
					<Name><![CDATA[v_MVLVNodeSize]]></Name>
					<X>1030</X><Y>1240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725018118872</Id>
					<Name><![CDATA[b_showCables]]></Name>
					<X>50</X><Y>1860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726752465730</Id>
					<Name><![CDATA[v_chargingStationColor_centre]]></Name>
					<X>690</X><Y>1500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[purple]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726752465732</Id>
					<Name><![CDATA[v_chargingStationLineColor_centre]]></Name>
					<X>690</X><Y>1520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(48, 25, 52)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1715858732720</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>-240</X><Y>950</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[EnergyModel]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1715858732718</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1715867611441</Id>
					<Name><![CDATA[map_centre_latitude]]></Name>
					<X>-280</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1715867611439</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1715867648777</Id>
					<Name><![CDATA[map_centre_longitude]]></Name>
					<X>-280</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1715867648775</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1724757837316</Id>
					<Name><![CDATA[p_selectedProjectType]]></Name>
					<X>-280</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_ProjectType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1724757837314</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1727251571552</Id>
					<Name><![CDATA[settings]]></Name>
					<X>-280</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Settings]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1727251571550</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1705660898756</Id>
					<Name><![CDATA[c_GISNodes]]></Name>
					<X>50</X><Y>1360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GISRegion]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1707918668146</Id>
					<Name><![CDATA[c_GISPoints]]></Name>
					<X>50</X><Y>1300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GISPoint]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1707918668148</Id>
					<Name><![CDATA[c_GISRegions]]></Name>
					<X>50</X><Y>1320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GISRegion]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1707918668154</Id>
					<Name><![CDATA[c_GISBuildingShapes]]></Name>
					<X>50</X><Y>1340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GISRegion]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1709552799968</Id>
					<Name><![CDATA[c_companyUIs]]></Name>
					<X>-240</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[UI_company]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1713429665418</Id>
					<Name><![CDATA[c_scenarioMap_Future]]></Name>
					<X>-280</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[J_scenario_Future]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1713874283959</Id>
					<Name><![CDATA[c_scenarioMap_Current]]></Name>
					<X>-280</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[J_scenario_Current]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1715178022675</Id>
					<Name><![CDATA[c_orderedVehicles]]></Name>
					<X>68</X><Y>-570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EA]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1715183417595</Id>
					<Name><![CDATA[c_orderedHeatingSystemsCompanies]]></Name>
					<X>68</X><Y>-545</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1715183423011</Id>
					<Name><![CDATA[c_orderedPVSystems]]></Name>
					<X>68</X><Y>-590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1719176257019</Id>
					<Name><![CDATA[c_orderedHeatingSystemsHouses]]></Name>
					<X>68</X><Y>-525</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1720174179054</Id>
					<Name><![CDATA[c_orderedHousesPrivateParking]]></Name>
					<X>70</X><Y>-490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1720174197464</Id>
					<Name><![CDATA[c_orderedHousesPublicParking]]></Name>
					<X>70</X><Y>-470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1720376141906</Id>
					<Name><![CDATA[c_activePublicChargers]]></Name>
					<X>70</X><Y>-400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GCPublicCharger]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1720376165741</Id>
					<Name><![CDATA[c_inactivePublicChargers]]></Name>
					<X>70</X><Y>-380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GCPublicCharger]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1720376624239</Id>
					<Name><![CDATA[c_fixedPublicChargers]]></Name>
					<X>70</X><Y>-420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1722344496313</Id>
					<Name><![CDATA[c_GISNetplanes]]></Name>
					<X>50</X><Y>1820</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[GIS_Object]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1721302080638</Id>
					<Name><![CDATA[c_selectedGridConnections]]></Name>
					<X>50</X><Y>1270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1725270790750</Id>
					<Name><![CDATA[c_GISNetworks]]></Name>
					<X>50</X><Y>1380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GISNetwork]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1725276677836</Id>
					<Name><![CDATA[c_LVCables]]></Name>
					<X>50</X><Y>1400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GISRoute]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1725276688077</Id>
					<Name><![CDATA[c_MVCables]]></Name>
					<X>50</X><Y>1420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GISRoute]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1658497469833</Id>
					<Name><![CDATA[e_calculateEnergyBalance]]></Name>
					<Description><![CDATA[Trigger voor energieberekeningen in de model backbone. Volgorde is belangrijk voor consistente resultaten.

@since: Sprint 6
@author: Jorrit]]></Description>
					<X>-240</X><Y>870</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1/p_timeStep_h]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_HOUR]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1658563200000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[0]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[energyModel.p_timeStep_h]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[if (v_timeStepsElapsed <= 1) {
	f_setStartView();
}
// Trigger timestep in energymodel for continuous simulation ('interactive mode')
energyModel.f_runTimestep();
v_timeStepsElapsed ++;

// This function colors the trafos according to the amount of congestion. (maybe move this function call somewhere else?)
if ( b_updateCongestionColors ){
	for (GridNode gn : energyModel.pop_gridNodes) {
		if (v_clickedObjectType != OL_GISObjectType.GRIDNODE || v_clickedGridNode != gn) {
			f_setGridNodeCongestionColor( gn );
		}
	}
}

// Update the live plot dataset of gcList
if (c_selectedGridConnections.size() > 0) {
	f_addTimeStepLiveDataSets(uI_Results.v_gridConnection, c_selectedGridConnections);
	
	if (p_selectedProjectType == OL_ProjectType.BUSINESSPARK) {
		if (b_multiSelect && c_selectedGridConnections.size() > 1) {
			for (int i = 0; i < c_selectedGridConnections.size(); i++) {
				f_addTimeStepLiveDataSets(uI_Results.c_individualGridConnections.get(i), new ArrayList<GridConnection>(c_selectedGridConnections.subList(i, i+1)));
			}
			f_addTimeStepTotalLiveDataSets();
		}
	}
}

f_getWeatherInfo();]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1696837759921</Id>
					<Name><![CDATA[f_setLegendaColors]]></Name>
					<X>1350</X><Y>1650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/*
if (ra_legendaOptions.getValue() == 0){
	gr_heatDemandLegenda.setVisible(true);
	gr_heatSupplyLegenda.setVisible(false);
	
	for (GIS_Building b : energyModel.pop_GIS_Buildings){	
		f_setColorToEnergyLabels(b);
	}
	
}
else if (ra_legendaOptions.getValue() == 1){
	gr_heatDemandLegenda.setVisible(false);
	gr_heatSupplyLegenda.setVisible(true);
	
	for (GIS_Building b : energyModel.pop_GIS_Buildings){	
		//b.f_countHeatSystems();
		//b.f_setColorToHeatSupplyMethod();
	}
	
}
*/


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1696837759924</Id>
					<Name><![CDATA[f_setColorToEnergyLabels]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1350</X><Y>1620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[b]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[if (b.gisRegion != null){
	if (indexOfMax(b.ar_countEnergyLabels) < 4){
		b.gisRegion.setFillColor(v_energieLabelAColor);
	}
	else if (indexOfMax(b.ar_countEnergyLabels) == 4){
		b.gisRegion.setFillColor(v_energieLabelBColor);
	}
	else if (indexOfMax(b.ar_countEnergyLabels) == 5){
		b.gisRegion.setFillColor(v_energieLabelCColor);
	}
	else if (indexOfMax(b.ar_countEnergyLabels) == 6){
		b.gisRegion.setFillColor(v_energieLabelDColor);
	}
	else if (indexOfMax(b.ar_countEnergyLabels) == 7){
		b.gisRegion.setFillColor(v_energieLabelEColor);
	}
	else if (indexOfMax(b.ar_countEnergyLabels) == 8){
		b.gisRegion.setFillColor(v_energieLabelFColor);
	}
	else if (indexOfMax(b.ar_countEnergyLabels) == 9){
		b.gisRegion.setFillColor(v_energieLabelGColor);
	}
	else if (indexOfMax(b.ar_countEnergyLabels) == 10){
		b.gisRegion.setFillColor(v_energieLabelOnbekendColor);
	}
	else {
		b.gisRegion.setFillColor(black);
	}
}


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1696863329251</Id>
					<Name><![CDATA[f_selectGISRegion]]></Name>
					<Description><![CDATA[Function that selects gisregions after click on the map]]></Description>
					<X>50</X><Y>1060</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[clickx]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[clicky]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//After a click, reset previous clicked building/gridNode colors and text
v_previousClickedObjectType = v_clickedObjectType;
ArrayList<GIS_Object> buildingsConnectedToSelectedBuildingsList = new ArrayList<>();
c_selectedGridConnections = new ArrayList();

//Deselect previous selection
if( v_previousClickedObjectType != null){
	f_deselectPreviousSelect();
}

//Check if click was on Gridnode, if yes, select grid node
for ( GridNode GN : energyModel.pop_gridNodes ){
	if( GN.gisRegion != null && GN.gisRegion.contains(clickx, clicky) ){
		f_selectGridNode(GN);
		uI_Results.v_selectedObjectType = OL_GISObjectType.GRIDNODE;
		uI_Results.f_showCorrectChart();
		return;
	}
}

//Check if click was on Building, if yes, select grid building
for ( GIS_Building b : energyModel.pop_GIS_Buildings ){
	if( b.gisRegion != null && b.gisRegion.contains(clickx, clicky) ){
		if (b.gisRegion.isVisible()) { //only allow us to click on visible objects
			if (b.c_containedGridConnections.size() > 0 ) { // only allow buildings with gridconnections
				buildingsConnectedToSelectedBuildingsList = b.c_containedGridConnections.get(0).c_connectedGISObjects; // Find buildings powered by the same GC as the clicked building
				f_selectBuilding(b, buildingsConnectedToSelectedBuildingsList);
				uI_Results.v_selectedObjectType = OL_GISObjectType.BUILDING;
				uI_Results.f_showCorrectChart();
				return;
			}
		}
	}
}

//Check if click was on remaining objects such as chargers, solarfields, parcels: if yes, select object
for ( GIS_Object GISobject : energyModel.pop_GIS_Objects ){
	if( GISobject.gisRegion != null && GISobject.gisRegion.contains(clickx, clicky) ) {
		if (GISobject.gisRegion.isVisible()) { //only allow us to click on visible objects
			if (GISobject.c_containedGridConnections.size() > 0 ) { // only allow objects with gridconnections
				
				// Find buildings powered by the same GC as the clicked object
				buildingsConnectedToSelectedBuildingsList = GISobject.c_containedGridConnections.get(0).c_connectedGISObjects; 
				
				//Find the (first) connected GC in the object
				GridConnection selectedGC = GISobject.c_containedGridConnections.get(0);
				
				//Set the selected GIS object type
				v_clickedObjectType = GISobject.p_GISObjectType;
				v_clickedBuilding = GISobject;
				
				//Set the correct interface view for each object type
				switch(v_clickedObjectType){
				
				case CHARGER:
					f_selectCharger((GCPublicCharger)selectedGC, GISobject );
					break;
				
					
				default:
					buildingsConnectedToSelectedBuildingsList = GISobject.c_containedGridConnections.get(0).c_connectedGISObjects; // Find buildings powered by the same GC as the clicked building
					f_selectBuilding(GISobject, buildingsConnectedToSelectedBuildingsList);		
					break;
				}
				
				uI_Results.v_selectedObjectType = v_clickedObjectType;				
				uI_Results.f_showCorrectChart();
				return;
			}
		}
	}
}

//Still no clicked object? :select basic region
v_clickedObjectType = OL_GISObjectType.REGION;
uI_Results.v_selectedObjectType = OL_GISObjectType.REGION;
uI_Results.f_showCorrectChart();]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1702045084338</Id>
					<Name><![CDATA[f_styleAreas]]></Name>
					<X>-670</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gis_area]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[double width = 1;

if (gis_area instanceof GIS_Parcel ||
	gis_area.c_containedGridConnections.size() == 0 ||
	gis_area.c_containedGridConnections.get(0) instanceof GCPublicCharger ) {
	// Parcels, Chargers and GIS Objects without GCs are always the default color
	gis_area.f_style(null, null, null, null);
	return;
}

switch(rb_buildingColors.getValue()) {
	case 0:
		gis_area.f_style(null, null, null, null);
		break;
	case 1:
		if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL) {
			f_setColorsBasedOnConsumpionProfileHouseholds(gis_area);
		}
		else {
			f_setColorsBasedOnConsumpion(gis_area);
		}
		break;
	case 2:
		if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL) {
			f_setColorsBasedOnProductionHouseholds(gis_area);
		}
		else {
			f_setColorsBasedOnProduction(gis_area);
		}
		break;
	case 3:
		f_setColorsBasedOnGridTopology_objects(gis_area);
		break;
	case 4:
		break;
	default:
		break;
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1702385530773</Id>
					<Name><![CDATA[f_styleSimulationAreas]]></Name>
					<X>-670</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[GISRegion gisregion = area.gisRegion; 

switch( area.p_GISObjectType ) {
	case ANTI_LAYER:
		gisregion.setVisible(true);	
		gisregion.setLineStyle( LINE_STYLE_SOLID );
		gisregion.setLineWidth( 0);
		gisregion.setLineColor( v_antiLayerColor );
		gisregion.setFillColor( v_antiLayerColor );
		GISregion_antiLaag = gisregion;

	break;
	
	default:
		gisregion.setVisible(true);	
		gisregion.setLineColor( v_simulationArea1LineColor );
		gisregion.setLineStyle( LINE_STYLE_SOLID );
		gisregion.setLineWidth( 1);
		gisregion.setFillColor( v_simulationArea1Color );
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705499586056</Id>
					<Name><![CDATA[f_styleGridNodes]]></Name>
					<X>-670</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GN]]></Name>
						<Type><![CDATA[GridNode]]></Type>
					</Parameter>
					<Body><![CDATA[switch(rb_buildingColors.getValue()) {
	case 0:
	case 1:
	case 2:
	case 4:
		switch( GN.p_nodeType ) {
			case MVLV:
				f_styleMVLV(GN.gisRegion);
				break;
			case SUBMV:
				f_styleSUBMV(GN.gisRegion);
				break;
			case MVMV:
				f_styleMVMV(GN.gisRegion);
				break;
			case HVMV:
				f_styleHVMV(GN.gisRegion);
				break;
			case HT:
				
				break;
			case MT:
				
				break;
			case LT:
				
				break;
			default:
		}
		break;
	case 3:
		f_setColorsBasedOnGridTopology_gridnodes(GN);
		break;

	default:
		break;
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705505495599</Id>
					<Name><![CDATA[f_styleMVLV]]></Name>
					<X>-650</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gisregion]]></Name>
						<Type><![CDATA[GISRegion]]></Type>
					</Parameter>
					<Body><![CDATA[gisregion.setLineStyle( LINE_STYLE_SOLID );
gisregion.setLineColor( v_gridNodeColor_net.brighter() );
gisregion.setLineWidth(2);		

/*
switch( klant_net_station ) {
		case "Klantstation":
			gisregion.setFillColor(v_gridNodeColor_klant);
		break;
		case "Klantstation met medegebr":
			gisregion.setFillColor(v_gridNodeColor_klant);
		break;
		case "Netstation":
			gisregion.setFillColor(v_gridNodeColor_net);
		break;
		case "Transportverdeelstation":
			gisregion.setFillColor(v_gridNodeColor_net);;	
		break;
		case "Hoofdstation":
			gisregion.setFillColor(v_gridNodeColor_net);
		break;
		default:
			gisregion.setFillColor(v_gridNodeColor_net);
}
*/

gisregion.setFillColor(v_gridNodeColor_net);

/*
if ( nodeStatus != null && nodeStatus.equals("x")){
	gisregion.setFillColor(new Color(239,204,211,90));
	gisregion.setLineColor(new Color(0,0,0,0));
}
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705505509120</Id>
					<Name><![CDATA[f_styleHVMV]]></Name>
					<X>-650</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gisregion]]></Name>
						<Type><![CDATA[GISRegion]]></Type>
					</Parameter>
					<Body><![CDATA[gisregion.setFillColor(new Color(253, 223, 134, 206));
gisregion.setLineStyle( LINE_STYLE_SOLID );
gisregion.setLineColor( navy );
gisregion.setLineWidth(2);]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705925024602</Id>
					<Name><![CDATA[f_setUITabs]]></Name>
					<X>-280</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// CHOOSE WHICH TABS YOU WANT TO BE ABLE TO SHOW FOR YOUR PROJECT 
// (OVERRIDE FUNCTION IN CHILD IF YOU WANT OTHER THAN DEFAULT)

// Adding the (child) tabs to the tabArea population

// If you use an extension of a tab, you must update the pointer to the instance of the interface
// Something like: tabElectricity.zero_Interface = loader_Project.zero_Interface;
// No update to the pointer is needed for the generic tabs

tabElectricity electricityTab = new tabElectricity();
electricityTab.goToPopulation(uI_Tabs.pop_tabElectricity);

tabHeating heatingTab = new tabHeating();
heatingTab.goToPopulation(uI_Tabs.pop_tabHeating);

tabMobility mobilityTab = new tabMobility();
mobilityTab.goToPopulation(uI_Tabs.pop_tabMobility);

tabEHub EHubTab = new tabEHub();
EHubTab.goToPopulation(uI_Tabs.pop_tabEHub);

// Group visibilities
// When using an extension of a generic tab don't forget to typecast it!
((tabElectricity)uI_Tabs.pop_tabElectricity.get(0)).getGroupElectricityDemandSliders().setVisible(true);
((tabHeating)uI_Tabs.pop_tabHeating.get(0)).getGroupHeatDemandSlidersCompanies().setVisible(true);
((tabMobility)uI_Tabs.pop_tabMobility.get(0)).getGroupMobilityDemandSliders().setVisible(true);
((tabEHub)uI_Tabs.pop_tabEHub.get(0)).getGroupHubSliders().setVisible(true);

uI_Tabs.f_showCorrectTab();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1707918668161</Id>
					<Name><![CDATA[f_selectGridNode]]></Name>
					<X>70</X><Y>1100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GN]]></Name>
						<Type><![CDATA[GridNode]]></Type>
					</Parameter>
					<Body><![CDATA[v_clickedGridNode = GN;
v_clickedObjectType = OL_GISObjectType.GRIDNODE;

// Set info text
if ( GN.p_realCapacityAvailable ) {
	v_clickedObjectText = GN.p_nodeType + "-station, " + Integer.toString( ((int)GN.p_capacity_kW) ) + " kW, ID: " + GN.p_gridNodeID + ", aansluitingen: " + GN.f_getConnectedGridConnections().size() + ", Type station: " + GN.p_description;
}
else {
	v_clickedObjectText =  GN.p_nodeType + "-station, " + Integer.toString( ((int)GN.p_capacity_kW) ) + " kW (ingeschat), ID: " + GN.p_gridNodeID + ", aansluitingen: " + GN.f_getConnectedGridConnections().size() + ", Type station: " + GN.p_description;
}

v_clickedObjectAdress = "";
v_clickedObjectDetails = "Type station:\t" + GN.p_description;


// Color the GridNode
GN.gisRegion.setFillColor( v_selectionColor );
GN.gisRegion.setLineColor( orange );

// Color the connected GridConnections
for ( GridConnection GC : GN.f_getConnectedGridConnections()){
	if (GC.c_connectedGISObjects.size() == 0){
		traceln("Gridconnection with ID " + GC.p_ownerID + " and index " + GC.getIndex() + " has no GIS building");
	}
	else {
		GC.c_connectedGISObjects.forEach(gb -> gb.f_style(v_gridNodeFeedinColor, v_gridNodeFeedinColor, 2.0, null));
	}
}

f_updateUIresultsGridNode(uI_Results.v_trafo, GN);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1707918668163</Id>
					<Name><![CDATA[f_selectBuilding]]></Name>
					<X>70</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[b]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[buildingsConnectedToSelectedBuilding_list]]></Name>
						<Type><![CDATA[ArrayList<GIS_Object>]]></Type>
					</Parameter>
					<Body><![CDATA[v_clickedBuilding = b;
v_clickedObjectType = b.p_GISObjectType;

// Color all buildings of the GridConnection associated with the selected building
if (!v_clickedBuilding.c_containedGridConnections.get(0).p_ownerID.equals("-") && !v_clickedBuilding.c_containedGridConnections.get(0).p_ownerID.contains("woonfunctie") && !v_clickedBuilding.c_containedGridConnections.get(0).p_ownerID.contains("Onbekend")){
	for (GIS_Object obj : buildingsConnectedToSelectedBuilding_list) { //Buildings that are grouped, select as well.
		obj.gisRegion.setFillColor(v_selectionColorAddBuildings);
	}
}

//Check the amount of GC in building
v_nbGridConnectionsInSelectedBuilding = b.c_containedGridConnections.size();

//Multiple GC in building: set additional adress in building info + buttons
if ( v_nbGridConnectionsInSelectedBuilding > 1 ){
	v_clickedObjectText = "Pand met " + b.c_containedGridConnections.size() + " adressen: " + b.p_id;
	gr_multipleBuildingInfo.setVisible(true);
}
else {
	String text = "";
	if (p_selectedProjectType == OL_ProjectType.BUSINESSPARK) {
		if (b instanceof GIS_Building) {
			text = ((GIS_Building)b).p_annotation + ", ";
		}
		else {
			text = b.p_id + ", ";
		}
	}
	
	//Set adres text
	if (v_clickedBuilding.c_containedGridConnections.get(0).p_address == null || v_clickedBuilding.c_containedGridConnections.get(0).p_address.getAddress() == null) {
		text = text + "Onbekend adres";
	}
	else {
		text = text + v_clickedBuilding.c_containedGridConnections.get(0).p_address.getAddress();
	}
	
	v_clickedObjectText = text;
	gr_multipleBuildingInfo.setVisible(false);
}



//Update the resultsUI
f_updateUIResultsData();

//Set the button for going to the company UI (needs to be at the end of this function!)
f_setUIButton();

//alle panden met meerdere adressen hebben op dit moment (16-7-24) dezelfde functie(s) voor ieder adres, dus dit is op dit moment zinloos
//f_listFunctions();
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1707918668165</Id>
					<Name><![CDATA[f_deselectPreviousSelect]]></Name>
					<X>70</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Update for results_ui when deselecting objects to show entire area again as default option
v_clickedObjectText = "None";
v_clickedObjectAdress = "";
v_clickedObjectDetails = "";
v_clickedObjectType = null;
button_goToUI.setVisible(false);

// We restore the colors of what we clicked on before
if (v_previousClickedObjectType == OL_GISObjectType.GRIDNODE){
	v_previousClickedGridNode = v_clickedGridNode;
	f_styleGridNodes(v_clickedGridNode);
	for ( Agent agent : v_previousClickedGridNode.f_getConnectedGridConnections()){	
		if (agent instanceof GridConnection) {
			GridConnection GC = (GridConnection)agent;
			for (GIS_Object a : GC.c_connectedGISObjects) {
				f_styleAreas(a);
			}
		}
	}
}
else if (v_previousClickedObjectType == OL_GISObjectType.BUILDING ||
		 v_previousClickedObjectType == OL_GISObjectType.SOLARFARM ||
		 v_previousClickedObjectType == OL_GISObjectType.WINDFARM ||
		 v_previousClickedObjectType == OL_GISObjectType.ELECTROLYSER ||
		 v_previousClickedObjectType == OL_GISObjectType.BATTERY ||
		 v_previousClickedObjectType == OL_GISObjectType.CHARGER){
	
	v_previousClickedBuilding = v_clickedBuilding;

	for (GridConnection gc : v_previousClickedBuilding.c_containedGridConnections) {
		for (GIS_Object a : gc.c_connectedGISObjects) {
			f_styleAreas(a);
		}
	}
}

/*
else if( v_previousClickedObjectType == OL_GISObjectType.CHARGER){
	v_previousClickedCharger = v_clickedCharger;
	f_styleAreas(v_previousClickedCharger.c_connectedGISObjects.get(0));
}
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708595258540</Id>
					<Name><![CDATA[f_createPrivateCompanyUI]]></Name>
					<Description><![CDATA[function used to create the private ui for each company]]></Description>
					<X>-260</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int i = 0;

//Create list of connection owners companies
List<ConnectionOwner> c_COCompanies = findAll(energyModel.pop_connectionOwners, p -> p.p_connectionOwnerType == OL_ConnectionOwnerType.COMPANY); 

// Give every connection owner an index nr, used to navigate to the correct private ui using the button.
while (i < c_COCompanies.size()){

	ConnectionOwner CO = c_COCompanies.get(i);
		
	CO.p_connectionOwnerIndexNr = i;
	i++;
}

//Create the private ui for every connection owner
while (v_connectionOwnerIndexNr < c_COCompanies.size()){
	
	UI_company companyUI = add_ui_companies();
	ConnectionOwner COC = findFirst(c_COCompanies, p -> p.p_connectionOwnerIndexNr == v_connectionOwnerIndexNr );	
	
	////Set unique parameters for every company_ui
	companyUI.p_company = COC;
	companyUI.p_companyName = COC.p_actorID;
	companyUI.p_amountOfGC = COC.f_getOwnedGridConnections().size();

	
	//Links with engine
	companyUI.c_ownedGridConnections = COC.f_getOwnedGridConnections();
	for (GridConnection GC : companyUI.c_ownedGridConnections) {
		companyUI.c_ownedBuildings.addAll(GC.c_connectedGISObjects);
	}
	companyUI.p_amountOfBuildings = companyUI.c_ownedBuildings.size();
	companyUI.c_subTenants = COC.c_subTenants;
	
	//Initialize adress variable (changes with selected GC)
	companyUI.v_adressGC = companyUI.c_ownedGridConnections.get(0).p_address.getAddress();
	
	//Set annotation as company name, if its a generic company (otherwise potentially the addres_id name)
	if(!COC.p_detailedCompany){
		if(companyUI.c_ownedBuildings.get(0).p_annotation != null){
			companyUI.p_companyName = companyUI.c_ownedBuildings.get(0).p_annotation;
		}
	}
	
	//Add connected trafos for each GC
	for (int j = 0; j < companyUI.c_ownedGridConnections.size() ; j++){
		companyUI.c_connectedTrafos.add(COC.f_getOwnedGridConnections().get(j).p_parentNodeElectricID);
	}
	
	//Add scenario settings for each GC
	for (int k = 0; k < companyUI.c_ownedGridConnections.size() ; k++){
		companyUI.c_scenarioSettings_Current.add(c_scenarioMap_Current.get(companyUI.c_ownedGridConnections.get(k)));
		companyUI.c_scenarioSettings_Future.add(c_scenarioMap_Future.get(companyUI.c_ownedGridConnections.get(k)));
	}

	//Initialize the companyUI
	companyUI.f_initializeCompanyUI();

	//Add to the collection of companyUIs
	c_companyUIs.add( companyUI );
	
	//set boolean for has privateUI in owner: True
	COC.b_hasPrivateUI = true;
	
	v_connectionOwnerIndexNr++;
}

v_connectionOwnerIndexNr = 0;

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1709716821854</Id>
					<Name><![CDATA[f_connectResultsUI]]></Name>
					<X>-670</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set legend settings
uI_Results.p_legendsScope = f_setLegendsScope();

AreaCollection mainArea = uI_Results.add_pop_areaResults(OL_GISObjectType.REGION, "Main");
uI_Results.v_area = mainArea;

//Datasets for live charts
//Demand
mainArea.v_dataPetroleumProductsDemandLiveWeek_kW = energyModel.data_dieselDemand_kW;
mainArea.v_dataNaturalGasDemandLiveWeek_kW = energyModel.data_naturalGasDemand_kW;
mainArea.v_dataHydrogenDemandLiveWeek_kW = energyModel.data_hydrogenDemand_kW;
mainArea.v_dataBaseloadElectricityDemandLiveWeek_kW = energyModel.data_baseloadElectricityDemand_kW;
mainArea.v_dataElectricityForHeatDemandLiveWeek_kW = energyModel.data_heatPumpElectricityDemand_kW;
mainArea.v_dataElectricityForTransportDemandLiveWeek_kW = energyModel.data_electricVehicleDemand_kW;
mainArea.v_dataElectricityForStorageDemandLiveWeek_kW = energyModel.data_batteryCharging_kW;
mainArea.v_dataElectricityForHydrogenDemandLiveWeek_kW = energyModel.data_hydrogenElectricityDemand_kW;

//Supply
mainArea.v_dataWindElectricitySupplyLiveWeek_kW = energyModel.data_windGeneration_kW;
mainArea.v_dataPVElectricitySupplyLiveWeek_kW = energyModel.data_PVGeneration_kW;
mainArea.v_dataStorageElectricitySupplyLiveWeek_kW = energyModel.data_batteryDischarging_kW;
mainArea.v_dataV2GElectricitySupplyLiveWeek_kW = energyModel.data_V2GSupply_kW;
mainArea.v_dataHydrogenSupplyLiveWeek_kW = energyModel.data_hydrogenSupply_kW;

//Datasets for live summerWeek chart
//Demand
//mainArea.v_dataPetroleumProductsDemandSummerWeek_kW = energyModel.data_summerWeekDieselDemand_kW;
//mainArea.v_dataNaturalGasDemandSummerWeek_kW = energyModel.data_summerWeekNaturalGasDemand_kW;
mainArea.v_dataElectricityBaseloadDemandSummerWeek_kW = energyModel.data_summerWeekBaseloadElectricityDemand_kW;
mainArea.v_dataElectricityForHeatDemandSummerWeek_kW = energyModel.data_summerWeekHeatPumpElectricityDemand_kW;
mainArea.v_dataElectricityForTransportDemandSummerWeek_kW = energyModel.data_summerWeekElectricVehicleDemand_kW;
mainArea.v_dataElectricityForStorageDemandSummerWeek_kW = energyModel.data_summerWeekBatteriesDemand_kW;
mainArea.v_dataNaturalGasDemandSummerWeek_kW = energyModel.data_summerWeekNaturalGasDemand_kW;
mainArea.v_dataPetroleumProductsDemandSummerWeek_kW = energyModel.data_summerWeekDieselDemand_kW;
mainArea.v_dataElectricityForHydrogenDemandSummerWeek_kW = energyModel.data_summerWeekHydrogenDemand_kW;

//Supply
mainArea.v_dataElectricityWindSupplySummerWeek_kW = energyModel.data_summerWeekWindGeneration_kW;
mainArea.v_dataElectricityPVSupplySummerWeek_kW = energyModel.data_summerWeekPVGeneration_kW;
mainArea.v_dataElectricityStorageSupplySummerWeek_kW = energyModel.data_summerWeekBatteriesSupply_kW;
mainArea.v_dataElectricityV2GSupplySummerWeek_kW = energyModel.data_summerWeekV2GSupply_kW;
mainArea.v_dataHydrogenSupplySummerWeek_kW = energyModel.data_summerWeekHydrogenSupply_kW;
//mainArea.v_dataPetroleumProductsSupplySummerWeek_MWh
//District heating

mainArea.v_dataNetLoadSummerWeek_kW = energyModel.data_summerWeekNetLoad_kW;
mainArea.v_dataElectricityDemandCapacitySummerWeek_kW.add(energyModel.p_startHourSummerWeek, energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
mainArea.v_dataElectricityDemandCapacitySummerWeek_kW.add(energyModel.p_startHourSummerWeek + 7*24, energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
mainArea.v_dataElectricitySupplyCapacitySummerWeek_kW.add(energyModel.p_startHourSummerWeek, -energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
mainArea.v_dataElectricitySupplyCapacitySummerWeek_kW.add(energyModel.p_startHourSummerWeek + 7*24, -energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);


//Datasets for live winterWeek chart
//Demand
//mainArea.v_dataPetroleumProductsDemandWinterWeek_kW = energyModel.data_winterWeekDieselDemand_kW;
//mainArea.v_dataNaturalGasDemandWinterWeek_kW = energyModel.data_winterWeekNaturalGasDemand_kW;
mainArea.v_dataElectricityBaseloadDemandWinterWeek_kW = energyModel.data_winterWeekBaseloadElectricityDemand_kW;
mainArea.v_dataElectricityForHeatDemandWinterWeek_kW = energyModel.data_winterWeekHeatPumpElectricityDemand_kW;
mainArea.v_dataElectricityForTransportDemandWinterWeek_kW = energyModel.data_winterWeekElectricVehicleDemand_kW;
mainArea.v_dataElectricityForStorageDemandWinterWeek_kW = energyModel.data_winterWeekBatteriesDemand_kW;
mainArea.v_dataNaturalGasDemandWinterWeek_kW = energyModel.data_winterWeekNaturalGasDemand_kW;
mainArea.v_dataPetroleumProductsDemandWinterWeek_kW = energyModel.data_winterWeekDieselDemand_kW;
mainArea.v_dataElectricityForHydrogenDemandWinterWeek_kW = energyModel.data_winterWeekHydrogenDemand_kW;

//Supply
mainArea.v_dataElectricityWindSupplyWinterWeek_kW = energyModel.data_winterWeekWindGeneration_kW;
mainArea.v_dataElectricityPVSupplyWinterWeek_kW = energyModel.data_winterWeekPVGeneration_kW;
mainArea.v_dataElectricityStorageSupplyWinterWeek_kW = energyModel.data_winterWeekBatteriesSupply_kW;
mainArea.v_dataElectricityV2GSupplyWinterWeek_kW = energyModel.data_winterWeekV2GSupply_kW;
mainArea.v_dataHydrogenSupplyWinterWeek_kW = energyModel.data_winterWeekHydrogenSupply_kW;

//mainArea.v_dataPetroleumProductsSupplyWinterWeek_MWh
//District heating

//Datasets for yearly profiles chart
//Demand
mainArea.v_dataElectricityBaseloadDemandYear_kW = energyModel.data_annualBaseloadElectricityDemand_kW;
mainArea.v_dataElectricityForHeatDemandYear_kW = energyModel.data_annualHeatPumpElectricityDemand_kW;
mainArea.v_dataElectricityForTransportDemandYear_kW = energyModel.data_annualElectricVehicleDemand_kW;
mainArea.v_dataElectricityForStorageDemandYear_kW = energyModel.data_annualBatteriesDemand_kW;
mainArea.v_dataNaturalGasDemandYear_kW = energyModel.data_annualNaturalGasDemand_kW;
mainArea.v_dataPetroleumProductsDemandYear_kW = energyModel.data_annualDieselDemand_kW;
mainArea.v_dataElectricityForHydrogenDemandYear_kW = energyModel.data_annualHydrogenDemand_kW;

//Supply
mainArea.v_dataElectricityWindSupplyYear_kW = energyModel.data_annualWindGeneration_kW;
mainArea.v_dataElectricityPVSupplyYear_kW = energyModel.data_annualPVGeneration_kW;
mainArea.v_dataElectricityStorageSupplyYear_kW = energyModel.data_annualBatteriesSupply_kW;
mainArea.v_dataElectricityV2GSupplyYear_kW = energyModel.data_annualV2GSupply_kW;
mainArea.v_dataHydrogenSupplyYear_kW = energyModel.data_annualHydrogenSupply_kW;
//mainArea.v_dataPetroleumProductsSupplyYear_MWh
//District heating

// Data for gespreksleidraad1
mainArea.v_dataElectricityDemandYear_kW = energyModel.data_annualElectricityDemand_kW;
mainArea.v_dataElectricitySupplyYear_kW = energyModel.data_annualElectricitySupply_kW;

//Datasets for netloaddurationcurves
mainArea.v_dataNetbelastingDuurkrommeYear_kW = energyModel.data_netbelastingDuurkromme_kW;
mainArea.v_dataNetbelastingDuurkrommeYearVorige_kW = energyModel.data_netbelastingDuurkrommeVorige_kW;

mainArea.v_dataNetbelastingDuurkrommeSummer_kW = energyModel.data_summerWeekNetbelastingDuurkromme_kW;
mainArea.v_dataNetbelastingDuurkrommeWinter_kW = energyModel.data_winterWeekNetbelastingDuurkromme_kW;
mainArea.v_dataNetbelastingDuurkrommeDaytime_kW = energyModel.data_daytimeNetbelastingDuurkromme_kW;
mainArea.v_dataNetbelastingDuurkrommeNighttime_kW = energyModel.data_nighttimeNetbelastingDuurkromme_kW;
mainArea.v_dataNetbelastingDuurkrommeWeekend_kW = energyModel.data_weekendNetbelastingDuurkromme_kW;
mainArea.v_dataNetbelastingDuurkrommeWeekday_kW = energyModel.data_weekdayNetbelastingDuurkromme_kW;


uI_Results.v_gridConnection = uI_Results.add_pop_areaResults(OL_GISObjectType.BUILDING, "GC");
uI_Results.v_trafo = uI_Results.add_pop_areaResults(OL_GISObjectType.GRIDNODE, "GN");
//uI_Results.v_collective = uI_Results.add_pop_areaResults(AreaTypes.COLLECTIVE);

//uI_Results.energyModel = energyModel;
uI_Results.f_initialize();
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1709716821856</Id>
					<Name><![CDATA[f_updateUIresultsMainArea]]></Name>
					<X>-650</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[AreaCollection area = uI_Results.v_area;

//Previous totals
area.v_previousTotals.setPreviousTotalConsumedEnergy_MWh(area.v_annualTotalConsumedEnergy_MWh);
area.v_previousTotals.setPreviousTotalProducedEnergy_MWh(area.v_annualTotalProducedEnergy_MWh);
area.v_previousTotals.setPreviousSelfConsumedEnergy_MWh(area.v_annualSelfConsumedEnergy_MWh);
area.v_previousTotals.setPreviousImportedEnergy_MWh(area.v_annualImportedEnergy_MWh);
area.v_previousTotals.setPreviousExportedEnergy_MWh(area.v_annualExportedEnergy_MWh);
area.v_previousTotals.setPreviousDistrictHeatingHeatDemand_MWh(area.v_annualDistrictHeatingHeatDemand_MWh);
area.v_previousTotals.setPreviousHeatPumpHeatGeneration_MWh(area.v_annualHeatPumpHeatGeneration_MWh);
area.v_previousTotals.setPreviousNaturalGasDemand_MWh(area.v_annualNaturalGasDemand_MWh);
area.v_previousTotals.setPreviousPetroleumProductsDemand_MWh(area.v_annualPetroleumProductsDemand_MWh);
area.v_previousTotals.setPreviousHydrogenDemand_MWh(area.v_annualHydrogenDemand_MWh);
area.v_previousTotals.setPreviousHydrogenSupply_MWh(area.v_annualHydrogenSupply_MWh);
area.v_previousTotals.setPreviousHeatDemand_MWh(area.v_annualHeatDemand_MWh);
area.v_previousTotals.setPreviousSelfConsumedElectricity_MWh(area.v_annualSelfConsumedElectricity_MWh);
area.v_previousTotals.setPreviousSelfProducedElectricity_MWh(area.v_annualSelfProducedElectricity_MWh);
area.v_previousTotals.setPreviousElectricityImport_MWh(area.v_annualElectricityImport_MWh);
area.v_previousTotals.setPreviousElectricityExport_MWh(area.v_annualElectricityExport_MWh);
area.v_previousTotals.setPreviousElectricityConsumed_MWh(area.v_annualElectricityConsumed_MWh);
area.v_previousTotals.setPreviousElectricityForTransportDemand_MWh(area.v_annualElectricityForTransportDemand_MWh);
area.v_previousTotals.setPreviousHydrogenForTransportDemand_MWh(area.v_annualHydrogenForTransportDemand_MWh);
area.v_previousTotals.setPreviousTransportEnergyDemand_MWh(area.v_annualTransportEnergyDemand_MWh);
area.v_previousTotals.setPreviousWindSupply_MWh(area.v_annualWindSupply_MWh);
area.v_previousTotals.setPreviousWindSupplyRemainingPotential_MWh(area.v_annualWindSupplyRemainingPotential_MWh);
area.v_previousTotals.setPreviousPVSupply_MWh(area.v_annualPVSupply_MWh);
area.v_previousTotals.setPreviousPVSupplyRemainingPotential_MWh(area.v_annualPVSupplyRemainingPotential_MWh);
area.v_previousTotals.setPreviousHeatSupply_MWh(area.v_annualHeatSupply_MWh);
area.v_previousTotals.setPreviousHeatSupplyRemainingPotential_MWh(area.v_annualHeatSupplyRemainingPotential_MWh);
area.v_previousTotals.setPreviousTotalTimeOverloadedTransformers_hr(area.v_totalTimeOverloadedTransformers_h);

// Net Load
area.v_dataNetLoadYear_kW = energyModel.acc_annualElectricityBalance_kW.getTimeSeries();
area.data_gridCapacityDemandYear_kW.add(0, energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.data_gridCapacityDemandYear_kW.add(8760, energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.data_gridCapacitySupplyYear_kW.add(0, -energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.data_gridCapacitySupplyYear_kW.add(8760, -energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);

//Datasets for live charts
//Demand
area.v_dataPetroleumProductsDemandLiveWeek_kW = energyModel.data_dieselDemand_kW;
area.v_dataNaturalGasDemandLiveWeek_kW = energyModel.data_naturalGasDemand_kW;
area.v_dataHydrogenDemandLiveWeek_kW = energyModel.data_hydrogenDemand_kW;
area.v_dataBaseloadElectricityDemandLiveWeek_kW = energyModel.data_baseloadElectricityDemand_kW;
area.v_dataElectricityForHeatDemandLiveWeek_kW = energyModel.data_heatPumpElectricityDemand_kW;
area.v_dataElectricityForTransportDemandLiveWeek_kW = energyModel.data_electricVehicleDemand_kW;
area.v_dataElectricityForStorageDemandLiveWeek_kW = energyModel.data_batteryCharging_kW;
area.v_dataElectricityForHydrogenDemandLiveWeek_kW = energyModel.data_hydrogenElectricityDemand_kW;

//Supply
area.v_dataWindElectricitySupplyLiveWeek_kW = energyModel.data_windGeneration_kW;
area.v_dataPVElectricitySupplyLiveWeek_kW = energyModel.data_PVGeneration_kW;
area.v_dataStorageElectricitySupplyLiveWeek_kW = energyModel.data_batteryDischarging_kW;
area.v_dataV2GElectricitySupplyLiveWeek_kW = energyModel.data_V2GSupply_kW;
area.v_dataHydrogenSupplyLiveWeek_kW = energyModel.data_hydrogenSupply_kW;

//Total
area.v_dataNetLoadLiveWeek_kW = energyModel.data_totalNetLoad_kW;

//Capacity
area.v_dataElectricityDemandCapacityLiveWeek_kW = energyModel.data_gridCapacityDemand_kW;
area.v_dataElectricitySupplyCapacityLiveWeek_kW = energyModel.data_gridCapacitySupply_kW;

//Datasets for live summerWeek chart
//Demand
//area.v_dataPetroleumProductsDemandSummerWeek_kW = energyModel.data_summerWeekDieselDemand_kW;
//area.v_dataNaturalGasDemandSummerWeek_kW = energyModel.data_summerWeekNaturalGasDemand_kW;
area.v_dataElectricityBaseloadDemandSummerWeek_kW = energyModel.data_summerWeekBaseloadElectricityDemand_kW;
area.v_dataElectricityForHeatDemandSummerWeek_kW = energyModel.data_summerWeekHeatPumpElectricityDemand_kW;
area.v_dataElectricityForTransportDemandSummerWeek_kW = energyModel.data_summerWeekElectricVehicleDemand_kW;
area.v_dataElectricityForStorageDemandSummerWeek_kW = energyModel.data_summerWeekBatteriesSupply_kW;
area.v_dataNaturalGasDemandSummerWeek_kW = energyModel.data_summerWeekNaturalGasDemand_kW;
area.v_dataPetroleumProductsDemandSummerWeek_kW = energyModel.data_summerWeekDieselDemand_kW;
area.v_dataElectricityForHydrogenDemandSummerWeek_kW = energyModel.data_summerWeekHydrogenDemand_kW;

//Supply
area.v_dataElectricityWindSupplySummerWeek_kW = energyModel.data_summerWeekWindGeneration_kW;
area.v_dataElectricityPVSupplySummerWeek_kW = energyModel.data_summerWeekPVGeneration_kW;
area.v_dataElectricityStorageSupplySummerWeek_kW = energyModel.data_summerWeekBatteriesSupply_kW;
area.v_dataElectricityV2GSupplySummerWeek_kW = energyModel.data_summerWeekV2GSupply_kW;
area.v_dataHydrogenSupplySummerWeek_kW = energyModel.data_summerWeekHydrogenSupply_kW;
//area.v_dataPetroleumProductsSupplySummerWeek_MWh
//District heating

// Net Load
area.v_dataNetLoadSummerWeek_kW = energyModel.data_summerWeekNetLoad_kW;
area.v_dataElectricityDemandCapacitySummerWeek_kW.add(energyModel.p_startHourSummerWeek, energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.v_dataElectricityDemandCapacitySummerWeek_kW.add(energyModel.p_startHourSummerWeek + 7*24, energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.v_dataElectricitySupplyCapacitySummerWeek_kW.add(energyModel.p_startHourSummerWeek, -energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.v_dataElectricitySupplyCapacitySummerWeek_kW.add(energyModel.p_startHourSummerWeek + 7*24, -energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);

//Datasets for live winterWeek chart
//Demand
//area.v_dataPetroleumProductsDemandWinterWeek_kW = energyModel.data_winterWeekDieselDemand_kW;
//area.v_dataNaturalGasDemandWinterWeek_kW = energyModel.data_winterWeekNaturalGasDemand_kW;
area.v_dataElectricityBaseloadDemandWinterWeek_kW = energyModel.data_winterWeekBaseloadElectricityDemand_kW;
area.v_dataElectricityForHeatDemandWinterWeek_kW = energyModel.data_winterWeekHeatPumpElectricityDemand_kW;
area.v_dataElectricityForTransportDemandWinterWeek_kW = energyModel.data_winterWeekElectricVehicleDemand_kW;
area.v_dataElectricityForStorageDemandWinterWeek_kW = energyModel.data_winterWeekBatteriesDemand_kW;
area.v_dataNaturalGasDemandWinterWeek_kW = energyModel.data_winterWeekNaturalGasDemand_kW;
area.v_dataPetroleumProductsDemandWinterWeek_kW = energyModel.data_winterWeekDieselDemand_kW;
area.v_dataElectricityForHydrogenDemandWinterWeek_kW = energyModel.data_winterWeekHydrogenDemand_kW;

//Supply
area.v_dataElectricityWindSupplyWinterWeek_kW = energyModel.data_winterWeekWindGeneration_kW;
area.v_dataElectricityPVSupplyWinterWeek_kW = energyModel.data_winterWeekPVGeneration_kW;
area.v_dataElectricityStorageSupplyWinterWeek_kW = energyModel.data_winterWeekBatteriesSupply_kW;
area.v_dataElectricityV2GSupplyWinterWeek_kW = energyModel.data_winterWeekV2GSupply_kW;
area.v_dataHydrogenSupplyWinterWeek_kW = energyModel.data_winterWeekHydrogenSupply_kW;

//area.v_dataPetroleumProductsSupplyWinterWeek_MWh
//District heating

// Net Load
area.v_dataNetLoadWinterWeek_kW = energyModel.data_winterWeekNetLoad_kW;
area.v_dataElectricityDemandCapacityWinterWeek_kW.add(energyModel.p_startHourWinterWeek, energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.v_dataElectricityDemandCapacityWinterWeek_kW.add(energyModel.p_startHourWinterWeek + 7*24, energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.v_dataElectricitySupplyCapacityWinterWeek_kW.add(energyModel.p_startHourWinterWeek, -energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);
area.v_dataElectricitySupplyCapacityWinterWeek_kW.add(energyModel.p_startHourWinterWeek + 7*24, -energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW);



//Datasets for yearly profiles chart
//Demand
area.v_dataElectricityBaseloadDemandYear_kW = energyModel.data_annualBaseloadElectricityDemand_kW;
area.v_dataElectricityForHeatDemandYear_kW = energyModel.data_annualHeatPumpElectricityDemand_kW;
area.v_dataElectricityForTransportDemandYear_kW = energyModel.data_annualElectricVehicleDemand_kW;
area.v_dataElectricityForStorageDemandYear_kW = energyModel.data_annualBatteriesDemand_kW;
area.v_dataNaturalGasDemandYear_kW = energyModel.data_annualNaturalGasDemand_kW;
area.v_dataPetroleumProductsDemandYear_kW = energyModel.data_annualDieselDemand_kW;
area.v_dataElectricityForHydrogenDemandYear_kW = energyModel.data_annualHydrogenDemand_kW;

//Supply
area.v_dataElectricityWindSupplyYear_kW = energyModel.data_annualWindGeneration_kW;
area.v_dataElectricityPVSupplyYear_kW = energyModel.data_annualPVGeneration_kW;
area.v_dataElectricityStorageSupplyYear_kW = energyModel.data_annualBatteriesSupply_kW;
area.v_dataElectricityV2GSupplyYear_kW = energyModel.data_annualV2GSupply_kW;
area.v_dataHydrogenSupplyYear_kW = energyModel.data_annualHydrogenSupply_kW;
//area.v_dataPetroleumProductsSupplyYear_MWh
//District heating

// Data for gespreksleidraad1
area.v_dataElectricityDemandYear_kW = energyModel.data_annualElectricityDemand_kW;
area.v_dataElectricitySupplyYear_kW = energyModel.data_annualElectricitySupply_kW;
area.v_dataNetLoadYear_kW = energyModel.acc_annualElectricityBalance_kW.getTimeSeries();

//Datasets for netloaddurationcurves
area.v_dataNetbelastingDuurkrommeYear_kW = energyModel.data_netbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeYearVorige_kW = energyModel.data_netbelastingDuurkrommeVorige_kW;

area.v_dataNetbelastingDuurkrommeSummer_kW = energyModel.data_summerWeekNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeWinter_kW = energyModel.data_winterWeekNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeDaytime_kW = energyModel.data_daytimeNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeNighttime_kW = energyModel.data_nighttimeNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeWeekend_kW = energyModel.data_weekendNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeWeekday_kW = energyModel.data_weekdayNetbelastingDuurkromme_kW;


// Can't use pointer for (immutable) primitives in Java, so need to manually update results after a year-sim!!
area.v_gridCapacityDemand_kW = energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW;
area.v_gridCapacitySupply_kW = energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW;

// KPIs for 'samenvatting' 
area.v_modelSelfConsumption_fr = energyModel.v_modelSelfConsumption_fr;
area.v_individualSelfSufficiency_fr = energyModel.v_individualSelfSufficiency_fr;
area.v_individualSelfconsumption_fr = energyModel.v_individualSelfConsumption_fr;
area.v_modelSelfSufficiency_fr = energyModel.v_modelSelfSufficiency_fr;
area.v_totalTimeOverloadedTransformers_h = energyModel.v_gridOverloadDuration_h;

//Yearly
area.v_annualTotalConsumedEnergy_MWh = energyModel.v_totalEnergyUsed_MWh;
area.v_annualTotalProducedEnergy_MWh = energyModel.v_totalEnergyProduced_MWh;
area.v_annualImportedEnergy_MWh = energyModel.v_totalImportedEnergy_MWh;
area.v_annualExportedEnergy_MWh = energyModel.v_totalExportedEnergy_MWh;
area.v_annualSelfConsumedEnergy_MWh = energyModel.v_totalSelfConsumedEnergy_MWh;

area.v_annualElectricityImport_MWh = energyModel.v_totalElectricityImport_MWh;
area.v_annualElectricityExport_MWh = energyModel.v_totalElectricityExport_MWh;
area.v_annualSelfConsumedElectricity_MWh = energyModel.v_totalElectricitySelfConsumed_MWh;

area.v_annualNaturalGasDemand_MWh = energyModel.v_totalMethaneImport_MWh;
area.v_annualPetroleumProductsDemand_MWh= energyModel.v_totalDieselImport_MWh;
area.v_annualHydrogenDemand_MWh= energyModel.v_totalHydrogenImport_MWh;
area.v_annualHydrogenSupply_MWh= energyModel.v_totalHydrogenExport_MWh;

// Summer/winter
area.v_importedEnergySummerWeek_MWh = energyModel.v_summerWeekTotalImport_MWh;
area.v_exportedEnergySummerWeek_MWh = energyModel.v_summerWeekTotalExport_MWh;
area.v_selfConsumedEnergySummerWeek_MWh = energyModel.v_summerWeekSelfConsumedEnergy_MWh;

area.v_importedElectricitySummerWeek_MWh = energyModel.v_summerWeekElectricityImport_MWh;
area.v_exportedElectricitySummerWeek_MWh = energyModel.v_summerWeekElectricityExport_MWh;
area.v_selfConsumedElectricitySummerWeek_MWh = energyModel.v_summerWeekSelfConsumedElectricity_MWh;

area.v_naturalGasDemandSummerWeek_MWh = energyModel.v_summerWeekMethaneImport_MWh;
area.v_petroleumProductsDemandSummerWeek_MWh= energyModel.v_summerWeekDieselImport_MWh;
area.v_hydrogenImportSummerWeek_MWh = energyModel.v_summerWeekHydrogenImport_MWh;
area.v_hydrogenExportSummerWeek_MWh = energyModel.v_summerWeekHydrogenExport_MWh;

area.v_importedEnergyWinterWeek_MWh = energyModel.v_winterWeekTotalImport_MWh;
area.v_exportedEnergyWinterWeek_MWh = energyModel.v_winterWeekTotalExport_MWh;
area.v_selfConsumedEnergyWinterWeek_MWh = energyModel.v_winterWeekSelfConsumedEnergy_MWh;

area.v_importedElectricityWinterWeek_MWh = energyModel.v_winterWeekElectricityImport_MWh;
area.v_exportedElectricityWinterWeek_MWh = energyModel.v_winterWeekElectricityExport_MWh;
area.v_selfConsumedElectricityWinterWeek_MWh = energyModel.v_winterWeekSelfConsumedElectricity_MWh;

area.v_naturalGasDemandWinterWeek_MWh = energyModel.v_winterWeekMethaneImport_MWh;
area.v_petroleumProductsDemandWinterWeek_MWh= energyModel.v_winterWeekDieselImport_MWh;
area.v_hydrogenImportWinterWeek_MWh = energyModel.v_winterWeekHydrogenImport_MWh;
area.v_hydrogenExportWinterWeek_MWh = energyModel.v_winterWeekHydrogenExport_MWh;

// Day/night
area.v_importedEnergyDaytime_MWh = energyModel.v_daytimeTotalImport_MWh;
area.v_exportedEnergyDaytime_MWh = energyModel.v_daytimeTotalExport_MWh;
area.v_selfConsumedEnergyDaytime_MWh = energyModel.v_daytimeSelfConsumedEnergy_MWh;

area.v_importedElectricityDaytime_MWh = energyModel.v_daytimeElectricityImport_MWh;
area.v_exportedElectricityDaytime_MWh = energyModel.v_daytimeElectricityExport_MWh;
area.v_selfConsumedElectricityDaytime_MWh = energyModel.v_daytimeSelfConsumedElectricity_MWh;

area.v_naturalGasDemandDaytime_MWh = energyModel.v_daytimeMethaneImport_MWh;
area.v_petroleumProductsDemandDaytime_MWh= energyModel.v_daytimeDieselImport_MWh;
area.v_hydrogenImportDaytime_MWh = energyModel.v_daytimeHydrogenImport_MWh;
area.v_hydrogenExportDaytime_MWh = energyModel.v_daytimeHydrogenExport_MWh;

area.v_importedEnergyNighttime_MWh = energyModel.v_nighttimeTotalImport_MWh;
area.v_exportedEnergyNighttime_MWh = energyModel.v_nighttimeTotalExport_MWh;
area.v_selfConsumedEnergyNighttime_MWh = energyModel.v_nighttimeSelfConsumedEnergy_MWh;

area.v_importedElectricityNighttime_MWh = energyModel.v_nighttimeElectricityImport_MWh;
area.v_exportedElectricityNighttime_MWh = energyModel.v_nighttimeElectricityExport_MWh;
area.v_selfConsumedElectricityNighttime_MWh = energyModel.v_nighttimeSelfConsumedElectricity_MWh;

area.v_naturalGasDemandNighttime_MWh = energyModel.v_nighttimeMethaneImport_MWh;
area.v_petroleumProductsDemandNighttime_MWh= energyModel.v_nighttimeDieselImport_MWh;
area.v_hydrogenImportNighttime_MWh = energyModel.v_nighttimeHydrogenImport_MWh;
area.v_hydrogenExportNighttime_MWh = energyModel.v_nighttimeHydrogenExport_MWh;

// Week/weekend
area.v_importedEnergyWeekday_MWh = energyModel.v_weekdayTotalImport_MWh;
area.v_exportedEnergyWeekday_MWh = energyModel.v_weekdayTotalExport_MWh;
area.v_selfConsumedEnergyWeekday_MWh = energyModel.v_weekdaySelfConsumedEnergy_MWh;

area.v_importedElectricityWeekday_MWh = energyModel.v_weekdayElectricityImport_MWh;
area.v_exportedElectricityWeekday_MWh = energyModel.v_weekdayElectricityExport_MWh;
area.v_selfConsumedElectricityWeekday_MWh = energyModel.v_weekdaySelfConsumedElectricity_MWh;

area.v_naturalGasDemandWeekday_MWh = energyModel.v_weekdayMethaneImport_MWh;
area.v_petroleumProductsDemandWeekday_MWh= energyModel.v_weekdayDieselImport_MWh;
area.v_hydrogenImportWeekday_MWh = energyModel.v_weekdayHydrogenImport_MWh;
area.v_hydrogenExportWeekday_MWh = energyModel.v_weekdayHydrogenExport_MWh;

area.v_importedEnergyWeekend_MWh = energyModel.v_weekendTotalImport_MWh;
area.v_exportedEnergyWeekend_MWh = energyModel.v_weekendTotalExport_MWh;
area.v_selfConsumedEnergyWeekend_MWh = energyModel.v_weekendSelfConsumedEnergy_MWh;

area.v_importedElectricityWeekend_MWh = energyModel.v_weekendElectricityImport_MWh;
area.v_exportedElectricityWeekend_MWh = energyModel.v_weekendElectricityExport_MWh;
area.v_selfConsumedElectricityWeekend_MWh = energyModel.v_weekendSelfConsumedElectricity_MWh;

area.v_naturalGasDemandWeekend_MWh = energyModel.v_weekendMethaneImport_MWh;
area.v_petroleumProductsDemandWeekend_MWh= energyModel.v_weekendDieselImport_MWh;
area.v_hydrogenImportWeekend_MWh = energyModel.v_weekendHydrogenImport_MWh;
area.v_hydrogenExportWeekend_MWh = energyModel.v_weekendHydrogenExport_MWh;

//gr_simulateYearScreenSmall.setVisible(false);]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1709716821860</Id>
					<Name><![CDATA[f_updateUIresultsEnergyCoop]]></Name>
					<X>-650</X><Y>689.467</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[EC]]></Name>
						<Type><![CDATA[EnergyCoop]]></Type>
					</Parameter>
					<Body><![CDATA[

// Can't use pointer for (immutable) primitives in Java, so need to manually update results after a year-sim!!
area.v_gridCapacityDemand_kW = EC.p_connectionCapacity_kW;
area.v_gridCapacitySupply_kW = EC.p_connectionCapacity_kW;

// KPIs for 'samenvatting' 
area.v_modelSelfConsumption_fr = EC.v_totalEnergyProduced_MWh > 0 ? EC.v_totalSelfConsumedEnergy_MWh/EC.v_totalEnergyProduced_MWh : 0.0;
//area.v_individualSelfSufficiency_fr = EC.v_individualSelfSufficiency_fr;
area.v_modelSelfSufficiency_fr = EC.v_totalEnergyProduced_MWh > 0 ? EC.v_totalSelfConsumedEnergy_MWh/EC.v_totalEnergyConsumed_MWh: 0.0;
//area.v_totalTimeOverloadedTransformers_h = EC.v_netOverloadDuration_h;

//Yearly
area.v_annualImportedEnergy_MWh = EC.v_totalImport_MWh;
area.v_annualExportedEnergy_MWh = EC.v_totalExport_MWh;
area.v_annualSelfConsumedEnergy_MWh = EC.v_totalSelfConsumedEnergy_MWh;

area.v_annualElectricityImport_MWh = EC.v_electricityImported_kWh/1000;
area.v_annualElectricityExport_MWh = EC.v_electricityExported_kWh/1000;
area.v_annualSelfConsumedElectricity_MWh = EC.v_totalElectricitySelfConsumed_MWh;

//area.v_annualNaturalGasDemand_MWh = EC.v_methaneDrawn_kWh/1000;
//area.v_annualPetroleumProductsDemand_MWh= EC.v_dieselDrawn_kWh/1000;
//area.v_annualHydrogenDemand_MWh= EC.v_hydrogenDrawn_kWh/1000;

// Summer/winter
area.v_importedEnergySummerWeek_MWh = EC.v_summerWeekTotalImport_MWh;
area.v_exportedEnergySummerWeek_MWh = EC.v_summerWeekTotalExport_MWh;
area.v_selfConsumedEnergySummerWeek_MWh = EC.v_summerWeekSelfConsumedEnergy_MWh;

area.v_importedElectricitySummerWeek_MWh = EC.v_summerWeekElectricityImport_MWh;
area.v_exportedElectricitySummerWeek_MWh = EC.v_summerWeekElectricityExport_MWh;
area.v_selfConsumedElectricitySummerWeek_MWh = EC.v_summerWeekElectricitySelfConsumed_MWh;

/*area.v_naturalGasDemandSummerWeek_MWh = EC.v_summerWeekMethaneImport_MWh;
area.v_petroleumProductsDemandSummerWeek_MWh= EC.v_summerWeekDieselImport_MWh;
area.v_hydrogenImportSummerWeek_MWh = EC.v_summerWeekHydrogenImport_MWh;*/

area.v_importedEnergyWinterWeek_MWh = EC.v_winterWeekTotalImport_MWh;
area.v_exportedEnergyWinterWeek_MWh = EC.v_winterWeekTotalExport_MWh;
area.v_selfConsumedEnergyWinterWeek_MWh = EC.v_winterWeekSelfConsumedEnergy_MWh;

area.v_importedElectricityWinterWeek_MWh = EC.v_winterWeekElectricityImport_MWh;
area.v_exportedElectricityWinterWeek_MWh = EC.v_winterWeekElectricityExport_MWh;
area.v_selfConsumedElectricityWinterWeek_MWh = EC.v_winterWeekElectricitySelfConsumed_MWh;

/*area.v_naturalGasDemandWinterWeek_MWh = EC.v_winterWeekMethaneImport_MWh;
area.v_petroleumProductsDemandWinterWeek_MWh= EC.v_winterWeekDieselImport_MWh;
area.v_hydrogenImportWinterWeek_MWh = EC.v_winterWeekHydrogenImport_MWh;*/

// Day/night
area.v_importedEnergyDaytime_MWh = EC.v_daytimeTotalImport_MWh;
area.v_exportedEnergyDaytime_MWh = EC.v_daytimeTotalExport_MWh;
area.v_selfConsumedEnergyDaytime_MWh = EC.v_daytimeSelfConsumedEnergy_MWh;

area.v_importedElectricityDaytime_MWh = EC.v_daytimeElectricityImport_MWh;
area.v_exportedElectricityDaytime_MWh = EC.v_daytimeElectricityExport_MWh;
area.v_selfConsumedElectricityDaytime_MWh = EC.v_daytimeElectricitySelfConsumed_MWh;

/*area.v_naturalGasDemandDaytime_MWh = EC.v_daytimeMethaneImport_MWh;
area.v_petroleumProductsDemandDaytime_MWh= EC.v_daytimeDieselImport_MWh;
area.v_hydrogenImportDaytime_MWh = EC.v_daytimeHydrogenImport_MWh;*/

area.v_importedEnergyNighttime_MWh = EC.v_nighttimeTotalImport_MWh;
area.v_exportedEnergyNighttime_MWh = EC.v_nighttimeTotalExport_MWh;
area.v_selfConsumedEnergyNighttime_MWh = EC.v_nighttimeSelfConsumedEnergy_MWh;

area.v_importedElectricityNighttime_MWh = EC.v_nighttimeElectricityImport_MWh;
area.v_exportedElectricityNighttime_MWh = EC.v_nighttimeElectricityExport_MWh;
area.v_selfConsumedElectricityNighttime_MWh = EC.v_nighttimeElectricitySelfConsumed_MWh;

/*area.v_naturalGasDemandNighttime_MWh = EC.v_nighttimeMethaneImport_MWh;
area.v_petroleumProductsDemandNighttime_MWh= EC.v_nighttimeDieselImport_MWh;
area.v_hydrogenImportNighttime_MWh = EC.v_nighttimeHydrogenImport_MWh;*/

// Week/weekend
area.v_importedEnergyWeekday_MWh = EC.v_weekdayTotalImport_MWh;
area.v_exportedEnergyWeekday_MWh = EC.v_weekdayTotalExport_MWh;
area.v_selfConsumedEnergyWeekday_MWh = EC.v_weekdaySelfConsumedEnergy_MWh;

area.v_importedElectricityWeekday_MWh = EC.v_weekdayElectricityImport_MWh;
area.v_exportedElectricityWeekday_MWh = EC.v_weekdayElectricityExport_MWh;
area.v_selfConsumedElectricityWeekday_MWh = EC.v_weekdayElectricitySelfConsumed_MWh;

/*area.v_naturalGasDemandWeekday_MWh = EC.v_weekdayMethaneImport_MWh;
area.v_petroleumProductsDemandWeekday_MWh= EC.v_weekdayDieselImport_MWh;
area.v_hydrogenImportWeekday_MWh = EC.v_weekdayHydrogenImport_MWh;*/

area.v_importedEnergyWeekend_MWh = EC.v_weekendTotalImport_MWh;
area.v_exportedEnergyWeekend_MWh = EC.v_weekendTotalExport_MWh;
area.v_selfConsumedEnergyWeekend_MWh = EC.v_weekendSelfConsumedEnergy_MWh;

area.v_importedElectricityWeekend_MWh = EC.v_weekendElectricityImport_MWh;
area.v_exportedElectricityWeekend_MWh = EC.v_weekendElectricityExport_MWh;
area.v_selfConsumedElectricityWeekend_MWh = EC.v_weekendElectricitySelfConsumed_MWh;

/*area.v_naturalGasDemandWeekend_MWh = EC.v_weekendMethaneImport_MWh;
area.v_petroleumProductsDemandWeekend_MWh= EC.v_weekendDieselImport_MWh;
area.v_hydrogenImportWeekend_MWh = EC.v_weekendHydrogenImport_MWh;*/

//gr_simulateYearScreenSmall.setVisible(false);

//Datasets for live demand chart
//Demand
//AreaCollection companyArea = uI_Results.v_company;
area.v_dataPetroleumProductsDemandLiveWeek_kW = EC.data_dieselDemand_kW;
area.v_dataNaturalGasDemandLiveWeek_kW = EC.data_naturalGasDemand_kW;
area.v_dataBaseloadElectricityDemandLiveWeek_kW = EC.data_baseloadElectricityDemand_kW;
area.v_dataElectricityForHeatDemandLiveWeek_kW = EC.data_heatPumpElectricityDemand_kW;
area.v_dataElectricityForTransportDemandLiveWeek_kW = EC.data_electricVehicleDemand_kW;
area.v_dataElectricityForStorageDemandLiveWeek_kW = EC.data_batteryCharging_kW;
//Supply
area.v_dataWindElectricitySupplyLiveWeek_kW = EC.data_windGeneration_kW;
area.v_dataPVElectricitySupplyLiveWeek_kW = EC.data_PVGeneration_kW;
area.v_dataStorageElectricitySupplyLiveWeek_kW = EC.data_batteryDischarging_kW;
area.v_dataV2GElectricitySupplyLiveWeek_kW = EC.data_V2GSupply_kW;

//Datasets for live summerWeek chart
//Demand
//area.v_dataPetroleumProductsDemandSummerWeek_kW = EC.data_summerWeekDieselDemand_kW;
//area.v_dataNaturalGasDemandSummerWeek_kW = EC.data_summerWeekNaturalGasDemand_kW;
/*area.v_dataElectricityBaseloadDemandSummerWeek_kW = EC.data_summerWeekBaseloadElectricityDemand_kW;
area.v_dataElectricityForHeatDemandSummerWeek_kW = EC.data_summerWeekHeatPumpElectricityDemand_kW;
area.v_dataElectricityForTransportDemandSummerWeek_kW = EC.data_summerWeekElectricTrucksDemand_kW;
area.v_dataElectricityForStorageDemandSummerWeek_kW = EC.data_summerWeekNeighborhoodBatteryDemand_kW;
//Supply
area.v_dataWindElectricitySupplySummerWeek_kW = EC.data_summerWeekWindGeneration_kW;
area.v_dataPVElectricitySupplySummerWeek_kW = EC.data_summerWeekPVGeneration_kW;
area.v_dataStorageElectricitySupplySummerWeek_kW = EC.data_summerWeekNeighborhoodBatterySupply_kW;
area.v_dataV2GElectricitySupplySummerWeek_kW = EC.data_summerWeekV2GSupply_kW;

//Datasets for live winterWeek chart
//Demand
//area.v_dataPetroleumProductsDemandWinterWeek_kW = EC.data_winterWeekDieselDemand_kW;
//area.v_dataNaturalGasDemandWinterWeek_kW = EC.data_winterWeekNaturalGasDemand_kW;
area.v_dataElectricityBaseloadDemandWinterWeek_kW = EC.data_winterWeekBaseloadElectricityDemand_kW;
area.v_dataElectricityForHeatDemandWinterWeek_kW = EC.data_winterWeekHeatPumpElectricityDemand_kW;
area.v_dataElectricityForTransportDemandWinterWeek_kW = EC.data_winterWeekElectricTrucksDemand_kW;
area.v_dataElectricityForStorageDemandWinterWeek_kW = EC.data_winterWeekNeighborhoodBatteryDemand_kW;
//Supply
area.v_dataWindElectricitySupplyWinterWeek_kW = EC.data_winterWeekWindGeneration_kW;
area.v_dataPVElectricitySupplyWinterWeek_kW = EC.data_winterWeekPVGeneration_kW;
area.v_dataStorageElectricitySupplyWinterWeek_kW = EC.data_winterWeekNeighborhoodBatterySupply_kW;
area.v_dataV2GElectricitySupplyWinterWeek_kW = EC.data_winterWeekV2GSupply_kW;


//Datasets for yearly profiles chart
//Demand
//area.v_dataPetroleumProductsDemandYear_MWh = EC.data_dieselDemand_MWh;
//area.v_dataNaturalGasDemandYear_MWh = EC.data_naturalGasDemand_MWh;
area.v_dataElectricityBaseloadDemandYear_MWh = EC.data_annualBaseloadElectricityDemand_MWh;
area.v_dataElectricityForHeatDemandYear_MWh = EC.data_annualHeatPumpElectricityDemand_MWh;
area.v_dataElectricityForTransportDemandYear_MWh = EC.data_annualElectricTrucksDemand_MWh;
area.v_dataElectricityForStorageDemandYear_MWh = EC.data_annualNeighborhoodBatteryDemand_MWh;

//Supply
area.v_dataElectricityWindSupplyYear_MWh = EC.data_annualWindGeneration_MWh;
area.v_dataElectricityPVSupplyYear_MWh = EC.data_annualPVGeneration_MWh;
area.v_dataElectricityStorageSupplyYear_MWh = EC.data_annualNeighborhoodBatterySupply_MWh;
area.v_dataElectricityV2GSupplyYear_MWh = EC.data_annualV2GSupply_MWh;

// Data for gespreksleidraad1
area.v_dataElectricityDemandYear_MWh = EC.data_annualElectricityDemand_MWh;
area.v_dataElectricitySupplyYear_MWh = EC.data_annualElectricitySupply_MWh;*/
area.v_dataNetLoadYear_kW = EC.acc_annualElectricityBalance_kW.getTimeSeries();

//Datasets for netloaddurationcurves
//EC.f_duurkrommes();
area.v_dataNetbelastingDuurkrommeYear_kW = EC.f_getDuurkromme();
/*area.v_dataNetbelastingDuurkrommeSummer_kW = EC.data_summerWeekBusinessParkNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeWinter_kW = EC.data_winterWeekBusinessParkNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeDaytime_kW = EC.data_daytimeNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeNighttime_kW = EC.data_nighttimeNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeWeekend_kW = EC.data_weekendNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeWeekday_kW = EC.data_weekdayNetbelastingDuurkromme_kW;*/
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1709718252272</Id>
					<Name><![CDATA[f_resetSettings]]></Name>
					<X>1600</X><Y>-280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[b_resultsUpToDate = false;
gr_simulateYearScreenSmall.setVisible(true);
runSimulation();
//pie_selfsufficiency.setVisible(false);]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1712584842532</Id>
					<Name><![CDATA[f_updateUIresultsGridNode]]></Name>
					<X>-650</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[GN]]></Name>
						<Type><![CDATA[GridNode]]></Type>
					</Parameter>
					<Body><![CDATA[// Can't use pointer for (immutable) primitives in Java, so need to manually update results after a year-sim!!
area.v_gridCapacityDemand_kW = GN.p_capacity_kW;
area.v_gridCapacitySupply_kW = -GN.p_capacity_kW;


// Datasets for profile plot
area.v_dataBaseloadElectricityDemandLiveWeek_kW = GN.data_liveElectricityLoad_kW;
area.v_dataBaseloadElectricityDemandYear_kW = GN.data_electricityLoadYear_kW;
area.v_dataElectricityBaseloadDemandSummerWeek_kW = GN.data_electricityLoadSummerWeek_kW;
area.v_dataElectricityBaseloadDemandWinterWeek_kW = GN.data_electricityLoadWinterWeek_kW;


area.v_dataElectricityDemandCapacityLiveWeek_kW = GN.data_gridCapacityDemand_kW;
area.v_dataElectricitySupplyCapacityLiveWeek_kW = GN.data_gridCapacitySupply_kW;
area.data_gridCapacityDemandYear_kW.add(0, GN.p_capacity_kW);
area.data_gridCapacityDemandYear_kW.add(8760, GN.p_capacity_kW);
area.data_gridCapacitySupplyYear_kW.add(0, -GN.p_capacity_kW);
area.data_gridCapacitySupplyYear_kW.add(8760, -GN.p_capacity_kW);
area.data_gridCapacityDemandSummerWeek_kW.add(energyModel.p_startHourSummerWeek, GN.p_capacity_kW);
area.data_gridCapacityDemandSummerWeek_kW.add(energyModel.p_startHourSummerWeek+24*7, GN.p_capacity_kW);
area.data_gridCapacitySupplySummerWeek_kW.add(energyModel.p_startHourSummerWeek, -GN.p_capacity_kW);
area.data_gridCapacitySupplySummerWeek_kW.add(energyModel.p_startHourSummerWeek+24*7, -GN.p_capacity_kW);
area.data_gridCapacityDemandWinterWeek_kW.add(energyModel.p_startHourWinterWeek, GN.p_capacity_kW);
area.data_gridCapacityDemandWinterWeek_kW.add(energyModel.p_startHourWinterWeek+24*7, GN.p_capacity_kW);
area.data_gridCapacitySupplyWinterWeek_kW.add(energyModel.p_startHourWinterWeek, -GN.p_capacity_kW);
area.data_gridCapacitySupplyWinterWeek_kW.add(energyModel.p_startHourWinterWeek+24*7, -GN.p_capacity_kW);

// Data for Opwek & Verbruik
// Year
area.v_annualSelfConsumedElectricity_MWh = GN.v_annualElectricityDrawn_MWh;
area.v_annualSelfProducedElectricity_MWh = GN.v_annualElectricityDelivered_MWh;
area.v_annualExcessImport_MWh = GN.v_annualExcessImport_MWh;
area.v_annualExcessExport_MWh = GN.v_annualExcessExport_MWh;

// Summer / Winter
area.v_selfConsumedElectricitySummerWeek_MWh = GN.v_summerWeekElectricityDrawn_MWh;
area.v_selfProducedElectricitySummerWeek_MWh = GN.v_summerWeekElectricityDelivered_MWh;
area.v_summerWeekExcessImport_MWh = GN.v_summerWeekExcessImport_MWh;
area.v_summerWeekExcessExport_MWh = GN.v_summerWeekExcessExport_MWh;

area.v_selfConsumedElectricityWinterWeek_MWh = GN.v_winterWeekElectricityDrawn_MWh;
area.v_selfProducedElectricityWinterWeek_MWh = GN.v_winterWeekElectricityDelivered_MWh;
area.v_winterWeekExcessImport_MWh = GN.v_winterWeekExcessImport_MWh;
area.v_winterWeekExcessExport_MWh = GN.v_winterWeekExcessExport_MWh;

// Day / Night
area.v_selfConsumedElectricityDaytime_MWh = GN.v_daytimeElectricityDrawn_MWh;
area.v_selfProducedElectricityDaytime_MWh = GN.v_daytimeElectricityDelivered_MWh;
area.v_daytimeExcessImport_MWh = GN.v_daytimeExcessImport_MWh;
area.v_daytimeExcessExport_MWh = GN.v_daytimeExcessExport_MWh;

area.v_selfConsumedElectricityNighttime_MWh = GN.v_nighttimeElectricityDrawn_MWh;
area.v_selfProducedElectricityNighttime_MWh = GN.v_nighttimeElectricityDelivered_MWh;
area.v_nighttimeExcessImport_MWh = GN.v_nighttimeExcessImport_MWh;
area.v_nighttimeExcessExport_MWh = GN.v_nighttimeExcessExport_MWh;

// Weekday / Weekend
area.v_selfConsumedElectricityWeekday_MWh = GN.v_weekdayElectricityDrawn_MWh;
area.v_selfProducedElectricityWeekday_MWh = GN.v_weekdayElectricityDelivered_MWh;
area.v_weekdayExcessImport_MWh = GN.v_weekdayExcessImport_MWh;
area.v_weekdayExcessExport_MWh = GN.v_weekdayExcessExport_MWh;

area.v_selfConsumedElectricityWeekend_MWh = GN.v_weekendElectricityDrawn_MWh;
area.v_selfProducedElectricityWeekend_MWh = GN.v_weekendElectricityDelivered_MWh;
area.v_weekendExcessImport_MWh = GN.v_weekendExcessImport_MWh;
area.v_weekendExcessExport_MWh = GN.v_weekendExcessExport_MWh;


// Datasets for netloaddurationcurves
area.v_dataNetLoadYear_kW = GN.acc_annualElectricityBalance_kW.getTimeSeries();

// Year
area.v_dataNetbelastingDuurkrommeYear_kW = GN.f_getDuurkromme();;
area.v_dataNetbelastingDuurkrommeYearVorige_kW = GN.data_netbelastingDuurkrommeVorige_kW;

// Summer / Winter
area.v_dataNetbelastingDuurkrommeSummer_kW = GN.data_summerWeekNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeWinter_kW = GN.data_winterWeekNetbelastingDuurkromme_kW;
// Day / Night
area.v_dataNetbelastingDuurkrommeDaytime_kW = GN.data_daytimeNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeNighttime_kW = GN.data_nighttimeNetbelastingDuurkromme_kW;

// Weekday / Weekend
area.v_dataNetbelastingDuurkrommeWeekday_kW = GN.data_weekdayNetbelastingDuurkromme_kW;
area.v_dataNetbelastingDuurkrommeWeekend_kW = GN.data_weekendNetbelastingDuurkromme_kW;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714043663127</Id>
					<Name><![CDATA[f_setGridNodeCongestionColor]]></Name>
					<X>-650</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gn]]></Name>
						<Type><![CDATA[GridNode]]></Type>
					</Parameter>
					<Body><![CDATA[
double maxLoad_fr = abs(gn.v_currentLoadElectricity_kW)/gn.p_capacity_kW;
if (maxLoad_fr > 1) {
	gn.gisRegion.setFillColor(v_gridNodeColorCongested);
	gn.gisRegion.setLineColor(v_gridLineColorCongested);
} else if (maxLoad_fr > 0.7) {
	gn.gisRegion.setFillColor(v_gridNodeColorStrained);
	gn.gisRegion.setLineColor(v_gridNodeLineColorStrained);
} else {
	gn.gisRegion.setFillColor(v_MVLVNodeColor);
	gn.gisRegion.setLineColor(v_MVLVLineColor);
}

if( gn == v_clickedGridNode && gn != v_previousClickedGridNode){ // dit zorgt ervoor dat de kleuringfunctie correct werkt in zowel live stand als pauze stand
	gn.gisRegion.setFillColor( v_selectionColor );
	gn.gisRegion.setLineColor( orange );
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714130288661</Id>
					<Name><![CDATA[f_initialPVSystemsOrder]]></Name>
					<X>85</X><Y>-680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// First we make a copy of all the Uitility GridConnections
List<GridConnection> GCs = new ArrayList<>(energyModel.f_getGridConnections());
if( p_selectedProjectType == OL_ProjectType.RESIDENTIAL){
	GCs = GCs.stream().filter(gc -> gc instanceof GCHouse).collect(Collectors.toList());
}
else {
	GCs = GCs.stream().filter(gc -> gc instanceof GCUtility).collect(Collectors.toList());
}
// Find all the GCs with PV at the start of the simulation
ArrayList<GridConnection> GCsWithPV = GCs.stream().filter(gc -> gc.v_hasPV).collect(Collectors.toCollection(ArrayList::new));
ArrayList<GridConnection> otherGCs = GCs.stream().filter(gc -> !gc.v_hasPV).collect(Collectors.toCollection(ArrayList::new));
//Collections.shuffle(otherGCs);
// We make sure that the GCs with PV at the start of the simulation are the last in the list

//traceln("amount of GCs with PV at start: " + GCsWithPV.size());
//traceln("amount of other GCs at start: " + otherGCs.size());

otherGCs.addAll(GCsWithPV);
c_orderedPVSystems = otherGCs;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714130342440</Id>
					<Name><![CDATA[f_initialElectricVehiclesOrder]]></Name>
					<X>85</X><Y>-660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// First we make a copy of all the vehicle energy assets
List<J_EA> EAs = new ArrayList<>(energyModel.f_getEnergyAssets());
EAs = EAs.stream().filter(ea -> ea instanceof J_EAVehicle).collect(Collectors.toList());
// Find all the EVs at the start of the simulation
ArrayList<J_EA> EAEVs = EAs.stream().filter(ea -> (ea instanceof J_EAEV)).collect(Collectors.toCollection(ArrayList::new));
ArrayList<J_EA> otherEAs = EAs.stream().filter(ea -> !(ea instanceof J_EAEV)).collect(Collectors.toCollection(ArrayList::new));
// We make sure that the EVs at the start of the simulation are the last in the list

//traceln("amount of EVs at start: " + EAEVs.size());
//traceln("amount of other EAs at start: " + otherEAs.size());

otherEAs.addAll(EAEVs);
c_orderedVehicles = otherEAs;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714131269202</Id>
					<Name><![CDATA[f_initialHeatingSystemsOrder]]></Name>
					<X>85</X><Y>-640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// First we make a copy of all the GridConnections
List<GridConnection> companyList = new ArrayList<>(energyModel.f_getGridConnections());
companyList = companyList.stream().filter(gc -> gc instanceof GCUtility).collect(Collectors.toList());

// Find all the GCs with Heatpumps at the start of the simulation
ArrayList<GridConnection> GCsWithHP = companyList.stream().filter(gc -> gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump).collect(Collectors.toCollection(ArrayList::new));
ArrayList<GridConnection> otherGCs = companyList.stream().filter(gc -> !(gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump)).collect(Collectors.toCollection(ArrayList::new));
// We make sure that the GCs with Heatpumps at the start of the simulation are the last in the list
otherGCs.addAll(GCsWithHP);
c_orderedHeatingSystemsCompanies = otherGCs;


// Doe same for houses
List<GridConnection> houseList = new ArrayList<>(energyModel.f_getGridConnections());
houseList = houseList.stream().filter(gc -> gc instanceof GCHouse).collect(Collectors.toList());
ArrayList<GridConnection> housesWithHP = houseList.stream().filter(gc -> gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump).collect(Collectors.toCollection(ArrayList::new));
ArrayList<GridConnection> otherHouses = houseList.stream().filter(gc -> !(gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump)).collect(Collectors.toCollection(ArrayList::new));
otherHouses.addAll(housesWithHP);
c_orderedHeatingSystemsHouses = otherHouses;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714135623471</Id>
					<Name><![CDATA[f_initalAssetOrdering]]></Name>
					<X>70</X><Y>-700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[f_initialElectricVehiclesOrder();
f_initialPVSystemsOrder();
f_initialHeatingSystemsOrder();
//f_setSliderRanges();

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715116336665</Id>
					<Name><![CDATA[f_setColorsBasedOnConsumpion]]></Name>
					<X>1350</X><Y>1465</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gis_area]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[double yearlyEnergyConsumption = sum( gis_area.c_containedGridConnections, x -> x.v_totalElectricityConsumed_MWh);
if ( yearlyEnergyConsumption < 10){ gis_area.f_style( rect_tinyCosumption.getFillColor(), null, null, null);}
else if ( yearlyEnergyConsumption < 50){ gis_area.f_style( rect_smallCosumption.getFillColor(), null, null, null);}
else if ( yearlyEnergyConsumption < 150){ gis_area.f_style( rect_mediumCosumption.getFillColor(), null, null, null);}
else if ( yearlyEnergyConsumption < 500){ gis_area.f_style( rect_largeCosumption.getFillColor(), null, null, null);}
else if ( yearlyEnergyConsumption > 500){ gis_area.f_style( rect_hugeCosumption.getFillColor(), null, null, null);}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715118739710</Id>
					<Name><![CDATA[f_setColorsBasedOnProduction]]></Name>
					<X>1350</X><Y>1515</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gis_area]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[/*
for (GIS_Building building : energyModel.pop_GIS_Buildings){
	double electricityDeliveredToGrid_kWh = sum( building.c_gridConnectionsInBuilding, x -> x.v_electricityDeliveredToGrid_kWh);
	if ( electricityDeliveredToGrid_kWh < 10){ building.f_setFillColor( v_10mwhColor);}
	else if ( electricityDeliveredToGrid_kWh < 50){ building.f_setFillColor( v_100mwhColor);}
	else if ( electricityDeliveredToGrid_kWh > 50){ building.f_setFillColor( lime);}
}
*/
if (gis_area.c_containedGridConnections.size() > 0) {
	if (gis_area.c_containedGridConnections.get(0).v_hasPV) {
		if (gis_area.c_containedGridConnections.get(0).c_productionAssets.get(0).getCapacityElectric_kW() < 100){
			gis_area.f_style(rect_smallProduction.getFillColor(), null, null, null);
		}
		else {
			gis_area.f_style(rect_largeProduction.getFillColor(), null, null, null);
		}
		return;
	}
}

gis_area.f_style(rect_noProduction.getFillColor(), null, null, null);
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715157302225</Id>
					<Name><![CDATA[f_projectSpecificSettings]]></Name>
					<X>-670</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Should be overridden in child interface!!!
traceln("Forgot to override project specific settings!!");]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715859145993</Id>
					<Name><![CDATA[f_UIStartup]]></Name>
					<X>-670</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// UI elements

// We call this function to set the parameters so there is no nullpointer errors, but its not loading the correct values yet FIX Later to remove this call.
f_initalAssetOrdering();

//Connect the results UI
f_connectResultsUI();

//Initialize the UI elements (positioning, etc.)
f_setUITabs();

//Project specific settings
f_projectSpecificSettings();

// Create the Private UI for companies
f_createAdditionalUIs();
button_goToUI.setVisible(false);

// Now that the sliders are set we can load the correct starting values
f_initalAssetOrdering();

//Create and set the grid topology colors (Netvlakken)
f_setGridTopologyColors();

//Initialize the sliders of the main UI
f_setSliderPresets();

//Disable cable button if no cables have been loaded in
if(c_LVCables.size() == 0 && c_MVCables.size() == 0){
	checkbox_cabels.setVisible(false);
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[GISRegion]]></ReturnType>
					<Id>1715868403475</Id>
					<Name><![CDATA[f_createGISObject]]></Name>
					<Description><![CDATA[Functino used by the loader to create new GIS objects on the GIS map]]></Description>
					<X>-670</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gisTokens]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[GISRegion gisregion = new GISRegion(map, gisTokens);
return gisregion;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715869498509</Id>
					<Name><![CDATA[f_setStartView]]></Name>
					<Description><![CDATA[Function used to set the starting view of the simulation.]]></Description>
					<X>-670</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[map.setCenterLatitude(map_centre_latitude);
map.setCenterLongitude(map_centre_longitude);
va_Interface.navigateTo();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1716419446045</Id>
					<Name><![CDATA[f_enableTraceln]]></Name>
					<X>-480</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[originalPrintStream]]></Name>
						<Type><![CDATA[PrintStream]]></Type>
					</Parameter>
					<Body><![CDATA[System.setOut(originalPrintStream);]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[PrintStream]]></ReturnType>
					<Id>1716419448047</Id>
					<Name><![CDATA[f_disableTraceln]]></Name>
					<X>-480</X><Y>-120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[PrintStream originalPrintStream = System.out;

System.setOut(new PrintStream(new OutputStream() {
        public void write(int b) {
        }
    }));
return originalPrintStream;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1718263685462</Id>
					<Name><![CDATA[f_setColorsBasedOnConsumpionProfileHouseholds]]></Name>
					<X>1350</X><Y>1485</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gis_area]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[double yearlyEnergyConsumption = 0;
for( GridConnection gc : gis_area.c_containedGridConnections){
	for ( J_EAConsumption consumptionAsset : gc.c_consumptionAssets){
		if( consumptionAsset.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ){
			yearlyEnergyConsumption += consumptionAsset.yearlyDemandElectricity_kWh;
		}
	}
}

if ( yearlyEnergyConsumption == 0) { gis_area.f_style( v_unknownConsumptionColor, null, null, null );}
else if ( yearlyEnergyConsumption < 1500){ gis_area.f_style( rect_householdTinyCosumption.getFillColor(), null, null, null);}
else if ( yearlyEnergyConsumption < 2500){ gis_area.f_style( rect_householdSmallCosumption.getFillColor(), null, null, null);}
else if ( yearlyEnergyConsumption < 4000){ gis_area.f_style( rect_householdMediumCosumption.getFillColor(), null, null, null);}
else if ( yearlyEnergyConsumption < 6000){ gis_area.f_style( rect_householdLargeCosumption.getFillColor(), null, null, null);}
else if ( yearlyEnergyConsumption > 6000){ gis_area.f_style( rect_householdHugeCosumption.getFillColor(), null, null, null);}
	
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1718265697364</Id>
					<Name><![CDATA[f_setColorsBasedOnProductionHouseholds]]></Name>
					<X>1350</X><Y>1535</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gis_area]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[if (gis_area.c_containedGridConnections.size() > 0) {
	if (gis_area.c_containedGridConnections.get(0).v_hasPV) {
		if (gis_area.c_containedGridConnections.get(0).c_productionAssets.get(0).getCapacityElectric_kW() < 5){
			gis_area.f_style( rect_householdSmallProduction.getFillColor(), null, null, null );
		}
		else {
			gis_area.f_style( rect_householdLargeProduction.getFillColor(), null, null, null );
		}
		return;
	}
}
gis_area.f_style( rect_householdNoProduction.getFillColor(), null, null, null );

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1718288402102</Id>
					<Name><![CDATA[f_updateMainInterfaceSliders]]></Name>
					<X>-280</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// ATTENTION: If you have custom tabs it may be neccesary to override this function and add updates to your custom sliders!

// PV SYSTEMS:
double PVsystems = count(energyModel.UtilityConnections, x->x.v_hasPV == true);		
int PV_pct = roundToInt(100 * PVsystems / energyModel.UtilityConnections.size());
uI_Tabs.pop_tabElectricity.get(0).getSliderRooftopPVCompanies_pct().setValue(PV_pct, false);

// GAS_BURNER / HEATING SYSTEMS: // Still a slight error. GasBurners + HeatPumps != total, because some GC have primary heating asset null
int GasBurners = count(energyModel.UtilityConnections, gc->gc.p_primaryHeatingAsset instanceof J_EAConversionGasBurner);
int GasBurners_pct = roundToInt(100 * GasBurners / energyModel.UtilityConnections.size());

uI_Tabs.pop_tabHeating.get(0).getSliderGasBurnerCompanies_pct().setValue(GasBurners_pct, false);
uI_Tabs.pop_tabHeating.get(0).f_setHeatingSliders( 0, uI_Tabs.pop_tabHeating.get(0).getSliderGasBurnerCompanies_pct(), uI_Tabs.pop_tabHeating.get(0).getSliderElectricHeatPumpCompanies_pct(), null, null );

uI_Tabs.pop_tabHeating.get(0).getSliderHeatDemandSlidersCompaniesGasBurnerCompanies_pct().setValue(GasBurners_pct, false);
uI_Tabs.pop_tabHeating.get(0).f_setHeatingSliders( 0, uI_Tabs.pop_tabHeating.get(0).getSliderHeatDemandSlidersCompaniesGasBurnerCompanies_pct(), uI_Tabs.pop_tabHeating.get(0).getSliderHeatDemandSlidersCompaniesElectricHeatPumpCompanies_pct(), null, null );


// HEAT_PUMP_AIR:
//		int HeatPumps = count(energyModel.UtilityConnections, gc->gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);
//		int HeatPumps_pct = roundToInt(100 * HeatPumps / energyModel.UtilityConnections.size());
//		sl_electricHeatPumpCompanies.setValue(HeatPumps_pct, false);
//		f_setHeatingSlidersCompanies(1);
	
// TRUCKS:
int DieselTrucks = 0;
int ElectricTrucks = 0;
int HydrogenTrucks = 0;
for (GCUtility gc : energyModel.UtilityConnections) {
	for (J_EAVehicle vehicle : gc.c_vehicleAssets) {
		if (vehicle instanceof J_EADieselVehicle && vehicle.getEAType() == OL_EnergyAssetType.DIESEL_TRUCK) {
			DieselTrucks += 1;
		}
		else if (vehicle instanceof J_EAEV && vehicle.getEAType() == OL_EnergyAssetType.ELECTRIC_TRUCK) {
			ElectricTrucks += 1;
		}
		else if (vehicle instanceof J_EAHydrogenVehicle && vehicle.getEAType() == OL_EnergyAssetType.HYDROGEN_TRUCK) {
			HydrogenTrucks += 1;
		}
	}
}
int totalTrucks = DieselTrucks + ElectricTrucks + HydrogenTrucks;
int DieselTrucks_pct = 100;
int ElectricTrucks_pct = 0;
int HydrogenTrucks_pct = 0;
if (totalTrucks != 0) {
	DieselTrucks_pct = roundToInt(100 * DieselTrucks / totalTrucks);
	ElectricTrucks_pct = roundToInt(100 * ElectricTrucks / totalTrucks);
	HydrogenTrucks_pct = roundToInt(100 * HydrogenTrucks / totalTrucks);
}
uI_Tabs.pop_tabMobility.get(0).getSliderFossilFuelTrucks_pct().setValue(DieselTrucks_pct, false);
uI_Tabs.pop_tabMobility.get(0).getSliderElectricTrucks_pct().setValue(ElectricTrucks_pct, false);
uI_Tabs.pop_tabMobility.get(0).getSliderHydrogenTrucks_pct().setValue(HydrogenTrucks_pct, false);

// VANS:
int DieselVans = 0;
int ElectricVans = 0;
int HydrogenVans = 0;
for (GCUtility gc : energyModel.UtilityConnections) {
	for (J_EAVehicle vehicle : gc.c_vehicleAssets) {
		if (vehicle instanceof J_EADieselVehicle && vehicle.getEAType() == OL_EnergyAssetType.DIESEL_VAN) {
			DieselVans += 1;
		}
		else if (vehicle instanceof J_EAEV && vehicle.getEAType() == OL_EnergyAssetType.ELECTRIC_VAN) {
			ElectricVans += 1;
		}
		else if (vehicle instanceof J_EAHydrogenVehicle && vehicle.getEAType() == OL_EnergyAssetType.HYDROGEN_VAN) {
			HydrogenVans += 1;
		}
	}
}
int totalVans = DieselVans + ElectricVans + HydrogenVans;
int DieselVans_pct = 100;
int ElectricVans_pct = 0;
int HydrogenVans_pct = 0;
if (totalVans != 0) {
	DieselVans_pct = roundToInt(100 * DieselVans / totalVans);
	ElectricVans_pct = roundToInt(100 * ElectricVans / totalVans);
	HydrogenVans_pct = roundToInt(100 * HydrogenVans / totalVans);
}
uI_Tabs.pop_tabMobility.get(0).getSliderFossilFuelVans_pct().setValue(DieselVans_pct, false);
uI_Tabs.pop_tabMobility.get(0).getSliderElectricVans_pct().setValue(ElectricVans_pct, false);
//sl_hydrogenVans.setValue(HydrogenVans_pct, false);
		
// DIESEL_VEHICLE:  // Currently only for Company Cars not household Cars / EVs
int DieselCars = 0;
int ElectricCars = 0;
int HydrogenCars = 0;
for (GCUtility gc : energyModel.UtilityConnections) {
	for (J_EAVehicle vehicle : gc.c_vehicleAssets) {
		if (vehicle instanceof J_EADieselVehicle && vehicle.getEAType() == OL_EnergyAssetType.DIESEL_VEHICLE) {
			DieselCars += 1;
		}
		else if (vehicle instanceof J_EAEV && vehicle.getEAType() == OL_EnergyAssetType.ELECTRIC_VEHICLE) {
			ElectricCars += 1;
		}
		else if (vehicle instanceof J_EAHydrogenVehicle && vehicle.getEAType() == OL_EnergyAssetType.HYDROGEN_VEHICLE) {
			HydrogenCars += 1;
		}
	}
}
int totalCars = DieselCars + ElectricCars + HydrogenCars;
int DieselCars_pct = 100;
int ElectricCars_pct = 0;
int HydrogenCars_pct = 0;
if (totalCars != 0) {
	DieselCars_pct = roundToInt(100 * DieselCars / totalCars);
	ElectricCars_pct = roundToInt(100 * ElectricCars / totalCars);
	HydrogenCars_pct = roundToInt(100 * HydrogenCars / totalCars);
}
uI_Tabs.pop_tabMobility.get(0).getSliderFossilFuelCars_pct().setValue(DieselCars_pct, false);
uI_Tabs.pop_tabMobility.get(0).getSliderElectricCars_pct().setValue(ElectricCars_pct, false);
//sl_hydrogenCars.setValue(HydrogenCars_pct, false);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1718552624959</Id>
					<Name><![CDATA[f_selectCharger]]></Name>
					<X>70</X><Y>1140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[charger]]></Name>
						<Type><![CDATA[GCPublicCharger]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[objectGIS]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[objectGIS.gisRegion.setFillColor( v_selectionColor );
objectGIS.gisRegion.setLineColor( orange );

//set info text
v_clickedObjectText = ""; //charger.p_CPOName + " laadpunt, ";
if (charger.p_address == null || charger.p_address.getAddress() == null) {
	v_clickedObjectAdress = "Onbekend adres";
}
else{
	v_clickedObjectAdress = charger.p_address.getStreetName();
}
v_clickedObjectDetails = "No detaild info of charger available";

//v_clickedGridConnection = charger;
c_selectedGridConnections = new ArrayList<GridConnection>(Arrays.asList(charger));
f_updateUIresultsGridConnection(uI_Results.v_gridConnection, c_selectedGridConnections);

//Set the UI button
f_setUIButton();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1718566260603</Id>
					<Name><![CDATA[f_setColorsBasedOnGridTopology_objects]]></Name>
					<X>1350</X><Y>1565</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gis_area]]></Name>
						<Type><![CDATA[GIS_Object]]></Type>
					</Parameter>
					<Body><![CDATA[if (gis_area.c_containedGridConnections.size() > 0) {
	Color c = gis_area.c_containedGridConnections.get(0).l_parentNodeElectric.getConnectedAgent().p_uniqueColor;
	gis_area.f_style(c, black, 1.0, null);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1719830600300</Id>
					<Name><![CDATA[f_getWeatherInfo]]></Name>
					<X>1240</X><Y>-280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_outsideTemperature = roundToDecimal(energyModel.v_currentAmbientTemperature_degC, 1);
v_solarIrradiance = roundToInt(energyModel.v_currentSolarPowerNormalized_r * 1200);

double windspeed = roundToDecimal(energyModel.v_currentWindPowerNormalized_r, 1);
if (windspeed < 0.2){
	v_windspeed = "Laag";
}
else if (windspeed < 0.6){
	v_windspeed = "Midden";
}
else if (windspeed < 0.8){
	v_windspeed = "Hoog";
}
else {
	v_windspeed = "Zeer hoog";
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720378447040</Id>
					<Name><![CDATA[f_setSliderRanges]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>85</X><Y>-620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[uI_Tabs.tabElectricity.p_minPublicChargerSlider = roundToInt( 100.0 * uI_Tabs.tabElectricity.v_currentNbChargers / uI_Tabs.tabElectricity.p_nbChargersInDatabase);
uI_Tabs.tabElectricity.sl_EVsWoonwijk.setValue(uI_Tabs.tabElectricity.p_minPublicChargerSlider, false );
uI_Tabs.tabElectricity.sl_EVsWoonwijk.setRange(uI_Tabs.tabElectricity.sl_EVsWoonwijk.getIntValue(), 100);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720793723819</Id>
					<Name><![CDATA[f_updateUIResultsData]]></Name>
					<X>80</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_selectedGridConnectionIndex = 0;

for (GridConnection gc : v_clickedBuilding.c_containedGridConnections) {
	if (!c_selectedGridConnections.contains(gc)) {
		c_selectedGridConnections.add(gc);
	}
}

f_updateUIresultsGridConnection(uI_Results.v_gridConnection, c_selectedGridConnections);]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720799287420</Id>
					<Name><![CDATA[f_updateUIresultsGridConnection]]></Name>
					<X>-650</X><Y>710</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gcList]]></Name>
						<Type><![CDATA[ArrayList<GridConnection>]]></Type>
					</Parameter>
					<Body><![CDATA[//Update to new variables
f_updateVariablesOfGCData(area, gcList);
f_updateLiveDataSets(area, gcList);
f_updateYearlyGCData(area, gcList);
f_updateWeeklyGCData(area, gcList);
f_updateBelastingduurKromme(area, gcList);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720820424632</Id>
					<Name><![CDATA[f_updateYearlyGCData]]></Name>
					<X>-620</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gcList]]></Name>
						<Type><![CDATA[ArrayList<GridConnection>]]></Type>
					</Parameter>
					<Body><![CDATA[//ArrayList<GridConnection> gcList = c_gcList;

//reset the datasets (is this required)?
if( area.v_dataElectricityBaseloadDemandYear_kW != null ){
	area.v_dataElectricityBaseloadDemandYear_kW.reset();
	area.v_dataElectricityForHeatDemandYear_kW.reset();
	area.v_dataElectricityForTransportDemandYear_kW.reset();
	area.v_dataElectricityForStorageDemandYear_kW.reset();
	area.v_dataNaturalGasDemandYear_kW.reset();
	area.v_dataPetroleumProductsDemandYear_kW.reset();
	area.v_dataElectricityForHydrogenDemandYear_kW.reset();
	area.v_dataElectricityPVSupplyYear_kW.reset();
	area.v_dataElectricityWindSupplyYear_kW.reset(); 
	area.v_dataElectricityStorageSupplyYear_kW.reset();
	area.v_dataElectricityV2GSupplyYear_kW.reset();
	area.v_dataHydrogenSupplyYear_kW.reset();
}
else{
	area.v_dataElectricityBaseloadDemandYear_kW= new DataSet(365);
	area.v_dataElectricityForHeatDemandYear_kW= new DataSet(365);
	area.v_dataElectricityForTransportDemandYear_kW= new DataSet(365);
	area.v_dataElectricityForStorageDemandYear_kW= new DataSet(365);
	area.v_dataNaturalGasDemandYear_kW= new DataSet(365);
	area.v_dataPetroleumProductsDemandYear_kW= new DataSet(365);
	area.v_dataElectricityForHydrogenDemandYear_kW= new DataSet(365);
	area.v_dataElectricityPVSupplyYear_kW= new DataSet(365);
	area.v_dataElectricityWindSupplyYear_kW= new DataSet(365);
	area.v_dataElectricityStorageSupplyYear_kW= new DataSet(365);
	area.v_dataElectricityV2GSupplyYear_kW= new DataSet(365);
	area.v_dataHydrogenSupplyYear_kW= new DataSet(365);
}

for (int i=0; i < gcList.get(0).data_annualBaseloadElectricityDemand_kW.size(); i++){ //we sume over the size of a random dataset (all datasets in this loop should ahve same size)
	
	//Create local variables
	double timeAxisValue = gcList.get(0).data_annualBaseloadElectricityDemand_kW.getX(i); // we get the X value from a random dataset 
	double electricityBaseloadDemandYear_kW = 0;
	double electricityForHeatDemandYear_kW = 0;
	double electricityForTransportDemandYear_kW = 0;
	double electricityForStorageDemandYear_kW = 0;
	double naturalGasDemandYear_kW = 0;
	double petroleumProductsDemandYear_kW = 0;
	double electricityForHydrogenDemandYear_kW = 0;
	double electricityPVSupplyYear_kW = 0;
	double electricityWindSupplyYear_kW = 0;
	double electricityStorageSupplyYear_kW = 0;
	double electricityV2GSupplyYear_kW = 0;
	double hydrogenSupplyYear_kW = 0;
	
	//accumulate values over gridcongestion
	for (GridConnection gc : gcList){
		electricityBaseloadDemandYear_kW += gc.data_annualBaseloadElectricityDemand_kW.getY(i);
		electricityForHeatDemandYear_kW += gc.data_annualHeatPumpElectricityDemand_kW.getY(i);
		electricityForTransportDemandYear_kW += gc.data_annualElectricVehicleDemand_kW.getY(i);
		electricityForStorageDemandYear_kW += gc.data_annualBatteriesDemand_kW.getY(i);
		naturalGasDemandYear_kW += gc.data_annualNaturalGasDemand_kW.getY(i);
		petroleumProductsDemandYear_kW += gc.data_annualDieselDemand_kW.getY(i);
		electricityForHydrogenDemandYear_kW += gc.data_annualHydrogenDemand_kW.getY(i);
		electricityPVSupplyYear_kW += gc.data_annualPVGeneration_kW.getY(i);
		electricityWindSupplyYear_kW += gc.data_annualWindGeneration_kW.getY(i);
		electricityStorageSupplyYear_kW += gc.data_annualBatteriesSupply_kW.getY(i);
		electricityV2GSupplyYear_kW += gc.data_annualV2GSupply_kW.getY(i);
		hydrogenSupplyYear_kW += gc.data_annualHydrogenSupply_kW.getY(i);
	}
	
	//add accumulated values to dataset
	area.v_dataElectricityBaseloadDemandYear_kW.add(timeAxisValue, electricityBaseloadDemandYear_kW);
	area.v_dataElectricityForHeatDemandYear_kW.add(timeAxisValue, electricityForHeatDemandYear_kW);
	area.v_dataElectricityForTransportDemandYear_kW.add(timeAxisValue, electricityForTransportDemandYear_kW);
	area.v_dataElectricityForStorageDemandYear_kW.add(timeAxisValue, electricityForStorageDemandYear_kW);
	area.v_dataNaturalGasDemandYear_kW.add(timeAxisValue, naturalGasDemandYear_kW);
	area.v_dataPetroleumProductsDemandYear_kW.add(timeAxisValue, petroleumProductsDemandYear_kW);
	area.v_dataElectricityForHydrogenDemandYear_kW.add(timeAxisValue, electricityForHydrogenDemandYear_kW);
	
	area.v_dataElectricityPVSupplyYear_kW.add(timeAxisValue, electricityPVSupplyYear_kW);
	area.v_dataElectricityWindSupplyYear_kW.add(timeAxisValue, electricityWindSupplyYear_kW);
	area.v_dataElectricityStorageSupplyYear_kW.add(timeAxisValue, electricityStorageSupplyYear_kW);
	area.v_dataElectricityV2GSupplyYear_kW.add(timeAxisValue, electricityV2GSupplyYear_kW);
	area.v_dataHydrogenSupplyYear_kW.add(timeAxisValue, hydrogenSupplyYear_kW);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720820539394</Id>
					<Name><![CDATA[f_updateWeeklyGCData]]></Name>
					<X>-620</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gcList]]></Name>
						<Type><![CDATA[ArrayList<GridConnection>]]></Type>
					</Parameter>
					<Body><![CDATA[//ArrayList<GridConnection> gcList = c_gcList;


//reset the datasets (is this required)?
if( area.v_dataElectricityBaseloadDemandSummerWeek_kW != null ){
	area.v_dataElectricityBaseloadDemandSummerWeek_kW.reset();
	area.v_dataElectricityForHeatDemandSummerWeek_kW.reset();
	area.v_dataElectricityForTransportDemandSummerWeek_kW.reset();
	area.v_dataElectricityForStorageDemandSummerWeek_kW.reset();
	area.v_dataNaturalGasDemandSummerWeek_kW.reset();
	area.v_dataPetroleumProductsDemandSummerWeek_kW.reset();
	area.v_dataElectricityForHydrogenDemandSummerWeek_kW.reset();
	area.v_dataElectricityPVSupplySummerWeek_kW.reset();
	area.v_dataElectricityWindSupplySummerWeek_kW.reset(); 
	area.v_dataElectricityStorageSupplySummerWeek_kW.reset();
	area.v_dataElectricityV2GSupplySummerWeek_kW.reset();
	area.v_dataHydrogenSupplySummerWeek_kW.reset();
	
	area.v_dataElectricityBaseloadDemandWinterWeek_kW.reset();
	area.v_dataElectricityForHeatDemandWinterWeek_kW.reset();
	area.v_dataElectricityForTransportDemandWinterWeek_kW.reset();
	area.v_dataElectricityForStorageDemandWinterWeek_kW.reset();
	area.v_dataNaturalGasDemandWinterWeek_kW.reset();
	area.v_dataPetroleumProductsDemandWinterWeek_kW.reset();
	area.v_dataElectricityForHydrogenDemandWinterWeek_kW.reset();
	area.v_dataElectricityPVSupplyWinterWeek_kW.reset();
	area.v_dataElectricityWindSupplyWinterWeek_kW.reset(); 
	area.v_dataElectricityStorageSupplyWinterWeek_kW.reset();
	area.v_dataElectricityV2GSupplyWinterWeek_kW.reset();
	area.v_dataHydrogenSupplyWinterWeek_kW.reset();
	
	area.v_dataNetLoadSummerWeek_kW.reset();
	area.v_dataNetLoadWinterWeek_kW.reset();
	area.v_dataElectricityDemandCapacitySummerWeek_kW.reset();
	area.v_dataElectricityDemandCapacityWinterWeek_kW.reset();
	area.v_dataElectricitySupplyCapacitySummerWeek_kW.reset();
	area.v_dataElectricitySupplyCapacityWinterWeek_kW.reset();
	
}
else {
	area.v_dataElectricityBaseloadDemandSummerWeek_kW = new DataSet(672);
	area.v_dataElectricityForHeatDemandSummerWeek_kW = new DataSet(672);
	area.v_dataElectricityForTransportDemandSummerWeek_kW = new DataSet(672);
	area.v_dataElectricityForStorageDemandSummerWeek_kW = new DataSet(672);
	area.v_dataNaturalGasDemandSummerWeek_kW = new DataSet(672);
	area.v_dataPetroleumProductsDemandSummerWeek_kW = new DataSet(672);
	area.v_dataElectricityForHydrogenDemandSummerWeek_kW = new DataSet(672);
	area.v_dataElectricityPVSupplySummerWeek_kW = new DataSet(672);
	area.v_dataElectricityWindSupplySummerWeek_kW = new DataSet(672);
	area.v_dataElectricityStorageSupplySummerWeek_kW = new DataSet(672);
	area.v_dataElectricityV2GSupplySummerWeek_kW = new DataSet(672);
	area.v_dataHydrogenSupplySummerWeek_kW = new DataSet(672);
	
	area.v_dataElectricityBaseloadDemandWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityForHeatDemandWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityForTransportDemandWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityForStorageDemandWinterWeek_kW = new DataSet(672);
	area.v_dataNaturalGasDemandWinterWeek_kW = new DataSet(672);
	area.v_dataPetroleumProductsDemandWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityForHydrogenDemandWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityPVSupplyWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityWindSupplyWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityStorageSupplyWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityV2GSupplyWinterWeek_kW = new DataSet(672);
	area.v_dataHydrogenSupplyWinterWeek_kW = new DataSet(672);
	
	area.v_dataNetLoadSummerWeek_kW = new DataSet(672);
	area.v_dataNetLoadWinterWeek_kW = new DataSet(672);
	area.v_dataElectricityDemandCapacitySummerWeek_kW = new DataSet(672);
	area.v_dataElectricityDemandCapacityWinterWeek_kW = new DataSet(672);
	area.v_dataElectricitySupplyCapacitySummerWeek_kW = new DataSet(672);
	area.v_dataElectricitySupplyCapacityWinterWeek_kW = new DataSet(672);
}


for (int i=0; i < gcList.get(0).data_summerWeekBaseloadElectricityDemand_kW.size(); i++){ //we sum over the size of a random dataset (all datasets in this loop should ahve same size)
	
	//Create local variables
	double timeAxisValueSummer = gcList.get(0).data_summerWeekBaseloadElectricityDemand_kW.getX(i); // we get the X value from a random dataset 
	double timeAxisValueWinter = gcList.get(0).data_winterWeekBaseloadElectricityDemand_kW.getX(i); // we get the X value from a random dataset 
	
	double electricityBaseloadDemandSummerWeek_kW = 0;
	double electricityForHeatDemandSummerWeek_kW = 0;
	double electricityForTransportDemandSummerWeek_kW = 0;
	double electricityForStorageDemandSummerWeek_kW = 0;
	double naturalGasDemandSummerWeek_kW = 0;
	double petroleumProductsDemandSummerWeek_kW = 0;
	double electricityForHydrogenDemandSummerWeek_kW = 0;
	double electricityPVSupplySummerWeek_kW = 0;
	double electricityWindSupplySummerWeek_kW = 0;
	double electricityStorageSupplySummerWeek_kW = 0;
	double electricityV2GSupplySummerWeek_kW = 0;
	double hydrogenSupplySummerWeek_kW = 0;
	
	double electricityBaseloadDemandWinterWeek_kW = 0;
	double electricityForHeatDemandWinterWeek_kW = 0;
	double electricityForTransportDemandWinterWeek_kW = 0;
	double electricityForStorageDemandWinterWeek_kW = 0;
	double naturalGasDemandWinterWeek_kW = 0;
	double petroleumProductsDemandWinterWeek_kW = 0;
	double electricityForHydrogenDemandWinterWeek_kW = 0;
	double electricityPVSupplyWinterWeek_kW = 0;
	double electricityWindSupplyWinterWeek_kW = 0;
	double electricityStorageSupplyWinterWeek_kW = 0;
	double electricityV2GSupplyWinterWeek_kW = 0;
	double hydrogenSupplyWinterWeek_kW = 0;
	
	double netLoadSummerWeek_kW = 0;
	double netLoadWinterWeek_kW = 0;
	double electricityDemandCapacitySummerWeek_kW = 0;
	double electricityDemandCapacityWinterWeek_kW = 0;
	double electricitySupplyCapacitySummerWeek_kW = 0;
	double electricitySupplyCapacityWinterWeek_kW = 0;
	
	//accumulate values over gridcongestion
	for (GridConnection gc : gcList){
		electricityBaseloadDemandSummerWeek_kW += gc.data_summerWeekBaseloadElectricityDemand_kW.getY(i);
		electricityForHeatDemandSummerWeek_kW += gc.data_summerWeekHeatPumpElectricityDemand_kW.getY(i);
		electricityForTransportDemandSummerWeek_kW += gc.data_summerWeekElectricVehicleDemand_kW.getY(i);
		electricityForStorageDemandSummerWeek_kW += gc.data_summerWeekBatteriesDemand_kW.getY(i);
		naturalGasDemandSummerWeek_kW += gc.data_summerWeekNaturalGasDemand_kW.getY(i);
		petroleumProductsDemandSummerWeek_kW += gc.data_summerWeekDieselDemand_kW.getY(i);
		electricityForHydrogenDemandSummerWeek_kW += gc.data_summerWeekHydrogenDemand_kW.getY(i);
		electricityPVSupplySummerWeek_kW += gc.data_summerWeekPVGeneration_kW.getY(i);
		electricityWindSupplySummerWeek_kW += gc.data_summerWeekWindGeneration_kW.getY(i);
		electricityStorageSupplySummerWeek_kW += gc.data_summerWeekBatteriesSupply_kW.getY(i);
		electricityV2GSupplySummerWeek_kW += gc.data_summerWeekV2GSupply_kW.getY(i);
		hydrogenSupplySummerWeek_kW += gc.data_summerWeekHydrogenSupply_kW.getY(i);
		
		electricityBaseloadDemandWinterWeek_kW += gc.data_winterWeekBaseloadElectricityDemand_kW.getY(i);
		electricityForHeatDemandWinterWeek_kW += gc.data_winterWeekHeatPumpElectricityDemand_kW.getY(i);
		electricityForTransportDemandWinterWeek_kW += gc.data_winterWeekElectricVehicleDemand_kW.getY(i);
		electricityForStorageDemandWinterWeek_kW += gc.data_winterWeekBatteriesDemand_kW.getY(i);
		naturalGasDemandWinterWeek_kW += gc.data_winterWeekNaturalGasDemand_kW.getY(i);
		petroleumProductsDemandWinterWeek_kW += gc.data_winterWeekDieselDemand_kW.getY(i);
		electricityForHydrogenDemandWinterWeek_kW += gc.data_winterWeekHydrogenDemand_kW.getY(i);
		electricityPVSupplyWinterWeek_kW += gc.data_winterWeekPVGeneration_kW.getY(i);
		electricityWindSupplyWinterWeek_kW += gc.data_winterWeekWindGeneration_kW.getY(i);
		electricityStorageSupplyWinterWeek_kW += gc.data_winterWeekBatteriesSupply_kW.getY(i);
		electricityV2GSupplyWinterWeek_kW += gc.data_winterWeekV2GSupply_kW.getY(i);
		hydrogenSupplyWinterWeek_kW += gc.data_winterWeekHydrogenSupply_kW.getY(i);
	
		netLoadSummerWeek_kW += gc.acc_summerElectricityBalance_kW.getY(i);
		netLoadWinterWeek_kW += gc.acc_winterElectricityBalance_kW.getY(i);
		electricityDemandCapacitySummerWeek_kW += gc.acc_summerDeliveryCapacity_kW.getY(i);
		electricityDemandCapacityWinterWeek_kW += gc.acc_winterDeliveryCapacity_kW.getY(i);
		electricitySupplyCapacitySummerWeek_kW -= gc.acc_summerFeedinCapacity_kW.getY(i);
		electricitySupplyCapacityWinterWeek_kW -= gc.acc_winterFeedinCapacity_kW.getY(i);
	}
	
	//add accumulated values to dataset
	area.v_dataElectricityBaseloadDemandSummerWeek_kW.add(timeAxisValueSummer, electricityBaseloadDemandSummerWeek_kW);
	area.v_dataElectricityForHeatDemandSummerWeek_kW.add(timeAxisValueSummer, electricityForHeatDemandSummerWeek_kW);
	area.v_dataElectricityForTransportDemandSummerWeek_kW.add(timeAxisValueSummer, electricityForTransportDemandSummerWeek_kW);
	area.v_dataElectricityForStorageDemandSummerWeek_kW.add(timeAxisValueSummer, electricityForStorageDemandSummerWeek_kW);
	area.v_dataNaturalGasDemandSummerWeek_kW.add(timeAxisValueSummer, naturalGasDemandSummerWeek_kW);
	area.v_dataPetroleumProductsDemandSummerWeek_kW.add(timeAxisValueSummer, petroleumProductsDemandSummerWeek_kW);
	area.v_dataElectricityForHydrogenDemandSummerWeek_kW.add(timeAxisValueSummer, electricityForHydrogenDemandSummerWeek_kW);
	area.v_dataElectricityPVSupplySummerWeek_kW.add(timeAxisValueSummer, electricityPVSupplySummerWeek_kW);
	area.v_dataElectricityWindSupplySummerWeek_kW.add(timeAxisValueSummer, electricityWindSupplySummerWeek_kW);
	area.v_dataElectricityStorageSupplySummerWeek_kW.add(timeAxisValueSummer, electricityStorageSupplySummerWeek_kW);
	area.v_dataElectricityV2GSupplySummerWeek_kW.add(timeAxisValueSummer, electricityV2GSupplySummerWeek_kW);
	area.v_dataHydrogenSupplySummerWeek_kW.add(timeAxisValueSummer, hydrogenSupplySummerWeek_kW);
	
	area.v_dataNetLoadSummerWeek_kW.add(timeAxisValueSummer, netLoadSummerWeek_kW);
	area.v_dataElectricityDemandCapacitySummerWeek_kW.add(timeAxisValueSummer, electricityDemandCapacitySummerWeek_kW);
	area.v_dataElectricitySupplyCapacitySummerWeek_kW.add(timeAxisValueSummer, electricitySupplyCapacitySummerWeek_kW);
	
	area.v_dataElectricityBaseloadDemandWinterWeek_kW.add(timeAxisValueWinter, electricityBaseloadDemandWinterWeek_kW);
	area.v_dataElectricityForHeatDemandWinterWeek_kW.add(timeAxisValueWinter, electricityForHeatDemandWinterWeek_kW);
	area.v_dataElectricityForTransportDemandWinterWeek_kW.add(timeAxisValueWinter, electricityForTransportDemandWinterWeek_kW);
	area.v_dataElectricityForStorageDemandWinterWeek_kW.add(timeAxisValueWinter, electricityForStorageDemandWinterWeek_kW);
	area.v_dataNaturalGasDemandWinterWeek_kW.add(timeAxisValueWinter, naturalGasDemandWinterWeek_kW);
	area.v_dataPetroleumProductsDemandWinterWeek_kW.add(timeAxisValueWinter, petroleumProductsDemandWinterWeek_kW);
	area.v_dataElectricityForHydrogenDemandWinterWeek_kW.add(timeAxisValueWinter, electricityForHydrogenDemandWinterWeek_kW);
	area.v_dataElectricityPVSupplyWinterWeek_kW.add(timeAxisValueWinter, electricityPVSupplyWinterWeek_kW);
	area.v_dataElectricityWindSupplyWinterWeek_kW.add(timeAxisValueWinter, electricityWindSupplyWinterWeek_kW);
	area.v_dataElectricityStorageSupplyWinterWeek_kW.add(timeAxisValueWinter, electricityStorageSupplyWinterWeek_kW);
	area.v_dataElectricityV2GSupplyWinterWeek_kW.add(timeAxisValueWinter, electricityV2GSupplyWinterWeek_kW);
	area.v_dataHydrogenSupplyWinterWeek_kW.add(timeAxisValueWinter, hydrogenSupplyWinterWeek_kW);	

	area.v_dataNetLoadWinterWeek_kW.add(timeAxisValueWinter, netLoadWinterWeek_kW);
	area.v_dataElectricityDemandCapacityWinterWeek_kW.add(timeAxisValueWinter, electricityDemandCapacityWinterWeek_kW);
	area.v_dataElectricitySupplyCapacityWinterWeek_kW.add(timeAxisValueWinter, electricitySupplyCapacityWinterWeek_kW);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720820656291</Id>
					<Name><![CDATA[f_updateVariablesOfGCData]]></Name>
					<X>-620</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gcList]]></Name>
						<Type><![CDATA[ArrayList<GridConnection>]]></Type>
					</Parameter>
					<Body><![CDATA[//ArrayList<GridConnection> gcList = c_gcList;

// Can't use pointer for (immutable) primitives in Java, so need to manually update results after a year-sim!!
area.v_gridCapacityDemand_kW = sum(gcList, x -> x.p_contractedDeliveryCapacity_kW);
area.v_gridCapacitySupply_kW = sum(gcList, x -> x.p_contractedFeedinCapacity_kW);

// KPIs for 'samenvatting' 
area.v_modelSelfConsumption_fr = sum(gcList, x -> x.v_totalEnergyProduced_MWh) > 0 ? sum(gcList, x -> x.v_totalSelfConsumedEnergy_MWh) / sum(gcList, x -> x.v_totalEnergyProduced_MWh) : 0.0;
//area.v_individualSelfSufficiency_fr = GC.v_individualSelfSufficiency_fr;
area.v_modelSelfSufficiency_fr = sum(gcList, x -> x.v_totalEnergyProduced_MWh) > 0 ? sum(gcList, x -> x.v_totalSelfConsumedEnergy_MWh) / sum(gcList, x -> x.v_totalEnergyConsumed_MWh): 0.0;
//area.v_totalTimeOverloadedTransformers_h = GC.v_netOverloadDuration_h;

//Yearly
area.v_annualTotalConsumedEnergy_MWh = sum(gcList, x -> x.v_totalEnergyConsumed_MWh);
area.v_annualTotalProducedEnergy_MWh = sum(gcList, x -> x.v_totalEnergyProduced_MWh);
area.v_annualImportedEnergy_MWh = sum(gcList, x -> x.v_totalImport_MWh);
area.v_annualExportedEnergy_MWh = sum(gcList, x -> x.v_totalExport_MWh);
area.v_annualSelfConsumedEnergy_MWh = sum(gcList, x -> x.v_totalSelfConsumedEnergy_MWh);

area.v_annualElectricityConsumed_MWh = sum(gcList, x -> x.v_totalElectricityConsumed_MWh);
area.v_annualElectricityImport_MWh = sum(gcList, x -> x.v_electricityDrawnFromGrid_kWh) / 1000;
area.v_annualElectricityExport_MWh = sum(gcList, x -> x.v_electricityDeliveredToGrid_kWh) / 1000;
area.v_annualSelfConsumedElectricity_MWh = sum(gcList, x -> x.v_totalElectricitySelfConsumed_MWh);

area.v_annualNaturalGasDemand_MWh = sum(gcList, x -> x.v_methaneDrawn_kWh) / 1000;
area.v_annualPetroleumProductsDemand_MWh = sum(gcList, x -> x.v_dieselDrawn_kWh) / 1000;
area.v_annualHydrogenDemand_MWh = sum(gcList, x -> x.v_hydrogenDrawn_kWh) / 1000;
area.v_annualHydrogenSupply_MWh = sum(gcList, x -> x.v_hydrogenDelivered_kWh) / 1000;

//Overload duration (for multiple GC this does not really make sense right?, would be more interesting to see the influence of their combined contract capacity)
area.v_annualOverloadDurationDelivery_hr = sum(gcList, x -> x.v_totalOverloadDurationDelivery_hr);
area.v_annualOverloadDurationFeedin_hr = sum(gcList, x -> x.v_totalOverloadDurationFeedin_hr);

//Previous annual values: does not work (yet) for multiselect.
area.v_previousTotals = uI_Results.c_previousTotals_GC.get(gcList.get(0));


// Summer/winter
area.v_importedEnergySummerWeek_MWh = sum(gcList, x -> x.v_summerWeekTotalImport_MWh);
area.v_exportedEnergySummerWeek_MWh = sum(gcList, x -> x.v_summerWeekTotalExport_MWh);
area.v_selfConsumedEnergySummerWeek_MWh = sum(gcList, x -> x.v_summerWeekSelfConsumedEnergy_MWh);

area.v_importedElectricitySummerWeek_MWh = sum(gcList, x -> x.v_summerWeekElectricityImport_MWh);
area.v_exportedElectricitySummerWeek_MWh = sum(gcList, x -> x.v_summerWeekElectricityExport_MWh);
area.v_selfConsumedElectricitySummerWeek_MWh = sum(gcList, x -> x.v_summerWeekElectricitySelfConsumed_MWh);

area.v_naturalGasDemandSummerWeek_MWh = sum(gcList, x -> x.v_summerWeekMethaneImport_MWh);
area.v_petroleumProductsDemandSummerWeek_MWh= sum(gcList, x -> x.v_summerWeekDieselImport_MWh);
area.v_hydrogenImportSummerWeek_MWh = sum(gcList, x -> x.v_summerWeekHydrogenImport_MWh);
area.v_hydrogenExportSummerWeek_MWh = sum(gcList, x -> x.v_summerWeekHydrogenExport_MWh);

area.v_importedEnergyWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekTotalImport_MWh);
area.v_exportedEnergyWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekTotalExport_MWh);
area.v_selfConsumedEnergyWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekSelfConsumedEnergy_MWh);

area.v_importedElectricityWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekElectricityImport_MWh);
area.v_exportedElectricityWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekElectricityExport_MWh);
area.v_selfConsumedElectricityWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekElectricitySelfConsumed_MWh);

area.v_naturalGasDemandWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekMethaneImport_MWh);
area.v_petroleumProductsDemandWinterWeek_MWh= sum(gcList, x -> x.v_winterWeekDieselImport_MWh);
area.v_hydrogenImportWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekHydrogenImport_MWh);
area.v_hydrogenExportWinterWeek_MWh = sum(gcList, x -> x.v_winterWeekHydrogenExport_MWh);

// Day/night
area.v_importedEnergyDaytime_MWh = sum(gcList, x -> x.v_daytimeTotalImport_MWh);
area.v_exportedEnergyDaytime_MWh = sum(gcList, x -> x.v_daytimeTotalExport_MWh);
area.v_selfConsumedEnergyDaytime_MWh = sum(gcList, x -> x.v_daytimeSelfConsumedEnergy_MWh);

area.v_importedElectricityDaytime_MWh = sum(gcList, x -> x.v_daytimeElectricityImport_MWh);
area.v_exportedElectricityDaytime_MWh = sum(gcList, x -> x.v_daytimeElectricityExport_MWh);
area.v_selfConsumedElectricityDaytime_MWh = sum(gcList, x -> x.v_daytimeElectricitySelfConsumed_MWh);

area.v_naturalGasDemandDaytime_MWh = sum(gcList, x -> x.v_daytimeMethaneImport_MWh);
area.v_petroleumProductsDemandDaytime_MWh= sum(gcList, x -> x.v_daytimeDieselImport_MWh);
area.v_hydrogenImportDaytime_MWh = sum(gcList, x -> x.v_daytimeHydrogenImport_MWh);
area.v_hydrogenExportDaytime_MWh = sum(gcList, x -> x.v_daytimeHydrogenExport_MWh);

area.v_importedEnergyNighttime_MWh = sum(gcList, x -> x.v_nighttimeTotalImport_MWh);
area.v_exportedEnergyNighttime_MWh = sum(gcList, x -> x.v_nighttimeTotalExport_MWh);
area.v_selfConsumedEnergyNighttime_MWh = sum(gcList, x -> x.v_nighttimeSelfConsumedEnergy_MWh);

area.v_importedElectricityNighttime_MWh = sum(gcList, x -> x.v_nighttimeElectricityImport_MWh);
area.v_exportedElectricityNighttime_MWh = sum(gcList, x -> x.v_nighttimeElectricityExport_MWh);
area.v_selfConsumedElectricityNighttime_MWh = sum(gcList, x -> x.v_nighttimeElectricitySelfConsumed_MWh);

area.v_naturalGasDemandNighttime_MWh = sum(gcList, x -> x.v_nighttimeMethaneImport_MWh);
area.v_petroleumProductsDemandNighttime_MWh= sum(gcList, x -> x.v_nighttimeDieselImport_MWh);
area.v_hydrogenImportNighttime_MWh = sum(gcList, x -> x.v_nighttimeHydrogenImport_MWh);
area.v_hydrogenExportNighttime_MWh = sum(gcList, x -> x.v_nighttimeHydrogenExport_MWh);

// Week/weekend
area.v_importedEnergyWeekday_MWh = sum(gcList, x -> x.v_weekdayTotalImport_MWh);
area.v_exportedEnergyWeekday_MWh = sum(gcList, x -> x.v_weekdayTotalExport_MWh);
area.v_selfConsumedEnergyWeekday_MWh = sum(gcList, x -> x.v_weekdaySelfConsumedEnergy_MWh);

area.v_importedElectricityWeekday_MWh = sum(gcList, x -> x.v_weekdayElectricityImport_MWh);
area.v_exportedElectricityWeekday_MWh = sum(gcList, x -> x.v_weekdayElectricityExport_MWh);
area.v_selfConsumedElectricityWeekday_MWh = sum(gcList, x -> x.v_weekdayElectricitySelfConsumed_MWh);

area.v_naturalGasDemandWeekday_MWh = sum(gcList, x -> x.v_weekdayMethaneImport_MWh);
area.v_petroleumProductsDemandWeekday_MWh= sum(gcList, x -> x.v_weekdayDieselImport_MWh);
area.v_hydrogenImportWeekday_MWh = sum(gcList, x -> x.v_weekdayHydrogenImport_MWh);
area.v_hydrogenExportWeekday_MWh = sum(gcList, x -> x.v_weekdayHydrogenExport_MWh);

area.v_importedEnergyWeekend_MWh = sum(gcList, x -> x.v_weekendTotalImport_MWh);
area.v_exportedEnergyWeekend_MWh = sum(gcList, x -> x.v_weekendTotalExport_MWh);
area.v_selfConsumedEnergyWeekend_MWh = sum(gcList, x -> x.v_weekendSelfConsumedEnergy_MWh);

area.v_importedElectricityWeekend_MWh = sum(gcList, x -> x.v_weekendElectricityImport_MWh);
area.v_exportedElectricityWeekend_MWh = sum(gcList, x -> x.v_weekendElectricityExport_MWh);
area.v_selfConsumedElectricityWeekend_MWh = sum(gcList, x -> x.v_weekendElectricitySelfConsumed_MWh);

area.v_naturalGasDemandWeekend_MWh = sum(gcList, x -> x.v_weekendMethaneImport_MWh);
area.v_petroleumProductsDemandWeekend_MWh= sum(gcList, x -> x.v_weekendDieselImport_MWh);
area.v_hydrogenImportWeekend_MWh = sum(gcList, x -> x.v_weekendHydrogenImport_MWh);
area.v_hydrogenExportWeekend_MWh = sum(gcList, x -> x.v_weekendHydrogenExport_MWh);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720820777814</Id>
					<Name><![CDATA[f_updateLiveDataSets]]></Name>
					<X>-620</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gcList]]></Name>
						<Type><![CDATA[ArrayList<GridConnection>]]></Type>
					</Parameter>
					<Body><![CDATA[//ArrayList<GridConnection> gcList = c_gcList;

int liveWeekSize = gcList.get(0).data_gridCapacityDemand_kW.size();

//traceln("List of selected gridconnections " + gcList.toString());

//reset the datasets (is this required)?
if( area.v_dataElectricityDemandCapacityLiveWeek_kW != null ){
	// Demand
	area.v_dataElectricityDemandCapacityLiveWeek_kW.reset();		
	area.v_dataElectricitySupplyCapacityLiveWeek_kW.reset();
	area.v_dataNetLoadLiveWeek_kW.reset();
	
	area.v_dataBaseloadElectricityDemandLiveWeek_kW.reset();
	area.v_dataElectricityForHeatDemandLiveWeek_kW.reset();
	area.v_dataElectricityForTransportDemandLiveWeek_kW.reset();
	area.v_dataPetroleumProductsDemandLiveWeek_kW.reset();
	area.v_dataNaturalGasDemandLiveWeek_kW.reset();
	area.v_dataElectricityForStorageDemandLiveWeek_kW.reset();
	area.v_dataElectricityForHydrogenDemandLiveWeek_kW.reset();
	
	// Supply
	area.v_dataWindElectricitySupplyLiveWeek_kW.reset();
	area.v_dataPVElectricitySupplyLiveWeek_kW.reset();
	area.v_dataStorageElectricitySupplyLiveWeek_kW.reset();
	area.v_dataV2GElectricitySupplyLiveWeek_kW.reset();
	area.v_dataHydrogenSupplyLiveWeek_kW.reset();
}
else {
	// Demand
	area.v_dataElectricityDemandCapacityLiveWeek_kW = new DataSet(672);
	area.v_dataElectricitySupplyCapacityLiveWeek_kW = new DataSet(672);
	area.v_dataNetLoadLiveWeek_kW = new DataSet(672);
	
	area.v_dataBaseloadElectricityDemandLiveWeek_kW = new DataSet(672);
	area.v_dataElectricityForHeatDemandLiveWeek_kW = new DataSet(672);
	area.v_dataElectricityForTransportDemandLiveWeek_kW = new DataSet(672);
	area.v_dataPetroleumProductsDemandLiveWeek_kW = new DataSet(672);
	area.v_dataNaturalGasDemandLiveWeek_kW = new DataSet(672);
	area.v_dataElectricityForStorageDemandLiveWeek_kW = new DataSet(672);
	area.v_dataElectricityForHydrogenDemandLiveWeek_kW = new DataSet(672);
	
	// Supply
	area.v_dataWindElectricitySupplyLiveWeek_kW = new DataSet(672);
	area.v_dataPVElectricitySupplyLiveWeek_kW = new DataSet(672);
	area.v_dataStorageElectricitySupplyLiveWeek_kW = new DataSet(672);
	area.v_dataV2GElectricitySupplyLiveWeek_kW = new DataSet(672);
	area.v_dataHydrogenSupplyLiveWeek_kW = new DataSet(672);
	}

for (int i=0; i < liveWeekSize; i++){ //we go back to update the existing live week data
	
	double timeAxisValue = gcList.get(0).data_gridCapacityDemand_kW.getX(i); // we get the X value from a random dataset 
	
	// Demand
	double electricityDemandCapacityLiveWeek_kW = 0;
	double electricitySupplyCapacityLiveWeek_kW = 0;
	double netLoadLiveWeek_kW = 0;
	
	double baseloadElectricityDemandLiveWeek_kW = 0;
	double electricityForHeatDemandLiveWeek_kW = 0;
	double electricityForTransportDemandLiveWeek_kW = 0;
	double petroleumProductsDemandLiveWeek_kW = 0;
	double naturalGasDemandLiveWeek_kW = 0;
	double electricityForStorageDemandLiveWeek_kW = 0;
	double electricityForHydrogenDemandLiveWeek_kW = 0;
	
	
	// Supply
	double windElectricitySupplyLiveWeek_kW = 0;
	double PVElectricitySupplyLiveWeek_kW = 0;
	double storageElectricitySupplyLiveWeek_kW = 0;
	double V2GElectricitySupplyLiveWeek_kW = 0;
	double hydrogenSupplyLiveWeek_kW = 0;
	
	
	for (GridConnection gc : gcList){
		// Demand
		electricityDemandCapacityLiveWeek_kW += gc.data_gridCapacityDemand_kW.getY(i);
		electricitySupplyCapacityLiveWeek_kW += gc.data_gridCapacitySupply_kW.getY(i);
		netLoadLiveWeek_kW  += gc.data_liveElectricityBalance_kW.getY(i);
	
		baseloadElectricityDemandLiveWeek_kW  += gc.data_baseloadElectricityDemand_kW.getY(i);
		electricityForHeatDemandLiveWeek_kW  += gc.data_heatPumpElectricityDemand_kW.getY(i);
		electricityForTransportDemandLiveWeek_kW += gc.data_electricVehicleDemand_kW.getY(i);
		petroleumProductsDemandLiveWeek_kW  += gc.data_dieselDemand_kW.getY(i);
		naturalGasDemandLiveWeek_kW  += gc.data_naturalGasDemand_kW.getY(i);
		electricityForStorageDemandLiveWeek_kW  += gc.data_batteryCharging_kW.getY(i);
		electricityForHydrogenDemandLiveWeek_kW  += gc.data_hydrogenElectricityDemand_kW.getY(i);
		
		// Supply
		windElectricitySupplyLiveWeek_kW  += gc.data_windGeneration_kW.getY(i);
		PVElectricitySupplyLiveWeek_kW  += gc.data_PVGeneration_kW.getY(i);
		storageElectricitySupplyLiveWeek_kW  += gc.data_batteryDischarging_kW.getY(i);
		V2GElectricitySupplyLiveWeek_kW  += gc.data_V2GSupply_kW.getY(i);
		hydrogenSupplyLiveWeek_kW  += gc.data_hydrogenSupply_kW.getY(i);	
	}
	
	area.v_dataElectricityDemandCapacityLiveWeek_kW.add(timeAxisValue, electricityDemandCapacityLiveWeek_kW);
	area.v_dataElectricitySupplyCapacityLiveWeek_kW.add(timeAxisValue, electricitySupplyCapacityLiveWeek_kW);
	area.v_dataNetLoadLiveWeek_kW.add(timeAxisValue, netLoadLiveWeek_kW);
	
	area.v_dataBaseloadElectricityDemandLiveWeek_kW.add(timeAxisValue, baseloadElectricityDemandLiveWeek_kW);
	area.v_dataElectricityForHeatDemandLiveWeek_kW.add(timeAxisValue, electricityForHeatDemandLiveWeek_kW);
	area.v_dataElectricityForTransportDemandLiveWeek_kW.add(timeAxisValue, electricityForTransportDemandLiveWeek_kW);
	area.v_dataPetroleumProductsDemandLiveWeek_kW.add(timeAxisValue, petroleumProductsDemandLiveWeek_kW);
	area.v_dataNaturalGasDemandLiveWeek_kW.add(timeAxisValue, naturalGasDemandLiveWeek_kW);
	area.v_dataElectricityForStorageDemandLiveWeek_kW.add(timeAxisValue, electricityForStorageDemandLiveWeek_kW);
	area.v_dataElectricityForHydrogenDemandLiveWeek_kW.add(timeAxisValue, electricityForHydrogenDemandLiveWeek_kW);
	
	// Supply
	area.v_dataWindElectricitySupplyLiveWeek_kW.add(timeAxisValue, windElectricitySupplyLiveWeek_kW);
	area.v_dataPVElectricitySupplyLiveWeek_kW.add(timeAxisValue, PVElectricitySupplyLiveWeek_kW);
	area.v_dataStorageElectricitySupplyLiveWeek_kW.add(timeAxisValue, storageElectricitySupplyLiveWeek_kW);
	area.v_dataV2GElectricitySupplyLiveWeek_kW.add(timeAxisValue, V2GElectricitySupplyLiveWeek_kW);
	area.v_dataHydrogenSupplyLiveWeek_kW.add(timeAxisValue, hydrogenSupplyLiveWeek_kW);
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1720820888674</Id>
					<Name><![CDATA[f_updateBelastingduurKromme]]></Name>
					<X>-620</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gcList]]></Name>
						<Type><![CDATA[ArrayList<GridConnection>]]></Type>
					</Parameter>
					<Body><![CDATA[//ArrayList<GridConnection> gcList = c_gcList;

if( area.v_dataNetbelastingDuurkrommeYear_kW != null ){

	area.v_dataNetLoadYear_kW = new double[35040];
	area.v_dataNetbelastingDuurkrommeYear_kW.reset();
	//area.v_dataNetbelastingDuurkrommeYearVorige_kW.reset();
	area.v_dataNetbelastingDuurkrommeSummer_kW.reset();
	area.v_dataNetbelastingDuurkrommeWinter_kW.reset();
	area.v_dataNetbelastingDuurkrommeDaytime_kW.reset();
	area.v_dataNetbelastingDuurkrommeNighttime_kW.reset();
	area.v_dataNetbelastingDuurkrommeWeekday_kW.reset();
	area.v_dataNetbelastingDuurkrommeWeekend_kW.reset();

}
else {
	area.v_dataNetLoadYear_kW = new double[roundToInt(365*24/energyModel.p_timeStep_h)];
	area.v_dataNetbelastingDuurkrommeYear_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));
	//area.v_dataNetbelastingDuurkrommeYearVorige_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));
	area.v_dataNetbelastingDuurkrommeSummer_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));
	area.v_dataNetbelastingDuurkrommeWinter_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));
	area.v_dataNetbelastingDuurkrommeDaytime_kW = new DataSet(roundToInt(365*24/2/energyModel.p_timeStep_h));
	area.v_dataNetbelastingDuurkrommeNighttime_kW = new DataSet(roundToInt(365*24/2/energyModel.p_timeStep_h));
	area.v_dataNetbelastingDuurkrommeWeekday_kW = new DataSet(roundToInt(365*24/7*5/energyModel.p_timeStep_h)+100);
	area.v_dataNetbelastingDuurkrommeWeekend_kW = new DataSet(roundToInt(365*24/7*2/energyModel.p_timeStep_h)+100);
}

// loop over gcs and call f_getduurkromme? Also sum the connection capacities
double totalDeliveryCapacity_kW = 0;
double totalFeedInCapacity_kW = 0;

for (GridConnection gc : gcList) {
	gc.f_getDuurkromme();
	gc.f_nfatoSetConnectionCapacity(true);
	totalDeliveryCapacity_kW += gc.p_contractedDeliveryCapacity_kW;
	totalFeedInCapacity_kW += gc.p_contractedFeedinCapacity_kW;
	gc.f_nfatoSetConnectionCapacity(false);
}

double[] NetbelastingDuurkrommeYear_kW = new double[roundToInt(365*24/energyModel.p_timeStep_h)];
//double[] NetbelastingDuurkrommeYearVorige_kW = new double[roundToInt(365*24/energyModel.p_timeStep_h)];
double[] NetbelastingDuurkrommeSummer_kW = new double[roundToInt(7*24/energyModel.p_timeStep_h)];
double[] NetbelastingDuurkrommeWinter_kW = new double[roundToInt(7*24/energyModel.p_timeStep_h)];
double[] NetbelastingDuurkrommeDaytime_kW = new double[roundToInt(365*24/2/energyModel.p_timeStep_h)];
double[] NetbelastingDuurkrommeNighttime_kW = new double[roundToInt(365*24/2/energyModel.p_timeStep_h)];
double[] NetbelastingDuurkrommeWeekday_kW = new double[roundToInt(365*24/7*5/energyModel.p_timeStep_h)+100];
double[] NetbelastingDuurkrommeWeekend_kW = new double[roundToInt(365*24/7*2/energyModel.p_timeStep_h)+100];

// Year
for (int i = 0; i < roundToInt(365*24/energyModel.p_timeStep_h); i++ ) {
	//double netLoadYear_kW = 0;
	double netbelastingDuurkrommeYear_kW = 0;
	//double netbelastingDuurkrommeYearVorige_kW = 0;
	// loop over gcs and add the values
	for (GridConnection gc : gcList) {	
		netbelastingDuurkrommeYear_kW += gc.data_netbelastingDuurkromme_kW.getY(i);
		//netbelastingDuurkrommeYearVorige_kW += gc.data_netbelastingDuurkrommeVorige_kW.getY(i);
	}
	NetbelastingDuurkrommeYear_kW[i] = -netbelastingDuurkrommeYear_kW;
	//NetbelastingDuurkrommeYearVorige_kW[i] = -netbelastingDuurkrommeYearVorige_kW;
	
}
// Summer / Winter
for (int i = 0; i < roundToInt(7*24/energyModel.p_timeStep_h); i++ ) {
	double netbelastingDuurkrommeSummer_kW = 0;
	double netbelastingDuurkrommeWinter_kW = 0;
	// loop over gcs and add the values
	for (GridConnection gc : gcList) {
		netbelastingDuurkrommeSummer_kW += gc.data_summerWeekNetbelastingDuurkromme_kW.getY(i);
		netbelastingDuurkrommeWinter_kW += gc.data_winterWeekNetbelastingDuurkromme_kW.getY(i);
	}
	NetbelastingDuurkrommeSummer_kW[i] = -netbelastingDuurkrommeSummer_kW;
	NetbelastingDuurkrommeWinter_kW[i] = -netbelastingDuurkrommeWinter_kW;

}
// Day / Night
for (int i = 0; i < roundToInt(365*24/2/energyModel.p_timeStep_h); i++ ) {
	double netbelastingDuurkrommeDaytime_kW = 0;
	double netbelastingDuurkrommeNighttime_kW = 0;
	// loop over gcs and add the values
	for (GridConnection gc : gcList) {
		netbelastingDuurkrommeDaytime_kW += gc.data_daytimeNetbelastingDuurkromme_kW.getY(i);
		netbelastingDuurkrommeNighttime_kW += gc.data_nighttimeNetbelastingDuurkromme_kW.getY(i);
	}
	NetbelastingDuurkrommeDaytime_kW[i] = -netbelastingDuurkrommeDaytime_kW;
	NetbelastingDuurkrommeNighttime_kW[i] = -netbelastingDuurkrommeNighttime_kW;

}
// Weekday
for (int i = 0; i < gcList.get(0).data_weekdayNetbelastingDuurkromme_kW.size(); i++ ) {
	double netbelastingDuurkrommeWeekday_kW = 0;
	// loop over gcs and add the values
	for (GridConnection gc : gcList) {
		netbelastingDuurkrommeWeekday_kW += gc.data_weekdayNetbelastingDuurkromme_kW.getY(i);
	}
	NetbelastingDuurkrommeWeekday_kW[i] = -netbelastingDuurkrommeWeekday_kW;

}
// Weekend
for (int i = 0; i < gcList.get(0).data_weekendNetbelastingDuurkromme_kW.size(); i++ ) {
	double netbelastingDuurkrommeWeekend_kW = 0;
	// loop over gcs and add the values
	for (GridConnection gc : gcList) {
		netbelastingDuurkrommeWeekend_kW += gc.data_weekendNetbelastingDuurkromme_kW.getY(i);
	}
	NetbelastingDuurkrommeWeekend_kW[i] = -netbelastingDuurkrommeWeekend_kW;
}

// Resort all the arrays 

Arrays.sort(NetbelastingDuurkrommeYear_kW);
//Arrays.sort(NetbelastingDuurkrommeYearVorige_kW);
Arrays.sort(NetbelastingDuurkrommeSummer_kW);
Arrays.sort(NetbelastingDuurkrommeWinter_kW);
Arrays.sort(NetbelastingDuurkrommeDaytime_kW);
Arrays.sort(NetbelastingDuurkrommeNighttime_kW);
Arrays.sort(NetbelastingDuurkrommeWeekday_kW);
Arrays.sort(NetbelastingDuurkrommeWeekend_kW);

// Fill the AreaCollection DataSets

int arraySize;
// Year
arraySize = NetbelastingDuurkrommeYear_kW.length;
for(int i=0; i< arraySize; i++) {
	area.v_dataNetbelastingDuurkrommeYear_kW.add(i*energyModel.p_timeStep_h, -NetbelastingDuurkrommeYear_kW[i]);
}
//for(int i=0; i< arraySize; i++) {
//	area.v_dataNetbelastingDuurkrommeYearVorige_kW.add(i*energyModel.p_timeStep_h, -NetbelastingDuurkrommeYearVorige_kW[i]);
//}
// Week
arraySize = NetbelastingDuurkrommeSummer_kW.length;
for(int i=0; i< arraySize; i++) {
	area.v_dataNetbelastingDuurkrommeSummer_kW.add(i*energyModel.p_timeStep_h, -NetbelastingDuurkrommeSummer_kW[i]);
}
for(int i=0; i< arraySize; i++) {
	area.v_dataNetbelastingDuurkrommeWinter_kW.add(i*energyModel.p_timeStep_h, -NetbelastingDuurkrommeWinter_kW[i]);
}
// Day / Night
arraySize = NetbelastingDuurkrommeDaytime_kW.length;
for(int i=0; i< arraySize; i++) {
	area.v_dataNetbelastingDuurkrommeDaytime_kW.add(i*energyModel.p_timeStep_h, -NetbelastingDuurkrommeDaytime_kW[i]);
}
for(int i=0; i< arraySize; i++) {
	area.v_dataNetbelastingDuurkrommeNighttime_kW.add(i*energyModel.p_timeStep_h, -NetbelastingDuurkrommeNighttime_kW[i]);
}
// Weekday
arraySize = NetbelastingDuurkrommeWeekday_kW.length;
for(int i=0; i< arraySize; i++) {
	area.v_dataNetbelastingDuurkrommeWeekday_kW.add(i*energyModel.p_timeStep_h, -NetbelastingDuurkrommeWeekday_kW[i]);
}
// Weekend
arraySize = NetbelastingDuurkrommeWeekend_kW.length;
for(int i=0; i< arraySize; i++) {
	area.v_dataNetbelastingDuurkrommeWeekend_kW.add(i*energyModel.p_timeStep_h, -NetbelastingDuurkrommeWeekend_kW[i]);
}

// Connection Capacity
area.data_gridCapacityDemandYear_kW.add(0, totalDeliveryCapacity_kW);
area.data_gridCapacityDemandYear_kW.add(8760, totalDeliveryCapacity_kW);
area.data_gridCapacitySupplyYear_kW.add(0, -totalFeedInCapacity_kW);
area.data_gridCapacitySupplyYear_kW.add(8760, -totalFeedInCapacity_kW);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721290570561</Id>
					<Name><![CDATA[f_multiSelect]]></Name>
					<X>50</X><Y>1220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[clickx]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[clicky]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// TODO: if selected object was a trafo before enabling this deselect it?

//Check if click was on Building
for ( GIS_Building b : energyModel.pop_GIS_Buildings ){
	if( b.gisRegion != null && b.gisRegion.contains(clickx, clicky) ){
		if (b.gisRegion.isVisible()) {
			for (GridConnection GC : b.c_containedGridConnections) {
				if (GC != null) {
					if (c_selectedGridConnections.contains(GC)) {
						c_selectedGridConnections.remove(GC);
						for (GIS_Object a : GC.c_connectedGISObjects) {
							f_styleAreas(a);
						}
					}
					else {
						c_selectedGridConnections.add(GC);
						for (GIS_Object a : GC.c_connectedGISObjects) {
							a.gisRegion.setFillColor(v_selectionColorAddBuildings);
						}
					}
				}
			}
		}
	}
}

if (c_selectedGridConnections.size() > 0) {
	f_updateUIresultsGridConnection(uI_Results.v_gridConnection, c_selectedGridConnections);
	uI_Results.v_selectedObjectType = OL_GISObjectType.BUILDING;
	if (p_selectedProjectType == OL_ProjectType.BUSINESSPARK) {
		if (c_selectedGridConnections.size() > 1) {
			//traceln("Selected " + c_gcList.size() + " gc's.");
			//traceln(uI_Results.v_individualGridConnections);
			uI_Results.c_individualGridConnections = new ArrayList<AreaCollection>();
			for (int i = 0; i < c_selectedGridConnections.size(); i++) {
				//traceln("GC: " + c_gcList.get(i).p_ownerID);
				uI_Results.c_individualGridConnections.add(new AreaCollection());
				//traceln("before: " + uI_Results.v_individualGridConnections.get(i).v_annualSelfConsumedEnergy_MWh);
				uI_Results.c_individualGridConnections.get(i).p_name = c_selectedGridConnections.get(i).p_ownerID;
				f_updateUIresultsGridConnection(uI_Results.c_individualGridConnections.get(i), new ArrayList<GridConnection>(c_selectedGridConnections.subList(i, i+1)));
				//traceln("after: " + uI_Results.v_individualGridConnections.get(i).v_annualSelfConsumedEnergy_MWh);	
			}
			
			f_updateTotalLiveDataSets();
			f_updateTotalYearlyDataSets();
			f_updateTotalWeeklyDataSets();
	
		}
	}
}
else {
	uI_Results.v_selectedObjectType = OL_GISObjectType.REGION;
}
uI_Results.f_showCorrectChart();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721305389703</Id>
					<Name><![CDATA[f_addTimeStepLiveDataSets]]></Name>
					<X>-620</X><Y>830</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gcList]]></Name>
						<Type><![CDATA[ArrayList<GridConnection>]]></Type>
					</Parameter>
					<Body><![CDATA[//AreaCollection area = uI_Results.v_gridConnection;
int i = max(0, gcList.get(0).data_gridCapacityDemand_kW.size() - 1);
	
double timeAxisValue = gcList.get(0).data_gridCapacityDemand_kW.getX(i); // we get the X value from a random dataset 

// Demand
double electricityDemandCapacityLiveWeek_kW = 0;
double electricitySupplyCapacityLiveWeek_kW = 0;
double netLoadLiveWeek_kW = 0;

double baseloadElectricityDemandLiveWeek_kW = 0;
double electricityForHeatDemandLiveWeek_kW = 0;
double electricityForTransportDemandLiveWeek_kW = 0;
double petroleumProductsDemandLiveWeek_kW = 0;
double naturalGasDemandLiveWeek_kW = 0;
double electricityForStorageDemandLiveWeek_kW = 0;
double electricityForHydrogenDemandLiveWeek_kW = 0;

// Supply
double windElectricitySupplyLiveWeek_kW = 0;
double PVElectricitySupplyLiveWeek_kW = 0;
double storageElectricitySupplyLiveWeek_kW = 0;
double V2GElectricitySupplyLiveWeek_kW = 0;
double hydrogenSupplyLiveWeek_kW = 0;

for (GridConnection gc : gcList){
	// Demand
	electricityDemandCapacityLiveWeek_kW += gc.data_gridCapacityDemand_kW.getY(i);
	electricitySupplyCapacityLiveWeek_kW += gc.data_gridCapacitySupply_kW.getY(i);
	netLoadLiveWeek_kW  += gc.data_liveElectricityBalance_kW.getY(i);

	baseloadElectricityDemandLiveWeek_kW  += gc.data_baseloadElectricityDemand_kW.getY(i);
	electricityForHeatDemandLiveWeek_kW  += gc.data_heatPumpElectricityDemand_kW.getY(i);
	electricityForTransportDemandLiveWeek_kW += gc.data_electricVehicleDemand_kW.getY(i);
	petroleumProductsDemandLiveWeek_kW  += gc.data_dieselDemand_kW.getY(i);
	naturalGasDemandLiveWeek_kW  += gc.data_naturalGasDemand_kW.getY(i);
	electricityForStorageDemandLiveWeek_kW  += gc.data_batteryCharging_kW.getY(i);
	electricityForHydrogenDemandLiveWeek_kW  += gc.data_hydrogenElectricityDemand_kW.getY(i);
	
	// Supply
	windElectricitySupplyLiveWeek_kW  += gc.data_windGeneration_kW.getY(i);
	PVElectricitySupplyLiveWeek_kW  += gc.data_PVGeneration_kW.getY(i);
	storageElectricitySupplyLiveWeek_kW  += gc.data_batteryDischarging_kW.getY(i);
	V2GElectricitySupplyLiveWeek_kW  += gc.data_V2GSupply_kW.getY(i);
	hydrogenSupplyLiveWeek_kW  += gc.data_hydrogenSupply_kW.getY(i);	
}

area.v_dataElectricityDemandCapacityLiveWeek_kW.add(timeAxisValue, electricityDemandCapacityLiveWeek_kW);
area.v_dataElectricitySupplyCapacityLiveWeek_kW.add(timeAxisValue, electricitySupplyCapacityLiveWeek_kW);
area.v_dataNetLoadLiveWeek_kW.add(timeAxisValue, netLoadLiveWeek_kW);

area.v_dataBaseloadElectricityDemandLiveWeek_kW.add(timeAxisValue, baseloadElectricityDemandLiveWeek_kW);
area.v_dataElectricityForHeatDemandLiveWeek_kW.add(timeAxisValue, electricityForHeatDemandLiveWeek_kW);
area.v_dataElectricityForTransportDemandLiveWeek_kW.add(timeAxisValue, electricityForTransportDemandLiveWeek_kW);
area.v_dataPetroleumProductsDemandLiveWeek_kW.add(timeAxisValue, petroleumProductsDemandLiveWeek_kW);
area.v_dataNaturalGasDemandLiveWeek_kW.add(timeAxisValue, naturalGasDemandLiveWeek_kW);
area.v_dataElectricityForStorageDemandLiveWeek_kW.add(timeAxisValue, electricityForStorageDemandLiveWeek_kW);
area.v_dataElectricityForHydrogenDemandLiveWeek_kW.add(timeAxisValue, electricityForHydrogenDemandLiveWeek_kW);

// Supply
area.v_dataWindElectricitySupplyLiveWeek_kW.add(timeAxisValue, windElectricitySupplyLiveWeek_kW);
area.v_dataPVElectricitySupplyLiveWeek_kW.add(timeAxisValue, PVElectricitySupplyLiveWeek_kW);
area.v_dataStorageElectricitySupplyLiveWeek_kW.add(timeAxisValue, storageElectricitySupplyLiveWeek_kW);
area.v_dataV2GElectricitySupplyLiveWeek_kW.add(timeAxisValue, V2GElectricitySupplyLiveWeek_kW);
area.v_dataHydrogenSupplyLiveWeek_kW.add(timeAxisValue, hydrogenSupplyLiveWeek_kW);

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721991420806</Id>
					<Name><![CDATA[f_setGridTopologyColors]]></Name>
					<X>-650</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Find all MV substations
List<GridNode> MVsubstations = findAll(energyModel.pop_gridNodes, GN -> GN.p_nodeType == OL_GridNodeType.SUBMV);



int i = 0;
//Set all unique grid topology colors for each substation and its children
for (GridNode MVsub : MVsubstations){
	
	//Create a unique color from a spectrum and assign it to the subMV
	MVsub.p_uniqueColor = spectrumColor(i, MVsubstations.size());
	
	//Assign unique color to all underlying grid nodes
	MVsub.f_getLowerLVLConnectedGridNodes().forEach(GN -> GN.p_uniqueColor = MVsub.p_uniqueColor);
	
	//Update spectrum color index
	i++;
}

//Find all MVMV and HVMV distribution stations
List<GridNode> MVMVstations = findAll(energyModel.pop_gridNodes, GN -> GN.p_nodeType == OL_GridNodeType.MVMV);
List<GridNode> HVMVstations = findAll(energyModel.pop_gridNodes, GN -> GN.p_nodeType == OL_GridNodeType.HVMV);

//Set their topology colors (for now black as they are basically top level).
MVMVstations.forEach(GN -> GN.p_uniqueColor = semiTransparent(black));
HVMVstations.forEach(GN -> GN.p_uniqueColor = semiTransparent(black));
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721991963719</Id>
					<Name><![CDATA[f_styleSUBMV]]></Name>
					<X>-650</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gisregion]]></Name>
						<Type><![CDATA[GISRegion]]></Type>
					</Parameter>
					<Body><![CDATA[gisregion.setVisible(false);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721992103665</Id>
					<Name><![CDATA[f_styleMVMV]]></Name>
					<X>-650</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gisregion]]></Name>
						<Type><![CDATA[GISRegion]]></Type>
					</Parameter>
					<Body><![CDATA[gisregion.setFillColor(new Color(253, 223, 134, 206));
gisregion.setLineStyle( LINE_STYLE_SOLID );
gisregion.setLineColor( navy );
gisregion.setLineWidth(2);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1721049341787</Id>
					<Name><![CDATA[f_listFunctions]]></Name>
					<X>80</X><Y>1180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if(v_clickedBuilding.c_containedGridConnections.size() > 1){
	HashMap<String, Integer> functionsList = new HashMap<String, Integer>();
	
	for (int i = 0; i < v_clickedBuilding.c_containedGridConnections.size(); i++) {
		//split functies als er meerdere zijn
		String[] splitFunctions = v_clickedBuilding.c_containedGridConnections.get(i).p_purposeBAG.split(",");
		
		for (int j = 0; j < splitFunctions.length; j++) {
			// als de key al bestaat, itereer
			if (functionsList.get(splitFunctions[j]) != null) {
				functionsList.put(splitFunctions[j], functionsList.get(splitFunctions[j]) + 1);
			}
			// zo niet, voeg toe
			else {
				functionsList.put(splitFunctions[j],1);
			}
		}
	}
	
	/*
	for (String i : functionsList.keySet()) {
		traceln(i + ": " + functionsList.get(i));
	}
	*/
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724857887019</Id>
					<Name><![CDATA[f_createAdditionalUIs]]></Name>
					<X>-280</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Create the additional dashboards, control panels and private UIs

//Create PrivateUIs
if (p_selectedProjectType == BUSINESSPARK){
	f_createPrivateCompanyUI();
}

//Create Hydrogen UI
f_createHydrogenUI();


//Create Battery UI
f_createBatteryUI();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724857983890</Id>
					<Name><![CDATA[f_createHydrogenUI]]></Name>
					<X>-260</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Create the hydrogen ui
UI_Hydrogen hydrogenUI = add_ui_Hydrogen();

//Fill list of connection owners companies 
hydrogenUI.c_connectionOwners_Hydrogen.addAll(findAll(energyModel.pop_connectionOwners, co -> co.p_connectionOwnerType == OL_ConnectionOwnerType.ELECTROLYSER_OP)); 

//Fill the hydrogen GC collection (For now only searched for Electrolyser_OP, what about (the non existing) Fuelcell_OP 
for(ConnectionOwner COHydrogen : hydrogenUI.c_connectionOwners_Hydrogen){
	hydrogenUI.c_gridConnections_Hydrogen.addAll(findAll(
    COHydrogen.f_getOwnedGridConnections(), gc -> gc instanceof GCEnergyConversion && (
    gc.c_energyAssets.stream().anyMatch(asset -> asset instanceof J_EAConversionElectrolyser) ||
    gc.c_energyAssets.stream().anyMatch(asset -> asset instanceof J_EAConversionFuelCell) ||
    gc.c_energyAssets.stream().anyMatch(asset -> asset instanceof J_EAStorageGas)    )));
}


for (GridConnection GC : hydrogenUI.c_gridConnections_Hydrogen) {

	//Add all GIS objects
	hydrogenUI.c_GISObjects_Hydrogen.addAll(GC.c_connectedGISObjects);
	
	//Add connected gridnodes for each GC
	hydrogenUI.c_connectedGridNodes.add(GC.p_parentNodeElectricID);
	
	//Find all energy assets and add them to the correct collection
	List<J_EAConversion> electrolysers = findAll(GC.c_conversionAssets, asset -> asset instanceof J_EAConversionElectrolyser);
	List<J_EAStorage> storages = findAll(GC.c_storageAssets, asset -> asset instanceof J_EAStorageGas);
	List<J_EAConversion> fuelcells = findAll(GC.c_conversionAssets, asset -> asset instanceof J_EAConversionFuelCell);
	
	electrolysers.forEach(asset -> hydrogenUI.c_hydrogenElectrolysers.add((J_EAConversionElectrolyser)asset));
	storages.forEach(asset -> hydrogenUI.c_hydrogenStorages.add((J_EAStorageGas)asset));
	fuelcells.forEach(asset -> hydrogenUI.c_hydrogenFuelCells.add((J_EAConversionFuelCell)asset));
}


//Totals
hydrogenUI.p_amountOfGC = hydrogenUI.c_gridConnections_Hydrogen.size();
hydrogenUI.p_amountOfGISObjects = hydrogenUI.c_GISObjects_Hydrogen.size();


//Initialize the UI




//Add to the collection of UIs ???


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724858039724</Id>
					<Name><![CDATA[f_createBatteryUI]]></Name>
					<X>-260</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Create the hydrogen ui
UI_Battery batteryUI = add_ui_Battery();

//Fill list of connection owners companies 
batteryUI.c_connectionOwners_Battery.addAll(findAll(energyModel.pop_connectionOwners, co -> co.p_connectionOwnerType == OL_ConnectionOwnerType.BATTERY_OP)); 

//Fill the hydrogen GC collection (For now only searched for Electrolyser_OP, what about (the non existing) Fuelcell_OP 
for(ConnectionOwner COBattery : batteryUI.c_connectionOwners_Battery){
	batteryUI.c_gridConnections_Battery.addAll(findAll(
    COBattery.f_getOwnedGridConnections(), gc -> gc instanceof GCGridBattery &&
    gc.c_storageAssets.stream().anyMatch(asset -> asset instanceof J_EAStorageElectric)    ));
}


for (GridConnection GC : batteryUI.c_gridConnections_Battery) {

	//Add all GIS objects
	batteryUI.c_GISObjects_Battery.addAll(GC.c_connectedGISObjects);
	
	//Add connected gridnodes for each GC
	batteryUI.c_connectedGridNodes.add(GC.p_parentNodeElectricID);
	
	//Find all energy assets and add them to the correct collection
	List<J_EAStorage> batteries = findAll(GC.c_storageAssets, asset -> asset instanceof J_EAStorageElectric);

	batteries.forEach(asset -> batteryUI.c_gridBatteries.add((J_EAStorageElectric)asset));
}


//Totals
batteryUI.p_amountOfGC = batteryUI.c_gridConnections_Battery.size();
batteryUI.p_amountOfGISObjects = batteryUI.c_GISObjects_Battery.size();


//Initialize the UI




//Add to the collection of UIs ???]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725006890451</Id>
					<Name><![CDATA[f_setUIButton]]></Name>
					<X>80</X><Y>1200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[switch(v_clickedObjectType){

case BUILDING:
	if (c_selectedGridConnections.size() > 1 || !v_clickedBuilding.c_containedGridConnections.get(0).p_owner.b_hasPrivateUI){
		button_goToUI.setVisible(false);
	}
	else{
		// Index number of the connection owner used to change the button '
		v_connectionOwnerIndexNr = findFirst(energyModel.pop_connectionOwners, p -> p.p_actorID.equals(v_clickedBuilding.c_containedGridConnections.get(0).p_ownerID)).p_connectionOwnerIndexNr;
		button_goToUI.setText("Ga naar het Bedrijfsportaal");
		button_goToUI.setVisible(true);
	}
	break;
	
case ELECTROLYSER:
	button_goToUI.setText("Ga naar het Waterstof Dashboard");
	button_goToUI.setVisible(true);
	break;
	
case BATTERY:
	button_goToUI.setText("Ga naar het Batterijen Dashboard");
	button_goToUI.setVisible(true);
	break;	

case CHARGER:
	button_goToUI.setVisible(false);
	break;
	
default:
	button_goToUI.setVisible(false);
	break;
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[GISRoute]]></ReturnType>
					<Id>1725266804325</Id>
					<Name><![CDATA[f_createGISLine]]></Name>
					<X>-670</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GISCoords]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[networkType]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[
Curve curve = new Curve();
for(int i = 0; i+3 < GISCoords.length; i += 2){
	GISMarkupSegmentLine segment = new GISMarkupSegmentLine(GISCoords[i], GISCoords[i+1], GISCoords[i+2], GISCoords[i+3]);
	curve.addSegment(segment);
}

//Initialize curve and create route
//curve.initialize();
GISRoute gisroute = new GISRoute(map, curve, true);



//FOR NOW STYLING ETC. HERE, I WANT TO MOVE IT TO NETWORKS (BUT NOT DONE YET).
switch(networkType){

case "LVGrid":
	c_LVCables.add(gisroute);
	//Styling
	gisroute.setLineStyle(LINE_STYLE_SOLID);
	gisroute.setLineWidth(0.8);
	gisroute.setLineColor(v_LVGridColor);
	gisroute.setVisible(false);
	break;

case "MVGrid":
	c_MVCables.add(gisroute);
	//Styling
	gisroute.setLineStyle(LINE_STYLE_SOLID);
	gisroute.setLineWidth(1);
	gisroute.setLineColor(v_MVGridColor);
	gisroute.setVisible(false);
	break;
}

return gisroute;
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725274862894</Id>
					<Name><![CDATA[f_createGISNetwork]]></Name>
					<X>-670</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gisroutes]]></Name>
						<Type><![CDATA[GISRoute[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[networkType]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[//Add route/line to correct network
//GISNetwork network = findFirst(c_GISNetworks, nw -> nw.getName().equals(networkType));

//if(network == null){
	GISNetwork network = new GISNetwork(map, networkType, true, gisroutes);
	c_GISNetworks.add(network);
//}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725439643960</Id>
					<Name><![CDATA[f_updateTotalLiveDataSets]]></Name>
					<X>-650</X><Y>850</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (int j = 0; j < c_selectedGridConnections.size(); j++) {
	AreaCollection AC = uI_Results.c_individualGridConnections.get(j);
	
	AC.v_dataTotalElectricityDemandLiveWeek_kW = new DataSet(672);
	AC.v_dataTotalElectricitySupplyLiveWeek_kW = new DataSet(672);

	int liveWeekSize = AC.v_dataElectricityDemandCapacityLiveWeek_kW.size();
	for (int k = 0; k < liveWeekSize; k++) {
		double timeAxisValue = AC.v_dataElectricityDemandCapacityLiveWeek_kW.getX(k);
		
		double totalElectricityDemandLiveWeek = 0;
		double totalElectricitySupplyLiveWeek = 0;
		
		totalElectricityDemandLiveWeek += AC.v_dataBaseloadElectricityDemandLiveWeek_kW.getY(k);
		totalElectricityDemandLiveWeek += AC.v_dataElectricityForHeatDemandLiveWeek_kW.getY(k);
		totalElectricityDemandLiveWeek += AC.v_dataElectricityForTransportDemandLiveWeek_kW.getY(k);
		totalElectricityDemandLiveWeek += AC.v_dataElectricityForStorageDemandLiveWeek_kW.getY(k);
		totalElectricityDemandLiveWeek += AC.v_dataElectricityForHydrogenDemandLiveWeek_kW.getY(k);
		
		totalElectricitySupplyLiveWeek += AC.v_dataWindElectricitySupplyLiveWeek_kW.getY(k);
		totalElectricitySupplyLiveWeek += AC.v_dataPVElectricitySupplyLiveWeek_kW.getY(k);
		totalElectricitySupplyLiveWeek += AC.v_dataStorageElectricitySupplyLiveWeek_kW.getY(k);
		totalElectricitySupplyLiveWeek += AC.v_dataV2GElectricitySupplyLiveWeek_kW.getY(k);
		totalElectricitySupplyLiveWeek += AC.v_dataHydrogenSupplyLiveWeek_kW.getY(k);

		AC.v_dataTotalElectricityDemandLiveWeek_kW.add(timeAxisValue, totalElectricityDemandLiveWeek);
		AC.v_dataTotalElectricitySupplyLiveWeek_kW.add(timeAxisValue, totalElectricitySupplyLiveWeek);
	}
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725440073691</Id>
					<Name><![CDATA[f_addTimeStepTotalLiveDataSets]]></Name>
					<X>-625</X><Y>870</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int i = max(0, c_selectedGridConnections.get(0).data_gridCapacityDemand_kW.size() - 1);
double timeAxisValue = c_selectedGridConnections.get(0).data_gridCapacityDemand_kW.getX(i); // we get the X value from a random dataset 

for (int j = 0; j < c_selectedGridConnections.size(); j++) {

	AreaCollection AC = uI_Results.c_individualGridConnections.get(j);
	
	double totalElectricityDemandLiveWeek = 0;
	double totalElectricitySupplyLiveWeek = 0;
	
	totalElectricityDemandLiveWeek += AC.v_dataBaseloadElectricityDemandLiveWeek_kW.getY(i);
	totalElectricityDemandLiveWeek += AC.v_dataElectricityForHeatDemandLiveWeek_kW.getY(i);
	totalElectricityDemandLiveWeek += AC.v_dataElectricityForTransportDemandLiveWeek_kW.getY(i);
	totalElectricityDemandLiveWeek += AC.v_dataElectricityForStorageDemandLiveWeek_kW.getY(i);
	totalElectricityDemandLiveWeek += AC.v_dataElectricityForHydrogenDemandLiveWeek_kW.getY(i);
	
	totalElectricitySupplyLiveWeek += AC.v_dataWindElectricitySupplyLiveWeek_kW.getY(i);
	totalElectricitySupplyLiveWeek += AC.v_dataPVElectricitySupplyLiveWeek_kW.getY(i);
	totalElectricitySupplyLiveWeek += AC.v_dataStorageElectricitySupplyLiveWeek_kW.getY(i);
	totalElectricitySupplyLiveWeek += AC.v_dataV2GElectricitySupplyLiveWeek_kW.getY(i);
	totalElectricitySupplyLiveWeek += AC.v_dataHydrogenSupplyLiveWeek_kW.getY(i);

	AC.v_dataTotalElectricityDemandLiveWeek_kW.add(timeAxisValue, totalElectricityDemandLiveWeek);
	AC.v_dataTotalElectricitySupplyLiveWeek_kW.add(timeAxisValue, totalElectricitySupplyLiveWeek);

}


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725442474483</Id>
					<Name><![CDATA[f_updateTotalYearlyDataSets]]></Name>
					<X>-645</X><Y>890</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (int j = 0; j < c_selectedGridConnections.size(); j++) {
	AreaCollection AC = uI_Results.c_individualGridConnections.get(j);
	
	AC.v_dataTotalElectricityDemandYear_kW = new DataSet(365);
	AC.v_dataTotalElectricitySupplyYear_kW = new DataSet(365);

	int yearSize = AC.v_dataElectricityBaseloadDemandYear_kW.size();
	for (int k = 0; k < yearSize; k++) {
		double timeAxisValue = AC.v_dataElectricityBaseloadDemandYear_kW.getX(k);
		
		double totalElectricityDemandYear = 0;
		double totalElectricitySupplyYear = 0;
		
		totalElectricityDemandYear += AC.v_dataElectricityBaseloadDemandYear_kW.getY(k);
		totalElectricityDemandYear += AC.v_dataElectricityForHeatDemandYear_kW.getY(k);
		totalElectricityDemandYear += AC.v_dataElectricityForTransportDemandYear_kW.getY(k);
		totalElectricityDemandYear += AC.v_dataElectricityForStorageDemandYear_kW.getY(k);
		totalElectricityDemandYear += AC.v_dataElectricityForHydrogenDemandYear_kW.getY(k);
		
		totalElectricitySupplyYear += AC.v_dataElectricityWindSupplyYear_kW.getY(k);
		totalElectricitySupplyYear += AC.v_dataElectricityPVSupplyYear_kW.getY(k);
		totalElectricitySupplyYear += AC.v_dataElectricityStorageSupplyYear_kW.getY(k);
		totalElectricitySupplyYear += AC.v_dataElectricityV2GSupplyYear_kW.getY(k);
		totalElectricitySupplyYear += AC.v_dataHydrogenSupplyYear_kW.getY(k);

		AC.v_dataTotalElectricityDemandYear_kW.add(timeAxisValue, totalElectricityDemandYear);
		AC.v_dataTotalElectricitySupplyYear_kW.add(timeAxisValue, totalElectricitySupplyYear);
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725442517475</Id>
					<Name><![CDATA[f_updateTotalWeeklyDataSets]]></Name>
					<X>-645</X><Y>910</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (int j = 0; j < c_selectedGridConnections.size(); j++) {
	AreaCollection AC = uI_Results.c_individualGridConnections.get(j);
	
	AC.v_dataTotalElectricityDemandSummerWeek_kW = new DataSet(672);
	AC.v_dataTotalElectricitySupplySummerWeek_kW = new DataSet(672);
	AC.v_dataTotalElectricityDemandWinterWeek_kW = new DataSet(672);
	AC.v_dataTotalElectricitySupplyWinterWeek_kW = new DataSet(672);

	int weekSize = AC.v_dataElectricityBaseloadDemandSummerWeek_kW.size();
	for (int k = 0; k < weekSize; k++) {
		double timeAxisValueSummer = AC.v_dataElectricityBaseloadDemandSummerWeek_kW.getX(k);
		double timeAxisValueWinter = AC.v_dataElectricityBaseloadDemandWinterWeek_kW.getX(k);
		
		double totalElectricityDemandSummerWeek = 0;
		double totalElectricitySupplySummerWeek = 0;
		double totalElectricityDemandWinterWeek = 0;
		double totalElectricitySupplyWinterWeek = 0;
		
		totalElectricityDemandSummerWeek += AC.v_dataElectricityBaseloadDemandSummerWeek_kW.getY(k);
		totalElectricityDemandSummerWeek += AC.v_dataElectricityForHeatDemandSummerWeek_kW.getY(k);
		totalElectricityDemandSummerWeek += AC.v_dataElectricityForTransportDemandSummerWeek_kW.getY(k);
		totalElectricityDemandSummerWeek += AC.v_dataElectricityForStorageDemandSummerWeek_kW.getY(k);
		totalElectricityDemandSummerWeek += AC.v_dataElectricityForHydrogenDemandSummerWeek_kW.getY(k);
		
		totalElectricitySupplySummerWeek += AC.v_dataElectricityWindSupplySummerWeek_kW.getY(k);
		totalElectricitySupplySummerWeek += AC.v_dataElectricityPVSupplySummerWeek_kW.getY(k);
		totalElectricitySupplySummerWeek += AC.v_dataElectricityStorageSupplySummerWeek_kW.getY(k);
		totalElectricitySupplySummerWeek += AC.v_dataElectricityV2GSupplySummerWeek_kW.getY(k);
		totalElectricitySupplySummerWeek += AC.v_dataHydrogenSupplySummerWeek_kW.getY(k);

		totalElectricityDemandWinterWeek += AC.v_dataElectricityBaseloadDemandWinterWeek_kW.getY(k);
		totalElectricityDemandWinterWeek += AC.v_dataElectricityForHeatDemandWinterWeek_kW.getY(k);
		totalElectricityDemandWinterWeek += AC.v_dataElectricityForTransportDemandWinterWeek_kW.getY(k);
		totalElectricityDemandWinterWeek += AC.v_dataElectricityForStorageDemandWinterWeek_kW.getY(k);
		totalElectricityDemandWinterWeek += AC.v_dataElectricityForHydrogenDemandWinterWeek_kW.getY(k);
		
		totalElectricitySupplyWinterWeek += AC.v_dataElectricityWindSupplyWinterWeek_kW.getY(k);
		totalElectricitySupplyWinterWeek += AC.v_dataElectricityPVSupplyWinterWeek_kW.getY(k);
		totalElectricitySupplyWinterWeek += AC.v_dataElectricityStorageSupplyWinterWeek_kW.getY(k);
		totalElectricitySupplyWinterWeek += AC.v_dataElectricityV2GSupplyWinterWeek_kW.getY(k);
		totalElectricitySupplyWinterWeek += AC.v_dataHydrogenSupplyWinterWeek_kW.getY(k);
		
		AC.v_dataTotalElectricityDemandSummerWeek_kW.add(timeAxisValueSummer, totalElectricityDemandSummerWeek);
		AC.v_dataTotalElectricitySupplySummerWeek_kW.add(timeAxisValueSummer, totalElectricitySupplySummerWeek);
		AC.v_dataTotalElectricityDemandWinterWeek_kW.add(timeAxisValueWinter, totalElectricityDemandWinterWeek);
		AC.v_dataTotalElectricitySupplyWinterWeek_kW.add(timeAxisValueWinter, totalElectricitySupplyWinterWeek);
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725968656820</Id>
					<Name><![CDATA[f_setColorsBasedOnGridTopology_gridnodes]]></Name>
					<X>1350</X><Y>1585</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GN]]></Name>
						<Type><![CDATA[GridNode]]></Type>
					</Parameter>
					<Body><![CDATA[GN.gisRegion.setFillColor(GN.p_uniqueColor);
GN.gisRegion.setLineColor(GN.p_uniqueColor.brighter());]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725977409304</Id>
					<Name><![CDATA[f_setSliderPresets]]></Name>
					<X>-280</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Should be overridden in child interface!!!
traceln("Forgot to override project specific slider settings!!");]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726068314849</Id>
					<Name><![CDATA[f_projectSpecificStyling]]></Name>
					<X>-670</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Function used to set the colors, styling, and other parameters/functions for each specific project
//Should be overridden!!
traceln("DID NOT OVERRIDE THE PROJECT SPECIFIC STYLING!");]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727085747538</Id>
					<Name><![CDATA[f_updatePreviousTotalsGC]]></Name>
					<X>-650</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (GridConnection GC : energyModel.f_getGridConnections()){	
	J_previousTotals previousTotals = uI_Results.c_previousTotals_GC.get(GC);
	
	previousTotals.setPreviousTotalConsumedEnergy_MWh(GC.v_totalEnergyConsumed_MWh);
	previousTotals.setPreviousTotalProducedEnergy_MWh(GC.v_totalEnergyProduced_MWh);
	previousTotals.setPreviousSelfConsumedEnergy_MWh(GC.v_totalSelfConsumedEnergy_MWh);
	previousTotals.setPreviousImportedEnergy_MWh(GC.v_totalImport_MWh);
	previousTotals.setPreviousExportedEnergy_MWh(GC.v_totalExport_MWh);
		
	previousTotals.setPreviousNaturalGasDemand_MWh(GC.v_methaneDrawn_kWh);
	previousTotals.setPreviousPetroleumProductsDemand_MWh(GC.v_dieselDrawn_kWh);
	previousTotals.setPreviousHydrogenDemand_MWh(GC.v_hydrogenDrawn_kWh);
	previousTotals.setPreviousHydrogenSupply_MWh(GC.v_hydrogenDelivered_kWh);
	
	previousTotals.setPreviousSelfConsumedElectricity_MWh(GC.v_totalElectricitySelfConsumed_MWh);
	//previousTotals.setPreviousSelfProducedElectricity_MWh(GC.v_totalElectricitySelfProduced_MWh);
	previousTotals.setPreviousElectricityImport_MWh(GC.v_electricityDrawnFromGrid_kWh);
	previousTotals.setPreviousElectricityExport_MWh(GC.v_electricityDeliveredToGrid_kWh);
	previousTotals.setPreviousElectricityConsumed_MWh(GC.v_totalElectricityConsumed_MWh);
	
	//Overload
	previousTotals.setPreviousOverloadDurationDelivery_hr(GC.v_totalOverloadDurationDelivery_hr);
	previousTotals.setPreviousOverloadDurationFeedin_hr(GC.v_totalOverloadDurationFeedin_hr);
	//Unused parameters
	/*
		previousTotals.setPreviousHeatDemand_MWh(GC.v_annualHeatDemand_MWh
		previousTotals.setPreviousDistrictHeatingHeatDemand_MWh(GC.v_annualDistrictHeatingHeatDemand_MWh
		previousTotals.setPreviousHeatPumpHeatGeneration_MWh(GC.v_annualHeatPumpHeatGeneration_MWh
		previousTotals.setPreviousElectricityForTransportDemand_MWh(GC.v_annualElectricityForTransportDemand_MWh);
		previousTotals.setPreviousHydrogenForTransportDemand_MWh(GC.v_annualHydrogenForTransportDemand_MWh);
		previousTotals.setPreviousTransportEnergyDemand_MWh(GC.v_annualTransportEnergyDemand_MWh);
		previousTotals.setPreviousWindSupply_MWh(GC.v_annualWindSupply_MWh);
		previousTotals.setPreviousWindSupplyRemainingPotential_MWh(GC.v_annualWindSupplyRemainingPotential_MWh);
		previousTotals.setPreviousPVSupply_MWh(GC.v_annualPVSupply_MWh);
		previousTotals.setPreviousPVSupplyRemainingPotential_MWh(GC.v_annualPVSupplyRemainingPotential_MWh);
		previousTotals.setPreviousHeatSupply_MWh(GC.v_annualHeatSupply_MWh);
		previousTotals.setPreviousHeatSupplyRemainingPotential_MWh(GC.v_annualHeatSupplyRemainingPotential_MWh);
	*/

}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[OL_LegendsScope]]></ReturnType>
					<Id>1727355134954</Id>
					<Name><![CDATA[f_setLegendsScope]]></Name>
					<X>-650</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Can be overridden in child if other than default is preferred. 
OL_LegendsScope p_legendsScope;

switch(p_selectedProjectType){

case BUSINESSPARK:
	p_legendsScope = OL_LegendsScope.BUSINESSPARK;
	break;
	
case RESIDENTIAL:
	p_legendsScope = OL_LegendsScope.RESIDENTIAL;
	break;

default:
	p_legendsScope = OL_LegendsScope.BUSINESSPARK;

}

return p_legendsScope;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1658477103135</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1708522361909</Id>
					<Name><![CDATA[ui_companies]]></Name>
					<X>-240</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[UI_company]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[UI_company]]></ClassName>
							<ItemName><![CDATA[1708522361868]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_companyName]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_amountOfGC]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_amountOfBuildings]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_company]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_maxAddedVehicles]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1709049456144</Id>
					<Name><![CDATA[ui_Battery]]></Name>
					<X>-240</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[UI_Battery]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[UI_Battery]]></ClassName>
							<ItemName><![CDATA[1709049456141]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_amountOfGISObjects]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_amountOfGC]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1716193013122</Id>
					<Name><![CDATA[uI_Results]]></Name>
					<X>-670</X><Y>570</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1716193014596</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[digital_twin_results]]></PackageName>
						<ClassName><![CDATA[UI_Results]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[digital_twin_results]]></PackageName>
							<ClassName><![CDATA[UI_Results]]></ClassName>
							<ItemName><![CDATA[1704197366556]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[energyModel]]></Name>
							<Value Class="CodeValue">
								<Code><![CDATA[energyModel]]></Code>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_previousTotals_Region]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_legendsScope]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>false</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1717506326727</Id>
					<Name><![CDATA[ui_Hydrogen]]></Name>
					<X>-240</X><Y>480</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[UI_Hydrogen]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[UI_Hydrogen]]></ClassName>
							<ItemName><![CDATA[1717506309785]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_amountOfGISObjects]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_amountOfGC]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1722252541830</Id>
					<Name><![CDATA[uI_Tabs]]></Name>
					<X>-280</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1722252542596</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[UI_Tabs]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[UI_Tabs]]></ClassName>
							<ItemName><![CDATA[1722245292191]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>false</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1658477103139</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1701947860073</Id>
					<Name><![CDATA[rect_canvas]]></Name>
					<X>-600</X><Y>-200</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>3200</Width>
					<Height>2160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1701952231399</Id>
					<Name><![CDATA[rect_gismap]]></Name>
					<X>400</X><Y>85</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1020</Width>
					<Height>675</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-3092235</FillColor>
					<FillColorCode><![CDATA[v_themeColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Group>
					<Id>1724074923402</Id>
					<Name><![CDATA[gr_menu]]></Name>
					<X>940</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1724074975224</Id>
					<Name><![CDATA[menuViewOpen2]]></Name>
					<X>500</X><Y>-70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<VisibleCode><![CDATA[v_isViewAreaMenuVisible]]></VisibleCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>260</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>682673374</FillColor>
					<FillColorCode><![CDATA[new Color (226,0,37,255)]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074975226</Id>
					<Name><![CDATA[menuViewOpen3]]></Name>
					<X>760</X><Y>-70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<VisibleCode><![CDATA[v_isViewAreaMenuVisible]]></VisibleCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>240</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>682673374</FillColor>
					<FillColorCode><![CDATA[new Color (226,0,37,20)]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Image>
					<Id>1724074975228</Id>
					<Name><![CDATA[image_zenmoLogo]]></Name>
					<X>819</X><Y>19</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[getExperimentHost().openWebSite("https://www.zenmo.com");]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>130.345</Width>
					<Height>60</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[logo_zenmo.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Rectangle>
					<Id>1724074975230</Id>
					<Name><![CDATA[menuViewOpen1]]></Name>
					<X>1000</X><Y>-70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<VisibleCode><![CDATA[v_isViewAreaMenuVisible]]></VisibleCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>200</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>682673374</FillColor>
					<FillColorCode><![CDATA[v_menuFrameColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074980256</Id>
					<Name><![CDATA[rect_menuViewOpen]]></Name>
					<X>-1120</X><Y>-70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<VisibleCode><![CDATA[v_isViewAreaMenuVisible]]></VisibleCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1620</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>682673374</FillColor>
					<FillColorCode><![CDATA[v_menuFrameColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074980258</Id>
					<Name><![CDATA[rect_menuViewOpen2]]></Name>
					<X>440</X><Y>-70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<VisibleCode><![CDATA[v_isViewAreaMenuVisible]]></VisibleCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>320</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>682673374</FillColor>
					<FillColorCode><![CDATA[new Color (226,0,37,255)]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074980260</Id>
					<Name><![CDATA[rect_menuViewOpen3]]></Name>
					<X>760</X><Y>-70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<VisibleCode><![CDATA[v_isViewAreaMenuVisible]]></VisibleCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>240</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>682673374</FillColor>
					<FillColorCode><![CDATA[new Color (226,0,37,20)]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074980262</Id>
					<Name><![CDATA[rect_menuViewOpen4]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1020</X><Y>-630</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<VisibleCode><![CDATA[v_isViewAreaMenuVisible]]></VisibleCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>200</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>682673374</FillColor>
					<FillColorCode><![CDATA[v_menuFrameColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Image>
					<Id>1724074987235</Id>
					<Name><![CDATA[image_tueLogo]]></Name>
					<X>575</X><Y>17</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[getExperimentHost().openWebSite("https://www.tue.nl/en/research/research-groups/innovation-sciences/technology-innovation-society/projects/new-energy-outlook-for-the-netherlands/");]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>205.802</Width>
					<Height>60</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[logo_TUe_red.png]]></ClassName>
						</ImageResourceReference>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[logo_TUe_white.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
				<Rectangle>
					<Id>1665052211228</Id>
					<Name><![CDATA[rect_mainFunctions]]></Name>
					<X>-700</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16744448</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>680</Width>
					<Height>970</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1705481955546</Id>
					<Name><![CDATA[rect_simulationEngine]]></Name>
					<X>-270</X><Y>820</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16744448</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>250</Width>
					<Height>150</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1665052603927</Id>
					<Name><![CDATA[rect_input]]></Name>
					<X>-700</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16744448</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>169</Width>
					<Height>40</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<EmbeddedObjectPresentation>
					<Id>1716193014596</Id>
					<Name><![CDATA[uI_Results_presentation]]></Name>
					<X>1440</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>POSITION_WITH_OFFSET</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>52.52173648990926</Latitude>
					<Longitude>6.109451573117503</Longitude>
				</EmbeddedObjectPresentation>
				<Text>
					<Id>1665052191319</Id>
					<Name><![CDATA[t_input]]></Name>
					<X>-640</X><Y>5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16744448</Color>
					<Text><![CDATA[Input]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1690205003572</Id>
					<Name><![CDATA[line_simulationEngine]]></Name>
					<X>-230</X><Y>850</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>170</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1690205003577</Id>
					<Name><![CDATA[t_simulationEngine]]></Name>
					<X>-151</X><Y>830</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Simulation engine]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1690975123923</Id>
					<Name><![CDATA[t_date]]></Name>
					<X>420</X><Y>54</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Datum]]></Text>
					<TextCode><![CDATA[date()]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1696520897545</Id>
					<Name><![CDATA[gr_compareResultsButton]]></Name>
					<X>1840</X><Y>1080</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[/*
if(gr_compareResults.isVisible() == false){
	gr_compareResults.setVisible(true);
	gr_compareResultsButton.setVisible(false);
	runSimulation();
	//gr_neighborhoodResultsTabs.setVisible(false);
	//gr_scenariosVeghel.setVisible(false);
}
*/
traceln("gr_compareResultsButton is not functional!");]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1696520897547</Id>
					<Name><![CDATA[roundRectangle_compareResultsButton]]></Name>
					<X>-100</X><Y>-30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>360</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[new Color (255, 255, 255, 100)]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Text>
					<Id>1696520897549</Id>
					<Name><![CDATA[t_compareResultsButton]]></Name>
					<X>-89</X><Y>-14</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Vergelijk resultaten van meerdere scenario's]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Image>
					<Id>1696520897551</Id>
					<Name><![CDATA[image_compareResultsButton]]></Name>
					<X>220</X><Y>5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>20</Width>
					<Height>20</Height>
					<Rotation>270.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[icon_arrow.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
				<Group>
					<Id>1696520897606</Id>
					<Name><![CDATA[gr_zoomButton]]></Name>
					<X>1330</X><Y>680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Arc>
					<Id>1696520897608</Id>
					<Name><![CDATA[arc_zoomIn]]></Name>
					<X>-2.5319999999999965</X><Y>-20.114000000000004</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-13882324</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Dz>0</Dz>
					<Rotation>0.0</Rotation>
					<RadiusX>17.53</RadiusX>
					<RadiusY>40</RadiusY>
					<StartAngle>-179.1999969482422</StartAngle>
					<Angle>178.1999969482422</Angle>
					<FillColor>-13882324</FillColor>
					<FillMaterial>null</FillMaterial>
				</Arc>
				<Arc>
					<Id>1696520897610</Id>
					<Name><![CDATA[arc_zoomOut]]></Name>
					<X>-2.483000000000004</X><Y>8.137</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-13882324</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Dz>0</Dz>
					<Rotation>0.0</Rotation>
					<RadiusX>17.483</RadiusX>
					<RadiusY>40</RadiusY>
					<StartAngle>1.2000000476837158</StartAngle>
					<Angle>178.1999969482422</Angle>
					<FillColor>-13882324</FillColor>
					<FillMaterial>null</FillMaterial>
				</Arc>
				<Rectangle>
					<Id>1696520897612</Id>
					<Name><![CDATA[rect_zoomButton]]></Name>
					<X>-20</X><Y>-20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-13882324</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>35</Width>
					<Height>28</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-13882324</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Line>
					<Id>1696520897614</Id>
					<Name><![CDATA[line_zoomButtonSeperator]]></Name>
					<X>-16</X><Y>-5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>27</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1696520897616</Id>
					<Name><![CDATA[line_zoomIn1]]></Name>
					<X>-9</X><Y>-21</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-1</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>12</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1696520897618</Id>
					<Name><![CDATA[line_zoomIn2]]></Name>
					<X>-3</X><Y>-27</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-1</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>12</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1696520897620</Id>
					<Name><![CDATA[line_zoomOut]]></Name>
					<X>-10</X><Y>8</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-1</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>15</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Rectangle>
					<Id>1696520897622</Id>
					<Name><![CDATA[rect_zoomIn]]></Name>
					<X>-20</X><Y>-35</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[map.zoomIn();]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>35</Width>
					<Height>30</Height>
					<Rotation>0.0</Rotation>
					<FillColor/>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1696520897624</Id>
					<Name><![CDATA[rect_zoomOut]]></Name>
					<X>-20</X><Y>-5</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[map.zoomOut();]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>35</Width>
					<Height>30</Height>
					<Rotation>0.0</Rotation>
					<FillColor/>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
			</Presentation>

				</Group>
				<Text>
					<Id>1696837759915</Id>
					<Name><![CDATA[t_legendaColors]]></Name>
					<X>330</X><Y>1020</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Legenda Colors]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1701951640330</Id>
					<Name><![CDATA[group_legenda]]></Name>
					<X>910</X><Y>880</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1701951640332</Id>
					<Name><![CDATA[rect_legendaBackground]]></Name>
					<X>-510</X><Y>-100</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1020</Width>
					<Height>200</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-3092235</FillColor>
					<FillColorCode><![CDATA[v_themeColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1701951640336</Id>
					<Name><![CDATA[rect_legenda]]></Name>
					<X>-500</X><Y>-84</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-1644806</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<Width>1000</Width>
					<Height>172</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1701951640338</Id>
					<Name><![CDATA[t_legenda]]></Name>
					<X>-470</X><Y>-100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-1</Color>
					<Text><![CDATA[Legenda]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1701951640396</Id>
					<Name><![CDATA[line_legendaSeperator1]]></Name>
					<X>-165</X><Y>-70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-1644806</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>140</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1724074247375</Id>
					<Name><![CDATA[line_legendaSeperator2]]></Name>
					<X>-10</X><Y>-70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-1644806</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>140</Dy>
					<Dz>0</Dz>
				</Line>
				<Group>
					<Id>1724074154126</Id>
					<Name><![CDATA[gr_infrastructure]]></Name>
					<X>-340</X><Y>5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1724074154148</Id>
					<Name><![CDATA[t_infrastructure]]></Name>
					<X>-60</X><Y>-79</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Infrastructuur]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1724074154158</Id>
					<Name><![CDATA[line_infrastructure]]></Name>
					<X>-120</X><Y>-59</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-1644806</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>271</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Group>
					<Id>1724074839746</Id>
					<Name><![CDATA[gr_gridnodes]]></Name>
					<X>-75</X><Y>5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Polyline>
					<Id>1724074853961</Id>
					<Name><![CDATA[polyline_MVLVCongested]]></Name>
					<X>-55</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_gridLineColorCongested]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillColorCode><![CDATA[v_gridNodeColorCongested]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>-14</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>false</Closed>
				</Polyline>
				<Text>
					<Id>1724074853963</Id>
					<Name><![CDATA[t_MVLVCongested]]></Name>
					<X>-25</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[MSLS-trafo overbelast]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Polyline>
					<Id>1724074853965</Id>
					<Name><![CDATA[polyline_HVMV]]></Name>
					<X>-45</X><Y>-48</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777088</LineColor>
					<LineColorCode><![CDATA[v_HVMVLineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillColorCode><![CDATA[v_HVMVNodeColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-5</X><Y>10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>20</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>10</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>false</Closed>
				</Polyline>
				<Polyline>
					<Id>1724074853967</Id>
					<Name><![CDATA[polyline_MVLV]]></Name>
					<X>-55</X><Y>-7</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_MVLVLineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillColorCode><![CDATA[v_MVLVNodeColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>-14</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>false</Closed>
				</Polyline>
				<Text>
					<Id>1724074853969</Id>
					<Name><![CDATA[t_MVLV]]></Name>
					<X>-25</X><Y>-21</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[MSLS-trafo]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Polyline>
					<Id>1724074853971</Id>
					<Name><![CDATA[polyline_MVLVStrained]]></Name>
					<X>-55</X><Y>15</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_gridNodeLineColorStrained]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillColorCode><![CDATA[v_gridNodeColorStrained]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>-14</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>false</Closed>
				</Polyline>
				<Text>
					<Id>1724074853973</Id>
					<Name><![CDATA[t_MVLVStrained]]></Name>
					<X>-25</X><Y>2</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[MSLS-trafo belast]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074853975</Id>
					<Name><![CDATA[t_HVMV]]></Name>
					<X>-25</X><Y>-45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[HSMS-trafo]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1724074839748</Id>
					<Name><![CDATA[gr_cables]]></Name>
					<X>75</X><Y>5</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1724074864095</Id>
					<Name><![CDATA[t_HV]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-15</X><Y>15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[HS-net (150kV)]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1724074864097</Id>
					<Name><![CDATA[line_HV]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-40</X><Y>25</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2.5</LineWidth>
					<LineColor>-16776961</LineColor>
					<LineColorCode><![CDATA[v_HVGridColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>10</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1724074870571</Id>
					<Name><![CDATA[t_MV]]></Name>
					<X>-15</X><Y>-50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[MS-net]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074870573</Id>
					<Name><![CDATA[t_LV]]></Name>
					<X>-15</X><Y>-25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[LS-net]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1724074870575</Id>
					<Name><![CDATA[line_LV]]></Name>
					<X>-40</X><Y>-15</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2.5</LineWidth>
					<LineColor>-6737204</LineColor>
					<LineColorCode><![CDATA[v_LVGridColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>10</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1724074870577</Id>
					<Name><![CDATA[line_MV]]></Name>
					<X>-40</X><Y>-40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2.5</LineWidth>
					<LineColor>-12156236</LineColor>
					<LineColorCode><![CDATA[v_MVGridColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>10</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1724074875518</Id>
					<Name><![CDATA[t_gasNetwork]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-15</X><Y>-2.5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gasnet]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Oval>
					<Id>1724074875520</Id>
					<Name><![CDATA[oval_gasNetwork]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-35</X><Y>5</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>5.75</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_gasGridColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
			</Presentation>

				</Group>
			</Presentation>

				</Group>
				<Group>
					<Id>1724074493431</Id>
					<Name><![CDATA[gr_buildings]]></Name>
					<X>80</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1724074500599</Id>
					<Name><![CDATA[t_buildings]]></Name>
					<X>50</X><Y>-84</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gebouwen]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1724074502826</Id>
					<Name><![CDATA[line_buildings]]></Name>
					<X>380</X><Y>-64</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-1644806</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>-458</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Group>
					<Id>1724074508882</Id>
					<Name><![CDATA[gr_colorings]]></Name>
					<X>-180</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1724074508884</Id>
					<Name><![CDATA[rb_buildingColors]]></Name>
					<X>-54</X><Y>-53</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="130" Height="130">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//reset legend
group_standaardLegenda.setVisible(false);
gr_consumptionColorsLegenda.setVisible(false);
gr_consumptionColorsLegendaHouseholds.setVisible(false);
gr_productionColorsLegenda.setVisible(false);
gr_productionColorsLegendaHouseholds.setVisible(false);
b_updateCongestionColors = true;

//reset charger color
//for( GCPublicCharger charger : energyModel.PublicChargers){
	//f_stylePublicCharger( charger);
//}

if ( rb_buildingColors.getValue() == 0){
	group_standaardLegenda.setVisible(true);	
	for (GIS_Building b: energyModel.pop_GIS_Buildings) { // Loop over other areas aswell?
		f_styleAreas(b);
	}
}
else if ( rb_buildingColors.getValue() == 1){
	if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL){
		gr_consumptionColorsLegendaHouseholds.setVisible(true);
		
		for (GIS_Building building : energyModel.pop_GIS_Buildings){
			f_setColorsBasedOnConsumpionProfileHouseholds(building);
		}
	}
	else {
		gr_consumptionColorsLegenda.setVisible(true);
		for (GIS_Building building : energyModel.pop_GIS_Buildings){
			f_setColorsBasedOnConsumpion(building);
		}
	}
}
else if ( rb_buildingColors.getValue() == 2){
	if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL){
		gr_productionColorsLegendaHouseholds.setVisible(true);
		for (GIS_Building building : energyModel.pop_GIS_Buildings){
			f_setColorsBasedOnProductionHouseholds(building);
		}
	}
	else {
		gr_productionColorsLegenda.setVisible(true);
		for (GIS_Building building : energyModel.pop_GIS_Buildings){
			f_setColorsBasedOnProduction(building);
		}
	}
}
else if ( rb_buildingColors.getValue() == 3){
	b_updateCongestionColors = false;
	for (GIS_Building building : energyModel.pop_GIS_Buildings){
		f_setColorsBasedOnGridTopology_objects(building);
	}
	for (GridNode GN : energyModel.pop_gridNodes){
		f_setColorsBasedOnGridTopology_gridnodes(GN);
	}
}
else if ( rb_buildingColors.getValue() == 4){
b_updateCongestionColors = false;
//f_setColorBasedOnManualTopologyTEMPORARYCHECK();
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[Standaard]]></Button>
						<Button><![CDATA[Elektriciteitsverbruik]]></Button>
						<Button><![CDATA[PV opwek]]></Button>
						<Button><![CDATA[Energie Buren]]></Button>
						<Button><![CDATA[Pand functie]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1724074508886</Id>
					<Name><![CDATA[t_colorings]]></Name>
					<X>4</X><Y>-71</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Kleur gebouwen obv:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1724074510737</Id>
					<Name><![CDATA[gr_productionColorsLegenda]]></Name>
					<X>700</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[0]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1724074510739</Id>
					<Name><![CDATA[rect_noProduction]]></Name>
					<X>-60</X><Y>-52</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074510741</Id>
					<Name><![CDATA[rect_smallProduction]]></Name>
					<X>-60</X><Y>-28</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-329006</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074510743</Id>
					<Name><![CDATA[rect_largeProduction]]></Name>
					<X>-60</X><Y>-4</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-256</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724074510745</Id>
					<Name><![CDATA[t_noProduction]]></Name>
					<X>-20</X><Y>-51</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[geen opwek]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074510747</Id>
					<Name><![CDATA[t_smallProduction]]></Name>
					<X>-20</X><Y>-28</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 100 MWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074510749</Id>
					<Name><![CDATA[t_largeProduction]]></Name>
					<X>-20</X><Y>-3</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[> 100 MWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1724074678970</Id>
					<Name><![CDATA[gr_consumptionColorsLegenda]]></Name>
					<X>10</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1724074678972</Id>
					<Name><![CDATA[rect_tinyCosumption]]></Name>
					<X>-60</X><Y>-52</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074678974</Id>
					<Name><![CDATA[rect_smallCosumption]]></Name>
					<X>-60</X><Y>-28</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-32</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074678976</Id>
					<Name><![CDATA[rect_mediumCosumption]]></Name>
					<X>-60</X><Y>-4</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-263774</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074678978</Id>
					<Name><![CDATA[rect_largeCosumption]]></Name>
					<X>-60</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1063822</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074678980</Id>
					<Name><![CDATA[rect_hugeCosumption]]></Name>
					<X>-60</X><Y>44</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-3318692</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724074678982</Id>
					<Name><![CDATA[t_tinyCosumption]]></Name>
					<X>-20</X><Y>-51</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 10 MWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074678984</Id>
					<Name><![CDATA[t_smallCosumption]]></Name>
					<X>-20</X><Y>-28</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 50 MWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074678986</Id>
					<Name><![CDATA[t_mediumCosumption]]></Name>
					<X>-20</X><Y>-3</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 150 MWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074678988</Id>
					<Name><![CDATA[t_largeCosumption]]></Name>
					<X>-20</X><Y>21</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 500 MWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074678990</Id>
					<Name><![CDATA[t_hugeCosumption]]></Name>
					<X>-20</X><Y>45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[> 500 MWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1724074510773</Id>
					<Name><![CDATA[gr_productionColorsLegendaHouseholds]]></Name>
					<X>1030</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[0]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1724074510775</Id>
					<Name><![CDATA[rect_householdNoProduction]]></Name>
					<X>-60</X><Y>-52</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074510777</Id>
					<Name><![CDATA[rect_householdSmallProduction]]></Name>
					<X>-60</X><Y>-28</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-256</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074510779</Id>
					<Name><![CDATA[rect_householdLargeProduction]]></Name>
					<X>-60</X><Y>-4</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-10496</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724074510781</Id>
					<Name><![CDATA[t_householdNoProduction]]></Name>
					<X>-20</X><Y>-51</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[geen opwek]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074510783</Id>
					<Name><![CDATA[t_householdSmallProduction]]></Name>
					<X>-20</X><Y>-28</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 5000 kWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074510785</Id>
					<Name><![CDATA[t_householdLargeProduction]]></Name>
					<X>-20</X><Y>-3</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[> 5000 kWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1724074510751</Id>
					<Name><![CDATA[gr_consumptionColorsLegendaHouseholds]]></Name>
					<X>860</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[0]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1724074510753</Id>
					<Name><![CDATA[rect_householdTinyCosumption]]></Name>
					<X>-60</X><Y>-52</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>1694498815</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074510755</Id>
					<Name><![CDATA[rect_householdSmallCosumption]]></Name>
					<X>-60</X><Y>-28</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>1928724474</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074510757</Id>
					<Name><![CDATA[rect_householdMediumCosumption]]></Name>
					<X>-60</X><Y>-4</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>1692204540</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074510759</Id>
					<Name><![CDATA[rect_householdLargeCosumption]]></Name>
					<X>-60</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>1637870836</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074510761</Id>
					<Name><![CDATA[rect_householdHugeCosumption]]></Name>
					<X>-60</X><Y>44</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>25</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>1766972398</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724074510763</Id>
					<Name><![CDATA[t_HouseholdTinyCosumption]]></Name>
					<X>-20</X><Y>-51</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 1500 kWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074510765</Id>
					<Name><![CDATA[t_HouseholdSmallCosumption]]></Name>
					<X>-20</X><Y>-28</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 2500 kWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074510767</Id>
					<Name><![CDATA[t_HouseholdMediumCosumption]]></Name>
					<X>-20</X><Y>-3</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 4000 kWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074510769</Id>
					<Name><![CDATA[t_HouseholdLargeCosumption]]></Name>
					<X>-20</X><Y>21</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[< 6000 kWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074510771</Id>
					<Name><![CDATA[t_HouseholdHugeCosumption]]></Name>
					<X>-20</X><Y>45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[> 6000 kWh / jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1724074583631</Id>
					<Name><![CDATA[gr_specificBuildings]]></Name>
					<X>245</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1724074583633</Id>
					<Name><![CDATA[rect_solarPark]]></Name>
					<X>-65</X><Y>-60</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-256</LineColor>
					<LineColorCode><![CDATA[v_solarParkLineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>15</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_solarParkColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724074583635</Id>
					<Name><![CDATA[t_solarPark]]></Name>
					<X>-35</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Zonneweide]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1724074583637</Id>
					<Name><![CDATA[rect_electrolyser]]></Name>
					<X>-65</X><Y>15</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_electrolyserLineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>15</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_electrolyserColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724074583639</Id>
					<Name><![CDATA[rect_chargingStation]]></Name>
					<X>-65</X><Y>-10</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_chargingStationLineColor_centre]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>15</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_chargingStationColor_centre]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724074583641</Id>
					<Name><![CDATA[t_electrolyser]]></Name>
					<X>-35</X><Y>15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[H2 Electrolyser]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724074583643</Id>
					<Name><![CDATA[t_chargingStation]]></Name>
					<X>-35</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Laadplein]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1724074583645</Id>
					<Name><![CDATA[rect_windFarm]]></Name>
					<X>-65</X><Y>-35</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_windFarmLineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>15</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_windFarmColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724074583647</Id>
					<Name><![CDATA[t_windFarm]]></Name>
					<X>-35</X><Y>-35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Windpark]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1724074583649</Id>
					<Name><![CDATA[rect_battery]]></Name>
					<X>-65</X><Y>40</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_batteryLineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>15</Width>
					<Height>15</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_batteryColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724074583651</Id>
					<Name><![CDATA[t_battery]]></Name>
					<X>-35</X><Y>40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Buurt Batterij]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
			</Presentation>

				</Group>
			</Presentation>

				</Group>
				<Text>
					<Id>1696863329245</Id>
					<Name><![CDATA[t_mapClickingFunctions]]></Name>
					<X>40</X><Y>1020</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Map connections and clicking]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1702552223737</Id>
					<Name><![CDATA[t_stylingFunctions]]></Name>
					<X>-680</X><Y>280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Interface styling:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1704210756310</Id>
					<Name><![CDATA[gr_clickedObjectInfo]]></Name>
					<X>370</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1713259123999</Id>
					<Name><![CDATA[rect_clickedObjectInfo]]></Name>
					<X>40</X><Y>-131</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>555</Width>
					<Height>20</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1250053</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1701879145306</Id>
					<Name><![CDATA[t_clickedObjectInfo]]></Name>
					<X>321</X><Y>-130</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Selecteer een gebouw]]></Text>
					<TextCode><![CDATA[v_clickedObjectText.equals("None") ? 
"Selecteer een gebouw of trafostation" :
v_clickedObjectText]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1705663500141</Id>
					<Name><![CDATA[t_buildingColors]]></Name>
					<X>680</X><Y>1030</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Building colors]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1705663820235</Id>
					<Name><![CDATA[t_gridnodeColors]]></Name>
					<X>1022</X><Y>1030</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[GridNode colors]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1705664522164</Id>
					<Name><![CDATA[t_specificBuildingColors]]></Name>
					<X>680</X><Y>1250</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Specific building colors]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1705667994053</Id>
					<Name><![CDATA[t_areaColors]]></Name>
					<X>1300</X><Y>1180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Area colors]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1706004011983</Id>
					<Name><![CDATA[t_menuColors]]></Name>
					<X>1300</X><Y>1030</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Menu styling]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1706892985870</Id>
					<Name><![CDATA[button_changeMask]]></Name>
					<X>1530</X><Y>1040</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="140" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[GISregion_antiLaag.setFillColor( new Color( uniform_discr(255),  uniform_discr(255),  uniform_discr(255), 135));]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[change anti-layer]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1706991281439</Id>
					<Name><![CDATA[button_changeTheme]]></Name>
					<X>1530</X><Y>1080</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="140" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[v_themeColor = new Color( uniform_discr(255),  uniform_discr(255),  uniform_discr(255) );
uI_Results.f_styleAllCharts(white, v_themeColor, 1, LINE_STYLE_SOLID);
uI_Results.f_styleRadioButtons(v_themeColor, v_themeColor, 1, LINE_STYLE_SOLID);
traceln( v_themeColor.getRGB() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Change theme style]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1708522580070</Id>
					<Name><![CDATA[button_goToUI]]></Name>
					<X>1140</X><Y>87</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="270" Height="43">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[switch(v_clickedObjectType){

	case BUILDING:
		//c_companyUIs.get(v_connectionOwnerIndexNr).f_setResultsUIPresets();
		UI_company companyUI = c_companyUIs.get(v_connectionOwnerIndexNr);
		
		//Connect resultsUI of the main with resultsUI of CompanyUI
		companyUI.f_copyResultsUI();	
		companyUI.uI_Results.v_selectedObjectType = OL_GISObjectType.BUILDING;

		
		//Set sliders to the correct GC if there are more than 1 GC
		if(companyUI.c_ownedGridConnections.size()>1){
			GridConnection selectedGC = findFirst(companyUI.c_ownedGridConnections, GC -> GC == c_selectedGridConnections.get(0));  
			companyUI.GCnr_selection.setValue(companyUI.c_ownedGridConnections.indexOf(selectedGC), true);
		}
		else{
			companyUI.uI_Results.f_setAllCharts();
		}
		
		//Go to the companyUI view
		c_companyUIs.get(v_connectionOwnerIndexNr).va_companyUI.navigateTo();
		break;
	
	case ELECTROLYSER:
		ui_Hydrogen.get(0).va_hydrogenUI.navigateTo();
		break;
	
	case BATTERY:
		ui_Battery.get(0).va_batteryUI.navigateTo();
		break;
	
	case SOLARFARM:
	case WINDFARM:
	case CHARGER:
	default:
	break;
}
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="9" Style="1"/>
						<LabelText><![CDATA[Ga naar bedrijfs interface]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1708595212229</Id>
					<Name><![CDATA[t_privateUI]]></Name>
					<X>-290</X><Y>340</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Private UI creation:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1709718299887</Id>
					<Name><![CDATA[rect_scenarios]]></Name>
					<X>-0.667</X><Y>98.667</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-1644806</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<Width>400</Width>
					<Height>186</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-385875969</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1709718299889</Id>
					<Name><![CDATA[rb_scenarios]]></Name>
					<X>19.333</X><Y>144.667</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="380" Height="135">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Set selected scenario string
String selected_scenario = "";

//Disable traceln
PrintStream originalPrintStream = f_disableTraceln();

//YOUR CODE FOR SCENARIO SWITCHING HERE!!!!
switch(rb_scenarios.getValue()){
	
	case 0:
		selected_scenario = "1";
		//f_setScenario_1();
	break;
	
	case 1:
		selected_scenario = "2";
		//f_setScenario_2();
	break;
	
	case 2:
		selected_scenario = "3";
		//f_setScenario_3();
	break;
	
	case 3:
		selected_scenario = "4";
		//f_setScenario_4();
	break;
	
	case 4:
		selected_scenario = "Custom";
		t_scenarioDescription.setText("");
	break;
	
	default:
		traceln("Unsupported scenario selected");
}

//Enable traceln
f_enableTraceln(originalPrintStream);

//Set scenario name text to the correct scenario
t_scenarioName.setText("Scenario: " + selected_scenario);
traceln("Selected scenario: \"" + selected_scenario + "\"");]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="14" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[S1]]></Button>
						<Button><![CDATA[S2]]></Button>
						<Button><![CDATA[S3]]></Button>
						<Button><![CDATA[S4]]></Button>
						<Button><![CDATA[Custom]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1709718299891</Id>
					<Name><![CDATA[t_scenarios]]></Name>
					<X>19.333</X><Y>118.667</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Selecteer een scenario]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>20</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1709718299897</Id>
					<Name><![CDATA[gr_scenarioDescription]]></Name>
					<X>199.333</X><Y>374.667</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1709718299899</Id>
					<Name><![CDATA[rect_scenarioDescription]]></Name>
					<X>-200</X><Y>-80</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-1644806</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<Width>400</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-385875969</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1709718299901</Id>
					<Name><![CDATA[t_scenarioDescription]]></Name>
					<X>0.667</X><Y>-24.667</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Het huidige scenario bevat de energie dynamieken van dit moment.
Dit omvat o.a. de huidige zonnepanelen op de daken van huizen en 
bedrijven, het aantal elektrische voertuigen in per buurt, de energie-
consumptie van de bedrijventerreinen, en de huidige gasconsumptie 
voor verwarming.]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1709718299903</Id>
					<Name><![CDATA[t_scenarioName]]></Name>
					<X>0</X><Y>-50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huidig scenario]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1710174312959</Id>
					<Name><![CDATA[t_resultsUIFunctions]]></Name>
					<X>-680</X><Y>540</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Results UI settings]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713429772427</Id>
					<Name><![CDATA[t_scenarioDictionaries]]></Name>
					<X>-290</X><Y>170</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Scenario dictionaries]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713431901010</Id>
					<Name><![CDATA[t_initializationFunctions]]></Name>
					<X>-680</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Interface initialization functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1709717180367</Id>
					<Name><![CDATA[gr_simulateYearScreenSmall]]></Name>
					<X>2185</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[1670]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1709717180369</Id>
					<Name><![CDATA[rect_simulateYearScreenSmall]]></Name>
					<X>-230</X><Y>-90</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DASHED</LineStyle>
					<Width>460</Width>
					<Height>224</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_themeColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Group>
					<Id>1709717180371</Id>
					<Name><![CDATA[gr_simulateYearToCalculateKPIsSmall]]></Name>
					<X>10</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[
gr_simulateYearScreenSmall.setVisible(false);		
gr_loadIconSmall.setVisible(true);
		

new Thread( () -> {
	//Save previous totals
	f_updatePreviousTotalsGC();
	
	//Run rapid run
	energyModel.f_runRapidSimulation();
	
	//After rapid run: remove loading screen
	gr_loadIconSmall.setVisible(false);
	
	//Update main area collection
	f_updateUIresultsMainArea();
	
	//Update selected GC area collection
	if (c_selectedGridConnections.size() > 0){
		f_updateUIresultsGridConnection(uI_Results.v_gridConnection, c_selectedGridConnections);
	}
	uI_Results.f_showCorrectChart();
	
	//Update and show kpi summary chart after run
	if(settings.showKPISummary() != null && settings.showKPISummary()){
		uI_Results.chartKPISummary.f_setKPISummaryChart();
	}
}).start();

b_resultsUpToDate = true;
]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1709717180373</Id>
					<Name><![CDATA[t_simulateYearToCalculateCostsSmall]]></Name>
					<X>10</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Simuleer jaar voor KPI's]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Image>
					<Id>1709717180375</Id>
					<Name><![CDATA[image_simulateYearToCalculateCostsSmall]]></Name>
					<X>-200</X><Y>-75</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>60</Width>
					<Height>60</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[icon_greater_than.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
			</Presentation>

				</Group>
				<Group>
					<Id>1709717180404</Id>
					<Name><![CDATA[gr_loadIconSmall]]></Name>
					<X>1659</X><Y>135</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1709717180406</Id>
					<Name><![CDATA[rect_loadIconSmall]]></Name>
					<X>-219</X><Y>-50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-1644806</LineColor>
					<LineColorCode><![CDATA[v_themeColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DASHED</LineStyle>
					<Width>460</Width>
					<Height>224</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-369756683</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Image>
					<Id>1709717180408</Id>
					<Name><![CDATA[image_loadIconSmall]]></Name>
					<X>-30</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>60</Width>
					<Height>60</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[icon_loading.gif]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1709717180410</Id>
					<Name><![CDATA[t_loadIconSmall]]></Name>
					<X>0</X><Y>15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Jaar wordt gesimuleerd ]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1715117660077</Id>
					<Name><![CDATA[group_standaardLegenda]]></Name>
					<X>1520</X><Y>890</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[1000]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1702041947455</Id>
					<Name><![CDATA[oval_house]]></Name>
					<X>-60</X><Y>10</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>6.5</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_houseBuildingColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1702041947457</Id>
					<Name><![CDATA[t_company]]></Name>
					<X>-39.5</X><Y>-47.5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Bedrijf]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1702041947459</Id>
					<Name><![CDATA[t_others]]></Name>
					<X>-39.5</X><Y>27.5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Overig]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Oval>
					<Id>1702041947461</Id>
					<Name><![CDATA[oval_others]]></Name>
					<X>-60</X><Y>35</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>6.5</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_restBuildingColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1702041947463</Id>
					<Name><![CDATA[t_detailedCompany]]></Name>
					<X>-39.5</X><Y>-22.5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Detail model bedrijf]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Oval>
					<Id>1702041947465</Id>
					<Name><![CDATA[oval_company]]></Name>
					<X>-60</X><Y>-40</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>6.5</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_companyBuildingColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1702041947467</Id>
					<Name><![CDATA[t_house]]></Name>
					<X>-39.5</X><Y>2.5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huis]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Oval>
					<Id>1702041947469</Id>
					<Name><![CDATA[oval_detailedCompany]]></Name>
					<X>-60</X><Y>-15</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>6.5</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_detailedCompanyBuildingColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
			</Presentation>

				</Group>
				<Text>
					<Id>1715951689412</Id>
					<Name><![CDATA[t_inputParameters]]></Name>
					<X>-290</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Input Parameters]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1716419413991</Id>
					<Name><![CDATA[rect_supportFunctions]]></Name>
					<X>-520</X><Y>-160</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>260</Width>
					<Height>120</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1716419425042</Id>
					<Name><![CDATA[t_supportFunctions]]></Name>
					<X>-500</X><Y>-150</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Support functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1716988295617</Id>
					<Name><![CDATA[button_gotoEngine]]></Name>
					<X>-270</X><Y>280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="170" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[energyModel.va_engine.navigateTo();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Go to Engine]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Line>
					<Id>1719217632486</Id>
					<Name><![CDATA[line_ordereringDescription]]></Name>
					<X>50</X><Y>-720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>220</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1719217632488</Id>
					<Name><![CDATA[t_ordereringDescription]]></Name>
					<X>60</X><Y>-750</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Initial conditions & ordering]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>16</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1719829894799</Id>
					<Name><![CDATA[t_outsideTemperature]]></Name>
					<X>1326</X><Y>17</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-7631989</Color>
					<Text><![CDATA[Buitentemperatuur: 23 graden]]></Text>
					<TextCode><![CDATA["Buiten temperatuur " + v_outsideTemperature + " graden"]]></TextCode>
					<Font>
						<Name>Cambria</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1719829988146</Id>
					<Name><![CDATA[t_solarIrradiance]]></Name>
					<X>1326</X><Y>42</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-7631989</Color>
					<Text><![CDATA[Zonne instraling: 12 w/m2]]></Text>
					<TextCode><![CDATA["Zonneinstraling " + v_solarIrradiance + " W/m2"]]></TextCode>
					<Font>
						<Name>Cambria</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1719829993001</Id>
					<Name><![CDATA[t_windSpeed]]></Name>
					<X>1326</X><Y>67</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-7631989</Color>
					<Text><![CDATA[Windsnelheid: hoog]]></Text>
					<TextCode><![CDATA["Windsnelheid: " + v_windspeed ]]></TextCode>
					<Font>
						<Name>Cambria</Name>
						<Size>10</Size>
						<Style>1</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
    			<TimePlot>
					<Id>1719847144211</Id>
					<Name><![CDATA[plot_outsideTemperature]]></Name>
					<X>1335</X><Y>12</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1719907200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>84</Width>
					<Height>23</Height>
					<BackgroundColor/>
					<BorderColor>-16777216</BorderColor>
					<ChartArea>
						<XOffset>0</XOffset>
						<YOffset>0</YOffset>
						<Width>84</Width>
						<Height>23</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-6632142</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>NONE</HorLabelsPosition>
						<VerLabelsPosition>NONE</VerLabelsPosition>
						<TextColor>-10496</TextColor>
					</Labels>
					<ShowLegend>false</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[-5]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[28]]></VerScaleToExpression>
					<VerScaleType>FIXED</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Title]]></Title>
					<Id>1719847144208</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-16776961</Color>
					<Expression2><![CDATA[v_outsideTemperature]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>96</SamplesToKeep>
					<TimeWindowExpression><![CDATA[96]]></TimeWindowExpression>
					<FillAreaUnderLine>true</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
    			<TimePlot>
					<Id>1719848137592</Id>
					<Name><![CDATA[plot_solarIrradiance]]></Name>
					<X>1335</X><Y>38</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1719907200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>84</Width>
					<Height>23</Height>
					<BackgroundColor/>
					<BorderColor>-16777216</BorderColor>
					<ChartArea>
						<XOffset>0</XOffset>
						<YOffset>0</YOffset>
						<Width>84</Width>
						<Height>23</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-6632142</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>NONE</HorLabelsPosition>
						<VerLabelsPosition>NONE</VerLabelsPosition>
						<TextColor>-10496</TextColor>
					</Labels>
					<ShowLegend>false</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1000]]></VerScaleToExpression>
					<VerScaleType>FIXED</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Title]]></Title>
					<Id>1719848137589</Id>
					<Expression><![CDATA[my_dataset]]></Expression>
					<Color>-10496</Color>
					<Expression2><![CDATA[v_solarIrradiance]]></Expression2>
					<Expression2Flag>true</Expression2Flag>
						<PointStyle>NONE</PointStyle>
						<LineWidth>1.0</LineWidth>
					</DatasetExpression>
					<SamplesToKeep>96</SamplesToKeep>
					<TimeWindowExpression><![CDATA[96]]></TimeWindowExpression>
					<FillAreaUnderLine>true</FillAreaUnderLine>
					<LabelFormat>HH_mm</LabelFormat>
    			</TimePlot>
				<Group>
					<Id>1720909739871</Id>
					<Name><![CDATA[gr_multipleBuildingInfo]]></Name>
					<X>1040</X><Y>55</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1720904897811</Id>
					<Name><![CDATA[button_nextBuilding]]></Name>
					<X>-65</X><Y>32</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="155" Height="20">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (v_selectedGridConnectionIndex < v_nbGridConnectionsInSelectedBuilding ){
	v_selectedGridConnectionIndex += 1;
	//List<GridConnection> list = new ArrayList<>();
	c_selectedGridConnections = new ArrayList<>();
	if( v_selectedGridConnectionIndex > 0){
		c_selectedGridConnections.add(v_clickedBuilding.c_containedGridConnections.get(v_selectedGridConnectionIndex -1));
	}
	else {
		c_selectedGridConnections = v_clickedBuilding.c_containedGridConnections;
	}
	f_updateUIresultsGridConnection(uI_Results.v_gridConnection, c_selectedGridConnections);
	
	//Set dashboard UI button
	f_setUIButton();
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="9" Style="0"/>
						<LabelText><![CDATA[Toon volgend adres]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1720904921271</Id>
					<Name><![CDATA[button_previousBuilding]]></Name>
					<X>-65</X><Y>53</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="155" Height="20">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (v_selectedGridConnectionIndex > 0){
	v_selectedGridConnectionIndex -= 1;
	//List<GridConnection> list = new ArrayList<>();
	c_selectedGridConnections = new ArrayList<>();
	
	if( v_selectedGridConnectionIndex > 0){
		c_selectedGridConnections.add(v_clickedBuilding.c_containedGridConnections.get(v_selectedGridConnectionIndex -1));
	}
	else {
		c_selectedGridConnections = v_clickedBuilding.c_containedGridConnections;
	}
	f_updateUIresultsGridConnection(uI_Results.v_gridConnection, c_selectedGridConnections);
	
	//Set dashboard UI button
	f_setUIButton();
}

]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="9" Style="0"/>
						<LabelText><![CDATA[Toon vorig adres]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1720908988631</Id>
					<Name><![CDATA[t_multipleBuildingInfo]]></Name>
					<X>-360</X><Y>57</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Je kijkt naar de som van alle 5  addressen samen in het geselecteerde pand]]></Text>
					<TextCode><![CDATA[v_selectedGridConnectionIndex > 0 ? 
"Je kijkt naar het " + (v_selectedGridConnectionIndex ) + "e adres in het geselecteerde pand"
: 
"Je kijkt naar de som van alle " + v_nbGridConnectionsInSelectedBuilding + " addressen in dit pand"]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1721290473524</Id>
					<Name><![CDATA[checkbox_multiSelect]]></Name>
					<X>790</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="190" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (!b_multiSelect) {
	// Reset the building colors
	for (GridConnection GC: c_selectedGridConnections) {
		for (GIS_Object GB : GC.c_connectedGISObjects) {
			f_styleAreas(GB);
		}
	}
	
	// Reset the list of selected GCs and the individual AreaCollections in the ResultsUI
	c_selectedGridConnections.clear();
	uI_Results.c_individualGridConnections = new ArrayList<AreaCollection>();
	
	// Reset the shown charts
	f_updateUIresultsMainArea();
	uI_Results.v_selectedObjectType = OL_GISObjectType.REGION;
	uI_Results.f_showCorrectChart();
	
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Selecteer Meerdere Gebouwen]]></LabelText>
						<LinkTo>true</LinkTo>
						<Link>b_multiSelect</Link>
	 				</ExtendedProperties>
				</Control>
				<Rectangle>
					<Id>1721819768547</Id>
					<Name><![CDATA[rect_CustomColors]]></Name>
					<X>1310</X><Y>1410</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-10496</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>470</Width>
					<Height>290</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1721819794985</Id>
					<Name><![CDATA[t_customColors]]></Name>
					<X>1350</X><Y>1430</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Custom Color Functionalities
]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<EmbeddedObjectPresentation>
					<Id>1722252542596</Id>
					<Name><![CDATA[uI_Tabs_presentation]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>52.51902183517265</Latitude>
					<Longitude>6.169494834925871</Longitude>
				</EmbeddedObjectPresentation>
				<Group>
					<Id>1696520906125</Id>
					<Name><![CDATA[gr_documentation]]></Name>
					<X>1290</X><Y>-130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[getExperimentHost().openWebSite("https://www.zenmo.com");]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1696520906127</Id>
					<Name><![CDATA[roundRectangle_documentation]]></Name>
					<X>-70</X><Y>-20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>200</Width>
					<Height>30</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[new Color (255, 255, 255, 100)]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Text>
					<Id>1696520906129</Id>
					<Name><![CDATA[t_documentation]]></Name>
					<X>-59</X><Y>-14</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Info en documentatie]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Image>
					<Id>1696520906131</Id>
					<Name><![CDATA[image_documentation]]></Name>
					<X>95</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>20</Width>
					<Height>20</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[icon_i.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
				<Rectangle>
					<Id>1724419174775</Id>
					<Name><![CDATA[rect_scenarioText]]></Name>
					<X>-1060</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>299.107</Width>
					<Height>330</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1724419379552</Id>
					<Name><![CDATA[txt_scenarioFunctions]]></Name>
					<X>-1040</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Scenario functions, text and settings]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725017697644</Id>
					<Name><![CDATA[checkbox_cabels]]></Name>
					<X>20</X><Y>460</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="190" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[for(GISRoute GISCable : c_LVCables){
	GISCable.setVisible(b_showCables);
}

for(GISRoute GISCable : c_MVCables){
	GISCable.setVisible(b_showCables);
}
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Toon stroom kabels]]></LabelText>
						<DefaultValueCode><![CDATA[false]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>b_showCables</Link>
	 				</ExtendedProperties>
				</Control>
				<GISMap>
					<Id>1725020138710</Id>
					<Name><![CDATA[map]]></Name>
					<X>410</X><Y>130</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[if (uI_Tabs.pop_tabEHub.get(0).b_NFATOListener) {
	uI_Tabs.pop_tabEHub.get(0).f_checkGISRegion(clickx, clicky);
}
else if (b_multiSelect) {
	f_multiSelect(clickx, clicky);
}
else {
	f_selectGISRegion(clickx, clicky);
}
]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>1000</Width>
					<Height>620</Height>
					<OnClickCode><![CDATA[if (uI_Tabs.pop_tabEHub.get(0).b_NFATOListener) {
	uI_Tabs.pop_tabEHub.get(0).f_checkGISRegion(clickx, clicky);
}
else if (b_multiSelect) {
	f_multiSelect(clickx, clicky);
}
else {
	f_selectGISRegion(clickx, clicky);
}
]]></OnClickCode>
					<GISShapes>
					</GISShapes>
					<Latitude>52.539123187983904</Latitude>
					<Longitude>6.173604854475837</Longitude>
					<Scale>25000</Scale>
					<BorderColor>-4144960</BorderColor>
					<FillColor>-1</FillColor>
					<ShowTiles>true</ShowTiles>
					<TileURLProvider>ANYLOGIC</TileURLProvider>
					<CustomTileURL>false</CustomTileURL>
					<TileURL><![CDATA[https://a.tile.openstreetmap.org/[zoom]/[x]/[y].png]]></TileURL>				
					<RouteProviderType>WEB_SERVICE</RouteProviderType>
					<RouteNotFound>CREATE_STRAIGHT_LINE</RouteNotFound>
					<OnlineRouteProvider>ANYLOGIC</OnlineRouteProvider>
					<TransportType>CAR</TransportType>
					<RoutingMethod>FASTEST</RoutingMethod>
					<PathfindingAlgorithm>DIJKSTRABI</PathfindingAlgorithm>
					<CustomRouteProvider>false</CustomRouteProvider>
					<RouteSourceResourceReference>
					</RouteSourceResourceReference>
					<RouteGraphResourceReference>
					</RouteGraphResourceReference>	
					<MapScaleBasedGeneralization>true</MapScaleBasedGeneralization>
					<AbsolutePrecisionGeneralization>1000</AbsolutePrecisionGeneralization>


				</GISMap>
				<Text>
					<Id>1725456122345</Id>
					<Name><![CDATA[txt_sliderInitialization]]></Name>
					<X>-290</X><Y>560</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Slider Initialization]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1725525689286</Id>
					<Name><![CDATA[txt_GISObjectCreationFunctions]]></Name>
					<X>-680</X><Y>170</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[GIS Object creation functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
				<Level>
					<Id>1699290897134</Id>
					<Name><![CDATA[level1]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1696520909213</Id>
					<Name><![CDATA[va_Interface]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1708522361862</Id>
			<Name><![CDATA[UI_company]]></Name>
			<AdditionalClassCode><![CDATA[
//Getters for shapes
public ShapeRadioButtonGroup getRb_scenariosPrivateUI() {
	return this.rb_scenariosPrivateUI;
}


/*
public ShapeGroup getChartGroupWeek() {
	return this.group_week;
}
*/
]]></AdditionalClassCode>
			<Import><![CDATA[//import kotlinx.serialization.internal.ArrayListClassDesc;
import org.eclipse.jdt.internal.compiler.ast.ForeachStatement;]]></Import>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1708522361868</Id>
				<Name><![CDATA[1708522361868]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1708588800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1708522361865</Id>
				<Name><![CDATA[scale]]></Name>
				<X>10</X><Y>-210</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1708522361869</CurrentLevel>
			<ConnectionsId>1708522361863</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1708611471928</Id>
					<Name><![CDATA[v_companyUIBackgroundColor]]></Name>
					<X>-410</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color( 204, 72, 118); ]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1709554407054</Id>
					<Name><![CDATA[v_companyUILineColor]]></Name>
					<X>-410</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[black]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713543883957</Id>
					<Name><![CDATA[v_currentSelectedGCnr]]></Name>
					<X>-410</X><Y>940</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713544066407</Id>
					<Name><![CDATA[v_heatDemandReduction_pct]]></Name>
					<X>-410</X><Y>960</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713544066409</Id>
					<Name><![CDATA[v_electricityDemandReduction_pct]]></Name>
					<X>-410</X><Y>980</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713957213075</Id>
					<Name><![CDATA[v_minPVSlider]]></Name>
					<X>-1060</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713957229701</Id>
					<Name><![CDATA[v_maxPVSlider]]></Name>
					<X>-1060</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[100]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713957233827</Id>
					<Name><![CDATA[v_defaultPVSlider]]></Name>
					<X>-1060</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713971707023</Id>
					<Name><![CDATA[v_minBatSlider]]></Name>
					<X>-1060</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713971707027</Id>
					<Name><![CDATA[v_maxBatSlider]]></Name>
					<X>-1060</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1713971707029</Id>
					<Name><![CDATA[v_defaultBatSlider]]></Name>
					<X>-1060</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139274247</Id>
					<Name><![CDATA[v_nbEVCars]]></Name>
					<X>-1050</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139294087</Id>
					<Name><![CDATA[v_nbHydrogenCars]]></Name>
					<X>-1050</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139299844</Id>
					<Name><![CDATA[v_nbDieselCars]]></Name>
					<X>-1050</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139304156</Id>
					<Name><![CDATA[v_nbEVVans]]></Name>
					<X>-1050</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139320416</Id>
					<Name><![CDATA[v_nbEVTrucks]]></Name>
					<X>-1050</X><Y>990</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139381294</Id>
					<Name><![CDATA[v_nbDieselVans]]></Name>
					<X>-1050</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139385293</Id>
					<Name><![CDATA[v_nbDieselTrucks]]></Name>
					<X>-1050</X><Y>1010</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139405729</Id>
					<Name><![CDATA[v_nbHydrogenVans]]></Name>
					<X>-1050</X><Y>830</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139413565</Id>
					<Name><![CDATA[v_nbHydrogenTrucks]]></Name>
					<X>-1050</X><Y>1030</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139966993</Id>
					<Name><![CDATA[v_minEVCarSlider]]></Name>
					<X>-1050</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714139997786</Id>
					<Name><![CDATA[v_minHydrogenCarSlider]]></Name>
					<X>-1050</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714140003906</Id>
					<Name><![CDATA[v_maxEVCarSlider]]></Name>
					<X>-1050</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714140007855</Id>
					<Name><![CDATA[v_minDieselCarSlider]]></Name>
					<X>-1050</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714140012482</Id>
					<Name><![CDATA[v_maxHydrogenCarSlider]]></Name>
					<X>-1050</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714140056511</Id>
					<Name><![CDATA[v_maxDieselCarSlider]]></Name>
					<X>-1050</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714141906262</Id>
					<Name><![CDATA[v_minEVVanSlider]]></Name>
					<X>-1050</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714141906264</Id>
					<Name><![CDATA[v_minHydrogenVanSlider]]></Name>
					<X>-1050</X><Y>710</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714141906266</Id>
					<Name><![CDATA[v_maxEVVanSlider]]></Name>
					<X>-1050</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714141906268</Id>
					<Name><![CDATA[v_minDieselVanSlider]]></Name>
					<X>-1050</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714141906270</Id>
					<Name><![CDATA[v_maxHydrogenVanSlider]]></Name>
					<X>-1050</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714141906272</Id>
					<Name><![CDATA[v_maxDieselVanSlider]]></Name>
					<X>-1050</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714142030261</Id>
					<Name><![CDATA[v_minEVTruckSlider]]></Name>
					<X>-1050</X><Y>870</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714142030263</Id>
					<Name><![CDATA[v_minHydrogenTruckSlider]]></Name>
					<X>-1050</X><Y>910</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714142030265</Id>
					<Name><![CDATA[v_maxEVTruckSlider]]></Name>
					<X>-1050</X><Y>930</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714142030267</Id>
					<Name><![CDATA[v_minDieselTruckSlider]]></Name>
					<X>-1050</X><Y>890</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714142030269</Id>
					<Name><![CDATA[v_maxDieselTruckSlider]]></Name>
					<X>-1050</X><Y>950</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1714142035660</Id>
					<Name><![CDATA[v_maxHydrogenTruckSlider]]></Name>
					<X>-1050</X><Y>970</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725364840518</Id>
					<Name><![CDATA[v_adressGC]]></Name>
					<X>-740</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725373825534</Id>
					<Name><![CDATA[v_chartBackgroundColor]]></Name>
					<X>-410</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[white]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725381531538</Id>
					<Name><![CDATA[v_companyUILineWidth]]></Name>
					<X>-410</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[2]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725381554846</Id>
					<Name><![CDATA[v_chartLineWidth]]></Name>
					<X>-410</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[2]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725382988283</Id>
					<Name><![CDATA[v_companyUIBackgroundColorSliders]]></Name>
					<X>-410</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(255, 255, 255, 232)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725609978738</Id>
					<Name><![CDATA[v_loadScreenColor]]></Name>
					<X>-410</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[v_companyUIBackgroundColor]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725614630564</Id>
					<Name><![CDATA[v_minGCCapacitySlider]]></Name>
					<X>-1060</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725614630566</Id>
					<Name><![CDATA[v_maxGCCapacitySlider]]></Name>
					<X>-1060</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[100]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725614630568</Id>
					<Name><![CDATA[v_defaultGCCapacitySlider]]></Name>
					<X>-1060</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1725625091022</Id>
					<Name><![CDATA[b_runningMainInterfaceScenarioSettings]]></Name>
					<X>-380</X><Y>840</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1708522385741</Id>
					<Name><![CDATA[p_companyName]]></Name>
					<X>-740</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1708522385739</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1708522412931</Id>
					<Name><![CDATA[p_amountOfGC]]></Name>
					<X>-740</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1708522412929</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1708522430401</Id>
					<Name><![CDATA[p_amountOfBuildings]]></Name>
					<X>-740</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1708522430399</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1714641936747</Id>
					<Name><![CDATA[p_company]]></Name>
					<X>-740</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[ConnectionOwner]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1714641936745</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1715181661645</Id>
					<Name><![CDATA[p_maxAddedVehicles]]></Name>
					<Description><![CDATA[Amount of vehicles that can additionally be added on the already existing ones]]></Description>
					<X>-1060</X><Y>1050</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[20]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1715181661643</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1709571634348</Id>
					<Name><![CDATA[c_ownedBuildings]]></Name>
					<X>-740</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GIS_Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1709571643590</Id>
					<Name><![CDATA[c_ownedGridConnections]]></Name>
					<X>-740</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1709571660792</Id>
					<Name><![CDATA[c_subTenants]]></Name>
					<X>-740</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[A_SubTenant]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1711722238158</Id>
					<Name><![CDATA[c_connectedTrafos]]></Name>
					<X>-740</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1713945394048</Id>
					<Name><![CDATA[c_scenarioSettings_Current]]></Name>
					<X>-740</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_scenario_Current]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1713947318059</Id>
					<Name><![CDATA[c_scenarioSettings_Future]]></Name>
					<X>-740</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_scenario_Future]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713445281785</Id>
					<Name><![CDATA[f_setScenarioFuture]]></Name>
					<X>-380</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[//Set button to custom early on, so traceln will get ignored.
rb_scenariosPrivateUI.setValue(2, false);


////Heating

//Heating savings
sl_heatDemandCompanyReduction.setValue(0, true);

//Heating type (aangenomen dat het hetzelfde blijft, want hebben geen vraag die dat stelt in het formulier)
int nr_currentHeatingType = 0;
switch (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHeatingType()){
	case GASBURNER:
		nr_currentHeatingType = 0;
	break;

	case HYBRID_HEATPUMP:
		nr_currentHeatingType = 1;
	break;

	case ELECTRIC_HEATPUMP:
		nr_currentHeatingType = 2;
	break;
		
	case HYDROGENBURNER:
		nr_currentHeatingType = 3;
	break;
		
	case OTHER:
		//not supported
	break;
		
	default:
}
rb_heatingTypePrivateUI.setValue(nr_currentHeatingType, true);		


////Electricity

//Electricity savings
sl_electricityDemandCompanyReduction.setValue(0, true);

//Connection capacity
sl_GCCapacityCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getRequestedContractDeliveryCapacity_kW(), true);

//Solar panel power
sl_rooftopPVCompany.setValue(v_minPVSlider + c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedPV_kW(), true);

//Battery capacity
sl_batteryCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedBatteryCapacity_kWh(), true);


////Mobility

//Mobility savings
sl_mobilityDemandCompanyReduction.setValue(0, true);

//Cars (VOLGORDE BELANGRIJK)
sl_electricCarsCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCars() + c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedEVCars(), true);
sl_hydrogenCarsCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenCars() + c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedHydrogenCars(), true);
//sl_dieselCarsCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedDieselCars(), true);

//Vans
sl_electricVansCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVans() + c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedEVVans(), true);
sl_hydrogenVansCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenVans() + c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedHydrogenVans(), true);
//sl_dieselVansCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedDieselVans(), true);

//Trucks
sl_electricTrucksCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTrucks() + c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedEVTrucks(), true);
sl_hydrogenTrucksCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenTrucks() + c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedHydrogenTrucks(), true);
//sl_dieselTrucksCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedDieselTrucks(), true);


//Reset button to future, due to sliders putting it on custom
rb_scenariosPrivateUI.setValue(1, false);]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713447383903</Id>
					<Name><![CDATA[f_setScenario]]></Name>
					<X>-400</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[scenario_nr]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[switch (scenario_nr){

	case 0: // Current
		for (int i = c_ownedGridConnections.size(); i > 0; i-- ){
			GCnr_selection.setValue(i-1, false);
			f_setSelectedGCSliders();
			f_setScenarioCurrent(c_ownedGridConnections.get(v_currentSelectedGCnr));
		}
		//traceln("Selected scenario: Current");
	break;
	
	case 1: // Future
		for (int i = c_ownedGridConnections.size(); i > 0; i-- ){
			GCnr_selection.setValue(i-1, false);
			f_setSelectedGCSliders();
			f_setScenarioFuture(c_ownedGridConnections.get(v_currentSelectedGCnr));
		}
		//traceln("Selected scenario: Future");
	break;
	
	case 2: // Custom

		if(rb_scenariosPrivateUI.getValue() == 2){
		return;
		}
		rb_scenariosPrivateUI.setValue(2, false);
		traceln("Selected scenario: Custom");
	break;
	
	default:

}

//Set 'results up to date' to false
zero_Interface.b_resultsUpToDate = false;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713447428490</Id>
					<Name><![CDATA[f_setScenarioCurrent]]></Name>
					<X>-380</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[//Set button to custom early on, so traceln will get ignored.
rb_scenariosPrivateUI.setValue(2, false);


////Heating

//Heating savings
sl_heatDemandCompanyReduction.setValue(0, true);

//Heating type
int nr_currentHeatingType = 0;
switch (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHeatingType()){
	case GASBURNER:
		nr_currentHeatingType = 0;
	break;

	case HYBRID_HEATPUMP:
		nr_currentHeatingType = 1;
	break;

	case ELECTRIC_HEATPUMP:
		nr_currentHeatingType = 2;
	break;
		
	case HYDROGENBURNER:
		nr_currentHeatingType = 3;
	break;
		
	case OTHER:
		//not supported
	break;
		
	default:
}
rb_heatingTypePrivateUI.setValue(nr_currentHeatingType, true);		


////Electricity

//Electricity savings
sl_electricityDemandCompanyReduction.setValue(0, true);

//Connection capacity
sl_GCCapacityCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentContractDeliveryCapacity_kW(), true);

//Solar panel power
sl_rooftopPVCompany.setValue(v_minPVSlider, true);

//Battery capacity
sl_batteryCompany.setValue(v_minBatSlider, true);


////Mobility

//Mobility savings
sl_mobilityDemandCompanyReduction.setValue(0, true);

//Cars (VOLGORDE BELANGRIJK)
sl_electricCarsCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCars(), true);
sl_hydrogenCarsCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenCars(), true);
sl_dieselCarsCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselCars(), true);

//Vans
sl_electricVansCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVans(), true);
sl_hydrogenVansCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenVans(), true);
sl_dieselVansCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselVans(), true);

//Trucks
sl_electricTrucksCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTrucks(), true);
sl_hydrogenTrucksCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenTrucks(), true);
sl_dieselTrucksCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselTrucks(), true);

//Reset button to current, due to sliders putting it on custom
rb_scenariosPrivateUI.setValue(0, false);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713537591106</Id>
					<Name><![CDATA[f_setHeatingType]]></Name>
					<X>-400</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[selectedHeatingType]]></Name>
						<Type><![CDATA[OL_GridConnectionHeatingType]]></Type>
					</Parameter>
					<Body><![CDATA[//Get current heating type
OL_GridConnectionHeatingType currentHeatingType = GC.p_heatingType;

//Check if selected is not the same as previous, if not: continue with the setting of new heating type
if (currentHeatingType == selectedHeatingType){
	//traceln("Selected heating type is the same as previous heating type");
	return;
}


//Remove primary heating asset
J_EA primaryHeatingAsset = GC.p_primaryHeatingAsset;
primaryHeatingAsset.removeEnergyAsset();


// If secondary heating asset exists, remove that too
if (GC.p_secondaryHeatingAsset != null){
	J_EA secondaryHeatingAsset = GC.p_secondaryHeatingAsset;
	secondaryHeatingAsset.removeEnergyAsset();
	//main.energyModel.c_ambientAirDependentAssets.remove(secondaryHeatingAsset); // Wanneer is secondary heating type ooit ambient air dependent??
}


//Select heat demand consumption asset 
J_EAConsumption heatDemandAsset = findFirst(GC.c_consumptionAssets, j_ea->j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);

//Check heating demand asset is null (shouldnt be possible)
if (heatDemandAsset == null){
	traceln("No heating demand asset found for GC:" + GC.p_gridConnectionID);
	traceln("--> No heating asset created");		
}

//Algemeen
double timestep_h = zero_Interface.energyModel.p_timeStep_h;
double capacityThermal_kW = heatDemandAsset.yearlyDemandHeat_kWh/8760*10; // --> average hourly consumption * 10 --> to always have enough capacity
double efficiency;
double outputTemperature_degC;

//Heatpump specifieke parameters
double baseTemperature_degC = zero_Interface.energyModel.v_currentAmbientTemperature_degC;
double capacityElectric_kW;		
String ambientTempType;
double sourceAssetHeatPower_kW;
double belowZeroHeatpumpEtaReductionFactor;



//Create selected heating type
switch (selectedHeatingType){
	case GASBURNER:
		
		//Add primary heating asset (gasburner)
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyGasBurner;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureGasBurner_degC;
		
		J_EAConversionGasBurner gasBurner = new J_EAConversionGasBurner(GC, OL_EnergyAssetType.GAS_BURNER, capacityThermal_kW, efficiency, timestep_h, outputTemperature_degC);
		
	break;
	
	case HYBRID_HEATPUMP:
		
		//Add primary heating asset (heatpump)
		capacityElectric_kW = capacityThermal_kW / 3; //-- /3, want is hybride, dus kleiner
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyHeatpump;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureHeatpump_degC;
		ambientTempType = "AIR";
		sourceAssetHeatPower_kW = 0;
		belowZeroHeatpumpEtaReductionFactor = 1;
		
		J_EAConversionHeatPump heatPumpHybrid = new J_EAConversionHeatPump(GC, timestep_h, capacityElectric_kW, efficiency, baseTemperature_degC, outputTemperature_degC, ambientTempType, sourceAssetHeatPower_kW, belowZeroHeatpumpEtaReductionFactor );
		zero_Interface.energyModel.c_ambientAirDependentAssets.add(heatPumpHybrid);
		
		//Add secondary heating asset (gasburner)
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyGasBurner;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureGasBurner_degC;
		
		J_EAConversionGasBurner gasBurnerHybrid = new J_EAConversionGasBurner(GC, OL_EnergyAssetType.GAS_BURNER, capacityThermal_kW, efficiency, timestep_h, outputTemperature_degC);
		GC.p_secondaryHeatingAsset = gasBurnerHybrid;
				
	 
	break;
	
	case ELECTRIC_HEATPUMP:

		//Add primary heating asset (heatpump)
		capacityElectric_kW = capacityThermal_kW;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyHeatpump;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureHeatpump_degC;
		ambientTempType = "AIR";
		sourceAssetHeatPower_kW = 0;
		belowZeroHeatpumpEtaReductionFactor = 1;
		
		J_EAConversionHeatPump heatPumpElectric = new J_EAConversionHeatPump(GC, timestep_h, capacityElectric_kW, efficiency, baseTemperature_degC, outputTemperature_degC, ambientTempType, sourceAssetHeatPower_kW, belowZeroHeatpumpEtaReductionFactor );	
		
		//Add secondary heating asset (if needed??)		//E-boiler!!??		
	break;
	
	case HYDROGENBURNER:
		
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyHydrogenBurner;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureHydrogenBurner_degC;
	    
		//Add primary heating asset (hydrogenburner)
		J_EAConversionHydrogenBurner hydrogenBurner = new J_EAConversionHydrogenBurner(GC, OL_EnergyAssetType.HYDROGEN_BURNER, capacityThermal_kW, efficiency, timestep_h, outputTemperature_degC);
		
	break;
}

//Set GC heating type as newly selected heating type
GC.p_heatingType = selectedHeatingType;

zero_Interface.f_updateMainInterfaceSliders();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713537591117</Id>
					<Name><![CDATA[f_setGCCapacity]]></Name>
					<X>-400</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[setGridConnectionCapacity_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[GC.p_contractedDeliveryCapacity_kW = setGridConnectionCapacity_kW;

//Update main interface sliders (NOT NEEDED, THIS SLIDER DOES NOT EXIST THERE)
//zero_Interface.f_updateMainInterfaceSliders();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713537591121</Id>
					<Name><![CDATA[f_setBattery]]></Name>
					<X>-400</X><Y>710</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[setBatteryCapacity_kWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[/*
//If battery should be created if going to 1 or removed if set to zero: (unfinished code)
if ( setBatteryCapacity_kWh != 0){
	if (findFirst(GC.c_storageAssets, p -> p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC) != null){
		
		J_EAStorage batteryAsset = findFirst(GC.c_storageAssets, p -> p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC );
		
		double existing_batterypower_capacity_ratio = main.loader.avgc_data.p_avgRatioBatteryCapacity_v_Power;
		if(((J_EAStorageElectric)batteryAsset).getCapacityElectric_kW() != 0){
			existing_batterypower_capacity_ratio = ((J_EAStorageElectric)batteryAsset).getCapacityElectric_kW()/((J_EAStorageElectric)batteryAsset).getStorageCapacity_kWh();	
		}
		
		((J_EAStorageElectric)batteryAsset).setCapacityElectric_kW(setBatteryCapacity_kWh*existing_batterypower_capacity_ratio); //Set Power
		((J_EAStorageElectric)batteryAsset).setStorageCapacity_kWh(setBatteryCapacity_kWh);										 //Set storage capacity
		
	}
	else{
	main.loader.f_addStorage(GC, setBatteryCapacity_kWh/main.loader.avgc_data.p_avgRatioBatteryCapacity_v_Power, setBatteryCapacity_kWh, OL_EnergyAssetType.STORAGE_ELECTRIC);
	}
}
else{ // Battery capacity set to zero! --> Delete battery.
	if (findFirst(GC.c_storageAssets, p -> p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC) != null){
		J_EAStorage batteryAsset = findFirst(GC.c_storageAssets, p -> p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC );
		((J_EAStorageElectric)batteryAsset).setStorageCapacity_kWh(setBatteryCapacity_kWh);
		((J_EAStorageElectric)batteryAsset).setCapacityElectric_kW(setBatteryCapacity_kWh/main.loader.avgc_data.p_avgRatioBatteryCapacity_v_Power);
	}
}
*/

//If every detail company has battery EA (even if capacity = 0)
J_EAStorage batteryAsset = findFirst(GC.c_storageAssets, p -> p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC );

if (batteryAsset == null && setBatteryCapacity_kWh == 0) {
	return;
}
else if (batteryAsset == null) {
	GridConnection gc = p_company.f_getOwnedGridConnections().get(v_currentSelectedGCnr);
	batteryAsset = new J_EAStorageElectric(gc, 0, 0, 0, zero_Interface.energyModel.p_timeStep_h);
}
double existing_batterypower_capacity_ratio = zero_Interface.energyModel.avgc_data.p_avgRatioBatteryCapacity_v_Power;

if(((J_EAStorageElectric)batteryAsset).getCapacityElectric_kW() != 0){
	existing_batterypower_capacity_ratio = ((J_EAStorageElectric)batteryAsset).getCapacityElectric_kW()/((J_EAStorageElectric)batteryAsset).getStorageCapacity_kWh();	
}

((J_EAStorageElectric)batteryAsset).setCapacityElectric_kW(setBatteryCapacity_kWh*existing_batterypower_capacity_ratio); //Set Power
((J_EAStorageElectric)batteryAsset).setStorageCapacity_kWh(setBatteryCapacity_kWh);										 //Set storage capacity]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713546575512</Id>
					<Name><![CDATA[f_instantiateSliderVariables]]></Name>
					<X>-410</X><Y>920</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_heatDemandReduction_pct = 0;
v_electricityDemandReduction_pct = 0;


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713954180112</Id>
					<Name><![CDATA[f_setPVSystem]]></Name>
					<X>-400</X><Y>670</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[v_rooftopPV_kWp]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (GC.v_hasPV){
	J_EAProduction pvAsset = findFirst(GC.c_productionAssets, p -> p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC );
	if (v_rooftopPV_kWp == 0) {
		pvAsset.removeEnergyAsset();;
	}
	else {
		pvAsset.setCapacityElectric_kW(v_rooftopPV_kWp);
	}
}
else{
	if (v_rooftopPV_kWp != 0) {
		f_addPVAsset(GC, OL_EnergyAssetType.PHOTOVOLTAIC, v_rooftopPV_kWp);
	}
}

zero_Interface.f_updateMainInterfaceSliders();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713956765904</Id>
					<Name><![CDATA[f_setSliderPresets]]></Name>
					<Description><![CDATA[Set Slider presets (limits, start value, text) for private company sliders]]></Description>
					<X>-1090</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Heating radio button
f_setHeatingRB();

//Set grid capacity slider
f_setGCCapacitySliderPresets();

//PV slider
f_setPVSliderPresets();

//Battery slider
f_setBatSliderPresets();

//Vehicles sliders
f_setVehicleSliderPresets();
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1713961813474</Id>
					<Name><![CDATA[f_setComboBoxGC]]></Name>
					<X>-1070</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if(c_ownedGridConnections.size() <= 1){
	gr_selectedGC.setVisible(false);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714139629738</Id>
					<Name><![CDATA[f_setPVSliderPresets]]></Name>
					<X>-1070</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set back end range (to prevent anylogic errors)
sl_rooftopPVCompany.setRange(0, 20000);

//Set range specific for each company
v_minPVSlider = roundToInt(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentPV_kW());
v_maxPVSlider = roundToInt(c_ownedGridConnections.get(v_currentSelectedGCnr).p_roofSurfaceArea_m2*zero_Interface.energyModel.avgc_data.p_avgPVPower_kWpm2);
v_defaultPVSlider = v_minPVSlider;
t_rooftopSolarCompany.setText(roundToInt(v_defaultPVSlider) + " kW");]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714139648227</Id>
					<Name><![CDATA[f_setBatSliderPresets]]></Name>
					<X>-1070</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[v_minBatSlider = roundToInt(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentBatteryCapacity_kWh());
v_maxBatSlider = Math.max(v_minBatSlider*2, 1000);
v_defaultBatSlider = v_minBatSlider;
t_batteryCompany.setText(roundToInt(v_defaultBatSlider) + " kWh");]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714139684603</Id>
					<Name><![CDATA[f_setVehicleSliderPresets]]></Name>
					<X>-1070</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Cars
f_setCarSliderPresets();

//Vans
f_setVanSliderPresets();

//Trucks
f_setTruckSliderPresets();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714140108358</Id>
					<Name><![CDATA[f_setCarSliderPresets]]></Name>
					<X>-1060</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set back end range (to prevent anylogic errors)
sl_electricCarsCompany.setRange(0, 500);
sl_dieselCarsCompany.setRange(0, 500);
sl_hydrogenCarsCompany.setRange(0, 500);


//Get default values
int default_nbEVCars = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCars();
int default_nbDieselCars = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselCars();
int default_nbHydrogenCars = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenCars();

//Set minimum value
v_minEVCarSlider = default_nbEVCars;
v_minDieselCarSlider = 0;
v_minHydrogenCarSlider = 0;

//Determine realistic max additional vehicles
int max_additonal_vehicles = p_maxAddedVehicles; //min((default_nbEVCars + default_nbDieselCars + default_nbHydrogenCars)*1, 20);

//Set maximum
v_maxEVCarSlider = default_nbEVCars + default_nbDieselCars + default_nbHydrogenCars + max_additonal_vehicles; // loading of EV is included in the quarter electricity data --> Cant filter --> cant get less EV than atm.
v_maxDieselCarSlider = default_nbDieselCars + default_nbHydrogenCars + max_additonal_vehicles;
v_maxHydrogenCarSlider = default_nbDieselCars + default_nbHydrogenCars + max_additonal_vehicles;

//Set default values
v_nbEVCars = default_nbEVCars;
v_nbDieselCars = default_nbDieselCars;
v_nbHydrogenCars = default_nbHydrogenCars;


//Set text
t_numberOfElectricCarsCompany.setText(v_nbEVCars);
t_numberOfDieselCarsCompany.setText(v_nbDieselCars);
t_numberOfHydrogenCarsCompany.setText(v_nbHydrogenCars);

//Set slider knobs
sl_electricCarsCompany.setValue(v_nbEVCars, false);
sl_dieselCarsCompany.setValue(v_nbDieselCars, false);
sl_hydrogenCarsCompany.setValue(v_nbHydrogenCars, false);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714140134819</Id>
					<Name><![CDATA[f_setVanSliderPresets]]></Name>
					<X>-1060</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set back end range (to prevent anylogic errors)
sl_electricVansCompany.setRange(0, 500);
sl_dieselVansCompany.setRange(0, 500);
sl_hydrogenVansCompany.setRange(0, 500);

//Get default values
int default_nbEVVans = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVans();
int default_nbDieselVans = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselVans();
int default_nbHydrogenVans = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenVans();

//Set minimum value
v_minEVVanSlider = default_nbEVVans;
v_minDieselVanSlider = 0;
v_minHydrogenVanSlider = 0;

//Determine realistic max additional vehicles
int max_additonal_vehicles = p_maxAddedVehicles; //min((default_nbEVVans + default_nbDieselVans + default_nbHydrogenVans)*2, 20);

//Set maximum
v_maxEVVanSlider = default_nbEVVans + default_nbDieselVans + default_nbHydrogenVans + max_additonal_vehicles; // loading of EV is included in the quarter electricity data --> Cant filter --> cant get less EV than atm.
v_maxDieselVanSlider = default_nbDieselVans + default_nbHydrogenVans + max_additonal_vehicles;
v_maxHydrogenVanSlider = default_nbDieselVans + default_nbHydrogenVans + max_additonal_vehicles;

//Set default values
v_nbEVVans = default_nbEVVans;
v_nbDieselVans = default_nbDieselVans;
v_nbHydrogenVans = default_nbHydrogenVans;

//Set text
t_numberOfElectricVansCompany.setText(v_nbEVVans);
t_numberOfDieselVansCompany.setText(v_nbDieselVans);
t_numberOfHydrogenVansCompany.setText(v_nbHydrogenVans);

//Set slider knob
sl_electricVansCompany.setValue(v_nbEVVans, false);
sl_dieselVansCompany.setValue(v_nbDieselVans, false);
sl_hydrogenVansCompany.setValue(v_nbHydrogenVans, false);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714140156233</Id>
					<Name><![CDATA[f_setTruckSliderPresets]]></Name>
					<X>-1060</X><Y>850</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set back end range (to prevent anylogic errors)
sl_electricTrucksCompany.setRange(0, 500);
sl_dieselTrucksCompany.setRange(0, 500);
sl_hydrogenTrucksCompany.setRange(0, 500);

//Get default values
int default_nbEVTrucks = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTrucks();
int default_nbDieselTrucks = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselTrucks();
int default_nbHydrogenTrucks = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenTrucks();

//Set minimum value
v_minEVTruckSlider = default_nbEVTrucks;
v_minDieselTruckSlider = 0;
v_minHydrogenTruckSlider = 0;

//Determine realistic max additional vehicles
int max_additonal_vehicles = p_maxAddedVehicles; //min((default_nbEVTrucks + default_nbDieselTrucks + default_nbHydrogenTrucks)*2, 20);

//Set maximum
v_maxEVTruckSlider = default_nbEVTrucks + default_nbDieselTrucks + default_nbHydrogenTrucks + max_additonal_vehicles; // loading of EV is included in the quarter electricity data --> Cant filter --> cant get less EV than atm.
v_maxDieselTruckSlider = default_nbDieselTrucks + default_nbHydrogenTrucks + max_additonal_vehicles;
v_maxHydrogenTruckSlider = default_nbDieselTrucks + default_nbHydrogenTrucks + max_additonal_vehicles;

//Set default values
v_nbEVTrucks = default_nbEVTrucks;
v_nbDieselTrucks = default_nbDieselTrucks;
v_nbHydrogenTrucks = default_nbHydrogenTrucks;

//Set text
t_numberOfElectricTrucksCompany.setText(v_nbEVTrucks);
t_numberOfDieselTrucksCompany.setText(v_nbDieselTrucks);
t_numberOfHydrogenTrucksCompany.setText(v_nbHydrogenTrucks);

//Set slider knob
sl_electricTrucksCompany.setValue(v_nbEVTrucks, false);
sl_dieselTrucksCompany.setValue(v_nbDieselTrucks, false);
sl_hydrogenTrucksCompany.setValue(v_nbHydrogenTrucks, false);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714410040303</Id>
					<Name><![CDATA[f_createVehicle]]></Name>
					<X>-380</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[vehicleType]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[tripTracker]]></Name>
						<Type><![CDATA[J_ActivityTrackerTrips]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[available]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[double energyConsumption_kWhpkm = 0;
double vehicleScaling 			= 1.0;
double timestep_h				= zero_Interface.energyModel.p_timeStep_h;

if (vehicleType == OL_EnergyAssetType.ELECTRIC_VEHICLE || vehicleType == OL_EnergyAssetType.ELECTRIC_VAN || vehicleType == OL_EnergyAssetType.ELECTRIC_TRUCK ){ // Create EVS
	double storageCapacity_kWh 		= 0;
	double capacityElectricity_kW 	= 0;
	double stateOfCharge_r  		= 1; // Initial state of charge

	switch(vehicleType){
		case ELECTRIC_VEHICLE:
			capacityElectricity_kW	= (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCarChargePower_kW() != 0) ? c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCarChargePower_kW() : zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerCar_kW;
			storageCapacity_kWh		= zero_Interface.energyModel.avgc_data.p_avgEVStorageCar_kWh;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;
		break;
		case ELECTRIC_VAN:
			capacityElectricity_kW	= (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVanChargePower_kW() != 0) ? c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVanChargePower_kW() : zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerVan_kW;
			storageCapacity_kWh		= zero_Interface.energyModel.avgc_data.p_avgEVStorageVan_kWh;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionVan_kWhpkm;
		break;
		case ELECTRIC_TRUCK:
			capacityElectricity_kW	= (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTruckChargePower_kW() != 0) ? c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTruckChargePower_kW() : zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerTruck_kW;
			storageCapacity_kWh		= zero_Interface.energyModel.avgc_data.p_avgEVStorageTruck_kWh;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionTruck_kWhpkm;
		break;
	
	}
	
	//Create EV and connect to GC and selected trip tracker
	J_EAEV electricVehicle = new J_EAEV(parentGC, capacityElectricity_kW, storageCapacity_kWh, stateOfCharge_r, timestep_h, energyConsumption_kWhpkm, vehicleScaling, vehicleType, tripTracker);	
	electricVehicle.available = available;

	zero_Interface.c_orderedVehicles.add(0, electricVehicle);

}

else if (vehicleType == OL_EnergyAssetType.DIESEL_VEHICLE || vehicleType == OL_EnergyAssetType.DIESEL_VAN || vehicleType == OL_EnergyAssetType.DIESEL_TRUCK ){ // Create diesel vehicles
	switch (vehicleType){
		
		case DIESEL_VEHICLE:
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionCar_kWhpkm;
		break;
		
		case DIESEL_VAN:
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionVan_kWhpkm;
		break;
		
		case DIESEL_TRUCK:
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionTruck_kWhpkm;
		break;
	}
	
	//Create Diesel vehicle and connect to GC and selected trip tracker
	J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(parentGC, energyConsumption_kWhpkm, timestep_h, vehicleScaling, vehicleType, tripTracker);
	dieselVehicle.available = available;
	
	zero_Interface.c_orderedVehicles.add(0, dieselVehicle);
	
}

else{ // (Hydrogen vehicles)
	switch (vehicleType){
		case HYDROGEN_VEHICLE:
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgHydrogenConsumptionCar_kWhpkm;
		break;
		case HYDROGEN_VAN:
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgHydrogenConsumptionVan_kWhpkm;
		break;
		case HYDROGEN_TRUCK:
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgHydrogenConsumptionTruck_kWhpkm;
		break;
		
	}
	
	//Create Hydrogen vehicle and connect to GC and selected trip tracker
	J_EAHydrogenVehicle hydrogenVehicle = new J_EAHydrogenVehicle(parentGC, energyConsumption_kWhpkm, timestep_h, vehicleScaling, vehicleType, tripTracker);
	hydrogenVehicle.available = available;
	
	zero_Interface.c_orderedVehicles.add(0, hydrogenVehicle);
	
}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1714411599586</Id>
					<Name><![CDATA[f_setElectricVehicleSliders]]></Name>
					<X>-400</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[vehicleType]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[setAmountOfVehicles]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[int local_EV_nb;
int local_DieselV_nb;
int local_HydrogenV_nb;

int max_amount_diesel_vehicles;

OL_EnergyAssetType vehicleType_diesel;
OL_EnergyAssetType vehicleType_hydrogen;
	
switch (vehicleType){
	
	case ELECTRIC_VEHICLE:

	vehicleType_diesel = OL_EnergyAssetType.DIESEL_VEHICLE;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_VEHICLE;

	local_EV_nb = v_nbEVCars;
	local_DieselV_nb = v_nbDieselCars;
	local_HydrogenV_nb = v_nbHydrogenCars;
	
	max_amount_diesel_vehicles = v_maxDieselCarSlider;
	
	break;
	
	case ELECTRIC_VAN:
	
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_VAN;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_VAN;
	
	local_EV_nb = v_nbEVVans;
	local_DieselV_nb = v_nbDieselVans;
	local_HydrogenV_nb = v_nbHydrogenVans;
	
	max_amount_diesel_vehicles = v_maxDieselVanSlider;
	
	break;
	
	case ELECTRIC_TRUCK:

	vehicleType_diesel = OL_EnergyAssetType.DIESEL_TRUCK;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_TRUCK;
	
	local_EV_nb = v_nbEVTrucks;
	local_DieselV_nb = v_nbDieselTrucks;
	local_HydrogenV_nb = v_nbHydrogenTrucks;
	
	max_amount_diesel_vehicles = v_maxDieselTruckSlider;
		
	break;
	
	default:
	traceln("SLIDER SET TO WRONG VEHICLE TYPE, DO NOTHING");
	return;
}


if (setAmountOfVehicles > local_EV_nb){ // Slider has increased the amount of selected vehicles
	while ( setAmountOfVehicles > local_EV_nb && local_DieselV_nb > 0) {

		// Find a Diesel vehicle
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType_diesel );
		J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;
		boolean available = true;
		
		// Remove diesel vehicle
		if (dieselVehicle!=null) {			
			available = dieselVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(dieselVehicle);
			dieselVehicle.removeEnergyAsset();
		}
		
		//Create new EV
		f_createVehicle(GC, vehicleType, tripTracker, available);
			
		//Update variables
		local_EV_nb++;
		local_DieselV_nb--;
	}
	while (setAmountOfVehicles > local_EV_nb && local_HydrogenV_nb > 0){
	
		// Find a Hydrogen vehicle
		J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType_hydrogen );
		J_ActivityTrackerTrips tripTracker = hydrogenVehicle.tripTracker;
		boolean available = true;
		
		// Remove hydrogen vehicle
		if (hydrogenVehicle!=null) {			
			available = hydrogenVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);
			hydrogenVehicle.removeEnergyAsset();
		}
		
		//Create new EV
		f_createVehicle(GC, vehicleType, tripTracker, available);
	
		//Update variables
		local_EV_nb++;
		local_HydrogenV_nb--;
	}
	while (setAmountOfVehicles > local_EV_nb){ // Create additional vehicles
	
	f_createVehicle(GC, vehicleType, null, true);

	local_EV_nb++;
	}
	
}
else if(setAmountOfVehicles < local_EV_nb){ // Slider has decreased the amount of selected vehicles
	while (setAmountOfVehicles < local_EV_nb && local_HydrogenV_nb + local_EV_nb + local_DieselV_nb > (max_amount_diesel_vehicles - p_maxAddedVehicles )){// Test if additional vehicles are present
	
	//Find additional created vehicle
	J_EAEV ev = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == vehicleType && p.getParentAgent() == GC );
	
	// Remove hydrogen vehicle
	zero_Interface.c_orderedVehicles.remove(ev);
	ev.removeEnergyAsset();
		
	//Update variable
	local_EV_nb--;
	}
	while ( setAmountOfVehicles < local_EV_nb && local_DieselV_nb < max_amount_diesel_vehicles) {
	
	//Find a to be removed EV
	J_EAEV ev = (J_EAEV)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType );
	J_ActivityTrackerTrips tripTracker = ev.tripTracker;
	boolean available = true;
	
	if (ev!=null) {	// --> Remove one EV
		available = ev.getAvailability();
		zero_Interface.c_orderedVehicles.remove(ev);
		ev.removeEnergyAsset();
	}
	
	// Create diesel vehicle	
	f_createVehicle(GC, vehicleType_diesel, tripTracker, available);				
	
	local_EV_nb--;
	local_DieselV_nb++;
	}
}



//Update variables
switch (vehicleType){
	
	case ELECTRIC_VEHICLE:
	
	v_nbEVCars = local_EV_nb;
	v_nbDieselCars = local_DieselV_nb;
	v_nbHydrogenCars = local_HydrogenV_nb;
	
	break;
	
	case ELECTRIC_VAN:
	
	v_nbEVVans = local_EV_nb;
	v_nbDieselVans = local_DieselV_nb;
	v_nbHydrogenVans = local_HydrogenV_nb;
	
	break;
	
	case ELECTRIC_TRUCK:
	
	v_nbEVTrucks = local_EV_nb;
	v_nbDieselTrucks = local_DieselV_nb;
	v_nbHydrogenTrucks = local_HydrogenV_nb;
		
	break;
}

zero_Interface.f_updateMainInterfaceSliders();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1714471183392</Id>
					<Name><![CDATA[f_setDieselVehicleSliders]]></Name>
					<X>-400</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[vehicleType]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[setAmountOfVehicles]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[int local_EV_nb;
int local_DieselV_nb;
int local_HydrogenV_nb;

int min_amount_EV;
int	max_amount_EV;

OL_EnergyAssetType vehicleType_electric;
OL_EnergyAssetType vehicleType_hydrogen;
	
switch (vehicleType){
	
	case DIESEL_VEHICLE:

	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_VEHICLE;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_VEHICLE;

	local_EV_nb = v_nbEVCars;
	local_DieselV_nb = v_nbDieselCars;
	local_HydrogenV_nb = v_nbHydrogenCars;
	
	min_amount_EV = v_minEVCarSlider;
	max_amount_EV = v_maxEVCarSlider;
	
	break;
	
	case DIESEL_VAN:
	
	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_VAN;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_VAN;
	
	local_EV_nb = v_nbEVVans;
	local_DieselV_nb = v_nbDieselVans;
	local_HydrogenV_nb = v_nbHydrogenVans;
	
	min_amount_EV = v_minEVVanSlider;
	max_amount_EV = v_maxEVVanSlider;
	
	break;
	
	case DIESEL_TRUCK:

	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_TRUCK;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_TRUCK;
	
	local_EV_nb = v_nbEVTrucks;
	local_DieselV_nb = v_nbDieselTrucks;
	local_HydrogenV_nb = v_nbHydrogenTrucks;
	
	min_amount_EV = v_minEVTruckSlider;
	max_amount_EV = v_maxEVTruckSlider;
		
	break;
	
	default:
	traceln("SLIDER SET TO WRONG VEHICLE TYPE, DO NOTHING");
	return;
}


if (setAmountOfVehicles > local_DieselV_nb){ // Slider has increased the amount of selected vehicles
	while ( setAmountOfVehicles > local_DieselV_nb && local_EV_nb > min_amount_EV) {

		// Find an EV
		J_EAEV ev = (J_EAEV)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType_electric );
		J_ActivityTrackerTrips tripTracker = ev.tripTracker;
		boolean available = true;
		
		if (ev!=null) {	// --> Remove one EV
			available = ev.getAvailability();
			zero_Interface.c_orderedVehicles.remove(ev);
			ev.removeEnergyAsset();
		}
		
		//Create new Diesel vehicle
		f_createVehicle(GC, vehicleType, tripTracker, available);
			
		//Update variables
		local_DieselV_nb++;
		local_EV_nb--;
	}
	while (setAmountOfVehicles > local_DieselV_nb && local_HydrogenV_nb > 0){
	
		// Find a Hydrogen vehicle
		J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType_hydrogen );
		J_ActivityTrackerTrips tripTracker = hydrogenVehicle.tripTracker;
		boolean available = true;
		
		// Remove hydrogen vehicle
		if (hydrogenVehicle!=null) {			
			available = hydrogenVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);
			hydrogenVehicle.removeEnergyAsset();
		}
		
		//Create new Diesel vehicle
		f_createVehicle(GC, vehicleType, tripTracker, available);
	
		//Update variables
		local_DieselV_nb++;
		local_HydrogenV_nb--;
	}
	while (setAmountOfVehicles > local_DieselV_nb){ // Create additional vehicles
	
	f_createVehicle(GC, vehicleType, null, true);

	local_DieselV_nb++;
	}
	
}
else if(setAmountOfVehicles < local_DieselV_nb){ // Slider has decreased the amount of selected vehicles
	while (setAmountOfVehicles < local_DieselV_nb && local_HydrogenV_nb + local_EV_nb + local_DieselV_nb > (max_amount_EV - min_amount_EV - p_maxAddedVehicles)){// Test if additional vehicles are present
	
	//Find additional created vehicle
	J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == vehicleType && p.getParentAgent() == GC );
	
	// Remove diesel vehicle
	dieselVehicle.removeEnergyAsset();
	zero_Interface.c_orderedVehicles.remove(dieselVehicle);
	
	//Update variable
	local_DieselV_nb--;
	}
	while ( setAmountOfVehicles < local_DieselV_nb && local_EV_nb < max_amount_EV) {
	
	// Find a to be removed Diesel vehicle
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType );
		J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;
		boolean available = true;
		
		// Remove diesel vehicle
		if (dieselVehicle!=null) {			
			available = dieselVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(dieselVehicle);
			dieselVehicle.removeEnergyAsset();
		}
		
		//Create new EV
		f_createVehicle(GC, vehicleType_electric, tripTracker, available);
			
		//Update variables
		local_DieselV_nb--;
		local_EV_nb++;

	}
}



//Update variables
switch (vehicleType){
	
	case DIESEL_VEHICLE:
	
	v_nbEVCars = local_EV_nb;
	v_nbDieselCars = local_DieselV_nb;
	v_nbHydrogenCars = local_HydrogenV_nb;
	
		
	break;
	
	case DIESEL_VAN:
	
	v_nbEVVans = local_EV_nb;
	v_nbDieselVans = local_DieselV_nb;
	v_nbHydrogenVans = local_HydrogenV_nb;
	
	
	break;
	
	case DIESEL_TRUCK:
	
	v_nbEVTrucks = local_EV_nb;
	v_nbDieselTrucks = local_DieselV_nb;
	v_nbHydrogenTrucks = local_HydrogenV_nb;
	

	break;
}

zero_Interface.f_updateMainInterfaceSliders();]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1714474430338</Id>
					<Name><![CDATA[f_setHydrogenVehicleSliders]]></Name>
					<X>-400</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[vehicleType]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[setAmountOfVehicles]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[int local_EV_nb;
int local_DieselV_nb;
int local_HydrogenV_nb;

int min_amount_EV;
int	max_amount_EV;

OL_EnergyAssetType vehicleType_electric;
OL_EnergyAssetType vehicleType_diesel;
	
switch (vehicleType){
	
	case HYDROGEN_VEHICLE:

	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_VEHICLE;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_VEHICLE;

	local_EV_nb = v_nbEVCars;
	local_DieselV_nb = v_nbDieselCars;
	local_HydrogenV_nb = v_nbHydrogenCars;
	
	min_amount_EV = v_minEVCarSlider;
	max_amount_EV = v_maxEVCarSlider;
	
	break;
	
	case HYDROGEN_VAN:
	
	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_VAN;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_VAN;
	
	local_EV_nb = v_nbEVVans;
	local_DieselV_nb = v_nbDieselVans;
	local_HydrogenV_nb = v_nbHydrogenVans;
	
	min_amount_EV = v_minEVVanSlider;
	max_amount_EV = v_maxEVVanSlider;
	
	break;
	
	case HYDROGEN_TRUCK:

	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_TRUCK;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_TRUCK;
	
	local_EV_nb = v_nbEVTrucks;
	local_DieselV_nb = v_nbDieselTrucks;
	local_HydrogenV_nb = v_nbHydrogenTrucks;
	
	min_amount_EV = v_minEVTruckSlider;
	max_amount_EV = v_maxEVTruckSlider;
		
	break;
	
	default:
	traceln("SLIDER SET TO WRONG VEHICLE TYPE, DO NOTHING");
	return;
}

if (setAmountOfVehicles > local_HydrogenV_nb){ // Slider has increased the amount of selected vehicles
	while ( setAmountOfVehicles > local_HydrogenV_nb && local_DieselV_nb > 0) {

		// Find a to be removed Diesel vehicle
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType_diesel );
		J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;
		boolean available = true;

		if (dieselVehicle!=null) { //	--> Remove diesel vehicle
			available = dieselVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(dieselVehicle);
			dieselVehicle.removeEnergyAsset();
		}
		
		//Create new Hydrogen vehicle
		f_createVehicle(GC, vehicleType, tripTracker, available);
			
		//Update variables
		local_HydrogenV_nb++;
		local_DieselV_nb--;
		
	}
	while (setAmountOfVehicles > local_HydrogenV_nb && local_EV_nb > min_amount_EV){
		
		// Find a to be removed EV
		J_EAEV ev = (J_EAEV)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType_electric );
		J_ActivityTrackerTrips tripTracker = ev.tripTracker;
		boolean available = true;
		
		if (ev!=null) {	// --> Remove one EV
			available = ev.getAvailability();
			zero_Interface.c_orderedVehicles.remove(ev);
			ev.removeEnergyAsset();
		}
		
		//Create new Hydrogen vehicle
		f_createVehicle(GC, vehicleType, tripTracker, available);
			
		//Update variables
		local_HydrogenV_nb++;
		local_EV_nb--;
	}
	while (setAmountOfVehicles > local_HydrogenV_nb){ // Create additional vehicles
	
	f_createVehicle(GC, vehicleType, null, true);
	local_HydrogenV_nb++;	
	}

	
}
else if(setAmountOfVehicles < local_HydrogenV_nb){ // Slider has decreased the amount of selected vehicles
	while (setAmountOfVehicles < local_HydrogenV_nb && local_HydrogenV_nb + local_EV_nb + local_DieselV_nb > (max_amount_EV - min_amount_EV - p_maxAddedVehicles)){// Test if additional vehicles are present
	
	//Find additional created vehicle
	J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == vehicleType && p.getParentAgent() == GC );
	
	// Remove hydrogen vehicle
	zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);
	hydrogenVehicle.removeEnergyAsset();
	
	//Update variable
	local_HydrogenV_nb--;
	}
	while ( setAmountOfVehicles < local_HydrogenV_nb && local_EV_nb < max_amount_EV) {// If not, take from EV first.
	
		// Find a to be removed Hydrogen vehicle
		J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)findFirst(GC.c_vehicleAssets, p -> p.energyAssetType == vehicleType );
		J_ActivityTrackerTrips tripTracker = hydrogenVehicle.tripTracker;
		boolean available = true;
		
		// Remove hydrogen vehicle
		if (hydrogenVehicle!=null) {			
			available = hydrogenVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);
			hydrogenVehicle.removeEnergyAsset();
		}
		
		//Create new EV vehicle
		f_createVehicle(GC, vehicleType_electric, tripTracker, available);
	
		//Update variables
		local_HydrogenV_nb--;
		local_EV_nb++;
	}
}

//Update variables
switch (vehicleType){
	
	case HYDROGEN_VEHICLE:
	
	v_nbEVCars = local_EV_nb;
	v_nbDieselCars = local_DieselV_nb;
	v_nbHydrogenCars = local_HydrogenV_nb;
	
	break;
	
	case HYDROGEN_VAN:
	
	v_nbEVVans = local_EV_nb;
	v_nbDieselVans = local_DieselV_nb;
	v_nbHydrogenVans = local_HydrogenV_nb;
	
	break;
	
	case HYDROGEN_TRUCK:
	
	v_nbEVTrucks = local_EV_nb;
	v_nbDieselTrucks = local_DieselV_nb;
	v_nbHydrogenTrucks = local_HydrogenV_nb;
	
	break;
}

zero_Interface.f_updateMainInterfaceSliders();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714654645264</Id>
					<Name><![CDATA[f_setResultsUIPresets]]></Name>
					<X>-1070</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set the locations and visibilities of the ResultsUI agents
uI_Results.f_setChartProfiles_Presentation(0, 0, true);
uI_Results.f_setChartBalance_Presentation(530, 0, true);
uI_Results.f_setChartGridLoad_Presentation(null, null, false);
uI_Results.f_setChartSankey_Presentation(1060, 0, true);
uI_Results.f_setRadioButtons(null, null, false);

//Set the color of the charts
uI_Results.f_styleAllCharts(v_chartBackgroundColor, v_companyUILineColor, v_chartLineWidth, LINE_STYLE_SOLID);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714655282643</Id>
					<Name><![CDATA[f_initializeCompanyUI]]></Name>
					<X>-1090</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set GC combobox 
f_setComboBoxGC();

//Initialize graph locations and visibility
f_setResultsUIPresets();

//Initialize the sliders
f_setSliderPresets();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1714656835269</Id>
					<Name><![CDATA[f_copyResultsUI]]></Name>
					<X>-400</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Copy results ui of main, to the results ui of company UI
uI_Results.v_area = zero_Interface.uI_Results.v_area;
uI_Results.v_gridConnection = zero_Interface.uI_Results.v_gridConnection;
uI_Results.v_trafo = zero_Interface.uI_Results.v_trafo;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715713362876</Id>
					<Name><![CDATA[f_setHeatingRB]]></Name>
					<X>-1070</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int nr_currentHeatingType = 0;
String rbHeating_acces = "enabled";

switch (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHeatingType()){
	case GASBURNER:
		nr_currentHeatingType = 0;
	break;

	case HYBRID_HEATPUMP:
		nr_currentHeatingType = 1;
		rbHeating_acces = "disabled";
	break;

	case ELECTRIC_HEATPUMP:
		nr_currentHeatingType = 2;
		rbHeating_acces = "disabled";
	break;
		
	case HYDROGENBURNER:
		nr_currentHeatingType = 3;
	break;
		
	case OTHER:
		//not supported
		rbHeating_acces = "invisible";
	break;
		
	default:
		rbHeating_acces = "invisible";
}

if (rbHeating_acces.equals("disabled") || rbHeating_acces.equals("invisible")){
	rb_heatingTypePrivateUI.setEnabled(false);
	
	if (rbHeating_acces.equals("invisible")){
		rb_heatingTypePrivateUI.setVisible(false);
	}
}
else{ // if(rbHeating_acces.equals("enabled"){
	rb_heatingTypePrivateUI.setEnabled(true);
	rb_heatingTypePrivateUI.setVisible(true);
}

rb_heatingTypePrivateUI.setValue(nr_currentHeatingType, false);]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715952034311</Id>
					<Name><![CDATA[f_addPVAsset]]></Name>
					<X>-380</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[asset_type]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[installedPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[String asset_name					= "Solar Panels";
double capacityElectric_kW			= installedPower_kW;
double capacityHeat_kW				= 0;
double yearlyProductionMethane_kWh 	= 0;
double yearlyProductionHydrogen_kWh = 0;
double timestep_h 					= zero_Interface.energyModel.p_timeStep_h;
double outputTemperature_degC 		= 0;
parentGC.v_hasPV = true;

J_EAProduction production_asset = new J_EAProduction(parentGC, asset_type, asset_name, capacityElectric_kW , capacityHeat_kW, yearlyProductionMethane_kWh, yearlyProductionHydrogen_kWh, timestep_h, outputTemperature_degC, zero_Interface.energyModel.pp_solarPVproduction);

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717576974529</Id>
					<Name><![CDATA[f_setSelectedGC]]></Name>
					<Description><![CDATA[Function that sets the sliders to match the currently present settings of the energy assets owned by the selected GC. Used when a connection owner has multiple grid connections, and wants to set the sliders of a different GC. ]]></Description>
					<X>-400</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set the Adress to selected GC
v_adressGC = c_ownedGridConnections.get(v_currentSelectedGCnr).p_address.getAddress();

//Set the sliders
f_setSelectedGCSliders();

//Set the new graphs/building selection
f_setSelectedGCGraphs();
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725439625846</Id>
					<Name><![CDATA[f_setSelectedGCSliders]]></Name>
					<X>-370</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Initialize slider presets to selected GC (min, max, etc.)
f_setSliderPresets();


//Find the current heating type
int nr_currentHeatingType = 0;
switch (c_ownedGridConnections.get(v_currentSelectedGCnr).p_heatingType){
	case GASBURNER:
		nr_currentHeatingType = 0;
	break;

	case HYBRID_HEATPUMP:
		nr_currentHeatingType = 1;
	break;

	case ELECTRIC_HEATPUMP:
		nr_currentHeatingType = 2;
	break;
		
	case HYDROGENBURNER:
		nr_currentHeatingType = 3;
	break;
		
	case OTHER:
		//not supported
	break;
		
	default:
}


//Find the current heat saving percentage
int currentHeatSavings = 0;

J_EAConsumption consumptionEAHEAT = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_consumptionAssets, consumptionAsset -> consumptionAsset.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);
if (consumptionEAHEAT != null){
	currentHeatSavings = roundToInt((consumptionEAHEAT.getConsumptionScaling_fr() - 1)*-100);
}
else{   
	J_EAProfile profileEAHEAT = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_profileAssets, profileAsset -> profileAsset.profileType == OL_ProfileAssetType.HEATDEMAND);
	if (profileEAHEAT != null){
		currentHeatSavings = roundToInt((profileEAHEAT.getProfileScaling_fr() - 1)*-100);
	}
}

//Find the current electricity savings percentage
int currentElectricitySavings = 0;

J_EAConsumption consumptionEAELECTRIC = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_consumptionAssets, consumptionAsset -> consumptionAsset.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND);
if (consumptionEAELECTRIC != null){
	currentElectricitySavings = roundToInt((consumptionEAELECTRIC.getConsumptionScaling_fr() - 1)*-100);
}
else{
	J_EAProfile profileEAELECTRIC = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_profileAssets, profileAsset -> profileAsset.profileType == OL_ProfileAssetType.ELECTRICITYBASELOAD);
	if (profileEAELECTRIC != null){
		currentElectricitySavings = roundToInt((profileEAELECTRIC.getProfileScaling_fr() - 1)*-100);
	}
}

//Find the current Connection capacity
double GCCapacityCurrent = c_ownedGridConnections.get(v_currentSelectedGCnr).p_contractedDeliveryCapacity_kW;

//Find the current PV capacity
int PVCapacityCurrent = 0;
if (c_ownedGridConnections.get(v_currentSelectedGCnr).v_hasPV){
	J_EAProduction pvAsset = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_productionAssets, p -> p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC );
	PVCapacityCurrent = roundToInt(pvAsset.getCapacityElectric_kW());
}

//Find the current battery capacity
int BatteryCapacityCurrent = 0;
J_EAStorage batteryAsset = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_storageAssets, p -> p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC );
if (batteryAsset != null){
	BatteryCapacityCurrent = roundToInt(((J_EAStorageElectric)batteryAsset).getStorageCapacity_kWh());
}


//Find the current transport savings
int currentTransportSavings = 0;
if (c_ownedGridConnections.get(v_currentSelectedGCnr).c_tripTrackers.size() > 0){
	currentTransportSavings = - roundToInt(c_ownedGridConnections.get(v_currentSelectedGCnr).c_tripTrackers.get(0).getDistanceScaling_fr()*100) + 100;
}



//Find the current number of vehicles for each type
int nbEcarsCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE);
int nbHydrogencarsCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.HYDROGEN_VEHICLE);
int nbDieselcarsCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE);

int nbEvansCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN);
int nbHydrogenvansCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN);
int nbDieselvansCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN);

int nbEtrucksCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK);
int nbHydrogentrucksCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK);
int nbDieseltrucksCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p->p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK);

//Check on electric cars, cause for companies that have quarterlyhour electricity data, the initial ea for EV (and other electric appliances) are not made.
if (c_ownedGridConnections.get(v_currentSelectedGCnr).v_hasQuarterHourlyValues){
	if(nbEcarsCurrent > v_minEVCarSlider){
		nbEcarsCurrent = nbEcarsCurrent + v_minEVCarSlider;
		nbEvansCurrent = nbEvansCurrent + v_minEVVanSlider;
		nbEtrucksCurrent = nbEtrucksCurrent + v_minEVTruckSlider;
	}
	else{
		nbEcarsCurrent = v_minEVCarSlider;
		nbEvansCurrent = v_minEVVanSlider;
		nbEtrucksCurrent = v_minEVTruckSlider;
	}
}


////Set slider knobs at the currently (!) correct points

//heating
rb_heatingTypePrivateUI.setValue(nr_currentHeatingType, false);		

//Heat savings
sl_heatDemandCompanyReduction.setValue(currentHeatSavings, false);
t_heatDemandReductionCompanies.setText(currentHeatSavings + "%");
v_heatDemandReduction_pct = currentHeatSavings;

//Electricity savings
sl_electricityDemandCompanyReduction.setValue(currentElectricitySavings, false);
t_electricityDemandReductionCompany.setText(currentElectricitySavings + "%");
v_electricityDemandReduction_pct = currentElectricitySavings;

//Solar panel power
sl_rooftopPVCompany.setValue(PVCapacityCurrent, false);
t_rooftopSolarCompany.setText(PVCapacityCurrent + " kW");
v_defaultPVSlider = PVCapacityCurrent;

//Grid connection capacity
sl_GCCapacityCompany.setValue(GCCapacityCurrent, false);
t_GCCapacityCompany.setText(GCCapacityCurrent + " kW");
v_defaultGCCapacitySlider = GCCapacityCurrent;

//Battery capacity
sl_batteryCompany.setValue(BatteryCapacityCurrent, false);
t_batteryCompany.setText(BatteryCapacityCurrent + " kWh");
v_defaultBatSlider = BatteryCapacityCurrent;

//Mobility savings
sl_mobilityDemandCompanyReduction.setValue(currentTransportSavings, false);
t_mobilityDemandReductionCompany.setText(currentTransportSavings + "%");

//Cars 
sl_electricCarsCompany.setValue(nbEcarsCurrent, false);
sl_hydrogenCarsCompany.setValue(nbHydrogencarsCurrent, false);
sl_dieselCarsCompany.setValue(nbDieselcarsCurrent, false);

t_numberOfElectricCarsCompany.setText(nbEcarsCurrent);
t_numberOfHydrogenCarsCompany.setText(nbHydrogencarsCurrent);
t_numberOfDieselCarsCompany.setText(nbDieselcarsCurrent);

v_nbEVCars = nbEcarsCurrent;
v_nbHydrogenCars = nbHydrogencarsCurrent;
v_nbDieselCars = nbDieselcarsCurrent;


//Vans
sl_electricVansCompany.setValue(nbEvansCurrent, false);
sl_hydrogenVansCompany.setValue(nbHydrogenvansCurrent, false);
sl_dieselVansCompany.setValue(nbDieselvansCurrent, false);

t_numberOfElectricVansCompany.setText(nbEvansCurrent);
t_numberOfHydrogenVansCompany.setText(nbHydrogenvansCurrent);
t_numberOfDieselVansCompany.setText(nbDieselvansCurrent);

v_nbEVVans = nbEvansCurrent;
v_nbHydrogenVans = nbHydrogenvansCurrent;
v_nbDieselVans = nbDieselvansCurrent;


//Trucks
sl_electricTrucksCompany.setValue(nbEtrucksCurrent, false);
sl_hydrogenTrucksCompany.setValue(nbHydrogentrucksCurrent, false);
sl_dieselTrucksCompany.setValue(nbDieseltrucksCurrent, false);

t_numberOfElectricTrucksCompany.setText(nbEtrucksCurrent);
t_numberOfHydrogenTrucksCompany.setText(nbHydrogentrucksCurrent);
t_numberOfDieselTrucksCompany.setText(nbDieseltrucksCurrent);

v_nbEVTrucks = nbEtrucksCurrent;
v_nbHydrogenTrucks = nbHydrogentrucksCurrent;
v_nbDieselTrucks = nbDieseltrucksCurrent;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725439635605</Id>
					<Name><![CDATA[f_setSelectedGCGraphs]]></Name>
					<X>-370</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set the graphs to the correct GC
zero_Interface.v_previousClickedObjectType = OL_GISObjectType.BUILDING;
zero_Interface.c_selectedGridConnections.clear();
zero_Interface.f_deselectPreviousSelect( );
zero_Interface.f_selectBuilding(c_ownedGridConnections.get(v_currentSelectedGCnr).c_connectedGISObjects.get(0), c_ownedGridConnections.get(v_currentSelectedGCnr).c_connectedGISObjects);
f_copyResultsUI();
uI_Results.f_setAllCharts();]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725607045331</Id>
					<Name><![CDATA[f_setSimulateYearScreen]]></Name>
					<X>-400</X><Y>820</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[gr_simulateYearScreen.setVisible(true);

if(!b_runningMainInterfaceScenarioSettings){
	//Set life profiles as visible graph
	uI_Results.chartProfielen.getPeriodRadioButton().setValue(0, true);
}

//Set it for main interface as well
zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725614403909</Id>
					<Name><![CDATA[f_setGCCapacitySliderPresets]]></Name>
					<X>-1070</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set back end range (to prevent anylogic errors)
sl_GCCapacityCompany.setRange(0, 10000);

//Get current grid capacity
double defaultGCCapacitySlider = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentContractDeliveryCapacity_kW();

//Set range specific for specific intervals of capacity
v_minGCCapacitySlider = 0;

if(defaultGCCapacitySlider < 100){
	v_maxGCCapacitySlider = 150;
}
else if(defaultGCCapacitySlider < 1000){
	v_maxGCCapacitySlider = 2000;
}
else{
	v_maxGCCapacitySlider = 10000;
}

v_defaultGCCapacitySlider = roundToInt(defaultGCCapacitySlider);

t_GCCapacityCompany.setText(roundToInt(v_defaultGCCapacitySlider) + " kW");

//Set slider knob
sl_GCCapacityCompany.setValue(v_defaultGCCapacitySlider, false);]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1708522361863</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>20</X><Y>-160</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1708522362017</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>20</X><Y>-120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Interface]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>
			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1714652079023</Id>
					<Name><![CDATA[uI_Results]]></Name>
					<X>-400</X><Y>350</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1714652081119</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[digital_twin_results]]></PackageName>
						<ClassName><![CDATA[UI_Results]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[digital_twin_results]]></PackageName>
							<ClassName><![CDATA[UI_Results]]></ClassName>
							<ItemName><![CDATA[1704197366556]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[energyModel]]></Name>
							<Value Class="CodeValue">
								<Code><![CDATA[zero_Interface.energyModel]]></Code>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_previousTotals_Region]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_legendsScope]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>false</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1708522361869</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1708612468547</Id>
					<Name><![CDATA[rect_canvas]]></Name>
					<X>-1160</X><Y>-400</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>4560</Width>
					<Height>1800</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1708522459040</Id>
					<Name><![CDATA[rect_background]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_companyUILineWidth]]></LineWidthCode>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_companyUILineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1920</Width>
					<Height>980</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_companyUIBackgroundColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1713446065829</Id>
					<Name><![CDATA[rect_sliders]]></Name>
					<X>0</X><Y>170</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_companyUILineWidth]]></LineWidthCode>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_companyUILineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>360</Width>
					<Height>810</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_companyUIBackgroundColorSliders]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1708611929678</Id>
					<Name><![CDATA[rect_scenarios]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_companyUILineWidth]]></LineWidthCode>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_companyUILineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>360</Width>
					<Height>170</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_companyUIBackgroundColorSliders]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1708611713278</Id>
					<Name><![CDATA[text]]></Name>
					<X>-420</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Colors and Styling]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1708611755978</Id>
					<Name><![CDATA[text4]]></Name>
					<X>-750</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Company parameters]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1709571615104</Id>
					<Name><![CDATA[text5]]></Name>
					<X>-750</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Connections]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1711555257574</Id>
					<Name><![CDATA[button1]]></Name>
					<X>180</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="160" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[c_ownedGridConnections.get(v_currentSelectedGCnr).va_gridConnection.navigateTo();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Go to GC in engine]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Group>
					<Id>1713447348497</Id>
					<Name><![CDATA[gr_scenarioRB]]></Name>
					<X>140</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713447230459</Id>
					<Name><![CDATA[rb_scenariosPrivateUI]]></Name>
					<X>-100</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="180" Height="120">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (c_scenarioSettings_Current.size() > 0){
	f_setScenario(rb_scenariosPrivateUI.getValue());
}

// Simulate Year button on Interface
zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="14" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[Huidige situatie]]></Button>
						<Button><![CDATA[Toekomstplannen]]></Button>
						<Button><![CDATA[Custom]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713447252716</Id>
					<Name><![CDATA[txt_scenario]]></Name>
					<X>-100</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Selecteer een scenario]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>20</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1713537625797</Id>
					<Name><![CDATA[txt_scenarioSettings]]></Name>
					<X>-410</X><Y>480</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Set Sliders to Scenario]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713544087067</Id>
					<Name><![CDATA[txt_sliderVariables]]></Name>
					<X>-420</X><Y>890</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Slider variables]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713957149840</Id>
					<Name><![CDATA[txt_sliderPresetsAndLimits]]></Name>
					<X>-1100</X><Y>120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Slider limits and presets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713957196998</Id>
					<Name><![CDATA[txt_sliderFunctions]]></Name>
					<X>-410</X><Y>600</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Slider functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1714641703973</Id>
					<Name><![CDATA[button2]]></Name>
					<X>360</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="160" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[((GIS_Building)c_ownedBuildings.get(0)).va_building.navigateTo();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Go to Building in engine]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1714641782724</Id>
					<Name><![CDATA[button3]]></Name>
					<X>0</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="160" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[p_company.va_ConnectionOwner.navigateTo();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Go to Owner in engine]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1714655090415</Id>
					<Name><![CDATA[txt_onStartup]]></Name>
					<X>-1100</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[On Startup settings]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1714660279044</Id>
					<Name><![CDATA[txt_uiResult]]></Name>
					<X>-410</X><Y>320</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[UI_Result connection (graphs)]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1715626747942</Id>
					<Name><![CDATA[gr_companyUISliders]]></Name>
					<X>310</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1713446221121</Id>
					<Name><![CDATA[txt_warmte]]></Name>
					<X>-240</X><Y>-270</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Warmte]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446658919</Id>
					<Name><![CDATA[t_GCCapacityCompany]]></Name>
					<X>-85</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0 kW]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446658921</Id>
					<Name><![CDATA[sl_GCCapacityCompany]]></Name>
					<X>-58</X><Y>-5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setGCCapacity(c_ownedGridConnections.get(v_currentSelectedGCnr), sl_GCCapacityCompany.getValue());
t_GCCapacityCompany.setText(roundToInt(sl_GCCapacityCompany.getValue()) + " kW");

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_defaultGCCapacitySlider]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minGCCapacitySlider]]></MinValue>
						<MaxValue><![CDATA[v_maxGCCapacitySlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446658933</Id>
					<Name><![CDATA[txt_GCCapacity]]></Name>
					<X>-290</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Aansluit capaciteit]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1713446065831</Id>
					<Name><![CDATA[gr_heatDemandSliders]]></Name>
					<X>-120</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446065865</Id>
					<Name><![CDATA[sl_heatDemandCompanyReduction]]></Name>
					<X>62</X><Y>-130</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[double newHeatDemandReduction_pct = sl_heatDemandCompanyReduction.getValue();
double consumptionScaling_fr = 1  - newHeatDemandReduction_pct/100;

for (J_EA j_ea : c_ownedGridConnections.get(v_currentSelectedGCnr).c_energyAssets){
	if (j_ea instanceof J_EAConsumption) {
		if (j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND) {
			((J_EAConsumption)j_ea).setConsumptionScaling_fr(consumptionScaling_fr);
		}
	}
	if (j_ea instanceof J_EAProfile) {
		if (((J_EAProfile) j_ea).energyCarrierConsumed == OL_EnergyCarrierType.HEAT) {
			((J_EAProfile) j_ea).resetEnergyProfile();
			((J_EAProfile) j_ea).scaleEnergyProfile(consumptionScaling_fr);
		}
	}
}


v_heatDemandReduction_pct = newHeatDemandReduction_pct;
t_heatDemandReductionCompanies.setText(newHeatDemandReduction_pct + "%");

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[5]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446065869</Id>
					<Name><![CDATA[text195]]></Name>
					<X>-170</X><Y>-125</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Besparing warmte]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446065871</Id>
					<Name><![CDATA[t_heatDemandReductionCompanies]]></Name>
					<X>35</X><Y>-125</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1713446065985</Id>
					<Name><![CDATA[txt_elektriciteit]]></Name>
					<X>-240</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elektriciteit]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446438059</Id>
					<Name><![CDATA[txt_mobiliteit]]></Name>
					<X>-240</X><Y>115</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Transport]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446065961</Id>
					<Name><![CDATA[t_electricityDemandReductionCompany]]></Name>
					<X>-85</X><Y>-30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446065963</Id>
					<Name><![CDATA[sl_electricityDemandCompanyReduction]]></Name>
					<X>-58</X><Y>-35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[double newElectricityDemandReduction_pct = sl_electricityDemandCompanyReduction.getValue();
double consumptionScaling_fr = 1  - newElectricityDemandReduction_pct/100;

for (J_EA j_ea : c_ownedGridConnections.get(v_currentSelectedGCnr).c_energyAssets) {
	if (j_ea instanceof J_EAConsumption) {
		if (j_ea.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND) {
			((J_EAConsumption)j_ea).setConsumptionScaling_fr(consumptionScaling_fr);
		}
	}
	if (j_ea instanceof J_EAProfile) {
		if (((J_EAProfile) j_ea).energyCarrierConsumed == OL_EnergyCarrierType.ELECTRICITY) {
			((J_EAProfile) j_ea).resetEnergyProfile();
			((J_EAProfile) j_ea).scaleEnergyProfile(consumptionScaling_fr);
		}
	}
}

v_electricityDemandReduction_pct = newElectricityDemandReduction_pct;
t_electricityDemandReductionCompany.setText(newElectricityDemandReduction_pct + "%");

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[5]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446065965</Id>
					<Name><![CDATA[text279]]></Name>
					<X>-290</X><Y>-30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Besparing elektriciteit]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1713447888398</Id>
					<Name><![CDATA[gr_companyMobilitySliders]]></Name>
					<X>-120</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446839189</Id>
					<Name><![CDATA[sl_electricVansCompany]]></Name>
					<X>62</X><Y>-3</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setElectricVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.ELECTRIC_VAN, (int)sl_electricVansCompany.getValue());

//Update slider number
t_numberOfElectricVansCompany.setText((int)sl_electricVansCompany.getValue());

//Update the other two sliders aswell
sl_hydrogenVansCompany.setValue(v_nbHydrogenVans, false);
sl_dieselVansCompany.setValue(v_nbDieselVans, false);

t_numberOfHydrogenVansCompany.setText(v_nbHydrogenVans);
t_numberOfDieselVansCompany.setText(v_nbDieselVans);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbEVVans]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minEVVanSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxEVVanSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbEVVans</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446839191</Id>
					<Name><![CDATA[text266]]></Name>
					<X>-170</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elektrisch]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446839193</Id>
					<Name><![CDATA[t_numberOfElectricVansCompany]]></Name>
					<X>35</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446839195</Id>
					<Name><![CDATA[sl_hydrogenVansCompany]]></Name>
					<X>62</X><Y>22</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setHydrogenVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.HYDROGEN_VAN, (int)sl_hydrogenVansCompany.getValue());

//Update slider number
t_numberOfHydrogenVansCompany.setText((int)sl_hydrogenVansCompany.getValue());

//Update the other two sliders aswell
sl_electricVansCompany.setValue(v_nbEVVans, false);
sl_dieselVansCompany.setValue(v_nbDieselVans, false);

t_numberOfElectricVansCompany.setText(v_nbEVVans);
t_numberOfDieselVansCompany.setText(v_nbDieselVans);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbHydrogenVans]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minHydrogenVanSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxHydrogenVanSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbHydrogenVans</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446839197</Id>
					<Name><![CDATA[text271]]></Name>
					<X>-170</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Waterstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446839199</Id>
					<Name><![CDATA[t_numberOfHydrogenVansCompany]]></Name>
					<X>35</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446839201</Id>
					<Name><![CDATA[sl_dieselVansCompany]]></Name>
					<X>62</X><Y>47</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setDieselVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.DIESEL_VAN, (int)sl_dieselVansCompany.getValue());

//Update slider number
t_numberOfDieselVansCompany.setText((int)sl_dieselVansCompany.getValue());

//Update the other two sliders aswell
sl_electricVansCompany.setValue(v_nbEVVans, false);
sl_hydrogenVansCompany.setValue(v_nbHydrogenVans, false);

t_numberOfElectricVansCompany.setText(v_nbEVVans);
t_numberOfHydrogenVansCompany.setText(v_nbHydrogenVans);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbDieselVans]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minDieselVanSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxDieselVanSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbDieselVans</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446839203</Id>
					<Name><![CDATA[text285]]></Name>
					<X>-170</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fossiele brandstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446839205</Id>
					<Name><![CDATA[t_numberOfDieselVansCompany]]></Name>
					<X>35</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1713446839207</Id>
					<Name><![CDATA[text274]]></Name>
					<X>-170</X><Y>-25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Busjes]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446857516</Id>
					<Name><![CDATA[t_numberOfDieselTrucksCompany]]></Name>
					<X>35</X><Y>145</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1713446857518</Id>
					<Name><![CDATA[t_numberOfHydrogenTrucksCompany]]></Name>
					<X>35</X><Y>120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1713446857520</Id>
					<Name><![CDATA[text272]]></Name>
					<X>-170</X><Y>120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Waterstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446857522</Id>
					<Name><![CDATA[text286]]></Name>
					<X>-170</X><Y>145</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fossiele brandstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446857524</Id>
					<Name><![CDATA[text268]]></Name>
					<X>-170</X><Y>95</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elektrisch]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446857528</Id>
					<Name><![CDATA[text275]]></Name>
					<X>-170</X><Y>70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Trucks]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446857530</Id>
					<Name><![CDATA[sl_hydrogenTrucksCompany]]></Name>
					<X>62</X><Y>117</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setHydrogenVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.HYDROGEN_TRUCK, (int)sl_hydrogenTrucksCompany.getValue());

//Update slider number
t_numberOfHydrogenTrucksCompany.setText((int)sl_hydrogenTrucksCompany.getValue());

//Update the other two sliders aswell
sl_electricTrucksCompany.setValue(v_nbEVTrucks, false);
sl_dieselTrucksCompany.setValue(v_nbDieselTrucks, false);

t_numberOfElectricTrucksCompany.setText(v_nbEVTrucks);
t_numberOfDieselTrucksCompany.setText(v_nbDieselTrucks);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbHydrogenTrucks]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minHydrogenTruckSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxHydrogenTruckSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbHydrogenTrucks</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446857532</Id>
					<Name><![CDATA[t_numberOfElectricTrucksCompany]]></Name>
					<X>35</X><Y>95</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446857534</Id>
					<Name><![CDATA[sl_electricTrucksCompany]]></Name>
					<X>62</X><Y>92</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setElectricVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.ELECTRIC_TRUCK, (int)sl_electricTrucksCompany.getValue());

//Update slider number
t_numberOfElectricTrucksCompany.setText((int)sl_electricTrucksCompany.getValue());

//Update the other two sliders aswell
sl_hydrogenTrucksCompany.setValue(v_nbHydrogenTrucks, false);
sl_dieselTrucksCompany.setValue(v_nbDieselTrucks, false);

t_numberOfHydrogenTrucksCompany.setText(v_nbHydrogenTrucks);
t_numberOfDieselTrucksCompany.setText(v_nbDieselTrucks);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbEVTrucks]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minEVTruckSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxEVTruckSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbEVTrucks</Link>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446857526</Id>
					<Name><![CDATA[sl_dieselTrucksCompany]]></Name>
					<X>62</X><Y>142</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setDieselVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.DIESEL_TRUCK, (int)sl_dieselTrucksCompany.getValue());

//Update slider number
t_numberOfDieselTrucksCompany.setText((int)sl_dieselTrucksCompany.getValue());

//Update the other two sliders aswell
sl_electricTrucksCompany.setValue(v_nbEVTrucks, false);
sl_hydrogenTrucksCompany.setValue(v_nbHydrogenTrucks, false);

t_numberOfElectricTrucksCompany.setText(v_nbEVTrucks);
t_numberOfHydrogenTrucksCompany.setText(v_nbHydrogenTrucks);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbDieselTrucks]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minDieselTruckSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxDieselTruckSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbDieselTrucks</Link>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446065901</Id>
					<Name><![CDATA[sl_electricCarsCompany]]></Name>
					<X>62</X><Y>-103</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setElectricVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.ELECTRIC_VEHICLE, (int)sl_electricCarsCompany.getValue());

//Update slider number
t_numberOfElectricCarsCompany.setText((int)sl_electricCarsCompany.getValue());

//Update the other two sliders aswell
sl_hydrogenCarsCompany.setValue(v_nbHydrogenCars, false);
sl_dieselCarsCompany.setValue(v_nbDieselCars, false);

t_numberOfHydrogenCarsCompany.setText(v_nbHydrogenCars);
t_numberOfDieselCarsCompany.setText(v_nbDieselCars);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbEVCars]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minEVCarSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxEVCarSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbEVCars</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446065907</Id>
					<Name><![CDATA[text265]]></Name>
					<X>-170</X><Y>-100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elektrisch]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446065909</Id>
					<Name><![CDATA[t_numberOfElectricCarsCompany]]></Name>
					<X>35</X><Y>-100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1713446065917</Id>
					<Name><![CDATA[text267]]></Name>
					<X>-170</X><Y>-155</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Besparing transport]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446065919</Id>
					<Name><![CDATA[sl_mobilityDemandCompanyReduction]]></Name>
					<X>62</X><Y>-160</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[c_ownedGridConnections.get(v_currentSelectedGCnr).c_tripTrackers.forEach(tt -> tt.distanceScaling_fr = 1-sl_mobilityDemandCompanyReduction.getValue()/100);
t_mobilityDemandReductionCompany.setText(roundToInt(sl_mobilityDemandCompanyReduction.getValue()) + "%");

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[5]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446065921</Id>
					<Name><![CDATA[t_mobilityDemandReductionCompany]]></Name>
					<X>35</X><Y>-155</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446065923</Id>
					<Name><![CDATA[sl_hydrogenCarsCompany]]></Name>
					<X>62</X><Y>-78</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setHydrogenVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.HYDROGEN_VEHICLE, (int)sl_hydrogenCarsCompany.getValue());

//Update slider number
t_numberOfHydrogenCarsCompany.setText((int)sl_hydrogenCarsCompany.getValue());

//Update the other two sliders aswell
sl_electricCarsCompany.setValue(v_nbEVCars, false);
sl_dieselCarsCompany.setValue(v_nbDieselCars, false);

t_numberOfElectricCarsCompany.setText(v_nbEVCars);
t_numberOfDieselCarsCompany.setText(v_nbDieselCars);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbHydrogenCars]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minHydrogenCarSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxHydrogenCarSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbHydrogenCars</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446065925</Id>
					<Name><![CDATA[text270]]></Name>
					<X>-170</X><Y>-75</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Waterstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446065927</Id>
					<Name><![CDATA[t_numberOfHydrogenCarsCompany]]></Name>
					<X>35</X><Y>-75</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713446065933</Id>
					<Name><![CDATA[sl_dieselCarsCompany]]></Name>
					<X>62</X><Y>-54</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Slider function
f_setDieselVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.DIESEL_VEHICLE, (int)sl_dieselCarsCompany.getValue());

//Update slider number
t_numberOfDieselCarsCompany.setText((int)sl_dieselCarsCompany.getValue());

//Update the other two sliders aswell
sl_electricCarsCompany.setValue(v_nbEVCars, false);
sl_hydrogenCarsCompany.setValue(v_nbHydrogenCars, false);

t_numberOfElectricCarsCompany.setText(v_nbEVCars);
t_numberOfHydrogenCarsCompany.setText(v_nbHydrogenCars);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_nbDieselCars]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minDieselCarSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxDieselCarSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
						<Link>v_nbDieselCars</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713446065935</Id>
					<Name><![CDATA[text284]]></Name>
					<X>-170</X><Y>-50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fossiele brandstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1713446065937</Id>
					<Name><![CDATA[t_numberOfDieselCarsCompany]]></Name>
					<X>35</X><Y>-50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1713446065939</Id>
					<Name><![CDATA[text273]]></Name>
					<X>-170</X><Y>-125</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Autos]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1713547081193</Id>
					<Name><![CDATA[gr_selectedGC]]></Name>
					<X>-60</X><Y>-290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="ComboBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713544148158</Id>
					<Name><![CDATA[GCnr_selection]]></Name>
					<X>50</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="50" Height="20">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if(c_ownedGridConnections.size()>1){
	f_setSelectedGC();
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<Editable>false</Editable>
						<Button><![CDATA[0]]></Button>
						<Button><![CDATA[1]]></Button>
						<LinkTo>true</LinkTo>
						<Link>v_currentSelectedGCnr</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713547027389</Id>
					<Name><![CDATA[text9]]></Name>
					<X>-119</X><Y>-8</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Geselecteerde Aansluiting:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1713963799790</Id>
					<Name><![CDATA[sl_batteryCompany]]></Name>
					<X>-58</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//traceln("Slider werkt nog niet volledig!!, batterij sturing werkt nog niet goed");
f_setBattery(c_ownedGridConnections.get(v_currentSelectedGCnr), sl_batteryCompany.getValue());
t_batteryCompany.setText(roundToInt(sl_batteryCompany.getValue()) + " kWh");

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_defaultBatSlider]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minBatSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxBatSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1713963799825</Id>
					<Name><![CDATA[t_batteryCompany]]></Name>
					<X>-85</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0 kWh]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1713963799827</Id>
					<Name><![CDATA[text283]]></Name>
					<X>-290</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Batterij capaciteit]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1715084970828</Id>
					<Name><![CDATA[g_energyDemandSettings]]></Name>
					<X>280</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Group>
					<Id>1715084970830</Id>
					<Name><![CDATA[gr_electricityButton1]]></Name>
					<X>-560</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1715084970832</Id>
					<Name><![CDATA[ovalElectricityButton1]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-657931</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-32</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Image>
					<Id>1715084970834</Id>
					<Name><![CDATA[image4]]></Name>
					<X>-14</X><Y>-12</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>28</Width>
					<Height>24</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[noun-electricity-3408805.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
				<Group>
					<Id>1715084970836</Id>
					<Name><![CDATA[gr_heatButton1]]></Name>
					<X>-560</X><Y>-160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1715084970838</Id>
					<Name><![CDATA[ovalHeatButton1]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-657931</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-6943</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Image>
					<Id>1715084970840</Id>
					<Name><![CDATA[image11]]></Name>
					<X>-14</X><Y>-12</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>28</Width>
					<Height>24</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[noun-fire-2429630.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
				<Group>
					<Id>1715084970842</Id>
					<Name><![CDATA[gr_transportButton1]]></Name>
					<X>-560</X><Y>225</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[
]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1715084970844</Id>
					<Name><![CDATA[ovalTransportButton1]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-657931</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-2625550</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Image>
					<Id>1715084970846</Id>
					<Name><![CDATA[image16]]></Name>
					<X>-14</X><Y>-12</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>28</Width>
					<Height>24</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[noun-car-1777731.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
			</Presentation>

				</Group>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1715093089631</Id>
					<Name><![CDATA[rb_heatingTypePrivateUI]]></Name>
					<X>-290</X><Y>-200</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="180" Height="100">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor>-16777216</TextColor>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (!rb_heatingTypePrivateUI.isEnabled()){// check if disabled, if so, skip when called
	return;
}

//Convert radiobutton integer to OL type
OL_GridConnectionHeatingType selectedHeatingType;
switch (rb_heatingTypePrivateUI.getValue()){
	case 0:
		selectedHeatingType = OL_GridConnectionHeatingType.GASBURNER;
	break;
	case 1:
		selectedHeatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;
	break;
	case 2:
		selectedHeatingType = OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP;
	break;
	case 3:
		selectedHeatingType = OL_GridConnectionHeatingType.HYDROGENBURNER;
	break;
	default:
		selectedHeatingType = OL_GridConnectionHeatingType.NONE;
}


//Radio button function
f_setHeatingType(c_ownedGridConnections.get(v_currentSelectedGCnr), selectedHeatingType);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="12" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[HR ketel aardgas]]></Button>
						<Button><![CDATA[Hybride warmtepomp]]></Button>
						<Button><![CDATA[Elek. warmtepomp]]></Button>
						<Button><![CDATA[Waterstof ketel]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1725618990626</Id>
					<Name><![CDATA[t_rooftopSolarCompany]]></Name>
					<X>-85</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0 kW]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725618990628</Id>
					<Name><![CDATA[sl_rooftopPVCompany]]></Name>
					<X>-58</X><Y>55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setPVSystem(c_ownedGridConnections.get(v_currentSelectedGCnr), sl_rooftopPVCompany.getValue());
t_rooftopSolarCompany.setText(roundToInt(sl_rooftopPVCompany.getValue()) + " kW");

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_defaultPVSlider]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_minPVSlider]]></MinValue>
						<MaxValue><![CDATA[v_maxPVSlider]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1725618990630</Id>
					<Name><![CDATA[txt_PVPower]]></Name>
					<X>-290</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[PV vermogen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1708523022017</Id>
					<Name><![CDATA[button]]></Name>
					<X>1670</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="230" Height="50">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[zero_Interface.va_Interface.navigateTo();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="14" Style="0"/>
						<LabelText><![CDATA[Terug naar hoofdscherm]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1717514421993</Id>
					<Name><![CDATA[txt_setSlidersToSelectedGC]]></Name>
					<X>-410</X><Y>390</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Set Sliders to selected GC]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1725365029204</Id>
					<Name><![CDATA[gr_companyDetails]]></Name>
					<X>1140</X><Y>80</Y>
					<Label><X>11.669</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1725366551214</Id>
					<Name><![CDATA[roundRect_companyName]]></Name>
					<X>-298</X><Y>-59.512</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_companyUILineWidth]]></LineWidthCode>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_companyUILineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>596</Width>
					<Height>119.024</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Text>
					<Id>1708611721668</Id>
					<Name><![CDATA[t_companyName]]></Name>
					<X>0</X><Y>-46.34</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Company Name]]></Text>
					<TextCode><![CDATA[p_companyName]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>48</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1708611716618</Id>
					<Name><![CDATA[t_GCadress]]></Name>
					<X>0</X><Y>23.17</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Adress]]></Text>
					<TextCode><![CDATA[v_adressGC]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>20</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<EmbeddedObjectPresentation>
					<Id>1714652081119</Id>
					<Name><![CDATA[uI_Results_presentation]]></Name>
					<X>380</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>0.0</Latitude>
					<Longitude>0.0</Longitude>
				</EmbeddedObjectPresentation>
				<Rectangle>
					<Id>1725381132369</Id>
					<Name><![CDATA[mask_resultsUI1]]></Name>
					<X>370</X><Y>60</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-1</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>470</Width>
					<Height>160</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1725381214835</Id>
					<Name><![CDATA[mask_resultsUI2]]></Name>
					<X>845</X><Y>270</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-1</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>2495</Width>
					<Height>690</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Group>
					<Id>1725382426671</Id>
					<Name><![CDATA[gr_chartNameLeft]]></Name>
					<X>610</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1725381345763</Id>
					<Name><![CDATA[rect_chartNameLeft]]></Name>
					<X>-230</X><Y>-30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_chartLineWidth]]></LineWidthCode>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_companyUILineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>460</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_chartBackgroundColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1725382366046</Id>
					<Name><![CDATA[txt_chartNameLeft]]></Name>
					<X>0</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Profielen]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1725382459577</Id>
					<Name><![CDATA[gr_chartNameMiddle]]></Name>
					<X>1140</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1725382459579</Id>
					<Name><![CDATA[rect_chartNameMiddle]]></Name>
					<X>-230</X><Y>-30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_chartLineWidth]]></LineWidthCode>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_companyUILineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>460</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_chartBackgroundColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1725382459581</Id>
					<Name><![CDATA[txt_chartNameMiddle]]></Name>
					<X>0</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Opwek/verbruik diagram]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1725382464651</Id>
					<Name><![CDATA[gr_chartNameRight]]></Name>
					<X>1670</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1725382464653</Id>
					<Name><![CDATA[rect_chartNameRight]]></Name>
					<X>-230</X><Y>-30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_chartLineWidth]]></LineWidthCode>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_companyUILineColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>460</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_chartBackgroundColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1725382464655</Id>
					<Name><![CDATA[txt_chartNameRight]]></Name>
					<X>0</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Energiestromen]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1725606178083</Id>
					<Name><![CDATA[gr_simulateYearScreen]]></Name>
					<X>1375</X><Y>540</Y>
					<Label><X>22.522</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1725608394737</Id>
					<Name><![CDATA[rect_simulateYearScreen1]]></Name>
					<X>-995</X><Y>-275</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_chartLineWidth+0.5]]></LineWidthCode>
					<LineColor>-369756683</LineColor>
					<LineColorCode><![CDATA[v_loadScreenColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>530</Width>
					<Height>45</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-369756683</FillColor>
					<FillColorCode><![CDATA[v_loadScreenColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1725606178085</Id>
					<Name><![CDATA[rect_simulateYearScreen2]]></Name>
					<X>-535</X><Y>-320</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_chartLineWidth+0.5]]></LineWidthCode>
					<LineColor>-6943</LineColor>
					<LineColorCode><![CDATA[v_companyUIBackgroundColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1060</Width>
					<Height>740</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_companyUIBackgroundColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Group>
					<Id>1725606178087</Id>
					<Name><![CDATA[gr_simulateYearToCalculateKPIs]]></Name>
					<X>-35</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[//Set correct overlay
gr_simulateYearScreen.setVisible(false);		
gr_loadIcon.setVisible(true);
		

//Run simulation
new Thread( () -> {	
	//Save previous totals
	zero_Interface.f_updatePreviousTotalsGC();

	zero_Interface.energyModel.f_runRapidSimulation();
	zero_Interface.f_updateUIresultsMainArea();
	f_setSelectedGCGraphs();
	gr_loadIcon.setVisible(false);
	
	//Update and show kpi summary chart after run
	uI_Results.chartKPISummary.f_setKPISummaryChart();
}).start();


//Update results up to date boolean
zero_Interface.b_resultsUpToDate = true;
]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1725606178089</Id>
					<Name><![CDATA[t_simulateYearToCalculateCostsSmall]]></Name>
					<X>-140</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Simuleer jaar voor KPI's]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>28</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Image>
					<Id>1725606178091</Id>
					<Name><![CDATA[image_simulateYearToCalculateCostsSmall]]></Name>
					<X>-420</X><Y>-70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>102.315</Width>
					<Height>99.723</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[icon_greater_than.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
			</Presentation>

				</Group>
				<Group>
					<Id>1725606178111</Id>
					<Name><![CDATA[gr_loadIcon]]></Name>
					<X>2360</X><Y>280</Y>
					<Label><X>10.169</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1725606813428</Id>
					<Name><![CDATA[rect_loadIcon2]]></Name>
					<X>-1980</X><Y>-15</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_chartLineWidth+0.5]]></LineWidthCode>
					<LineColor>-369756683</LineColor>
					<LineColorCode><![CDATA[v_loadScreenColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>530</Width>
					<Height>45</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-369756683</FillColor>
					<FillColorCode><![CDATA[v_loadScreenColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1725606178113</Id>
					<Name><![CDATA[rect_loadIcon]]></Name>
					<X>-1520</X><Y>-60.969</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineWidthCode><![CDATA[v_chartLineWidth+0.5]]></LineWidthCode>
					<LineColor>-369756683</LineColor>
					<LineColorCode><![CDATA[v_loadScreenColor]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1060</Width>
					<Height>740.969</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-369756683</FillColor>
					<FillColorCode><![CDATA[v_loadScreenColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Group>
					<Id>1725606744485</Id>
					<Name><![CDATA[gr_loadIconText]]></Name>
					<X>-1220</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Image>
					<Id>1725606744487</Id>
					<Name><![CDATA[image_loadIconSmall]]></Name>
					<X>-27.610999999999876</X><Y>-5.4780000000000655</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>61.016</Width>
					<Height>60.969</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[icon_loading.gif]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1725606744489</Id>
					<Name><![CDATA[t_loadIconSmall]]></Name>
					<X>2.8969999999999345</X><Y>-55.96199999999999</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Jaar wordt gesimuleerd ]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>28</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
			</Presentation>

				</Group>
			</Presentation>

				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1708523262441</Id>
					<Name><![CDATA[va_companyUI]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[company UI]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1709049456135</Id>
			<Name><![CDATA[UI_Battery]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1709049456141</Id>
				<Name><![CDATA[1709049456141]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1709049456138</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1709049456142</CurrentLevel>
			<ConnectionsId>1709049456136</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1715597286082</Id>
					<Name><![CDATA[v_colorBattery_lines]]></Name>
					<X>-740</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(158, 201, 158)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715597307038</Id>
					<Name><![CDATA[v_colorBattery_background]]></Name>
					<X>-740</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(198, 251, 198)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715597314638</Id>
					<Name><![CDATA[v_colorBatter_3]]></Name>
					<X>-740</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[white]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715602425848</Id>
					<Name><![CDATA[v_sliderStartValue_priceLimit]]></Name>
					<X>-730</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715607530949</Id>
					<Name><![CDATA[v_sliderMinValue_balanceLimit]]></Name>
					<X>-730</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[-zero_Interface.energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW/1000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715607536716</Id>
					<Name><![CDATA[v_sliderMaxValue_balanceLimit]]></Name>
					<X>-730</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[zero_Interface.energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW/1000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715607544383</Id>
					<Name><![CDATA[v_sliderStartValue_balanceLimit]]></Name>
					<X>-730</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1715630743924</Id>
					<Name><![CDATA[v_sliderStartValue_BatteryP_MW]]></Name>
					<X>-730</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724947743379</Id>
					<Name><![CDATA[v_currentSelectedBattery]]></Name>
					<X>-310</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1724947743386</Id>
					<Name><![CDATA[p_amountOfGISObjects]]></Name>
					<X>-310</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1724947743384</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1724947743389</Id>
					<Name><![CDATA[p_amountOfGC]]></Name>
					<X>-310</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1724947743387</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724947743355</Id>
					<Name><![CDATA[c_GISObjects_Battery]]></Name>
					<X>-310</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GIS_Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724947743357</Id>
					<Name><![CDATA[c_gridConnections_Battery]]></Name>
					<X>-310</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724947743359</Id>
					<Name><![CDATA[c_connectedGridNodes]]></Name>
					<X>-310</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724947743361</Id>
					<Name><![CDATA[c_connectionOwners_Battery]]></Name>
					<X>-310</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[ConnectionOwner]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724947743365</Id>
					<Name><![CDATA[c_gridBatteries]]></Name>
					<X>-310</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAStorageElectric]]></ElementClass>
						<ValueElementClass><![CDATA[J_EAConversionElectrolyser]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1709553910991</Id>
					<Name><![CDATA[f_styleBatteryUI]]></Name>
					<X>-760</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715591908888</Id>
					<Name><![CDATA[f_initializeUIBattery]]></Name>
					<X>-760</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[COC]]></Name>
						<Type><![CDATA[ConnectionOwner]]></Type>
					</Parameter>
					<Body><![CDATA[//Instantiate new sliders 
f_instantiateSlidersBattery(COC);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1715591980366</Id>
					<Name><![CDATA[f_instantiateSlidersBattery]]></Name>
					<X>-740</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[COC]]></Name>
						<Type><![CDATA[ConnectionOwner]]></Type>
					</Parameter>
					<Body><![CDATA[// Electrolyser Power start  value
v_sliderStartValue_BatteryP_MW = ((J_EAConversionElectrolyser)COC.f_getOwnedGridConnections().get(0).c_conversionAssets.get(0)).getCapacityElectric_kW()/1000; 
sl_batteryPower.setValue(v_sliderStartValue_BatteryP_MW, false);
t_powerBattery.setText(v_sliderStartValue_BatteryP_MW + " MW");


// Price limit start value
v_sliderStartValue_priceLimit = ((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).v_electricityPriceMaxForProfit_eurpkWh; 
sl_batteryElectricityPriceLimit.setValue(v_sliderStartValue_priceLimit, false);
t_electricityPriceLimit.setText("€" + v_sliderStartValue_priceLimit);


//Balance limit start value
v_sliderStartValue_balanceLimit = ((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).v_gridNodeCongestionLimit_kW; 
sl_batteryElectricityBalanceLimit.setValue(v_sliderStartValue_balanceLimit, false);
t_electricityBalanceLimit.setText(v_sliderStartValue_balanceLimit + " MW");


//Radio button balance or price mode
int rb_value = 0;
switch (((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).p_electrolyserOperationMode){

	case PRICE:
		
		rb_value = 0;
		//Set visibility of price slider true and balance slider false
		gr_electricityPriceSliderBattery.setVisible(true);
		gr_electricityBalanceSliderBattery.setVisible(false);
	break;
	
	case BALANCE:
		rb_value = 1;
		
		//Set visibility of balance slider true and price slider false
		gr_electricityBalanceSliderBattery.setVisible(true);
		gr_electricityPriceSliderBattery.setVisible(false);
	break;
}
rb_batteryMode.setValue(rb_value, false);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724947743369</Id>
					<Name><![CDATA[f_setScenarioFuture]]></Name>
					<X>-290</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[//Set button to custom early on, so traceln will get ignored.
rb_scenariosPrivateUI.setValue(2, false);


//Scenario code here


//Reset button to current, due to sliders putting it on custom
rb_scenariosPrivateUI.setValue(1, false);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724947743373</Id>
					<Name><![CDATA[f_setScenario]]></Name>
					<X>-310</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[scenario_nr]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[switch (scenario_nr){

	case 0: // Current

	break;
	
	case 1: // Future

	break;
	
	case 2: // Hydrogen
		traceln("Selected scenario: Hydrogen : DOES NOTHING YET");
	break;
	
	case 3: // Custom

		if(rb_scenariosPrivateUI.getValue() == 2){
		return;
		}
		rb_scenariosPrivateUI.setValue(2, false);
		traceln("Selected scenario: Custom");
	break;
	
	default:

}

//Set 'results up to date' to false
zero_Interface.b_resultsUpToDate = false;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724947743375</Id>
					<Name><![CDATA[f_setScenarioCurrent]]></Name>
					<X>-290</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[//Set button to custom early on, so traceln will get ignored.
rb_scenariosPrivateUI.setValue(2, false);


//Scenario code here


//Reset button to current, due to sliders putting it on custom
rb_scenariosPrivateUI.setValue(0, false);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724947743377</Id>
					<Name><![CDATA[f_setSelectedGC]]></Name>
					<Description><![CDATA[Function that sets the sliders to match the currently present settings of the energy assets owned by the selected GC. Used when a connection owner has multiple grid connections, and wants to set the sliders of a different GC. ]]></Description>
					<X>-310</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Initialize slider presets to selected GC (min, max, etc.)
//f_setSliderPresets();

]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1709049456136</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1709049456197</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Interface]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1709049456142</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1725002991039</Id>
					<Name><![CDATA[rect_canvas]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1920</Width>
					<Height>980</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1725002921481</Id>
					<Name><![CDATA[rect_scenarios]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_colorBattery_background]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>170</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_colorBattery_lines]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
    			<TimePlot>
					<Id>1709582023151</Id>
					<Name><![CDATA[plot]]></Name>
					<X>400</X><Y>280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709625600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>540</Width>
					<Height>400</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>460</Width>
						<Height>310</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
				<Rectangle>
					<Id>1715589407937</Id>
					<Name><![CDATA[slider_blocker]]></Name>
					<X>0</X><Y>170</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_colorBattery_lines]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>810</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_colorBatter_3]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1715596728186</Id>
					<Name><![CDATA[t_batterySliders]]></Name>
					<X>70</X><Y>200</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Battery]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1715597165299</Id>
					<Name><![CDATA[gr_buttonBattery]]></Name>
					<X>41</X><Y>211</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1715596934178</Id>
					<Name><![CDATA[ovalBatteryButton]]></Name>
					<X>-1</X><Y>-1</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-6632142</FillColor>
					<FillColorCode><![CDATA[zero_Interface.v_batteryColor]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1715596882276</Id>
					<Name><![CDATA[t_battery]]></Name>
					<X>-10</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-1</Color>
					<Text><![CDATA[Bat]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1715606650390</Id>
					<Name><![CDATA[gr_electricityPriceSliderBattery]]></Name>
					<X>190</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1715597606225</Id>
					<Name><![CDATA[txt_electricityPriceLimit]]></Name>
					<X>-170</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electriciteits prijs limiet]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1715597606227</Id>
					<Name><![CDATA[sl_batteryElectricityPriceLimit]]></Name>
					<X>62</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Adjust the maximum price of electricity used to produce hydrogen
((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_electricityPriceMaxForProfit_eurpkWh = sl_batteryElectricityPriceLimit.getValue();

//Set text accordingly
t_electricityPriceLimit.setText( "€" + sl_batteryElectricityPriceLimit.getValue());

//Set scenario to custom
f_setScenario(2);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_sliderStartValue_priceLimit]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[0.5]]></MaxValue>
						<Step><![CDATA[0.01]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1715597606229</Id>
					<Name><![CDATA[t_electricityPriceLimit]]></Name>
					<X>40</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[ €0.00]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1715606688952</Id>
					<Name><![CDATA[gr_batteryPowerSlider]]></Name>
					<X>190</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1715597606231</Id>
					<Name><![CDATA[txt_powerBattery]]></Name>
					<X>-170</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Vermogen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1715597606233</Id>
					<Name><![CDATA[sl_batteryPower]]></Name>
					<X>62</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Adjust the electric capacity
c_gridBatteries.get(v_currentSelectedBattery).setCapacityElectric_kW(sl_batteryPower.getValue()*1000);// Multiplied by 1000, as the energy asset is in kW

//Adjust grid connection capacity as well (if needed)
if(sl_batteryPower.getValue()*1000 > 2000){
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).p_physicalConnectionCapacity_kW = sl_batteryPower.getValue()*1000;
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).p_contractedDeliveryCapacity_kW = sl_batteryPower.getValue()*1000;
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).p_contractedFeedinCapacity_kW = sl_batteryPower.getValue()*1000;
}

//Set the text accordingly
t_powerBattery.setText(sl_batteryPower.getValue() + " MW");


//Set scenario to custom
f_setScenario(2);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[10]]></MaxValue>
						<Step><![CDATA[0.1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1715597606235</Id>
					<Name><![CDATA[t_powerBattery]]></Name>
					<X>35</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[1.0 MW]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1715606719124</Id>
					<Name><![CDATA[gr_batteryMode]]></Name>
					<X>100</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1715598832030</Id>
					<Name><![CDATA[rb_batteryMode]]></Name>
					<X>-80</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="150" Height="50">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[/*
switch (rb_batteryMode.getValue()){

	case 0:
		c_ownedGridConnections.get(0).p_electrolyserOperationMode = OL_ElectrolyserOperationMode.PRICE;
		
		//Set visibility of price slider true and balance slider false
		gr_electricityPriceSlider.setVisible(true);
		gr_electricityBalanceSlider.setVisible(false);
	break;
	
	case 1:
		c_ownedGridConnections.get(0).p_electrolyserOperationMode = OL_ElectrolyserOperationMode.BALANCE;
		
		//Set visibility of balance slider true and price slider false
		gr_electricityBalanceSlider.setVisible(true);
		gr_electricityPriceSlider.setVisible(false);
	break;
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[Prijs]]></Button>
						<Button><![CDATA[Balans]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1715598901188</Id>
					<Name><![CDATA[txt_electrolyserMode]]></Name>
					<X>-80</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Batterij modus]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1715606808711</Id>
					<Name><![CDATA[gr_electricityBalanceSliderBattery]]></Name>
					<X>190</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1715606808713</Id>
					<Name><![CDATA[txt_electricityBalanceLimit]]></Name>
					<X>-170</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electriciteits balans limiet]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1715606808715</Id>
					<Name><![CDATA[sl_batteryElectricityBalanceLimit]]></Name>
					<X>62</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Adjust the gridnode congestion while charging
((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_gridNodeCongestionLimit_kW = sl_batteryElectricityBalanceLimit.getValue()*1000;

//Set text accordingly
t_electricityBalanceLimit.setText( sl_batteryElectricityBalanceLimit.getValue() + " MW" );

//Set scenario to custom
f_setScenario(2);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_sliderStartValue_balanceLimit]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_sliderMinValue_balanceLimit]]></MinValue>
						<MaxValue><![CDATA[v_sliderMaxValue_balanceLimit]]></MaxValue>
						<Step><![CDATA[0.01]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1715606808717</Id>
					<Name><![CDATA[t_electricityBalanceLimit]]></Name>
					<X>50</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0.0 MW]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1724859658263</Id>
					<Name><![CDATA[gr_scenarioRB]]></Name>
					<X>120</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1724859658265</Id>
					<Name><![CDATA[rb_scenariosPrivateUI]]></Name>
					<X>-100</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="180" Height="120">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setScenario(rb_scenariosPrivateUI.getValue());]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="14" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[Huidig - 2023]]></Button>
						<Button><![CDATA[Toekomstplannen]]></Button>
						<Button><![CDATA[Custom]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1724859658267</Id>
					<Name><![CDATA[text187]]></Name>
					<X>-100</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Selecteer een scenario]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>20</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1724947743345</Id>
					<Name><![CDATA[text]]></Name>
					<X>-320</X><Y>540</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Current selected assets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724947743347</Id>
					<Name><![CDATA[txt_batteryAssets]]></Name>
					<X>-320</X><Y>270</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Battery assets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724947743349</Id>
					<Name><![CDATA[txt_setSlidersToSelectedGC]]></Name>
					<X>-320</X><Y>370</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Set Sliders to selected GC]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724947743351</Id>
					<Name><![CDATA[text7]]></Name>
					<X>-320</X><Y>420</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Set Sliders to Scenario]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724947743353</Id>
					<Name><![CDATA[text5]]></Name>
					<X>-320</X><Y>90</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Connections]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1724948168075</Id>
					<Name><![CDATA[gr_batteryCapacitySlider]]></Name>
					<X>190</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1724948168077</Id>
					<Name><![CDATA[txt_powerBattery1]]></Name>
					<X>-170</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Opslagcapaciteit]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1724948168079</Id>
					<Name><![CDATA[sl_batteryCapacity]]></Name>
					<X>62</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Adjust the electric capacity
c_gridBatteries.get(v_currentSelectedBattery).setStorageCapacity_kWh(sl_batteryCapacity.getValue()*1000);// Multiplied by 1000, as the energy asset is in kW

//Adjust grid connection capacity as well (if needed)
if(sl_batteryCapacity.getValue()*1000 > 2000){
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).p_physicalConnectionCapacity_kW = sl_batteryCapacity.getValue()*1000;
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).p_contractedDeliveryCapacity_kW = sl_batteryCapacity.getValue()*1000;
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).p_contractedFeedinCapacity_kW = sl_batteryCapacity.getValue()*1000;
}

//Set the text accordingly
t_capacityBattery.setText(sl_batteryCapacity.getValue() + " MWh");


//Set scenario to custom
f_setScenario(2);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[0.1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1724948168081</Id>
					<Name><![CDATA[t_capacityBattery]]></Name>
					<X>35</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[1.0 MWh]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1725003063740</Id>
					<Name><![CDATA[txt_batteryControlRoom]]></Name>
					<X>760</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Batterij Controlroom]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>72</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1725002896440</Id>
					<Name><![CDATA[va_batteryUI]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[Batter UI]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1709049506453</Id>
			<Name><![CDATA[Z_UnusedAgent]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1709049506459</Id>
				<Name><![CDATA[1709049506459]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1709049506456</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1709049506460</CurrentLevel>
			<ConnectionsId>1709049506454</ConnectionsId>
			<AgentLinks>
				<AgentLink>
					<Id>1709049506454</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1709049506460</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1709049506453</Id>
			<Name><![CDATA[Z_UnusedAgent2]]></Name>
			<ExcludeFromBuild>true</ExcludeFromBuild>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1709049506460</Id>
				<Name><![CDATA[1709049506460]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1709049506456</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1709049506460</CurrentLevel>
			<ConnectionsId>1709049506454</ConnectionsId>
			<AgentLinks>
				<AgentLink>
					<Id>1709049506454</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1709049506460</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1709049506453</Id>
			<Name><![CDATA[tabArea]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1709049506461</Id>
				<Name><![CDATA[1709049506461]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1709049506456</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1709049506460</CurrentLevel>
			<ConnectionsId>1709049506454</ConnectionsId>
			<AgentLinks>
				<AgentLink>
					<Id>1709049506454</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1709049506460</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1717506309790</Id>
			<Name><![CDATA[UI_Hydrogen]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1717506309785</Id>
				<Name><![CDATA[1717506309785]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1717506309786</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1717506309821</CurrentLevel>
			<ConnectionsId>1717506309867</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1717506309811</Id>
					<Name><![CDATA[v_sliderStartValue_priceLimit]]></Name>
					<X>-930</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1717506309813</Id>
					<Name><![CDATA[v_sliderMinValue_balanceLimit]]></Name>
					<X>-930</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[-zero_Interface.energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW/1000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1717506309815</Id>
					<Name><![CDATA[v_sliderMaxValue_balanceLimit]]></Name>
					<X>-930</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[zero_Interface.energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW/1000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1717506309817</Id>
					<Name><![CDATA[v_sliderStartValue_balanceLimit]]></Name>
					<X>-930</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1717506309819</Id>
					<Name><![CDATA[v_sliderStartValue_ElectrolyserP_MW]]></Name>
					<X>-930</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724859028571</Id>
					<Name><![CDATA[v_colorH2_blue]]></Name>
					<X>-940</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(33, 164, 195)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724859028735</Id>
					<Name><![CDATA[v_colorH2_green]]></Name>
					<X>-940</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new Color(104, 193, 103)]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724859028737</Id>
					<Name><![CDATA[v_colorH2_white]]></Name>
					<X>-940</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Color]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[white]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724860189446</Id>
					<Name><![CDATA[v_currentSelectedElectrolyser]]></Name>
					<X>-360</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724944015553</Id>
					<Name><![CDATA[v_currentSelectedStorage]]></Name>
					<X>-360</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1724944025798</Id>
					<Name><![CDATA[v_currentSelectedFuelCell]]></Name>
					<X>-360</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1724921941090</Id>
					<Name><![CDATA[p_amountOfGISObjects]]></Name>
					<X>-360</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1724921941088</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1724921946872</Id>
					<Name><![CDATA[p_amountOfGC]]></Name>
					<X>-360</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1724921946870</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724859404446</Id>
					<Name><![CDATA[c_GISObjects_Hydrogen]]></Name>
					<X>-360</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GIS_Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724859404449</Id>
					<Name><![CDATA[c_gridConnections_Hydrogen]]></Name>
					<X>-360</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridConnection]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724859404455</Id>
					<Name><![CDATA[c_connectedGridNodes]]></Name>
					<X>-360</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Object]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724943470087</Id>
					<Name><![CDATA[c_connectionOwners_Hydrogen]]></Name>
					<X>-360</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[ConnectionOwner]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724943620236</Id>
					<Name><![CDATA[c_hydrogenStorages]]></Name>
					<X>-360</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAStorageGas]]></ElementClass>
						<ValueElementClass><![CDATA[J_EAConversionElectrolyser]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724943636670</Id>
					<Name><![CDATA[c_hydrogenElectrolysers]]></Name>
					<X>-360</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAConversionElectrolyser]]></ElementClass>
						<ValueElementClass><![CDATA[J_EAConversionElectrolyser]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1724943685107</Id>
					<Name><![CDATA[c_hydrogenFuelCells]]></Name>
					<X>-360</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_EAConversionFuelCell]]></ElementClass>
						<ValueElementClass><![CDATA[J_EAStorageGas]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717506309797</Id>
					<Name><![CDATA[f_styleHydrogenUI]]></Name>
					<X>-960</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717506309801</Id>
					<Name><![CDATA[f_initializeUIElectrolyser]]></Name>
					<X>-960</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[COC]]></Name>
						<Type><![CDATA[ConnectionOwner]]></Type>
					</Parameter>
					<Body><![CDATA[//Instantiate sliders 
f_instantiateSlidersElectrolyser(COC);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1717506309803</Id>
					<Name><![CDATA[f_instantiateSlidersElectrolyser]]></Name>
					<X>-940</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[COC]]></Name>
						<Type><![CDATA[ConnectionOwner]]></Type>
					</Parameter>
					<Body><![CDATA[// Electrolyser Power start  value
v_sliderStartValue_ElectrolyserP_MW = ((J_EAConversionElectrolyser)COC.f_getOwnedGridConnections().get(0).c_conversionAssets.get(0)).getCapacityElectric_kW()/1000; 
sl_electrolyserPower.setValue(v_sliderStartValue_ElectrolyserP_MW, false);
t_powerElectrolyser.setText(v_sliderStartValue_ElectrolyserP_MW + " MW");


// Price limit start value
v_sliderStartValue_priceLimit = ((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).v_electricityPriceMaxForProfit_eurpkWh; 
sl_electrolyserElectricityPriceLimit.setValue(v_sliderStartValue_priceLimit, false);
t_electricityPriceLimit.setText("€" + v_sliderStartValue_priceLimit);


//Balance limit start value
v_sliderStartValue_balanceLimit = ((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).v_gridNodeCongestionLimit_kW; 
sl_electrolyserElectricityBalanceLimit.setValue(v_sliderStartValue_balanceLimit, false);
t_electricityBalanceLimit.setText(v_sliderStartValue_balanceLimit + " MW");


//Radio button balance or price mode
int rb_value = 0;
switch (((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).p_electrolyserOperationMode){

	case PRICE:
		
		rb_value = 0;
		//Set visibility of price slider true and balance slider false
		gr_electricityPriceSlider.setVisible(true);
		gr_electricityBalanceSlider.setVisible(false);
	break;
	
	case BALANCE:
		rb_value = 1;
		
		//Set visibility of balance slider true and price slider false
		gr_electricityBalanceSlider.setVisible(true);
		gr_electricityPriceSlider.setVisible(false);
	break;
}
rb_electrolyserMode.setValue(rb_value, false);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724859526072</Id>
					<Name><![CDATA[f_setScenarioFuture]]></Name>
					<X>-340</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[//Set button to custom early on, so traceln will get ignored.
rb_scenariosPrivateUI.setValue(2, false);


//Scenario code here


//Reset button to current, due to sliders putting it on custom
rb_scenariosPrivateUI.setValue(1, false);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724859526076</Id>
					<Name><![CDATA[f_setScenario]]></Name>
					<X>-360</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[scenario_nr]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[switch (scenario_nr){

	case 0: // Current

	break;
	
	case 1: // Future

	break;
	
	case 2: // Hydrogen
		traceln("Selected scenario: Hydrogen : DOES NOTHING YET");
	break;
	
	case 3: // Custom

		if(rb_scenariosPrivateUI.getValue() == 2){
		return;
		}
		rb_scenariosPrivateUI.setValue(2, false);
		traceln("Selected scenario: Custom");
	break;
	
	default:

}

//Set 'results up to date' to false
zero_Interface.b_resultsUpToDate = false;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724859526078</Id>
					<Name><![CDATA[f_setScenarioCurrent]]></Name>
					<X>-340</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[//Set button to custom early on, so traceln will get ignored.
rb_scenariosPrivateUI.setValue(2, false);


//Scenario code here


//Reset button to current, due to sliders putting it on custom
rb_scenariosPrivateUI.setValue(0, false);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724859526080</Id>
					<Name><![CDATA[f_setSelectedGC]]></Name>
					<Description><![CDATA[Function that sets the sliders to match the currently present settings of the energy assets owned by the selected GC. Used when a connection owner has multiple grid connections, and wants to set the sliders of a different GC. ]]></Description>
					<X>-360</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Initialize slider presets to selected GC (min, max, etc.)
//f_setSliderPresets();

]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1717506309867</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1717506328385</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Interface]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1717506309821</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1725003123558</Id>
					<Name><![CDATA[rect_canvas]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_colorH2_blue]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1920</Width>
					<Height>980</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_colorH2_white]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1724944453528</Id>
					<Name><![CDATA[rect_scenarios]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_colorH2_blue]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>170</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_colorH2_white]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
    			<TimePlot>
					<Id>1717506309825</Id>
					<Name><![CDATA[plot]]></Name>
					<X>400</X><Y>280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709625600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>540</Width>
					<Height>400</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>460</Width>
						<Height>310</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>		
					<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<SamplesToKeep>100</SamplesToKeep>
					<TimeWindowExpression><![CDATA[100]]></TimeWindowExpression>
					<FillAreaUnderLine>false</FillAreaUnderLine>
					<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
    			</TimePlot>
				<Rectangle>
					<Id>1717506309827</Id>
					<Name><![CDATA[rect_sliders]]></Name>
					<X>0</X><Y>170</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineColorCode><![CDATA[v_colorH2_blue]]></LineColorCode>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>810</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillColorCode><![CDATA[v_colorH2_white]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1717506309829</Id>
					<Name><![CDATA[txt_electrolyserSliders]]></Name>
					<X>70</X><Y>200</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electrolyser]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1717506309831</Id>
					<Name><![CDATA[gr_buttonH2Electrolyser]]></Name>
					<X>41</X><Y>211</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1717506309833</Id>
					<Name><![CDATA[ovalElectrolyserButton]]></Name>
					<X>-1</X><Y>-1</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-14774017</FillColor>
					<FillColorCode><![CDATA[v_colorH2_blue]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1717506309835</Id>
					<Name><![CDATA[txt_h21]]></Name>
					<X>-10</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-1</Color>
					<Text><![CDATA[H2]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1717506309837</Id>
					<Name><![CDATA[gr_electricityPriceSlider]]></Name>
					<X>190</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1717506309839</Id>
					<Name><![CDATA[txt_electricityPriceLimit]]></Name>
					<X>-170</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electriciteits prijs limiet]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1717506309841</Id>
					<Name><![CDATA[sl_electrolyserElectricityPriceLimit]]></Name>
					<X>62</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Adjust the maximum price of electricity used to produce hydrogen
((GCEnergyConversion)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).v_electricityPriceMaxForProfit_eurpkWh = sl_electrolyserElectricityPriceLimit.getValue();

//Set text accordingly
t_electricityPriceLimit.setText( "€" + sl_electrolyserElectricityPriceLimit.getValue());


//Set scenario to custom
f_setScenario(2);
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_sliderStartValue_priceLimit]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[0.5]]></MaxValue>
						<Step><![CDATA[0.01]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1717506309843</Id>
					<Name><![CDATA[t_electricityPriceLimit]]></Name>
					<X>40</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[ €0.00]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1717506309845</Id>
					<Name><![CDATA[gr_electrolyserPowerSlider]]></Name>
					<X>190</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1717506309847</Id>
					<Name><![CDATA[txt_powerElectrolyser]]></Name>
					<X>-170</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Vermogen electrolyser]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1717506309849</Id>
					<Name><![CDATA[sl_electrolyserPower]]></Name>
					<X>62</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Adjust the electric capacity
c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).setCapacityElectric_kW(sl_electrolyserPower.getValue()*1000);// Multiplied by 1000, as the energy asset is in kW

//Adjust grid connection capacity as well (if needed)
if(sl_electrolyserPower.getValue()*1000 > 2000){
	((GridConnection)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).p_physicalConnectionCapacity_kW = sl_electrolyserPower.getValue()*1000;
	((GridConnection)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).p_contractedDeliveryCapacity_kW = sl_electrolyserPower.getValue()*1000;
	((GridConnection)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).p_contractedFeedinCapacity_kW = sl_electrolyserPower.getValue()*1000;
}

//Set the text accordingly
t_powerElectrolyser.setText(sl_electrolyserPower.getValue() + " MW");


//Set scenario to custom
f_setScenario(2);
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[10]]></MaxValue>
						<Step><![CDATA[0.1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1717506309851</Id>
					<Name><![CDATA[t_powerElectrolyser]]></Name>
					<X>35</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[1.0 MW]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1717506309853</Id>
					<Name><![CDATA[gr_electrolyserMode]]></Name>
					<X>100</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1717506309855</Id>
					<Name><![CDATA[rb_electrolyserMode]]></Name>
					<X>-80</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="150" Height="50">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[switch (rb_electrolyserMode.getValue()){

	case 0:
		((GCEnergyConversion)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).p_electrolyserOperationMode = OL_ElectrolyserOperationMode.PRICE;
		
		//Set visibility of price slider true and balance slider false
		gr_electricityPriceSlider.setVisible(true);
		gr_electricityBalanceSlider.setVisible(false);
	break;
	
	case 1:
		((GCEnergyConversion)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).p_electrolyserOperationMode = OL_ElectrolyserOperationMode.BALANCE;
		
		//Set visibility of balance slider true and price slider false
		gr_electricityBalanceSlider.setVisible(true);
		gr_electricityPriceSlider.setVisible(false);
	break;
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[Prijs]]></Button>
						<Button><![CDATA[Balans]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1717506309857</Id>
					<Name><![CDATA[txt_electrolyserMode]]></Name>
					<X>-80</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electrolyser modus]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1717506309859</Id>
					<Name><![CDATA[gr_electricityBalanceSlider]]></Name>
					<X>190</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Text>
					<Id>1717506309861</Id>
					<Name><![CDATA[txt_electricityBalanceLimit]]></Name>
					<X>-170</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Electriciteits balans limiet]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1717506309863</Id>
					<Name><![CDATA[sl_electrolyserElectricityBalanceLimit]]></Name>
					<X>62</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[
//Adjust the maximum price of electricity used to produce hydrogen
((GCEnergyConversion)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).v_gridNodeCongestionLimit_kW = sl_electrolyserElectricityBalanceLimit.getValue()*1000;

//Set text accordingly
t_electricityBalanceLimit.setText( sl_electrolyserElectricityBalanceLimit.getValue() + " MW" );

//Set scenario to custom
f_setScenario(2);
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[v_sliderStartValue_balanceLimit]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[v_sliderMinValue_balanceLimit]]></MinValue>
						<MaxValue><![CDATA[v_sliderMaxValue_balanceLimit]]></MaxValue>
						<Step><![CDATA[0.01]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1717506309865</Id>
					<Name><![CDATA[t_electricityBalanceLimit]]></Name>
					<X>50</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0.0 MW]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1724859404444</Id>
					<Name><![CDATA[text5]]></Name>
					<X>-370</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Connections]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724859526068</Id>
					<Name><![CDATA[text7]]></Name>
					<X>-370</X><Y>360</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Set Sliders to Scenario]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724859526070</Id>
					<Name><![CDATA[txt_setSlidersToSelectedGC]]></Name>
					<X>-370</X><Y>310</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Set Sliders to selected GC]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1724859673741</Id>
					<Name><![CDATA[gr_scenarioRB]]></Name>
					<X>130</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1724859673743</Id>
					<Name><![CDATA[rb_scenariosPrivateUI]]></Name>
					<X>-100</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="180" Height="120">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setScenario(rb_scenariosPrivateUI.getValue());]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="14" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[Huidig - 2023]]></Button>
						<Button><![CDATA[Toekomstplannen]]></Button>
						<Button><![CDATA[Custom]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1724859673745</Id>
					<Name><![CDATA[text187]]></Name>
					<X>-100</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Selecteer een scenario]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>20</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1724943713523</Id>
					<Name><![CDATA[txt_hydrogenAssets]]></Name>
					<X>-370</X><Y>210</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Hydrogen assets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724944232372</Id>
					<Name><![CDATA[txt_h2storageSliders]]></Name>
					<X>72</X><Y>513</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Waterstof opslag]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1724944232376</Id>
					<Name><![CDATA[gr_buttonH2Storage]]></Name>
					<X>43</X><Y>524</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1724944232378</Id>
					<Name><![CDATA[ovalH2StorageButton]]></Name>
					<X>-1</X><Y>-1</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-14774017</FillColor>
					<FillColorCode><![CDATA[v_colorH2_blue]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1724944232380</Id>
					<Name><![CDATA[txt_h22]]></Name>
					<X>-10</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-1</Color>
					<Text><![CDATA[H2]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1724944302875</Id>
					<Name><![CDATA[txt_fuelCellSliders]]></Name>
					<X>69</X><Y>739</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fuelcell]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>22</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1724944302879</Id>
					<Name><![CDATA[gr_buttonH2FuelCell]]></Name>
					<X>40</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1724944302881</Id>
					<Name><![CDATA[ovalH2StorageButton1]]></Name>
					<X>-1</X><Y>-1</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-14774017</FillColor>
					<FillColorCode><![CDATA[v_colorH2_blue]]></FillColorCode>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1724944302883</Id>
					<Name><![CDATA[txt_h23]]></Name>
					<X>-10</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-1</Color>
					<Text><![CDATA[H2]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1724947265014</Id>
					<Name><![CDATA[text]]></Name>
					<X>-370</X><Y>480</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Current selected assets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1725003108502</Id>
					<Name><![CDATA[txt_hydrogenControlRoom]]></Name>
					<X>770</X><Y>70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<ColorCode><![CDATA[v_colorH2_blue]]></ColorCode>
					<Text><![CDATA[Hydrogen Controlroom]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>72</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1725002833718</Id>
					<Name><![CDATA[va_hydrogenUI]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[Hydrogen UI]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1722245292185</Id>
			<Name><![CDATA[UI_Tabs]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1722245292191</Id>
				<Name><![CDATA[1722245292191]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1722245292188</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1722245292192</CurrentLevel>
			<ConnectionsId>1722245292186</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1722245555993</Id>
					<Name><![CDATA[v_selectedTabType]]></Name>
					<X>250</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[EnergyDemandTab]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[ELECTRICITY]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722245473562</Id>
					<Name><![CDATA[f_showCorrectTab]]></Name>
					<X>250</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[pop_tabElectricity_presentation.setVisible(false);
pop_tabHeating_presentation.setVisible(false);
pop_tabMobility_presentation.setVisible(false);
pop_tabEHub_presentation.setVisible(false);

switch (v_selectedTabType) {
	case ELECTRICITY:
		pop_tabElectricity_presentation.setVisible(true);
		break;
	case HEAT:
		pop_tabHeating_presentation.setVisible(true);
		break;
	case MOBILITY:
		pop_tabMobility_presentation.setVisible(true);
		break;
	case HUB:
	case NFATO:
		pop_tabEHub_presentation.setVisible(true);
		//tabEHub.f_setTab();
		break;
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722259092945</Id>
					<Name><![CDATA[f_setTab]]></Name>
					<X>250</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[tab]]></Name>
						<Type><![CDATA[EnergyDemandTab]]></Type>
					</Parameter>
					<Body><![CDATA[v_selectedTabType = tab;
f_showCorrectTab();
]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1722245292186</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1722252542602</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Interface]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>
			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1722245482640</Id>
					<Name><![CDATA[pop_tabMobility]]></Name>
					<X>50</X><Y>80</Y>
					<Label><X>10</X><Y>2</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1722246229996</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[tabMobility]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[tabMobility]]></ClassName>
							<ItemName><![CDATA[1722245324901]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1722249956639</Id>
					<Name><![CDATA[pop_tabElectricity]]></Name>
					<X>50</X><Y>35</Y>
					<Label><X>10</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1722249987797</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[tabElectricity]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[tabElectricity]]></ClassName>
							<ItemName><![CDATA[1722247653567]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_nbChargersInDatabase]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_minPublicChargerSlider]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_minPVHouseholdSlider]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1722253113248</Id>
					<Name><![CDATA[pop_tabHeating]]></Name>
					<X>50</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1722255804160</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[tabHeating]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[tabHeating]]></ClassName>
							<ItemName><![CDATA[1722253108631]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1722253478328</Id>
					<Name><![CDATA[pop_tabEHub]]></Name>
					<X>50</X><Y>105</Y>
					<Label><X>10</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1722255810189</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[tabEHub]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[tabEHub]]></ClassName>
							<ItemName><![CDATA[1722253463901]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1722245292192</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Group>
					<Id>1722248369298</Id>
					<Name><![CDATA[g_energyDemandSettings]]></Name>
					<X>200</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Group>
					<Id>1722248369300</Id>
					<Name><![CDATA[gr_electricityButton]]></Name>
					<X>-125</X><Y>-25</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[v_selectedTabType = EnergyDemandTab.ELECTRICITY;
f_showCorrectTab();]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1722248369302</Id>
					<Name><![CDATA[ovalElectricityButton]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-657931</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-32</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Image>
					<Id>1722248369304</Id>
					<Name><![CDATA[image3]]></Name>
					<X>-14</X><Y>-12</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>28</Width>
					<Height>24</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[noun-electricity-3408805.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
				<Group>
					<Id>1722248369306</Id>
					<Name><![CDATA[gr_heatButton]]></Name>
					<X>-40</X><Y>-25</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[v_selectedTabType = EnergyDemandTab.HEAT;
f_showCorrectTab();]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1722248369308</Id>
					<Name><![CDATA[ovalHeatButton]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-657931</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-6943</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Image>
					<Id>1722248369310</Id>
					<Name><![CDATA[image10]]></Name>
					<X>-14</X><Y>-12</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>28</Width>
					<Height>24</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[noun-fire-2429630.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
				<Group>
					<Id>1722248369312</Id>
					<Name><![CDATA[gr_mobilityButton]]></Name>
					<X>45</X><Y>-25</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[v_selectedTabType = EnergyDemandTab.MOBILITY;
f_showCorrectTab();]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1722248369314</Id>
					<Name><![CDATA[ovalTransportButton]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-657931</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-2625550</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Image>
					<Id>1722248369316</Id>
					<Name><![CDATA[image15]]></Name>
					<X>-14</X><Y>-12</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>28</Width>
					<Height>24</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[noun-car-1777731.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

				</Group>
				<Group>
					<Id>1722248369318</Id>
					<Name><![CDATA[gr_eHubButton]]></Name>
					<X>130</X><Y>-25</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[v_selectedTabType = EnergyDemandTab.HUB;
f_showCorrectTab();]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Oval>
					<Id>1722248369320</Id>
					<Name><![CDATA[ovalHubButton]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-657931</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>20</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-3736634</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Line>
					<Id>1722248369322</Id>
					<Name><![CDATA[line]]></Name>
					<X>-10</X><Y>-7</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1.5</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>20</Dx>
					<Dy>-2</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1722248369324</Id>
					<Name><![CDATA[line1]]></Name>
					<X>-6</X><Y>6</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1.5</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>16</Dx>
					<Dy>-15</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1722248369326</Id>
					<Name><![CDATA[line2]]></Name>
					<X>-10</X><Y>-4</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1.5</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>18</Dx>
					<Dy>15</Dy>
					<Dz>0</Dz>
				</Line>
				<Oval>
					<Id>1722248369328</Id>
					<Name><![CDATA[oval]]></Name>
					<X>-11</X><Y>-6</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>3</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-657931</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Oval>
					<Id>1722248369330</Id>
					<Name><![CDATA[oval1]]></Name>
					<X>-8</X><Y>8</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>3</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-657931</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Line>
					<Id>1722248369332</Id>
					<Name><![CDATA[line3]]></Name>
					<X>8</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>1</Dx>
					<Dy>-17</Dy>
					<Dz>0</Dz>
				</Line>
				<Oval>
					<Id>1722248369334</Id>
					<Name><![CDATA[oval4]]></Name>
					<X>8</X><Y>10</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>3</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-657931</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Oval>
					<Id>1722248369336</Id>
					<Name><![CDATA[oval3]]></Name>
					<X>10</X><Y>-9</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>3</RadiusX>
					<RadiusY>40</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-657931</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
			</Presentation>

				</Group>
				<Text>
					<Id>1722248369338</Id>
					<Name><![CDATA[t_electricityButtonDescription]]></Name>
					<X>-125</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elektriciteit]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722248369340</Id>
					<Name><![CDATA[t_heatButtonDescription]]></Name>
					<X>-40</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Warmte]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722248369342</Id>
					<Name><![CDATA[t_mobilityButtonDescription]]></Name>
					<X>45</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Transport]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722248369344</Id>
					<Name><![CDATA[t_eHubButtonDescription]]></Name>
					<X>130</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[E-hub]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<EmbeddedObjectPresentation>
					<Id>1722246229996</Id>
					<Name><![CDATA[pop_tabMobility_presentation]]></Name>
					<X>15</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>0.0</Latitude>
					<Longitude>0.0</Longitude>
				</EmbeddedObjectPresentation>
				<EmbeddedObjectPresentation>
					<Id>1722249987797</Id>
					<Name><![CDATA[pop_tabElectricity_presentation]]></Name>
					<X>15</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>0.0</Latitude>
					<Longitude>0.0</Longitude>
				</EmbeddedObjectPresentation>
				<EmbeddedObjectPresentation>
					<Id>1722255804160</Id>
					<Name><![CDATA[pop_tabHeating_presentation]]></Name>
					<X>15</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>0.0</Latitude>
					<Longitude>0.0</Longitude>
				</EmbeddedObjectPresentation>
				<EmbeddedObjectPresentation>
					<Id>1722255810189</Id>
					<Name><![CDATA[pop_tabEHub_presentation]]></Name>
					<X>15</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>0.0</Latitude>
					<Longitude>0.0</Longitude>
				</EmbeddedObjectPresentation>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1722245324895</Id>
			<Name><![CDATA[tabMobility]]></Name>
			<AdditionalClassCode><![CDATA[// Default Sliders
public ShapeGroup getGroupMobilityDemandSliders() {
	return this.gr_mobilityDemandSliders;
}

public ShapeSlider getSliderMobilityDemandReduction_pct () {
	return this.sl_mobilityDemandReduction_pct;
}

public ShapeSlider getSliderElectricTrucks_pct() {
	return this.sl_electricTrucks_pct;
}

public ShapeSlider getSliderHydrogenTrucks_pct() {
	return this.sl_hydrogenTrucks_pct;
}

public ShapeSlider getSliderFossilFuelTrucks_pct() {
	return this.sl_fossilFuelTrucks_pct;
}

public ShapeSlider getSliderElectricVans_pct() {
	return this.sl_electricVans_pct;
}

public ShapeSlider getSliderFossilFuelVans_pct() {
	return this.sl_fossilFuelVans_pct;
}

public ShapeSlider getSliderElectricCars_pct() {
	return this.sl_electricCars_pct;
}

public ShapeSlider getSliderFossilFuelCars_pct() {
	return this.sl_fossilFuelCars_pct;
}

]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
				<ClassName><![CDATA[tabArea]]></ClassName>
			</ExtendsReference>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1722245324901</Id>
				<Name><![CDATA[1722245324901]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1722245324898</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1722245324902</CurrentLevel>
			<ConnectionsId>1722245324896</ConnectionsId>
			<Functions>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256088432</Id>
					<Name><![CDATA[f_setElectricTrucks]]></Name>
					<Description><![CDATA[Function that adds or removes electric trucks to gridconnections. Takes a percentage as a parameter and runs untill that percentage of all the trucks is an electric truck. If a new electric truck is created it gets its characteristics from the AVGC data and keeps the triptracker from the fossil truck. The function also updates the sliders in the company UI.]]></Description>
					<X>70</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[pctElectricTrucksGoal]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[int nbEtruckCurrent = count(zero_Interface.energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK);
int nbDieseltrucksCurrent = count(zero_Interface.energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK);
int nbElectricTrucksGoal = (int) ((nbEtruckCurrent + nbDieseltrucksCurrent)*pctElectricTrucksGoal/100.0);
//traceln("%s diesel trucks and %s eTrucks found", nbDieseltrucksCurrent, nbEtruckCurrent);


if( nbEtruckCurrent > nbElectricTrucksGoal){
	while ( nbEtruckCurrent > nbElectricTrucksGoal && nbEtruckCurrent > 0) { // remove excess EVs systems !!!! Should also add diesel vehicle again!
		J_EAEV ev = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK );
		if (ev!=null) {
			//traceln("Found eTrucks: " + ev);
			GridConnection gc = (GridConnection)ev.getParentAgent();
			
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				int nbGCElectricTrucks = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK);
				int nbGCDieselTrucks = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK);
				if (companyUI.v_minEVTruckSlider >= nbGCElectricTrucks) {
					traceln("Removed already existing Electric Truck");
				}
				else {
					companyUI.sl_electricTrucksCompany.setValue(nbGCElectricTrucks-1, false);
					companyUI.t_numberOfElectricTrucksCompany.setText(nbGCElectricTrucks-1);
					companyUI.v_nbEVTrucks--;
					companyUI.sl_dieselTrucksCompany.setValue(nbGCDieselTrucks+1, false);
					companyUI.t_numberOfDieselTrucksCompany.setText(nbGCDieselTrucks+1);
					companyUI.v_nbDieselTrucks++;
				}
			//}
		
			J_ActivityTrackerTrips tripTracker = ev.tripTracker;
			boolean available = true;
			//h.c_storageAssets.remove(EA);
			available = ev.getAvailability();
			zero_Interface.c_orderedVehicles.remove(ev);
			ev.removeEnergyAsset();
			//traceln("Removing EV from gridConnection:" + GC.p_gridConnectionID);
		
			// Re-add diesel vehicle
			double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionTruck_kWhpkm;//g.required( "energyConsumption_kWhpkm" ).doubleValue();
			double vehicleScaling = 1.0;//g.hasNonNull("vehicleScaling")? g.required("vehicleScaling").doubleValue() : 1.0;		
			J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.DIESEL_TRUCK, tripTracker);
			dieselVehicle.available = available;
			
			zero_Interface.c_orderedVehicles.add(0, dieselVehicle);
			
			nbEtruckCurrent--; // = count(energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK);
			nbDieseltrucksCurrent++; // = count(energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK);
		}
	} 
} else { 
	while ( nbEtruckCurrent < nbElectricTrucksGoal && nbDieseltrucksCurrent > 0) {
		// Remove diesel vehicle
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK );
		//traceln("Found diesel vehicle: " + dieselVehicle);
		if (dieselVehicle!=null) {
			GridConnection gc = (GridConnection)dieselVehicle.getParentAgent();
			
			
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				int nbGCElectricTrucks = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK);
				int nbGCDieselTrucks = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK);
				companyUI.sl_electricTrucksCompany.setValue(nbGCElectricTrucks+1, false);
				companyUI.t_numberOfElectricTrucksCompany.setText(nbGCElectricTrucks+1);	
				companyUI.v_nbEVTrucks++;
				companyUI.sl_dieselTrucksCompany.setValue(nbGCDieselTrucks-1, false);
				companyUI.t_numberOfDieselTrucksCompany.setText(nbGCDieselTrucks-1);
				companyUI.v_nbDieselTrucks--;
			//}
			
			J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;
			boolean available = true;
			//h.c_consumptionAssets.remove(dieselVehicle);
			available = dieselVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(dieselVehicle);
			dieselVehicle.removeEnergyAsset();
			//traceln("Removing household DIESEL VEHICLE from household:" + GC.p_gridConnectionID);
	
			// Re-add EV
			//EnergyAsset storageAsset = add_pop_energyAssets();
			//storageAsset.set_p_parentAgentID( h.p_gridConnectionID );
			//storageAsset.set_p_energyAssetType( OL_EnergyAssetType.valueOf(t.required( "type" ).textValue() ));
			//storageAsset.set_p_defaultEnergyAssetPresetName( t.required( "name" ).textValue());
	
			double capacityElectric_kW = zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerTruck_kW;//t.required( "capacityElectricity_kW").doubleValue();
			double storageCapacity_kWh = zero_Interface.energyModel.avgc_data.p_avgEVStorageTruck_kWh;//t.required( "storageCapacity_kWh" ).doubleValue();
			double initialStateOfCharge_r = 1.0;//t.required( "stateOfCharge_r" ).doubleValue();
			double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionTruck_kWhpkm;//t.required( "energyConsumption_kWhpkm" ).doubleValue();
			double vehicleScalingElectric = 1.0;//t.hasNonNull("vehicleScaling")? t.required("vehicleScaling").doubleValue() : 1.0;
			J_EAEV ev = new J_EAEV(gc, capacityElectric_kW, storageCapacity_kWh, initialStateOfCharge_r, zero_Interface.energyModel.p_timeStep_h, energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_TRUCK, tripTracker);  
			//ev.energyAssetType = OL_EnergyAssetType.ELECTRIC_TRUCK;
			ev.available = available;
			
			zero_Interface.c_orderedVehicles.add(0, ev);	
			
			nbEtruckCurrent++; // = count(energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK);
			nbDieseltrucksCurrent--; // = count(energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK);
		}
	}
	
}	

traceln("%s diesel trucks and %s eTrucks: ", nbDieseltrucksCurrent, nbEtruckCurrent);
zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256088443</Id>
					<Name><![CDATA[f_setVehicleSliders]]></Name>
					<Description><![CDATA[Function that calculates the values of the other sliders and sets them without calling an action. Takes as parameters the index of the slider which should not be touched as well as all the slider objects. HydrogenVehicle slider is optional and an argument of null can be passed. ]]></Description>
					<X>70</X><Y>740</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[sliderIndex]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[electricSlider]]></Name>
						<Type><![CDATA[ShapeSlider]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[hydrogenSlider]]></Name>
						<Type><![CDATA[ShapeSlider]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[fossilFuelSlider]]></Name>
						<Type><![CDATA[ShapeSlider]]></Type>
					</Parameter>
					<Body><![CDATA[double pct_electric = electricSlider.getValue();
double pct_fossilFuel = fossilFuelSlider.getValue();
double pct_hydrogen = 0;

if (hydrogenSlider != null) {
	pct_hydrogen = hydrogenSlider.getValue();
}

//Set array with pct values
double pctArray[]={pct_electric, pct_fossilFuel, pct_hydrogen};
double pctExcess = Arrays.stream(pctArray).sum() - 100;
for (int i = 0; i<pctArray.length; i++){
	if (!(i==(int)sliderIndex)) {
		pctArray[i] = max(0,pctArray[i] - pctExcess);
		pctExcess = Arrays.stream(pctArray).sum() - 100;
	}
}
if (pctExcess != 0) {
	traceln("Sliders don't add up to 100%!");
}

//Set Sliders
electricSlider.setValue(pctArray[0], false);
fossilFuelSlider.setValue(pctArray[1], false);
if (hydrogenSlider != null) {
	hydrogenSlider.setValue(pctArray[2], false);
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256088451</Id>
					<Name><![CDATA[f_setElectricVans]]></Name>
					<Description><![CDATA[Function that adds or removes electric vans to gridconnections. Takes a percentage as a parameter and runs untill that percentage of all the vans is an electric van. If a new electric van is created it gets its characteristics from the AVGC data and keeps the triptracker from the fossil van. The function also updates the sliders in the company UI.]]></Description>
					<X>70</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[pctElectricVansGoal]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[int nbEVansCurrent = count(zero_Interface.energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN);
int nbDieselVansCurrent = count(zero_Interface.energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN);
int nbElectricVansGoal = (int) ((nbEVansCurrent + nbDieselVansCurrent)*pctElectricVansGoal/100.0);


if( nbEVansCurrent > nbElectricVansGoal){
	while ( nbEVansCurrent > nbElectricVansGoal && nbEVansCurrent > 0) { // remove excess EVs systems !!!! Should also add diesel vehicle again!
		J_EAEV ev = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN );
		if (ev!=null) {
			//traceln("Found eTrucks: " + ev);
			GridConnection gc = (GridConnection)ev.getParentAgent();
			
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				int nbGCElectricVans = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN);
				int nbGCDieselVans = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN);
				if (companyUI.v_minEVVanSlider >= nbGCElectricVans) {
					traceln("Removed already existing Electric Van");
				}
				else {
					companyUI.sl_electricVansCompany.setValue(nbGCElectricVans-1, false);
					companyUI.t_numberOfElectricVansCompany.setText(nbGCElectricVans-1);
					companyUI.v_nbEVVans--;
					companyUI.sl_dieselVansCompany.setValue(nbGCDieselVans+1, false);
					companyUI.t_numberOfDieselVansCompany.setText(nbGCDieselVans+1);
					companyUI.v_nbDieselVans++;
				}
			//}
		
			J_ActivityTrackerTrips tripTracker = ev.tripTracker;
			boolean available = true;
			//h.c_storageAssets.remove(EA);
			available = ev.getAvailability();
			zero_Interface.c_orderedVehicles.remove(ev);
			ev.removeEnergyAsset();
			//traceln("Removing EV from gridConnection:" + GC.p_gridConnectionID);
		
			// Re-add diesel vehicle
			double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionVan_kWhpkm;//g.required( "energyConsumption_kWhpkm" ).doubleValue();
			double vehicleScaling = 1.0;//g.hasNonNull("vehicleScaling")? g.required("vehicleScaling").doubleValue() : 1.0;		
			J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.DIESEL_VAN, tripTracker);
			dieselVehicle.available = available;
			
			zero_Interface.c_orderedVehicles.add(0, dieselVehicle);
			
			nbEVansCurrent--;
			nbDieselVansCurrent++;
		}
	} 
} else { 
	while ( nbEVansCurrent < nbElectricVansGoal && nbDieselVansCurrent > 0) {
		// Remove diesel vehicle
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN );
		//traceln("Found diesel vehicle: " + dieselVehicle);
		if (dieselVehicle!=null) {
			GridConnection gc = (GridConnection)dieselVehicle.getParentAgent();
			
			
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				int nbGCElectricVans = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN);
				int nbGCDieselVans = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN);
				companyUI.sl_electricVansCompany.setValue(nbGCElectricVans+1, false);
				companyUI.t_numberOfElectricVansCompany.setText(nbGCElectricVans+1);	
				companyUI.v_nbEVVans++;
				companyUI.sl_dieselVansCompany.setValue(nbGCDieselVans-1, false);
				companyUI.t_numberOfDieselVansCompany.setText(nbGCDieselVans-1);
				companyUI.v_nbDieselVans--;
			//}
			
			J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;
			boolean available = true;
			//h.c_consumptionAssets.remove(dieselVehicle);
			available = dieselVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(dieselVehicle);
			dieselVehicle.removeEnergyAsset();
			//traceln("Removing household DIESEL VEHICLE from household:" + GC.p_gridConnectionID);
	
			// Re-add EV
			//EnergyAsset storageAsset = add_pop_energyAssets();
			//storageAsset.set_p_parentAgentID( h.p_gridConnectionID );
			//storageAsset.set_p_energyAssetType( OL_EnergyAssetType.valueOf(t.required( "type" ).textValue() ));
			//storageAsset.set_p_defaultEnergyAssetPresetName( t.required( "name" ).textValue());
	
			double capacityElectric_kW = zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerVan_kW;//t.required( "capacityElectricity_kW").doubleValue();
			double storageCapacity_kWh = zero_Interface.energyModel.avgc_data.p_avgEVStorageVan_kWh;//t.required( "storageCapacity_kWh" ).doubleValue();
			double initialStateOfCharge_r = 1.0;//t.required( "stateOfCharge_r" ).doubleValue();
			double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionVan_kWhpkm;//t.required( "energyConsumption_kWhpkm" ).doubleValue();
			double vehicleScalingElectric = 1.0;//t.hasNonNull("vehicleScaling")? t.required("vehicleScaling").doubleValue() : 1.0;
			J_EAEV ev = new J_EAEV(gc, capacityElectric_kW, storageCapacity_kWh, initialStateOfCharge_r, zero_Interface.energyModel.p_timeStep_h, energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_VAN, tripTracker);  
			//ev.energyAssetType = OL_EnergyAssetType.ELECTRIC_TRUCK;
			ev.available = available;
			
			zero_Interface.c_orderedVehicles.add(0, ev);	
			
			nbEVansCurrent++;
			nbDieselVansCurrent--;
		}
	}
	
}	

traceln("%s diesel vans and %s EVans: ", nbDieselVansCurrent, nbEVansCurrent);
zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256088460</Id>
					<Name><![CDATA[f_setElectricCars]]></Name>
					<Description><![CDATA[Function that adds or removes electric cars to gridconnections. Takes a percentage as a parameter and runs untill that percentage of all the cars is an electric car. If a new electric car is created it gets its characteristics from the AVGC data and keeps the triptracker from the fossil car. The function also updates the sliders in the company UI.]]></Description>
					<X>70</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[pctEVsGoal]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[int nbEVsCurrent = count(zero_Interface.energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE);
int nbDieselCarsCurrent = count(zero_Interface.energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE);
int nbEVsGoal = (int) ((nbEVsCurrent + nbDieselCarsCurrent)*pctEVsGoal/100.0);


if( nbEVsCurrent > nbEVsGoal){
	while ( nbEVsCurrent > nbEVsGoal && nbEVsCurrent > 0) { // remove excess EVs systems !!!! Should also add diesel vehicle again!
		J_EAEV ev = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE );
		if (ev!=null) {
			//traceln("Found eTrucks: " + ev);
			GridConnection gc = (GridConnection)ev.getParentAgent();
			
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				int nbGCEVs = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE);
				int nbGCDieselCars = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE);
				if (companyUI.v_minEVCarSlider >= nbGCEVs) {
					traceln("Removed already existing Electric Car");
				}
				else {
					companyUI.sl_electricCarsCompany.setValue(nbGCEVs-1, false);
					companyUI.t_numberOfElectricCarsCompany.setText(nbGCEVs-1);
					companyUI.v_nbEVCars--;
					companyUI.sl_dieselCarsCompany.setValue(nbGCDieselCars+1, false);
					companyUI.t_numberOfDieselCarsCompany.setText(nbGCDieselCars+1);
					companyUI.v_nbDieselCars++;
				}
			//}
		
			J_ActivityTrackerTrips tripTracker = ev.tripTracker;
			boolean available = true;
			//h.c_storageAssets.remove(EA);
			available = ev.getAvailability();
			zero_Interface.c_orderedVehicles.remove(ev);
			ev.removeEnergyAsset();
			//traceln("Removing EV from gridConnection:" + GC.p_gridConnectionID);
		
			// Re-add diesel vehicle
			double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionCar_kWhpkm;//g.required( "energyConsumption_kWhpkm" ).doubleValue();
			double vehicleScaling = 1.0;//g.hasNonNull("vehicleScaling")? g.required("vehicleScaling").doubleValue() : 1.0;		
			J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.DIESEL_VEHICLE, tripTracker);
			dieselVehicle.available = available;
			
			zero_Interface.c_orderedVehicles.add(0, dieselVehicle);
			
			nbEVsCurrent--;
			nbDieselCarsCurrent++;
		}
	} 
} else { 
	while ( nbEVsCurrent < nbEVsGoal && nbDieselCarsCurrent > 0) {
		// Remove diesel vehicle
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE );
		//traceln("Found diesel vehicle: " + dieselVehicle);
		if (dieselVehicle!=null) {
			GridConnection gc = (GridConnection)dieselVehicle.getParentAgent();
			
			
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				int nbGCEVs = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE);
				int nbGCDieselCars = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE);
				companyUI.sl_electricCarsCompany.setValue(nbGCEVs+1, false);
				companyUI.t_numberOfElectricCarsCompany.setText(nbGCEVs+1);	
				companyUI.v_nbEVCars++;
				companyUI.sl_dieselCarsCompany.setValue(nbGCDieselCars-1, false);
				companyUI.t_numberOfDieselCarsCompany.setText(nbGCDieselCars-1);
				companyUI.v_nbDieselCars--;
			//}
			
			J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;
			boolean available = true;
			//h.c_consumptionAssets.remove(dieselVehicle);
			available = dieselVehicle.getAvailability();
			zero_Interface.c_orderedVehicles.remove(dieselVehicle);
			dieselVehicle.removeEnergyAsset();
			//traceln("Removing household DIESEL VEHICLE from household:" + GC.p_gridConnectionID);
	
			// Re-add EV
			//EnergyAsset storageAsset = add_pop_energyAssets();
			//storageAsset.set_p_parentAgentID( h.p_gridConnectionID );
			//storageAsset.set_p_energyAssetType( OL_EnergyAssetType.valueOf(t.required( "type" ).textValue() ));
			//storageAsset.set_p_defaultEnergyAssetPresetName( t.required( "name" ).textValue());
	
			double capacityElectric_kW = zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerCar_kW;//t.required( "capacityElectricity_kW").doubleValue();
			double storageCapacity_kWh = zero_Interface.energyModel.avgc_data.p_avgEVStorageCar_kWh;//t.required( "storageCapacity_kWh" ).doubleValue();
			double initialStateOfCharge_r = 1.0;//t.required( "stateOfCharge_r" ).doubleValue();
			double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;//t.required( "energyConsumption_kWhpkm" ).doubleValue();
			double vehicleScalingElectric = 1.0;//t.hasNonNull("vehicleScaling")? t.required("vehicleScaling").doubleValue() : 1.0;
			J_EAEV ev = new J_EAEV(gc, capacityElectric_kW, storageCapacity_kWh, initialStateOfCharge_r, zero_Interface.energyModel.p_timeStep_h, energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_VEHICLE, tripTracker);  
			//ev.energyAssetType = OL_EnergyAssetType.ELECTRIC_TRUCK;
			ev.available = available;
			
			zero_Interface.c_orderedVehicles.add(0, ev);	
			
			nbEVsCurrent++;
			nbDieselCarsCurrent--;
		}
	}
	
}	

traceln("%s diesel cars and %s EVs: ", nbDieselCarsCurrent, nbEVsCurrent);
zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722342449665</Id>
					<Name><![CDATA[f_setDemandReduction]]></Name>
					<Description><![CDATA[Function that reduces the distance of all triptrackers. Takes as an argument a percentage to reduce by compared to the default distance value of the triptrackers.]]></Description>
					<X>70</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[demandReduction_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// TODO: when new triptrackers are created, for example in the company ui sliders,
// make sure they have this distance scaling fraction!

double mobilityDemandReduction_pct = demandReduction_pct;

for (J_EA j_ea : zero_Interface.energyModel.f_getEnergyAssets()) {
	if (j_ea instanceof J_EAVehicle) {
		((J_EAVehicle)j_ea).getTripTracker().distanceScaling_fr =  1 - mobilityDemandReduction_pct/100.0;
	}
}

zero_Interface.f_resetSettings();]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1722245324896</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1722245483166</Id>
					<Name><![CDATA[uI_Tabs]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[UI_Tabs]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
				<ContainerLink>
					<Id>1722252542608</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>150</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Interface]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1722245324902</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1722350199532</Id>
					<Name><![CDATA[rect_genericFunctions]]></Name>
					<X>10</X><Y>470</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>470</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722350199535</Id>
					<Name><![CDATA[t_genericFunctions]]></Name>
					<X>100</X><Y>490</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Generic Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>22</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1722247567090</Id>
					<Name><![CDATA[gr_mobilityDemandSliders]]></Name>
					<X>185</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1722247567092</Id>
					<Name><![CDATA[rect_mobilityDemandSliders]]></Name>
					<X>-185</X><Y>-175</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>DOTTED</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-2625550</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722247567094</Id>
					<Name><![CDATA[sl_fossilFuelCars_pct]]></Name>
					<X>75</X><Y>120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[sl_electricCars_pct.setValue(100 - sl_fossilFuelCars_pct.getIntValue(), false);
f_setElectricCars( sl_electricCars_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722247567096</Id>
					<Name><![CDATA[sl_electricTrucks_pct]]></Name>
					<X>75</X><Y>-90</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setVehicleSliders( 0, sl_electricTrucks_pct, null, sl_fossilFuelTrucks_pct );
f_setElectricTrucks( sl_electricTrucks_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722247567098</Id>
					<Name><![CDATA[t_fossilFuelCars_pct]]></Name>
					<X>45</X><Y>125</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_fossilFuelCars_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722247567100</Id>
					<Name><![CDATA[t_fossilFuelCarsDescription]]></Name>
					<X>-165</X><Y>125</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fossiele brandstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722247567102</Id>
					<Name><![CDATA[t_electricTrucksDescription]]></Name>
					<X>-170</X><Y>-85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elektrisch]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722247567104</Id>
					<Name><![CDATA[t_electricTrucks_pct]]></Name>
					<X>45</X><Y>-85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_electricTrucks_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722247567106</Id>
					<Name><![CDATA[t_mobilityDemandReductionDescription]]></Name>
					<X>-175</X><Y>-155</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Krimp transportbewegingen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722247567108</Id>
					<Name><![CDATA[sl_mobilityDemandReduction_pct]]></Name>
					<X>75</X><Y>-160</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setDemandReduction( sl_mobilityDemandReduction_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722247567110</Id>
					<Name><![CDATA[t_mobilityDemandReduction_pct]]></Name>
					<X>45</X><Y>-155</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_mobilityDemandReduction_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722247567112</Id>
					<Name><![CDATA[sl_hydrogenTrucks_pct]]></Name>
					<X>75</X><Y>-65</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>false</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722247567114</Id>
					<Name><![CDATA[t_hydrogenTrucksDescription]]></Name>
					<X>-170</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Waterstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722247567116</Id>
					<Name><![CDATA[t_hydrogenTrucks_pct]]></Name>
					<X>45</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_hydrogenTrucks_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722247567118</Id>
					<Name><![CDATA[sl_fossilFuelTrucks_pct]]></Name>
					<X>75</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setVehicleSliders( 2, sl_electricTrucks_pct, null, sl_fossilFuelTrucks_pct );
f_setElectricTrucks(sl_electricTrucks_pct.getValue());]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722247567120</Id>
					<Name><![CDATA[t_fossilFuelTrucksDescription]]></Name>
					<X>-170</X><Y>-35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fossiele brandstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722247567122</Id>
					<Name><![CDATA[t_fossilFuelTrucks_pct]]></Name>
					<X>45</X><Y>-35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_fossilFuelTrucks_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722247567124</Id>
					<Name><![CDATA[t_trucksDescription]]></Name>
					<X>-170</X><Y>-110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Vrachtwagens]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722247567126</Id>
					<Name><![CDATA[sl_electricCars_pct]]></Name>
					<X>75</X><Y>95</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[sl_fossilFuelCars_pct.setValue(100 - sl_electricCars_pct.getIntValue(), false);
f_setElectricCars( sl_electricCars_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722247567128</Id>
					<Name><![CDATA[t_electricCarsDescription]]></Name>
					<X>-165</X><Y>100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elektrisch]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722247567130</Id>
					<Name><![CDATA[t_electricCars_pct]]></Name>
					<X>45</X><Y>100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_electricCars_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722247567132</Id>
					<Name><![CDATA[t_carsDescription]]></Name>
					<X>-170</X><Y>75</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Auto's]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722247567134</Id>
					<Name><![CDATA[sl_fossilFuelVans_pct]]></Name>
					<X>75</X><Y>40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[sl_electricVans_pct.setValue(100 - sl_fossilFuelVans_pct.getIntValue(), false);
f_setElectricVans( sl_electricVans_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722247567136</Id>
					<Name><![CDATA[t_fossilFuelVans_pct]]></Name>
					<X>45</X><Y>45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_fossilFuelVans_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722247567138</Id>
					<Name><![CDATA[t_fossilFuelVansDescription]]></Name>
					<X>-170</X><Y>45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fossiele brandstof]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722247567140</Id>
					<Name><![CDATA[sl_electricVans_pct]]></Name>
					<X>75</X><Y>15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[sl_fossilFuelVans_pct.setValue(100 - sl_electricVans_pct.getIntValue(), false);
f_setElectricVans( sl_electricVans_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722247567142</Id>
					<Name><![CDATA[t_electricVansDescription]]></Name>
					<X>-170</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elektrisch]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722247567144</Id>
					<Name><![CDATA[t_electricVans_pct]]></Name>
					<X>45</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_electricVans_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722247567146</Id>
					<Name><![CDATA[t_vansDescription]]></Name>
					<X>-170</X><Y>-5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Busjes]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Rectangle>
					<Id>1722342418259</Id>
					<Name><![CDATA[rect_demandFunctions]]></Name>
					<X>50</X><Y>550</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-8355840</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722342418261</Id>
					<Name><![CDATA[t_demandFunctionsDescription]]></Name>
					<X>200</X><Y>560</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Demand Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Rectangle>
					<Id>1722342719680</Id>
					<Name><![CDATA[rect_mobilityFunctions]]></Name>
					<X>50</X><Y>690</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-5952982</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>150</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722342719682</Id>
					<Name><![CDATA[t_mobilityFunctionsDescription]]></Name>
					<X>200</X><Y>700</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Mobility Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1722247653561</Id>
			<Name><![CDATA[tabElectricity]]></Name>
			<AdditionalClassCode><![CDATA[// Default Sliders
public ShapeGroup getGroupElectricityDemandSliders() {
	return this.gr_electricityDemandSliders;
}

public ShapeSlider getSliderElectricityDemandReduction_pct() {
	return this.sl_electricityDemandReduction_pct;
}

public ShapeSlider getSliderRooftopPVCompanies_pct(){
	return this.sl_rooftopPVCompanies_pct;
}

public ShapeSlider getSliderLargeScalePV_ha(){
	return this.sl_largeScalePV_ha;
}

public ShapeSlider getSliderRooftopPVHouses_pct(){
	return this.sl_rooftopPVHouses_pct;
}

public ShapeSlider getWindSlider(){
	return this.sl_largeScaleWind_MW;
}
]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
				<ClassName><![CDATA[tabArea]]></ClassName>
			</ExtendsReference>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1722247653567</Id>
				<Name><![CDATA[1722247653567]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1722247653564</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1722247653568</CurrentLevel>
			<ConnectionsId>1722247653562</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1722258588313</Id>
					<Name><![CDATA[v_electricityDemandReduction_pct]]></Name>
					<X>80</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722258596992</Id>
					<Name><![CDATA[v_previousPVOnLand_ha]]></Name>
					<X>90</X><Y>840</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722258980135</Id>
					<Name><![CDATA[v_currentNbChargers]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>450</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1722259487682</Id>
					<Name><![CDATA[p_nbChargersInDatabase]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>448</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1722259487680</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1722259487696</Id>
					<Name><![CDATA[p_minPublicChargerSlider]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>428</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1722259487694</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1722259487705</Id>
					<Name><![CDATA[p_minPVHouseholdSlider]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>428</X><Y>640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1722259487703</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256095319</Id>
					<Name><![CDATA[f_setPVSystemCompanies]]></Name>
					<Description><![CDATA[Function that adds or removes photovoltaic production assets to utility connections. Takes a percentage as a parameter and runs untill that percentage of all the utility connections has a PV asset. If a new asset is created it determines its electric capacity by the total roof area of all the buildings connected to the GC. The function also updates the PV slider in the company UI. The variables for amount of installed PV are updated automatically in the zero_engine.]]></Description>
					<X>70</X><Y>760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[PV_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double PVsystems = count(zero_Interface.energyModel.UtilityConnections, x->x.v_hasPV == true);

if( PV_pct/100.0 < PVsystems/zero_Interface.energyModel.UtilityConnections.size() ){
	while ( PV_pct/100.0*zero_Interface.energyModel.UtilityConnections.size() < PVsystems) { // remove excess PV systems
		GridConnection gc = findFirst(zero_Interface.c_orderedPVSystems, x->x.v_hasPV==true);
		
		
		// update UI company
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
		//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
			if (companyUI.v_minPVSlider != 0) {
				traceln("Removed already existing PV system");
			}
			else {
				companyUI.sl_rooftopPVCompany.setValue(0, false);
				companyUI.t_rooftopSolarCompany.setText("0 kW");
			}
		//}
		
		J_EA pvAsset = findFirst(gc.c_productionAssets, p -> p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC );
		//traceln("Found PV system: " + pvAsset);
		if (pvAsset!=null) {
			pvAsset.removeEnergyAsset();
			zero_Interface.c_orderedPVSystems.remove(gc);
			zero_Interface.c_orderedPVSystems.add(0,gc);
			//traceln("Removing PV from GridConnection:" + h.p_gridConnectionID);
		}
		
		// Recalculating the amount of PV Systems instead of just decreasing by one to account for possibility of having multiple PV Assets
		PVsystems=count(zero_Interface.energyModel.UtilityConnections, x->x.v_hasPV == true);		
	}
 
}
else {
	while ( PV_pct/100.0 > PVsystems/zero_Interface.energyModel.UtilityConnections.size()) {
		GridConnection gc = findFirst(zero_Interface.c_orderedPVSystems, x->x.v_hasPV==false);
		if (gc == null){
			traceln("No gridconnection without PV panels found! Current PVsystems count: %s", PVsystems);
			break;
		}
		else {
			OL_EnergyAssetType assetType = OL_EnergyAssetType.PHOTOVOLTAIC;
			String assetName = "Rooftop PV";

			double roofAreaForPV_m2 = 0.75 * gc.p_roofSurfaceArea_m2;						
			double capacityElectricity_kW = max(0.1, roofAreaForPV_m2*zero_Interface.energyModel.avgc_data.p_avgPVPower_kWpm2);
			double capacityHeat_kW = 0.0;
			double yearlyProductionHydrogen_kWh = 0.0;
			double yearlyProductionMethane_kWh = 0.0;
			double outputTemperature_degC = 0.0;
			
			J_EAProduction productionAsset = new J_EAProduction ( gc, assetType, assetName, capacityElectricity_kW, capacityHeat_kW, yearlyProductionMethane_kWh, yearlyProductionHydrogen_kWh, zero_Interface.energyModel.p_timeStep_h, outputTemperature_degC, zero_Interface.energyModel.pp_solarPVproduction );

			zero_Interface.c_orderedPVSystems.remove(gc);
			zero_Interface.c_orderedPVSystems.add(0, gc);
		
			PVsystems++;
			//traceln("Added PV to GridConnection: " + h.p_gridConnectionID);
		
			
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				companyUI.sl_rooftopPVCompany.setValue(roundToInt(capacityElectricity_kW), false);
				companyUI.t_rooftopSolarCompany.setText(roundToInt(capacityElectricity_kW) + " kW");
			//}
		}
	}
}	

zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256117103</Id>
					<Name><![CDATA[f_setPVOnLand]]></Name>
					<Description><![CDATA[Function that changes the electric capacity of the energy asset of the "Solar field". Takes an area size in hectares as a parameter and assumes that 1 MWp of solarpannels fits on 1 ha. The variables for amount of installed PV are updated automatically in the zero_engine. The function also modifies the connection capacity of the energy production site to match the new installed PV Power.]]></Description>
					<X>70</X><Y>820</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[hectare]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// TODO: Change to work for multiple solar fields in one model.
// to do so it should probably first calculate the total installed pv in all solar fields

// TODO: make this work nicer with the new pause function (when setting capacity to 0 pause again?)

for ( GCEnergyProduction GCEP : zero_Interface.energyModel.EnergyProductionSites) {
	for(J_EAProduction j_ea : GCEP.c_productionAssets) {
		if (j_ea.getEAType() == OL_EnergyAssetType.PHOTOVOLTAIC) {
			if (!GCEP.v_isActive) {
				GCEP.f_setActive(true);
			}
			j_ea.setCapacityElectric_kW(1000*hectare); // 1 ha = 1 MW
			GCEP.p_physicalConnectionCapacity_kW = 1000*hectare;
			GCEP.p_contractedFeedinCapacity_kW = 1000*hectare;
			break;
		}
	}
}

zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256142375</Id>
					<Name><![CDATA[f_setPVSystemHouses]]></Name>
					<Description><![CDATA[Function that adds or removes photovoltaic production assets to houses. Takes a percentage as a parameter and runs untill that percentage of all the houses has a PV asset. If a new asset is created it takes as its electric capacity a random value between 3 and 6 kW. The variables for amount of installed PV are updated automatically in the zero_engine.
]]></Description>
					<X>70</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[PV_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double nbHousesWithPV = count(zero_Interface.energyModel.Houses, x -> x.v_hasPV == true);

if( PV_pct /100.0 < nbHousesWithPV / zero_Interface.energyModel.Houses.size() ){
	while ( PV_pct / 100.0 * zero_Interface.energyModel.Houses.size() < nbHousesWithPV ) { // remove excess PV systems
		GridConnection house = findFirst(zero_Interface.c_orderedPVSystems, x -> x.v_hasPV == true);		
		J_EA pvAsset = findFirst(house.c_productionAssets, p -> p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC );
		if (pvAsset != null) {
			pvAsset.removeEnergyAsset();
			zero_Interface.c_orderedPVSystems.remove( house) ;
			zero_Interface.c_orderedPVSystems.add(0, house) ;
			nbHousesWithPV --; 
		}
		else {
			traceln(" cant find PV asset in house that should have PV asset in f_setPVHouses (Interface)");
		}
	}
 
}
else {
	while ( PV_pct / 100.0 > nbHousesWithPV / zero_Interface.energyModel.Houses.size()) {
		GridConnection house = findFirst(zero_Interface.c_orderedPVSystems, x -> x.v_hasPV == false);
		if (house == null){
			traceln("No gridconnection without PV panels found! Current PVsystems count: %s", nbHousesWithPV);
			break;
		}
		else {
			String assetName = "Rooftop PV";
			double capacityHeat_kW = 0.0;
			double yearlyProductionHydrogen_kWh = 0.0;
			double yearlyProductionMethane_kWh = 0.0;
			double outputTemperature_degC = 0.0;
			double installedPVCapacity_kW = uniform(3,6);

			J_EAProduction productionAsset = new J_EAProduction ( house, OL_EnergyAssetType.PHOTOVOLTAIC, assetName, installedPVCapacity_kW, capacityHeat_kW, yearlyProductionMethane_kWh, yearlyProductionHydrogen_kWh, zero_Interface.energyModel.p_timeStep_h, outputTemperature_degC, zero_Interface.energyModel.pp_solarPVproduction );
			zero_Interface.c_orderedPVSystems.remove(house);
			zero_Interface.c_orderedPVSystems.add(0, house);
			zero_Interface.energyModel.v_totalInstalledPVPower_kW += installedPVCapacity_kW;
			nbHousesWithPV ++;	
		}
	}
}

zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256239566</Id>
					<Name><![CDATA[f_setPublicChargingStations]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>430</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[sliderValue]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[double desiredNbOfChargers = roundToInt(sliderValue * p_nbChargersInDatabase / 100.0) ;

if ( v_currentNbChargers > desiredNbOfChargers){
	while ( v_currentNbChargers > desiredNbOfChargers){
		GCPublicCharger charger = zero_Interface.c_activePublicChargers.get(0);
		zero_Interface.c_activePublicChargers.remove(0); 
		
		if( charger != null ){
			charger.c_profileAssets.get(0).removeEnergyAsset(); //get rid of the charging profile
			charger.v_isActiveCharger = false;
			zero_Interface.c_inactivePublicChargers.add(charger); //add the charger to the other list
			charger.c_connectedGISObjects.get(0).gisRegion.setVisible(false);
			v_currentNbChargers --;
		}
		else{
			traceln("Charger slider error: there are not sufficient chargers to remove");
			return;
		}
	}
}
else if ( v_currentNbChargers < desiredNbOfChargers ){
	while ( v_currentNbChargers < desiredNbOfChargers){
		int index = uniform_discr(1, zero_Interface.c_inactivePublicChargers.size())-1;
		GCPublicCharger charger = zero_Interface.c_inactivePublicChargers.get(index);
		zero_Interface.c_inactivePublicChargers.remove(index);
		
		if( charger != null ){
			String profileName = charger.p_chargingProfileName;
			J_EAProfile profile = new J_EAProfile(charger, OL_EnergyCarrierType.ELECTRICITY, null, OL_ProfileAssetType.CHARGING, zero_Interface.energyModel.p_timeStep_h);		
			profile.energyAssetName = "charging profile";
			List<Double> quarterlyEnergyDemand_kWh = selectValues(double.class, "SELECT " + profileName + " FROM charging_profiles;");			
			profile.a_energyProfile_kWh = quarterlyEnergyDemand_kWh.stream().mapToDouble(d -> max(0,d)).map( d -> d / 4).toArray();
			charger.v_isActiveCharger = true;
			charger.c_connectedGISObjects.get(0).gisRegion.setVisible(true);
			zero_Interface.c_activePublicChargers.add(charger);
			v_currentNbChargers ++;
		}
		else{
			traceln("Charger slider error: there are no more chargers to add");
			return;
		}
	}	
}


zero_Interface.f_resetSettings();
//f_setDieselVehiclesAtPublicParkingHouses();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256239578</Id>
					<Name><![CDATA[f_setDieselVehiclesAtPublicParkingHouses]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>450</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256248965</Id>
					<Name><![CDATA[f_setWindTurbines]]></Name>
					<Description><![CDATA[Function that changes the electric capacity of the energy asset of the "Wind Farm". Takes an amount of MW as a parameter. The variables for amount of installed Wind are updated automatically in the zero_engine. The function also modifies the connection capacity of the energy production site to match the new installed Wind Power.]]></Description>
					<X>80</X><Y>1010</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[AllocatedWindPower_MW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// TODO: Change to work for multiple wind farms in one model.
// to do so it should probably first calculate the total installed wind power in all wind farms

// TODO: make this work nicer with the new pause function (when setting capacity to 0 pause again?)

for ( GCEnergyProduction GCEP : zero_Interface.energyModel.EnergyProductionSites) {
	for(J_EAProduction j_ea : GCEP.c_productionAssets) {
		if (j_ea.getEAType() == OL_EnergyAssetType.WINDMILL) {
			if (!GCEP.v_isActive) {
				GCEP.f_setActive(true);
			}
			j_ea.setCapacityElectric_kW(1000*AllocatedWindPower_MW);
			GCEP.p_physicalConnectionCapacity_kW = 1000*AllocatedWindPower_MW;
			GCEP.p_contractedFeedinCapacity_kW = 1000*AllocatedWindPower_MW;
			break;
		}
	}
}

zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256291599</Id>
					<Name><![CDATA[f_setResidentialBatteries]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>430</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[homeBatteries_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// Setting houseBatteries
double nbHouseBatteries = count(zero_Interface.energyModel.Houses, h -> h.p_batteryAsset != null); //f_getEnergyAssets(), p -> p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC && p.getParentAgent() instanceof GCHouse);
double nbHousesWithPV = count(zero_Interface.energyModel.Houses, x -> x.v_hasPV == true); //count(energyModel.f_getGridConnections(), p->p instanceof GCHouse);
double batteryShare_pct = homeBatteries_pct;

if( nbHousesWithPV > 0 ){
	if( batteryShare_pct / 100.0 < nbHouseBatteries / nbHousesWithPV ){
		while ( batteryShare_pct / 100.0 < nbHouseBatteries / nbHousesWithPV) {
			GCHouse house = findFirst(zero_Interface.energyModel.Houses, p -> p.p_batteryAsset != null );
			house.p_batteryAsset.removeEnergyAsset();
			house.p_batteryOperationMode = OL_BatteryOperationMode.BALANCE; // reset to default
			nbHouseBatteries--;
		}
	}
	else {
		while ( batteryShare_pct / 100.0 > nbHouseBatteries / nbHousesWithPV) {
			GCHouse house = findFirst(zero_Interface.energyModel.Houses, p -> p.p_batteryAsset == null && p.v_hasPV == true);
			
			double batteryStorageCapacity_kWh = 15;
			double batteryCapacity_kW = batteryStorageCapacity_kWh / zero_Interface.energyModel.avgc_data.p_avgRatioBatteryCapacity_v_Power;
			double batteryStateOfCharge = 0.5;
					
			new J_EAStorageElectric(house, batteryCapacity_kW, batteryStorageCapacity_kWh, batteryStateOfCharge, zero_Interface.energyModel.p_timeStep_h );
			house.p_batteryOperationMode = OL_BatteryOperationMode.HOUSEHOLD_LOAD;
			nbHouseBatteries++;
		}
	}
}

zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722261212790</Id>
					<Name><![CDATA[f_setEVsAtPrivateParkingHouses]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>430</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722335253834</Id>
					<Name><![CDATA[f_setDemandReduction]]></Name>
					<Description><![CDATA[Function that reduces the electricity demand of all consumption assets. Takes as an argument a percentage to reduce by compared to the default value of the consumption assets.]]></Description>
					<X>60</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[demandReduction_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double newElectricityDemandReduction_pct = demandReduction_pct;
double consumptionScaling_fr = 1  - newElectricityDemandReduction_pct/100;

for (J_EA j_ea : zero_Interface.energyModel.f_getEnergyAssets()) {
	if (j_ea instanceof J_EAConsumption) {
		if (j_ea.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND) {
			((J_EAConsumption)j_ea).setConsumptionScaling_fr(consumptionScaling_fr);
		}
	}
	if (j_ea instanceof J_EAProfile) {
		if (((J_EAProfile) j_ea).energyCarrierConsumed == OL_EnergyCarrierType.ELECTRICITY) {
			((J_EAProfile) j_ea).resetEnergyProfile();
			((J_EAProfile) j_ea).scaleEnergyProfile(consumptionScaling_fr);
		}
	}
}

v_electricityDemandReduction_pct = newElectricityDemandReduction_pct;
 
zero_Interface.f_resetSettings();
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724164287280</Id>
					<Name><![CDATA[f_setGridBatteries]]></Name>
					<Description><![CDATA[Function that changes the electric capacity of the energy asset of the "Wind Farm". Takes an amount of MW as a parameter. The variables for amount of installed Wind are updated automatically in the zero_engine. The function also modifies the connection capacity of the energy production site to match the new installed Wind Power.]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>430</X><Y>674</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[AllocatedCapacity_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// TODO: make this work (copied from f_setWindTurbines)

for ( GCGridBattery battery : zero_Interface.energyModel.GridBatteries) {
	for(J_EAStorage j_ea : battery.c_storageAssets) {
		J_EAStorageElectric batteryAsset = ((J_EAStorageElectric)j_ea);
		if (!battery.v_isActive) {
			battery.f_setActive(true);
		}
		batteryAsset.setCapacityElectric_kW(AllocatedCapacity_kW);
		battery.p_physicalConnectionCapacity_kW = AllocatedCapacity_kW;
		battery.p_contractedDeliveryCapacity_kW = AllocatedCapacity_kW;
		battery.p_contractedFeedinCapacity_kW = AllocatedCapacity_kW;
		//break;
	}
}

zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725550668581</Id>
					<Name><![CDATA[f_setPublicChargingStationsScale]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1230</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[sliderValue]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[ArrayList<GCPublicCharger> activeChargers = new ArrayList<>();
for ( GCPublicCharger charger : zero_Interface.c_activePublicChargers){
	activeChargers.add(charger);
}
for ( GCPublicCharger charger : activeChargers){
	if ( charger.p_nbOfChargers > sliderValue){
		f_setChargerInactive( charger );
	}
}
ArrayList<GCPublicCharger> inactiveChargers = new ArrayList<>();
for ( GCPublicCharger charger : zero_Interface.c_inactivePublicChargers){
	inactiveChargers.add(charger);
}
for ( GCPublicCharger charger : inactiveChargers){
	if( charger.p_nbOfChargers <= sliderValue ){
		f_setChargerActive( charger );
	}
}

traceln( "New number of active chargers: " + v_currentNbChargers);
traceln( "New number of inactive chargers: " + zero_Interface.c_inactivePublicChargers.size());

zero_Interface.f_resetSettings();
//f_setDieselVehiclesAtPublicParkingHouses();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[List<Double>]]></ReturnType>
					<Id>1725553029166</Id>
					<Name><![CDATA[f_getChargingProfile]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1260</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[charger]]></Name>
						<Type><![CDATA[GCPublicCharger]]></Type>
					</Parameter>
					<Body><![CDATA[String profileName = charger.p_parentNodeElectricID;
List<Double> quarterlyEnergyDemand_kWh;

if (chargingMethodScale.getValue() == 0){
	quarterlyEnergyDemand_kWh = selectValues(double.class, "SELECT " + profileName + " FROM charging_profiles_unc;");
}
else if (chargingMethodScale.getValue() == 1){
	profileName = profileName + f_getProfileNameAdditions();
	quarterlyEnergyDemand_kWh = selectValues(double.class, "SELECT " + profileName + " FROM charging_profiles_v1g;");
}
else {
	profileName = profileName + f_getProfileNameAdditions();
	quarterlyEnergyDemand_kWh = selectValues(double.class, "SELECT " + profileName + " FROM charging_profiles_v2g;");
}

return quarterlyEnergyDemand_kWh;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1725564597264</Id>
					<Name><![CDATA[f_getProfileNameAdditions]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1260</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[String string = "_";

double EVShare = sl_EVsWoonwijkScale.getValue();
if(  EVShare < 0.49 ){
	string += "25EV_";
}
else if  (EVShare < 0.74 ){
	string += "50EV_";
}
else if ( EVShare < 0.99 ){
	string += "75EV_";
}
else {
	string += "100EV_";
}

int WPshare = uI_Tabs.tabHeating.sl_householdsElectricHeatPump_pct.getIntValue();

if(  EVShare < 33 ){
	string += "0WP";
}
else if  (EVShare < 66 ){
	string += "50WP";
}
else {
	string += "100WP";
}


return string;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725568178701</Id>
					<Name><![CDATA[f_setChargerInactive]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1240</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[charger]]></Name>
						<Type><![CDATA[GCPublicCharger]]></Type>
					</Parameter>
					<Body><![CDATA[zero_Interface.c_activePublicChargers.remove(charger); 
charger.c_profileAssets.get(0).removeEnergyAsset(); //get rid of the charging profile
charger.v_isActiveCharger = false;
zero_Interface.c_inactivePublicChargers.add(charger); //add the charger to the other list
charger.c_connectedGISObjects.get(0).gisRegion.setVisible(false);
v_currentNbChargers --;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725568192004</Id>
					<Name><![CDATA[f_setChargerActive]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1240</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[charger]]></Name>
						<Type><![CDATA[GCPublicCharger]]></Type>
					</Parameter>
					<Body><![CDATA[zero_Interface.c_inactivePublicChargers.remove( charger );
J_EAProfile profile = new J_EAProfile(charger, OL_EnergyCarrierType.ELECTRICITY, null, OL_ProfileAssetType.CHARGING, zero_Interface.energyModel.p_timeStep_h);		
profile.energyAssetName = "charging profile";		
List<Double> quarterlyEnergyDemand_kWh = f_getChargingProfile(charger);
profile.a_energyProfile_kWh = quarterlyEnergyDemand_kWh.stream().mapToDouble(d -> max(0,d)).map( d -> d / 4).toArray();
charger.v_isActiveCharger = true;
charger.c_connectedGISObjects.get(0).gisRegion.setVisible(true);
zero_Interface.c_activePublicChargers.add(charger);
v_currentNbChargers ++;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1722247653562</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1722249957989</Id>
					<Name><![CDATA[uI_Tabs]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[UI_Tabs]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
				<ContainerLink>
					<Id>1722252542610</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>150</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Interface]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1722247653568</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1722349953637</Id>
					<Name><![CDATA[rect_genericFunctions]]></Name>
					<X>10</X><Y>480</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>620</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Group>
					<Id>1722249610010</Id>
					<Name><![CDATA[gr_electricityDemandSlidersResidentialArea]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>585</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[185]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1722249610012</Id>
					<Name><![CDATA[rect_electricityDemandSlidersResidentialArea]]></Name>
					<X>-185</X><Y>-175</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-32</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722249610014</Id>
					<Name><![CDATA[sl_electricityDemandReduction1]]></Name>
					<X>75</X><Y>-75</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>false</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");
//p_electricityDemandReduction = (100 - sl_electricityDemandReduction.getValue()) / 100;
//t_electricityDemandReduction.setText(sl_electricityDemandReduction.getValue() + "%");

//zero_Interface.f_resetSettings();
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[-50]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722249610016</Id>
					<Name><![CDATA[text288]]></Name>
					<X>-180</X><Y>-70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Groei elektriciteitsverbruik]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722249610018</Id>
					<Name><![CDATA[t_electricityDemandReduction1]]></Name>
					<X>45</X><Y>-70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722249610020</Id>
					<Name><![CDATA[t_rooftopSolarCompanies2]]></Name>
					<X>45</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[10%]]></Text>
					<TextCode><![CDATA[sl_rooftopPV.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722249610022</Id>
					<Name><![CDATA[sl_rooftopPV]]></Name>
					<X>75</X><Y>-145</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setPVSystemHouses( sl_rooftopPV.getValue() );
if( zero_Interface.rb_buildingColors.getValue() == 2){
	zero_Interface.rb_buildingColors.setValue(2, true);
}

// Also updates the home batteries
f_setResidentialBatteries( sl_individualBatteries.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[10]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722249610024</Id>
					<Name><![CDATA[text294]]></Name>
					<X>-180</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huizen met zon op dak]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722249610026</Id>
					<Name><![CDATA[text277]]></Name>
					<X>-180</X><Y>-160</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722249610028</Id>
					<Name><![CDATA[sl_EVsWoonwijk]]></Name>
					<X>75</X><Y>55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[int sliderValue = sl_EVsWoonwijk.getIntValue();
if ( sliderValue < p_minPublicChargerSlider ){
	sliderValue = p_minPublicChargerSlider;
	sl_EVsWoonwijk.setValue( p_minPublicChargerSlider, false);
	traceln("SLIDER MESSAGE: Can't set slider lower than the initial value of simulated area");
}

f_setPublicChargingStations(sliderValue);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722249610030</Id>
					<Name><![CDATA[t_publicParking]]></Name>
					<X>-180</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens publiek parkeren]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722249610032</Id>
					<Name><![CDATA[t_electricityDemandReduction2]]></Name>
					<X>45</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<TextCode><![CDATA[sl_EVsWoonwijk.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722249610034</Id>
					<Name><![CDATA[text326]]></Name>
					<X>-160</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Waarvan met batterijen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722249610036</Id>
					<Name><![CDATA[sl_individualBatteries]]></Name>
					<X>75</X><Y>-110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setResidentialBatteries( sl_individualBatteries.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722249610038</Id>
					<Name><![CDATA[t_individualBatteries_pct1]]></Name>
					<X>45</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<TextCode><![CDATA[sl_individualBatteries.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722249610040</Id>
					<Name><![CDATA[t_electricCarDistribution]]></Name>
					<X>-180</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Aandeel elektrische personenauto's bij:]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722249610042</Id>
					<Name><![CDATA[t_privateParking]]></Name>
					<X>-180</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens privaat parkeren]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722249610044</Id>
					<Name><![CDATA[sl_EVsWoonwijkPrivate]]></Name>
					<X>75</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");
//f_setEVsAtPrivateParkingHouses();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722249610046</Id>
					<Name><![CDATA[checkbox3]]></Name>
					<X>-180</X><Y>90</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="300" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[traceln("Button doet nog niets!!");]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Netbewust laden (publieke laadpalen knijpen in piek)]]></LabelText>
						<LinkTo>false</LinkTo>
	 				</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722249837514</Id>
					<Name><![CDATA[t_electricityDemandReduction3]]></Name>
					<X>45</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<TextCode><![CDATA[sl_EVsWoonwijkPrivate.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1724164051652</Id>
					<Name><![CDATA[sl_gridBatteriesCapacity_kW]]></Name>
					<X>76</X><Y>131</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setGridBatteries( sl_gridBatteriesCapacity_kW.getValue() );
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[1000]]></MaxValue>
						<Step><![CDATA[10]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1724164051654</Id>
					<Name><![CDATA[t_gridBatteriesCapacity]]></Name>
					<X>-169</X><Y>136</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Capaciteit buurtbatterijen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1724164051656</Id>
					<Name><![CDATA[t_gridBatteriesCapacity_kWh]]></Name>
					<X>46</X><Y>136</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_gridBatteriesCapacity_kW.getIntValue() + " kW"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1722328776701</Id>
					<Name><![CDATA[gr_electricityDemandSliders]]></Name>
					<X>185</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1722328776703</Id>
					<Name><![CDATA[rect_electricityDemandSliders]]></Name>
					<X>-185</X><Y>-175</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-32</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722328776711</Id>
					<Name><![CDATA[t_electricityDemandReduction_pct]]></Name>
					<X>45</X><Y>-155</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_electricityDemandReduction_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722328776713</Id>
					<Name><![CDATA[sl_electricityDemandReduction_pct]]></Name>
					<X>75</X><Y>-160</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setDemandReduction( sl_electricityDemandReduction_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722328776715</Id>
					<Name><![CDATA[t_electricityDemandReductionDescription]]></Name>
					<X>-175</X><Y>-155</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Besparing elektriciteitsverbruik]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722328776717</Id>
					<Name><![CDATA[t_solarDescription]]></Name>
					<X>-170</X><Y>-120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Zon]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722328776719</Id>
					<Name><![CDATA[t_rooftopPVCompanies_pct]]></Name>
					<X>45</X><Y>-95</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_rooftopPVCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722328776721</Id>
					<Name><![CDATA[sl_rooftopPVCompanies_pct]]></Name>
					<X>75</X><Y>-100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setPVSystemCompanies(sl_rooftopPVCompanies_pct.getValue());]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722328776723</Id>
					<Name><![CDATA[t_rooftopPVCompaniesDescription]]></Name>
					<X>-170</X><Y>-95</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Zon op dak bedrijven]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722328776725</Id>
					<Name><![CDATA[t_largeScalePV_ha]]></Name>
					<X>45</X><Y>-65</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_largeScalePV_ha.getIntValue() + " ha"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722328776727</Id>
					<Name><![CDATA[sl_largeScalePV_ha]]></Name>
					<X>75</X><Y>-70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setPVOnLand(sl_largeScalePV_ha.getValue());]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722328776729</Id>
					<Name><![CDATA[t_largeScalePVDescription]]></Name>
					<X>-170</X><Y>-65</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Zon op land]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722328776731</Id>
					<Name><![CDATA[t_windDescription]]></Name>
					<X>-170</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Wind]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722328776737</Id>
					<Name><![CDATA[sl_largeScaleWind_MW]]></Name>
					<X>75</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setWindTurbines( sl_largeScaleWind_MW.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[10]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722328776739</Id>
					<Name><![CDATA[t_largeScaleWindDescription]]></Name>
					<X>-170</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Wind op land]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722328776741</Id>
					<Name><![CDATA[t_largeScaleWind_MW]]></Name>
					<X>45</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_largeScaleWind_MW.getIntValue() + " MW"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722329161559</Id>
					<Name><![CDATA[t_rooftopPVHouses_pct]]></Name>
					<X>45</X><Y>-35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_rooftopPVHouses_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722329161561</Id>
					<Name><![CDATA[sl_rooftopPVHouses_pct]]></Name>
					<X>75</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setPVSystemHouses( sl_rooftopPVHouses_pct.getValue() );

if( zero_Interface.rb_buildingColors.getValue() == 2){
	zero_Interface.rb_buildingColors.setValue(2, true);
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722329161563</Id>
					<Name><![CDATA[t_rooftopPVHousesDescription]]></Name>
					<X>-170</X><Y>-35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Zon op dak huizen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Rectangle>
					<Id>1722334503404</Id>
					<Name><![CDATA[rect_PVFunctions]]></Name>
					<X>40</X><Y>700</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-10496</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>200</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722334611918</Id>
					<Name><![CDATA[t_PVFunctionsDescription]]></Name>
					<X>190</X><Y>710</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[PV Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Rectangle>
					<Id>1722334647855</Id>
					<Name><![CDATA[rect_windFunctions]]></Name>
					<X>40</X><Y>950</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-14774017</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722334664308</Id>
					<Name><![CDATA[t_windFunctionsDescription]]></Name>
					<X>190</X><Y>960</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Wind Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Rectangle>
					<Id>1722334712260</Id>
					<Name><![CDATA[rect_residentialFunctions]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>400</X><Y>370</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722334744018</Id>
					<Name><![CDATA[t_residentialFunctionsDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>600</X><Y>380</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Residential Area Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Rectangle>
					<Id>1722335253828</Id>
					<Name><![CDATA[rect_demandFunctions]]></Name>
					<X>40</X><Y>550</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-8355840</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722335253832</Id>
					<Name><![CDATA[t_demandFunctionsDescription]]></Name>
					<X>190</X><Y>560</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Demand Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722349990233</Id>
					<Name><![CDATA[t_genericFunctions]]></Name>
					<X>100</X><Y>500</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Generic Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>22</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1725550141741</Id>
					<Name><![CDATA[gr_electricityDemandSlidersResidentialAreaScale]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1380</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[185]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1725571404716</Id>
					<Name><![CDATA[rect_electricityDemandSliders2]]></Name>
					<X>-190</X><Y>-170</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-32</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1725550141749</Id>
					<Name><![CDATA[t_electricityDemandReduction6]]></Name>
					<X>45</X><Y>-70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1725550141751</Id>
					<Name><![CDATA[t_rooftopSolarCompanies3]]></Name>
					<X>45</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[10%]]></Text>
					<TextCode><![CDATA[sl_rooftopPVScale.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725550141753</Id>
					<Name><![CDATA[sl_rooftopPVScale]]></Name>
					<X>75</X><Y>-145</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setPVSystemHouses( sl_rooftopPVScale.getValue() );
if( zero_Interface.rb_buildingColors.getValue() == 2){
	zero_Interface.rb_buildingColors.setValue(2, true);
}

// Also updates the home batteries
f_setResidentialBatteries( sl_individualBatteriesScale.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[10]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1725550141755</Id>
					<Name><![CDATA[text2942]]></Name>
					<X>-180</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huizen met zon op dak]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1725550141757</Id>
					<Name><![CDATA[text2772]]></Name>
					<X>-180</X><Y>-160</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725550141759</Id>
					<Name><![CDATA[sl_EVsWoonwijkScale]]></Name>
					<X>75</X><Y>55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[double sliderValue = sl_EVsWoonwijkScale.getValue();
f_setPublicChargingStationsScale(sliderValue);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[1]]></MaxValue>
						<Step><![CDATA[0.25]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1725550141761</Id>
					<Name><![CDATA[t_publicParking2]]></Name>
					<X>-180</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens publiek parkeren]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1725550141763</Id>
					<Name><![CDATA[t_electricityDemandReduction5]]></Name>
					<X>45</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<TextCode><![CDATA[sl_EVsWoonwijkScale.getValue()]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1725550141765</Id>
					<Name><![CDATA[text3262]]></Name>
					<X>-160</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Waarvan met batterijen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725550141767</Id>
					<Name><![CDATA[sl_individualBatteriesScale]]></Name>
					<X>75</X><Y>-110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setResidentialBatteries( sl_individualBatteriesScale.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1725550141769</Id>
					<Name><![CDATA[t_individualBatteries_pct3]]></Name>
					<X>45</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<TextCode><![CDATA[sl_individualBatteriesScale.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1725550141771</Id>
					<Name><![CDATA[t_electricCarDistribution2]]></Name>
					<X>-180</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Aandeel elektrische personenauto's bij:]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1725550141773</Id>
					<Name><![CDATA[t_privateParking2]]></Name>
					<X>-180</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens privaat parkeren]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725550141775</Id>
					<Name><![CDATA[sl_EVsWoonwijkPrivateScale]]></Name>
					<X>75</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");
//f_setEVsAtPrivateParkingHouses();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1725550141779</Id>
					<Name><![CDATA[t_electricityDemandReduction4]]></Name>
					<X>45</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[0%]]></Text>
					<TextCode><![CDATA[sl_EVsWoonwijkPrivateScale.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725550141781</Id>
					<Name><![CDATA[sl_gridBatteriesCapacityScale_kW]]></Name>
					<X>76</X><Y>131</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setGridBatteries( sl_gridBatteriesCapacityScale_kW.getValue() );
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[1000]]></MaxValue>
						<Step><![CDATA[10]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1725550141783</Id>
					<Name><![CDATA[t_gridBatteriesCapacity2]]></Name>
					<X>-169</X><Y>136</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Capaciteit buurtbatterijen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1725550141785</Id>
					<Name><![CDATA[t_gridBatteriesCapacity_kWh2]]></Name>
					<X>46</X><Y>136</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_gridBatteriesCapacityScale_kW.getIntValue() + " kW"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725571436399</Id>
					<Name><![CDATA[chargingMethodScale]]></Name>
					<X>-180</X><Y>90</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="350" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<Orientation>HORIZONTAL</Orientation>
						<Button><![CDATA[Uncontrolled charging]]></Button>
						<Button><![CDATA[V1G smart]]></Button>
						<Button><![CDATA[V2G smart]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
			</Presentation>

				</Group>
				<Text>
					<Id>1725550152432</Id>
					<Name><![CDATA[text]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1350</X><Y>-30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Scale]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1725550668575</Id>
					<Name><![CDATA[rect_residentialFunctions1]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1190</X><Y>370</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1725550668579</Id>
					<Name><![CDATA[t_scale]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1400</X><Y>380</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Scale Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1722253108625</Id>
			<Name><![CDATA[tabHeating]]></Name>
			<AdditionalClassCode><![CDATA[// Default Sliders
public ShapeGroup getGroupHeatDemandSliders() {
	return this.gr_heatDemandSliders;
}

public ShapeSlider getSliderHeatDemandReductionCompanies_pct() { 
	return this.sl_heatDemandReductionCompanies_pct;
}

public ShapeSlider getSliderGasBurnerCompanies_pct() { 
	return this.sl_gasBurnerCompanies_pct;
}

public ShapeSlider getSliderElectricHeatPumpCompanies_pct() { 
	return this.sl_electricHeatPumpCompanies_pct;
}

public ShapeSlider getSliderHeatDemandReductionHouseholds_pct() { 
	return this.sl_heatDemandReductionHouseholds_pct;
}

public ShapeSlider getSliderGasBurnerHouseholds_pct() { 
	return this.sl_gasBurnerHouseholds_pct;
}

public ShapeSlider getSliderElectricHeatPumpHouseholds_pct() { 
	return this.sl_electricHeatPumpHouseholds_pct;
}

// Residential Tab Sliders
public ShapeGroup getGroupHeatDemandSlidersResidentialArea() {
	return this.gr_heatDemandSlidersResidentialArea;
}

public ShapeSlider getSliderHeatDemandSlidersResidentialAreaHouseholdsGasBurner_pct() { 
	return this.sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct;
}

public ShapeSlider getSliderHeatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct() { 
	return this.sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct;
}

// Company Tab Sliders
public ShapeGroup getGroupHeatDemandSlidersCompanies() {
	return this.gr_heatDemandSlidersCompanies;
}

public ShapeSlider getSliderHeatDemandSlidersCompaniesHeatDemandReductionCompanies_pct() { 
	return this.sl_heatDemandSlidersCompaniesHeatDemandReductionCompanies_pct;
}

public ShapeSlider getSliderHeatDemandSlidersCompaniesGasBurnerCompanies_pct() { 
	return this.sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct;
}

public ShapeSlider getSliderHeatDemandSlidersCompaniesElectricHeatPumpCompanies_pct() { 
	return this.sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct;
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
				<ClassName><![CDATA[tabArea]]></ClassName>
			</ExtendsReference>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1722253108631</Id>
				<Name><![CDATA[1722253108631]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1722253108628</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1722253108632</CurrentLevel>
			<ConnectionsId>1722253108626</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1722258576600</Id>
					<Name><![CDATA[v_heatDemandReductionCompanies_pct]]></Name>
					<X>90</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1727269173561</Id>
					<Name><![CDATA[v_heatDemandReductionHouses_pct]]></Name>
					<X>90</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256102007</Id>
					<Name><![CDATA[f_setHeatingSystemsCompanies]]></Name>
					<Description><![CDATA[Function that adds or removes heatpumps to utility connections. Takes a percentage as a parameter and runs untill that percentage of all the utility connections has a heatpump. If a new heatpump is created it determines its heat demand on a heat_demand consumption asset if it exists, else it looks for a heat profile asset. The function also updates the radio button in the company UI.]]></Description>
					<X>110</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[targetHeatPump_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//Setting Heating systems
int nbHeatPumps = count(zero_Interface.energyModel.UtilityConnections, gc->gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);
int nbConnectionsWithHeat = count(zero_Interface.energyModel.UtilityConnections, gc -> gc.p_primaryHeatingAsset != null);
int targetHeatPumpAmount = roundToInt(targetHeatPump_pct/100.0* nbConnectionsWithHeat);

// TODO: Bugfix needed. Not all companies have a heat demand, if the heat demand is zero. Then it should not try to mess with their heating asset or it might create an asset with capacity 0.
/*
java.lang.RuntimeException: Exception: J_EAGasBurner with capacityHeat_kW = 0, invalid state! 
Energy Asset: AssetType = GAS_BURNER parentAgent = root.energyModel.UtilityConnections[117],
Energy consumed = 0.0 capacityElectric_kW = 0.0 capacityHeat_kW = 0.0 eta_r = 0.99 
outputTemperature_degC = 90.0 energyUsed_kWh (losses) = 0.0 heatProducted_kWh = 0.0
*/
// Also results in NaN values in the electricity flows, probably division by zero?
// Why doesn't it skip these companies already? 0 heat demand should probably mean they did not get an asset in the loader?
// Because, UtilityConnection 117 was ROVA! It indeed has 0 heat demand, but does have an asset.

if( targetHeatPumpAmount < nbHeatPumps){
	while ( targetHeatPumpAmount < nbHeatPumps) { // remove excess heatpumps, replace with gasburners.
		//traceln("While loop for removing heatpumps");
		GridConnection gc = findFirst(zero_Interface.c_orderedHeatingSystemsCompanies, x->x.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);
		if (gc!=null) {
		
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				if (companyUI.c_scenarioSettings_Current.get(0).getCurrentHeatingType() == OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP) {
					traceln("Removed already existing Heatpump");
				}
				//else {
					companyUI.rb_heatingTypePrivateUI.setValue(0, false);
				//}
			//}
			
			J_EA heatPump = gc.p_primaryHeatingAsset;
			//traceln("Found heatpump: " + heatPump);		
			heatPump.removeEnergyAsset();
			zero_Interface.c_orderedHeatingSystemsCompanies.remove(gc);
			zero_Interface.c_orderedHeatingSystemsCompanies.add(0, gc);
			//traceln("Removing heatpump from GridConnection:" + gc.p_gridConnectionID);
			J_EAConsumption heatDemandAsset = findFirst(gc.c_consumptionAssets, j_ea->j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);
			J_EAConversionGasBurner gasBurner;
			if (heatDemandAsset != null) {
				gasBurner = new J_EAConversionGasBurner(gc, OL_EnergyAssetType.GAS_BURNER, heatDemandAsset.yearlyDemandHeat_kWh/8760*10, 0.99, zero_Interface.energyModel.p_timeStep_h, 90);
			} else {
				J_EAProfile heatDemandProfile = (J_EAProfile)findFirst(gc.c_profileAssets, x->x instanceof J_EAProfile && x.energyCarrierConsumed == OL_EnergyCarrierType.HEAT);
				double peakHeatDemand_kW = Arrays.stream(heatDemandProfile.a_energyProfile_kWh).max().orElseThrow(() -> new RuntimeException());
				gasBurner = new J_EAConversionGasBurner(gc, OL_EnergyAssetType.GAS_BURNER, peakHeatDemand_kW, 0.99, zero_Interface.energyModel.p_timeStep_h, 90);
			}			
		}
		
		nbHeatPumps--;
		//traceln("Number of heatpumps: " + nbHeatPumps);
	}
 
} else { 
	while ( targetHeatPumpAmount > nbHeatPumps) { // remove gasburners, add heatpumps.
		//traceln("While loop for adding heatpumps");
		GridConnection gc = findFirst(zero_Interface.c_orderedHeatingSystemsCompanies, x->x.p_primaryHeatingAsset instanceof J_EAConversionGasBurner);

		if (gc!=null) {
		
			// update UI company
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
			//if (companyUI.c_ownedGridConnections.get(0) == gc) { // should also check the setting of selected GC
				companyUI.rb_heatingTypePrivateUI.setValue(2, false);
			//}
			
			J_EA gasBurner = gc.p_primaryHeatingAsset;
			gasBurner.removeEnergyAsset();
			
			J_EAConversionHeatPump heatPump;
			J_EAConsumption heatDemandAsset = findFirst(gc.c_consumptionAssets, j_ea->j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);
			if (heatDemandAsset != null) {
				heatPump = new J_EAConversionHeatPump(gc, zero_Interface.energyModel.p_timeStep_h, heatDemandAsset.yearlyDemandHeat_kWh/8760*10 / 3, 0.5, zero_Interface.energyModel.v_currentAmbientTemperature_degC, 60, "AIR", 0, 1);
			} else {
				J_EAProfile heatDemandProfile = (J_EAProfile)findFirst(gc.c_profileAssets, x->x instanceof J_EAProfile && x.energyCarrierConsumed == OL_EnergyCarrierType.HEAT);
				double peakHeatDemand_kW = Arrays.stream(heatDemandProfile.a_energyProfile_kWh).max().orElseThrow(() -> new RuntimeException());
				heatPump = new J_EAConversionHeatPump(gc, zero_Interface.energyModel.p_timeStep_h, peakHeatDemand_kW / 3, 0.5, zero_Interface.energyModel.v_currentAmbientTemperature_degC, 60, "AIR", 0, 1);
			}
			zero_Interface.c_orderedHeatingSystemsCompanies.remove(gc);
			zero_Interface.c_orderedHeatingSystemsCompanies.add(0, gc);		 
			//traceln("Added heatpump to GridConnection: " + gc.p_gridConnectionID);
		} else {
			traceln("No more gasburners to replace!");
			break;
		}	
		
		nbHeatPumps++;
	}	
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256221655</Id>
					<Name><![CDATA[f_setHeatingSystemsHouseholds]]></Name>
					<Description><![CDATA[Function that adds or removes heatpumps to houses. Takes a percentage as a parameter and runs untill that percentage of all the houses has a heatpump. If a new heatpump is created it determines its heat demand on a heat_demand consumption asset if it exists, else it looks for a heat profile asset.]]></Description>
					<X>110</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[targetHeatPump_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double nbHeatPumps = count(zero_Interface.energyModel.Houses, house -> house.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);
int targetHeatPumpAmount = roundToInt( targetHeatPump_pct / 100.0 *(zero_Interface.energyModel.Houses.size()));

if( targetHeatPumpAmount < nbHeatPumps){
	while ( targetHeatPumpAmount < nbHeatPumps) { // remove excess heatpumps, replace with gasburners.
		GridConnection gc = findFirst(zero_Interface.c_orderedHeatingSystemsHouses, x->x.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);
		if (gc != null) {
			J_EA heatPump = gc.p_primaryHeatingAsset;
			heatPump.removeEnergyAsset();
			nbHeatPumps --;
			zero_Interface.c_orderedHeatingSystemsHouses.remove(gc);
			zero_Interface.c_orderedHeatingSystemsHouses.add(0, gc);
			 
			// In loader: f_addEnergyAssetsToHouses staat jaarlijks gasverbruik in else???
			J_EAConsumption heatDemandAsset = findFirst(gc.c_consumptionAssets, j_ea->j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);
			J_EAConversionGasBurner gasBurner;
			if (heatDemandAsset != null) {
				gasBurner = new J_EAConversionGasBurner(gc, OL_EnergyAssetType.GAS_BURNER, heatDemandAsset.yearlyDemandHeat_kWh/8760*10, 0.99, zero_Interface.energyModel.p_timeStep_h, 90);
			}
			else {
				J_EAProfile heatDemandProfile = (J_EAProfile)findFirst(gc.c_profileAssets, x->x instanceof J_EAProfile && x.energyCarrierConsumed == OL_EnergyCarrierType.HEAT);
				double peakHeatDemand_kW = Arrays.stream(heatDemandProfile.a_energyProfile_kWh).max().orElseThrow(() -> new RuntimeException());
				gasBurner = new J_EAConversionGasBurner(gc, OL_EnergyAssetType.GAS_BURNER, peakHeatDemand_kW, 0.99, zero_Interface.energyModel.p_timeStep_h, 90);
			}			
		}
	}
 
} 
else { 
	while ( targetHeatPumpAmount > nbHeatPumps) { // remove gasburners, add heatpumps.
		GCHouse gc = (GCHouse)findFirst(zero_Interface.c_orderedHeatingSystemsHouses, x -> x.p_primaryHeatingAsset instanceof J_EAConversionGasBurner);
		if (gc != null) {			
			gc.p_primaryHeatingAsset.removeEnergyAsset();
			J_EAConversionHeatPump heatPump;
			J_EAConsumption heatDemandAsset = findFirst(gc.c_consumptionAssets, j_ea -> j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);
			if (heatDemandAsset != null) { // als house een standaard warmtebehoefte profiel heeft
				heatPump = new J_EAConversionHeatPump(gc, zero_Interface.energyModel.p_timeStep_h, heatDemandAsset.yearlyDemandHeat_kWh/8760*10 / 3, 0.5, zero_Interface.energyModel.v_currentAmbientTemperature_degC, 60, "AIR", 0, 1);
				
			} 
			else if (gc.p_BuildingThermalAsset != null){ //als huis een building heatmodel heeft
				heatPump = new J_EAConversionHeatPump(gc, zero_Interface.energyModel.p_timeStep_h, 5, 0.5, zero_Interface.energyModel.v_currentAmbientTemperature_degC, 60, "AIR", 0, 1);
				//J_EAStorageHeat buffer = new J_EAStorageHeat(gc, OL_EAStorageTypes.HEATBUFFER, 10, 0, energyModel.p_timeStep_h, 75, 15, 90, 50, 50000, "AIR" );
				//Agent parentAgent, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType 
				//voeg heatbuffer toe
			}
			else { //anders moet het huis een heatProfiel krijgen
				J_EAProfile heatDemandProfile = (J_EAProfile)findFirst(gc.c_profileAssets, x->x instanceof J_EAProfile && x.energyCarrierConsumed == OL_EnergyCarrierType.HEAT);
				double peakHeatDemand_kW = Arrays.stream(heatDemandProfile.a_energyProfile_kWh).max().orElseThrow(() -> new RuntimeException());
				heatPump = new J_EAConversionHeatPump(gc, zero_Interface.energyModel.p_timeStep_h, peakHeatDemand_kW / 3, 0.5, zero_Interface.energyModel.v_currentAmbientTemperature_degC, 60, "AIR", 0, 1);
			}
			nbHeatPumps ++;
			zero_Interface.c_orderedHeatingSystemsHouses.remove(gc);
			zero_Interface.c_orderedHeatingSystemsHouses.add(0, gc);		 
		} 
		else {
			traceln("No more gasburners to replace!");
			break;
		}	
	}	
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256269495</Id>
					<Name><![CDATA[f_setHeatingSliders]]></Name>
					<Description><![CDATA[Function that calculates all the values of the other sliders and sets them without calling an action. Takes as parameters the index of the slider which should not be touched as well as all the sliders. HybridHeatPump and DistrictHeating sliders are optional and an argument of null can be passed. ]]></Description>
					<X>110</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[sliderIndex]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gasBurnerSlider]]></Name>
						<Type><![CDATA[ShapeSlider]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[heatPumpSlider]]></Name>
						<Type><![CDATA[ShapeSlider]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[hybridHeatPumpSlider]]></Name>
						<Type><![CDATA[ShapeSlider]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[districtHeatingSlider]]></Name>
						<Type><![CDATA[ShapeSlider]]></Type>
					</Parameter>
					<Body><![CDATA[double pct_naturalGasBurner = gasBurnerSlider.getValue();
double pct_electricHeatPump = heatPumpSlider.getValue();
double pct_hybridHeatPump = 0;
double pct_districtHeating = 0;

if ( hybridHeatPumpSlider != null ) {
	pct_hybridHeatPump = hybridHeatPumpSlider.getValue();
}
if ( districtHeatingSlider != null ) {
	pct_districtHeating = districtHeatingSlider.getValue();
}

//Set array with pct values
double pctArray[] = {pct_naturalGasBurner, pct_electricHeatPump, pct_hybridHeatPump, pct_districtHeating};
double pctExcess = Arrays.stream(pctArray).sum() - 100;
for (int i = 0; i < 4; i++){
	if (i != (int) sliderIndex) {
		pctArray[i] = max(0, pctArray[i] - pctExcess);
		pctExcess = Arrays.stream(pctArray).sum() - 100;
	}
}
if (pctExcess != 0) {
	traceln("Sliders don't add up to 100%!");
}

// Set Sliders
gasBurnerSlider.setValue(pctArray[0], false);
heatPumpSlider.setValue(pctArray[1], false);
if ( hybridHeatPumpSlider != null ) {
	hybridHeatPumpSlider.setValue(pctArray[2], false);
}
if ( districtHeatingSlider != null ) {
	districtHeatingSlider.setValue(pctArray[3], false);
}
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722335783993</Id>
					<Name><![CDATA[f_setDemandReductionHeatingCompanies]]></Name>
					<Description><![CDATA[Function that reduces the heat demand of all consumption assets. Takes as an argument a percentage to reduce by compared to the default value of the consumption assets.]]></Description>
					<X>70</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[demandReduction_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double newHeatDemandReduction_pct = demandReduction_pct;
double consumptionScaling_fr = 1  - newHeatDemandReduction_pct/100;

for (J_EA j_ea : zero_Interface.energyModel.f_getEnergyAssets()){
	Agent parentGC = j_ea.getParentAgent();
	if(parentGC != null && parentGC instanceof GCUtility){
		if (j_ea instanceof J_EAConsumption) {
			if (j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND) {
				((J_EAConsumption)j_ea).setConsumptionScaling_fr(consumptionScaling_fr);
			}
		}
		if (j_ea instanceof J_EAProfile) {
			if (((J_EAProfile) j_ea).energyCarrierConsumed == OL_EnergyCarrierType.HEAT) {
				((J_EAProfile) j_ea).resetEnergyProfile();
				((J_EAProfile) j_ea).scaleEnergyProfile(consumptionScaling_fr);
			}
		}
	}
}


v_heatDemandReductionCompanies_pct = newHeatDemandReduction_pct;
 
zero_Interface.f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727269173559</Id>
					<Name><![CDATA[f_setDemandReductionHeatingHouses]]></Name>
					<Description><![CDATA[Function that reduces the heat demand of all consumption assets. Takes as an argument a percentage to reduce by compared to the default value of the consumption assets.]]></Description>
					<X>70</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[demandReduction_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double newHeatDemandReduction_pct = demandReduction_pct;
double consumptionScaling_fr = 1  - newHeatDemandReduction_pct/100;

for (J_EA j_ea : zero_Interface.energyModel.f_getEnergyAssets()){
	Agent parentGC = j_ea.getParentAgent();
	if(parentGC != null && parentGC instanceof GCHouse){
		if (j_ea instanceof J_EAConsumption) {
			if (j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND) {
				((J_EAConsumption)j_ea).setConsumptionScaling_fr(consumptionScaling_fr);
			}
		}
		if (j_ea instanceof J_EAProfile) {
			if (((J_EAProfile) j_ea).energyCarrierConsumed == OL_EnergyCarrierType.HEAT) {
				((J_EAProfile) j_ea).resetEnergyProfile();
				((J_EAProfile) j_ea).scaleEnergyProfile(consumptionScaling_fr);
			}
		}
	}
}


v_heatDemandReductionHouses_pct = newHeatDemandReduction_pct;
 
zero_Interface.f_resetSettings();]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1722253108626</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1722253115477</Id>
					<Name><![CDATA[uI_Tabs]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[UI_Tabs]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
				<ContainerLink>
					<Id>1722253115479</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>150</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Interface]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1722253108632</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1722350093699</Id>
					<Name><![CDATA[rect_genericFunctions]]></Name>
					<X>10</X><Y>460</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-4144960</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>450</Width>
					<Height>470</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722350093702</Id>
					<Name><![CDATA[t_genericFunctions]]></Name>
					<X>100</X><Y>480</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Generic Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>22</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1722253128676</Id>
					<Name><![CDATA[gr_heatDemandSliders]]></Name>
					<X>185</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1722253128678</Id>
					<Name><![CDATA[rect_heatDemandSliders]]></Name>
					<X>-185</X><Y>-175</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-6943</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722253128680</Id>
					<Name><![CDATA[t_gasBurnerHouseholdsDescription]]></Name>
					<X>-160</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[HR ketel aardgas]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128682</Id>
					<Name><![CDATA[t_hybridHeatPumpHouseholdsDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-160</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Hybride warmtepomp]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128684</Id>
					<Name><![CDATA[t_electricHeatPumpHouseholdsDescription]]></Name>
					<X>-160</X><Y>85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elek. warmtepomp]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128686</Id>
					<Name><![CDATA[t_districtHeatingHouseholdsDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-160</X><Y>135</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Warmtenet]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128688</Id>
					<Name><![CDATA[t_electricHeatPumpHouseholds_pct]]></Name>
					<X>45</X><Y>85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_electricHeatPumpHouseholds_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253128690</Id>
					<Name><![CDATA[t_gasBurnerHouseholds_pct]]></Name>
					<X>45</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_gasBurnerHouseholds_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253128692</Id>
					<Name><![CDATA[t_districtHeatingHouseholds_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>135</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_districtHeatingHouseholds_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253128694</Id>
					<Name><![CDATA[t_hybridHeatPumpHouseholds_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_hybridHeatPumpHouseholds_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128696</Id>
					<Name><![CDATA[sl_districtHeatingHouseholds_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>130</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<VisibleCode><![CDATA[false]]></VisibleCode>
						<Enabled>false</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");
//f_setHeatingSliders(3);
//f_resetNeighborhoodHeatingSystems(4);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128698</Id>
					<Name><![CDATA[sl_gasBurnerHouseholds_pct]]></Name>
					<X>75</X><Y>55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setHeatingSliders( 0, sl_gasBurnerHouseholds_pct, sl_electricHeatPumpHouseholds_pct, null, null );
f_setHeatingSystemsHouseholds( sl_electricHeatPumpHouseholds_pct.getValue() );
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128700</Id>
					<Name><![CDATA[sl_hybridHeatPumpHouseholds_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<VisibleCode><![CDATA[false]]></VisibleCode>
						<Enabled>false</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");
//f_setHeatingSliders(2);
//f_resetNeighborhoodHeatingSystems(3);
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128702</Id>
					<Name><![CDATA[sl_electricHeatPumpHouseholds_pct]]></Name>
					<X>75</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setHeatingSliders( 1, sl_gasBurnerHouseholds_pct, sl_electricHeatPumpHouseholds_pct, null, null );
f_setHeatingSystemsHouseholds( sl_electricHeatPumpHouseholds_pct.getValue() );
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128704</Id>
					<Name><![CDATA[sl_heatDemandReductionHouseholds_pct]]></Name>
					<X>75</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setDemandReductionHeatingHouses( sl_heatDemandReductionHouseholds_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722253128706</Id>
					<Name><![CDATA[t_heatDemandReductionHouseholds_pct]]></Name>
					<X>45</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandReductionHouseholds_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253128708</Id>
					<Name><![CDATA[t_heatDemandReductionHouseholdsDescription]]></Name>
					<X>-160</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Besparing warmte]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128710</Id>
					<Name><![CDATA[t_householdsDescription]]></Name>
					<X>-170</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128712</Id>
					<Name><![CDATA[sl_heatDemandReductionCompanies_pct]]></Name>
					<X>75</X><Y>-145</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setDemandReductionHeatingCompanies( sl_heatDemandReductionCompanies_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722253128714</Id>
					<Name><![CDATA[t_heatDemandReductionCompaniesDescription]]></Name>
					<X>-165</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Besparing warmte]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128716</Id>
					<Name><![CDATA[t_heatDemandReductionCompanies_pct]]></Name>
					<X>45</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandReductionCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253128718</Id>
					<Name><![CDATA[t_gasBurnerCompaniesDescription]]></Name>
					<X>-165</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[HR ketel aardgas]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128720</Id>
					<Name><![CDATA[t_hybridHeatPumpCompaniesDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-165</X><Y>-55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Hybride warmtepomp]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128722</Id>
					<Name><![CDATA[t_electricHeatPumpCompaniesDescription]]></Name>
					<X>-165</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elek. warmtepomp]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128724</Id>
					<Name><![CDATA[t_districtHeatingCompaniesDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-165</X><Y>-30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Warmtenet]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253128726</Id>
					<Name><![CDATA[t_electricHeatPumpCompanies_pct]]></Name>
					<X>45</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_electricHeatPumpCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253128728</Id>
					<Name><![CDATA[t_gasBurnerCompanies_pct]]></Name>
					<X>45</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_gasBurnerCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253128730</Id>
					<Name><![CDATA[t_districtHeatingCompanies_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>-30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_districtHeatingCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253128732</Id>
					<Name><![CDATA[t_hybridHeatPumpCompanies_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>-55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_hybridHeatPumpCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128734</Id>
					<Name><![CDATA[sl_districtHeatingCompanies_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>-35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<VisibleCode><![CDATA[false]]></VisibleCode>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(3);
//f_resetNeighborhoodHeatingSystems(4);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128736</Id>
					<Name><![CDATA[sl_gasBurnerCompanies_pct]]></Name>
					<X>75</X><Y>-110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setHeatingSliders( 0, sl_gasBurnerCompanies_pct, sl_electricHeatPumpCompanies_pct, null, null );
f_setHeatingSystemsCompanies( sl_electricHeatPumpCompanies_pct.getValue() );

zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128738</Id>
					<Name><![CDATA[sl_hybridHeatPumpCompanies_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<VisibleCode><![CDATA[false]]></VisibleCode>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(2);
//f_resetNeighborhoodHeatingSystems(3);
//sl_hybridHeatPumpCompanies.]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253128740</Id>
					<Name><![CDATA[sl_electricHeatPumpCompanies_pct]]></Name>
					<X>75</X><Y>-85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setHeatingSliders( 1, sl_gasBurnerCompanies_pct, sl_electricHeatPumpCompanies_pct, null, null );
f_setHeatingSystemsCompanies( sl_electricHeatPumpCompanies_pct.getValue() );

zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722254471242</Id>
					<Name><![CDATA[t_companiesDescription]]></Name>
					<X>-170</X><Y>-165</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Bedrijven]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1722253134565</Id>
					<Name><![CDATA[gr_heatDemandSlidersResidentialArea]]></Name>
					<X>585</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[185]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1722253134567</Id>
					<Name><![CDATA[rect_heatDemandSlidersResidentialArea]]></Name>
					<X>-185</X><Y>-175</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-6943</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722253134569</Id>
					<Name><![CDATA[t_householdsGasBurnerDescription]]></Name>
					<X>-165</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[HR ketel aardgas]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253134571</Id>
					<Name><![CDATA[t_householdsHybridHeatPumpDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-165</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Hybride warmtepomp]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253134573</Id>
					<Name><![CDATA[t_householdsElectricHeatPumpDescription]]></Name>
					<X>-165</X><Y>35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elek. warmtepomp]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253134575</Id>
					<Name><![CDATA[t_householdsDistrictHeatingDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-165</X><Y>85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Warmtenet]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253134577</Id>
					<Name><![CDATA[t_householdsElectricHeatPump_pct]]></Name>
					<X>45</X><Y>35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253134579</Id>
					<Name><![CDATA[t_householdsGasBurner_pct]]></Name>
					<X>45</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253134581</Id>
					<Name><![CDATA[t_householdsDistrictHeating_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-4144960</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsDistrictHeating_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253134583</Id>
					<Name><![CDATA[t_householdsHybridHeatPump_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-4144960</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsHybridHeatPump_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253134585</Id>
					<Name><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsDistrictHeating_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>false</Enabled>
						<ActionCode><![CDATA[f_setHeatingSlidersHouseholds(3);
f_setHeatingSystemsHouseholds();
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253134587</Id>
					<Name><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct]]></Name>
					<X>75</X><Y>5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setHeatingSliders( 0, sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct, sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct, null, null );
f_setHeatingSystemsHouseholds( sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct.getValue() );
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[100]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253134589</Id>
					<Name><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsHybridHeatPump_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>false</Enabled>
						<ActionCode><![CDATA[f_setHeatingSlidersHouseholds(2);
f_setHeatingSystemsHouseholds();
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253134591</Id>
					<Name><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct]]></Name>
					<X>75</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setHeatingSliders( 1, sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct, sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct, null, null );
f_setHeatingSystemsHouseholds( sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct.getValue() );
]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253134593</Id>
					<Name><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsHeatDemandReduction_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>-100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>false</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");
//p_heatDemandReduction = (100 - sl_heatDemandReduction.getValue()) / 100;
//t_heatDemandReduction.setText(sl_heatDemandReduction.getValue() + "%");

zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722253134595</Id>
					<Name><![CDATA[t_householdsHeatDemandReduction_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>-95</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersResidentialAreaHouseholdsHeatDemandReduction_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722253134597</Id>
					<Name><![CDATA[t_householdsHeatDemandReductionDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-165</X><Y>-95</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Warmtebesparing met isolatie]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253134599</Id>
					<Name><![CDATA[t_householdsHeatingDescription]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-165</X><Y>-130</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens verwarming]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253134601</Id>
					<Name><![CDATA[t_householdsHeatingTypeDescription]]></Name>
					<X>-165</X><Y>-25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Verwarmingstechnologie]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1722326800106</Id>
					<Name><![CDATA[gr_heatDemandSlidersCompanies]]></Name>
					<X>985</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[185]]></XCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1722326800108</Id>
					<Name><![CDATA[rect_heatDemandSliders1]]></Name>
					<X>-185</X><Y>-175</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-6943</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722326800142</Id>
					<Name><![CDATA[sl_heatDemandSlidersCompaniesHeatDemandReductionCompanies_pct]]></Name>
					<X>75</X><Y>-145</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setDemandReductionHeatingCompanies( sl_heatDemandReductionCompanies_pct.getValue() );]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722326800144</Id>
					<Name><![CDATA[t_heatDemandReductionCompaniesDescription1]]></Name>
					<X>-165</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Besparing warmte]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722326800146</Id>
					<Name><![CDATA[t_heatDemandReductionCompanies_pct1]]></Name>
					<X>45</X><Y>-140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersCompaniesHeatDemandReductionCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722326800148</Id>
					<Name><![CDATA[t_gasBurnerCompaniesDescription1]]></Name>
					<X>-165</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[HR ketel aardgas]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722326800150</Id>
					<Name><![CDATA[t_hybridHeatPumpCompaniesDescription1]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-165</X><Y>-55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Hybride warmtepomp]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722326800152</Id>
					<Name><![CDATA[t_electricHeatPumpCompaniesDescription1]]></Name>
					<X>-165</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Elek. warmtepomp]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722326800154</Id>
					<Name><![CDATA[t_districtHeatingCompaniesDescription1]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-165</X><Y>-30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Warmtenet]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722326800156</Id>
					<Name><![CDATA[t_electricHeatPumpCompanies_pct1]]></Name>
					<X>45</X><Y>-80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722326800158</Id>
					<Name><![CDATA[t_gasBurnerCompanies_pct1]]></Name>
					<X>45</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722326800160</Id>
					<Name><![CDATA[t_districtHeatingCompanies_pct1]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>-30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersCompaniesDistrictHeatingCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722326800162</Id>
					<Name><![CDATA[t_hybridHeatPumpCompanies_pct1]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>45</X><Y>-55</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_heatDemandSlidersCompaniesHybridHeatPumpCompanies_pct.getIntValue() + "%"]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722326800164</Id>
					<Name><![CDATA[sl_heatDemandSlidersCompaniesDistrictHeatingCompanies_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>-35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<VisibleCode><![CDATA[false]]></VisibleCode>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(3);
//f_resetNeighborhoodHeatingSystems(4);]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722326800166</Id>
					<Name><![CDATA[sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct]]></Name>
					<X>75</X><Y>-110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setHeatingSliders( 0, sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct, sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct, null, null );
f_setHeatingSystemsCompanies( sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct.getValue() );

zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722326800168</Id>
					<Name><![CDATA[sl_heatDemandSlidersCompaniesHybridHeatPumpCompanies_pct]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>75</X><Y>-60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<VisibleCode><![CDATA[false]]></VisibleCode>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(2);
//f_resetNeighborhoodHeatingSystems(3);
//sl_hybridHeatPumpCompanies.]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722326800170</Id>
					<Name><![CDATA[sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct]]></Name>
					<X>75</X><Y>-85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setHeatingSliders( 1, sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct, sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct, null, null );
f_setHeatingSystemsCompanies( sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct.getValue() );

zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722326800172</Id>
					<Name><![CDATA[t_companiesDescription1]]></Name>
					<X>-170</X><Y>-165</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Bedrijven]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Rectangle>
					<Id>1722335783989</Id>
					<Name><![CDATA[rect_demandFunctions]]></Name>
					<X>40</X><Y>540</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-8355840</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>390</Width>
					<Height>150</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722335783991</Id>
					<Name><![CDATA[t_demandFunctionsDescription]]></Name>
					<X>240</X><Y>550</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Demand Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Rectangle>
					<Id>1722338183031</Id>
					<Name><![CDATA[rect_heatingFunctions]]></Name>
					<X>90</X><Y>710</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-5952982</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>150</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722338183033</Id>
					<Name><![CDATA[t_heatingFunctionsDescription]]></Name>
					<X>240</X><Y>720</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Heating Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1722253463895</Id>
			<Name><![CDATA[tabEHub]]></Name>
			<AdditionalClassCode><![CDATA[public ShapeGroup getGroupHubSliders() {
	return this.gr_hubSliders;
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
				<ClassName><![CDATA[tabArea]]></ClassName>
			</ExtendsReference>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1722253463901</Id>
				<Name><![CDATA[1722253463901]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1722253463898</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1722253463902</CurrentLevel>
			<ConnectionsId>1722253463896</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1722256365490</Id>
					<Name><![CDATA[b_NFATOListener]]></Name>
					<X>740</X><Y>915</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722256365499</Id>
					<Name><![CDATA[v_nfatoFirstGC]]></Name>
					<X>740</X><Y>855</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[GridConnection]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722256365507</Id>
					<Name><![CDATA[v_nfatoSecondGC]]></Name>
					<X>740</X><Y>875</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[GridConnection]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1722256365515</Id>
					<Name><![CDATA[b_nfatoWeekendDistinction]]></Name>
					<X>740</X><Y>895</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256335789</Id>
					<Name><![CDATA[f_setGridBatteries]]></Name>
					<Description><![CDATA[Function that takes a capacity in MWh as a parameter and sets the first GCGridBattery to this capacity, with the default ratio of storage to electric capacity from the AVGC data.]]></Description>
					<X>1100</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[capacity_MWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// TODO: make this work nicer with the new pause function (when setting capacity to 0 pause again?)

if ( zero_Interface.energyModel.GridBatteries.size() > 0 ){	
	GCGridBattery GC = zero_Interface.energyModel.GridBatteries.get(0);
	if (!GC.v_isActive) {
		GC.f_setActive(true);
	}
	GC.p_batteryAsset.setStorageCapacity_kWh(1000*capacity_MWh);
	double capacityElectric_kW = 1000*capacity_MWh / zero_Interface.energyModel.avgc_data.p_avgRatioBatteryCapacity_v_Power;
	GC.p_batteryAsset.setCapacityElectric_kW(capacityElectric_kW);
	GC.p_physicalConnectionCapacity_kW = capacityElectric_kW;
	GC.p_contractedDeliveryCapacity_kW = capacityElectric_kW;
	GC.p_contractedFeedinCapacity_kW = capacityElectric_kW;
}
else {
	throw new IllegalStateException("Model does not contain any GCGridBattery agent");
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1722256365452</Id>
					<Name><![CDATA[f_setNFATO]]></Name>
					<Description><![CDATA[Sets the relevant parameters in the engine for the NFATO. The first selected GC will receive capacity from the second GC.]]></Description>
					<X>740</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[weekCapacities]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[weekendCapacities]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[GridConnection gc1 = v_nfatoFirstGC;
GridConnection gc2 = v_nfatoSecondGC;

// Reset the GC Capacities if they already had a NF-ATO
gc1.f_nfatoSetConnectionCapacity(true);
gc2.f_nfatoSetConnectionCapacity(true);

switch (rb_deliveryOrFeedin.getValue()) {
	case 0: // Delivery
		// Set the variables of the GCs
		for (int i = 0; i < 24; i++) {
			gc1.v_nfatoWeekDeliveryCapacity_kW[i] += weekCapacities[i];
			gc2.v_nfatoWeekDeliveryCapacity_kW[i] += -weekCapacities[i];
			gc1.v_nfatoWeekendDeliveryCapacity_kW[i] += weekendCapacities[i];
			gc2.v_nfatoWeekendDeliveryCapacity_kW[i] += -weekendCapacities[i];
		}
		break;
		
	case 1: // Feed In
		// Set the variables of the GCs
		for (int i = 0; i < 24; i++) {
			gc1.v_nfatoWeekFeedinCapacity_kW[i] += weekCapacities[i];
			gc2.v_nfatoWeekFeedinCapacity_kW[i] += -weekCapacities[i];
			gc1.v_nfatoWeekendFeedinCapacity_kW[i] += weekendCapacities[i];
			gc2.v_nfatoWeekendFeedinCapacity_kW[i] += -weekendCapacities[i];
		}
		break;
		
	case 2: // Both
		// Set the variables of the GCs
		for (int i = 0; i < 24; i++) {
			gc1.v_nfatoWeekDeliveryCapacity_kW[i] += weekCapacities[i];
			gc2.v_nfatoWeekDeliveryCapacity_kW[i] += -weekCapacities[i];
			gc1.v_nfatoWeekendDeliveryCapacity_kW[i] += weekendCapacities[i];
			gc2.v_nfatoWeekendDeliveryCapacity_kW[i] += -weekendCapacities[i];
			
			gc1.v_nfatoWeekFeedinCapacity_kW[i] += weekCapacities[i];
			gc2.v_nfatoWeekFeedinCapacity_kW[i] += -weekCapacities[i];
			gc1.v_nfatoWeekendFeedinCapacity_kW[i] += weekendCapacities[i];
			gc2.v_nfatoWeekendFeedinCapacity_kW[i] += -weekendCapacities[i];
		}	
		break;
		
	default:
		throw new IllegalStateException("Invalid Setting in rb_deliveryOrFeedin");
}

// Update the Connection Capacity if it is needed at the current time
gc1.f_nfatoSetConnectionCapacity(false);
gc2.f_nfatoSetConnectionCapacity(false);

gc1.v_enableNFato = true;
gc2.v_enableNFato = true;]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256365459</Id>
					<Name><![CDATA[f_checkGISRegion]]></Name>
					<Description><![CDATA[When b_NFATOListener is true checks wether the selected coordinates are a valid GC for the NFATO. If so saves the GC and updates the text fields]]></Description>
					<X>740</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[clickx]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[clicky]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//Check if click was on Building
for ( GIS_Building b : zero_Interface.energyModel.pop_GIS_Buildings ){
	if( b.gisRegion != null && b.gisRegion.contains(clickx, clicky) ){
		if (b.gisRegion.isVisible()) {
			GridConnection GC = b.c_containedGridConnections.get(0);
			if (GC != null && GC != v_nfatoFirstGC) {
				// found a valid GC
				// Check if it is the first GC
				if (v_nfatoFirstGC == null) {
					t_nfatoFirstBuilding.setText(GC.p_ownerID + " zal ontvangen");
					t_nfatoSecondBuilding.setText("Klik op een gebouw dat zijn capaciteit gaat afstaan");
					v_nfatoFirstGC = GC;
					//for (GIS_Building b : GC.c_connectedBuildings) {
						//b.gisRegion.setFillColor(v_selectionColorAddBuildings);
					//}
				}
				else {
					v_nfatoSecondGC = GC;
					t_nfatoSecondBuilding.setText(GC.p_ownerID + " zal leveren");
					//for (GIS_Building b : GC.c_connectedBuildings) {
						//b.gisRegion.setFillColor(v_selectionColorAddBuildings);
					//}
					// We found two buildings, return to the default clicking functionality
					b_NFATOListener = false;
				}
			}
		}
	}
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1722256365466</Id>
					<Name><![CDATA[f_checkNFATO]]></Name>
					<Description><![CDATA[Checks if the current NFATO settings could generate a valid contract. Returns true if NFATO is possible.]]></Description>
					<X>740</X><Y>760</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[weekCapacities]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[weekendCapacities]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[GridConnection gc1 = v_nfatoFirstGC;
GridConnection gc2 = v_nfatoSecondGC;

if (gc1 == null || gc2 == null || gc1 == gc2) {
	throw new IllegalStateException("Invalid Non-Firm ATO Settings, Please select two gridconnections");
}

double[] weekTestDelivery = new double[24];
double[] weekendTestDelivery = new double[24];
double[] weekTestFeedin = new double[24];
double[] weekendTestFeedin = new double[24];

double maxDeliveryCapacity_kW;
double maxFeedinCapacity_kW;
		
switch (rb_deliveryOrFeedin.getValue()) {
	case 0: // Delivery
		for (int i = 0; i < 24; i++) {
			weekTestDelivery[i] = weekCapacities[i] - gc2.v_nfatoWeekDeliveryCapacity_kW[i];
			weekendTestDelivery[i] = weekendCapacities[i] - gc2.v_nfatoWeekendDeliveryCapacity_kW[i];
		}
		maxDeliveryCapacity_kW = max(max(weekTestDelivery), max(weekendTestDelivery));
		// Reset the GC Capacity in case they already had a NF-ATO
		gc2.f_nfatoSetConnectionCapacity(true);
		// Check if gc2 has enough capacity with the original connection capacity
		if ( maxDeliveryCapacity_kW > gc2.p_contractedDeliveryCapacity_kW ) {
			// Restore previous NF-ATO
			gc2.f_nfatoSetConnectionCapacity(false);
			throw new IllegalStateException("Invalid Non-Firm ATO Settings, " + gc2.p_ownerID + " does not have a delivery capacity of " + maxDeliveryCapacity_kW + " kW available");
		}
		else {
			// Restore previous NF-ATO
			gc2.f_nfatoSetConnectionCapacity(false);
			return true;
		}
		
	case 1: // Feed In
		for (int i = 0; i < 24; i++) {
			weekTestFeedin[i] = weekCapacities[i] - gc2.v_nfatoWeekFeedinCapacity_kW[i];
			weekendTestFeedin[i] = weekendCapacities[i] - gc2.v_nfatoWeekendFeedinCapacity_kW[i];
		}
		maxFeedinCapacity_kW = max(max(weekTestFeedin), max(weekendTestFeedin));
		// Reset the GC Capacity in case they already had a NF-ATO
		gc2.f_nfatoSetConnectionCapacity(true);
		// Check if gc2 has enough capacity with the original connection capacity
		if ( maxFeedinCapacity_kW > gc2.p_contractedFeedinCapacity_kW ) {
			// Restore previous NF-ATO
			gc2.f_nfatoSetConnectionCapacity(false);
			throw new IllegalStateException("Invalid Non-Firm ATO Settings, " + gc2.p_ownerID + " does not have a feed in capacity of " + maxFeedinCapacity_kW + " kW available");
		}
		else {
			// Restore previous NF-ATO
			gc2.f_nfatoSetConnectionCapacity(false);
			return true;
		}
		
	case 2: // Both
		for (int i = 0; i < 24; i++) {
			weekTestDelivery[i] = weekCapacities[i] - gc2.v_nfatoWeekDeliveryCapacity_kW[i];
			weekendTestDelivery[i] = weekendCapacities[i] - gc2.v_nfatoWeekendDeliveryCapacity_kW[i];
		}
		for (int i = 0; i < 24; i++) {
			weekTestFeedin[i] = weekCapacities[i] - gc2.v_nfatoWeekFeedinCapacity_kW[i];
			weekendTestFeedin[i] = weekendCapacities[i] - gc2.v_nfatoWeekendFeedinCapacity_kW[i];
		}
		
		maxDeliveryCapacity_kW = max(max(weekTestDelivery), max(weekendTestDelivery));
		maxFeedinCapacity_kW = max(max(weekTestFeedin), max(weekendTestFeedin));
		// Reset the GC Capacity in case they already had a NF-ATO
		gc2.f_nfatoSetConnectionCapacity(true);
		// Check if gc2 has enough capacity with the original connection capacity
		if ( maxDeliveryCapacity_kW > gc2.p_contractedDeliveryCapacity_kW ) {
			// Restore previous NF-ATO
			gc2.f_nfatoSetConnectionCapacity(false);
			throw new IllegalStateException("Invalid Non-Firm ATO Settings, " + gc2.p_ownerID + " does not have a delivery capacity of " + maxDeliveryCapacity_kW + " kW available");
		}
		else if ( maxFeedinCapacity_kW > gc2.p_contractedFeedinCapacity_kW ) {
			// Restore previous NF-ATO
			gc2.f_nfatoSetConnectionCapacity(false);
			throw new IllegalStateException("Invalid Non-Firm ATO Settings, " + gc2.p_ownerID + " does not have a feed in capacity of " + maxFeedinCapacity_kW + " kW available");
		}
		else {
			// Restore previous NF-ATO
			gc2.f_nfatoSetConnectionCapacity(false);
			return true;
		}
		
	default:
		throw new IllegalStateException("Invalid Setting in rb_deliveryOrFeedin");
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[][]]]></ReturnType>
					<Id>1722256365474</Id>
					<Name><![CDATA[f_constructNFATOArrays]]></Name>
					<Description><![CDATA[Uses the NFATO slider values to construct two arrays of the change in capacity at every hour. One array for weekdays, one for weekends]]></Description>
					<X>740</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Construct arrays from slider values
// Week
int weekStart_h = (int) sl_nfatoWeekStartTime.getValue();
int weekEnd_h = (int) sl_nfatoWeekEndTime.getValue();
int weekCapacity_kW = (int) sl_nfatoWeekCapacity.getValue();

double[] weekCapacities = new double[24];
double[] weekendCapacities = new double[24];

if (weekStart_h < weekEnd_h) {
	for (int i = 0; i < weekStart_h; i++) {
		weekCapacities[i] = 0;
	}
	for (int j = weekStart_h; j < weekEnd_h; j ++) {
		weekCapacities[j] = weekCapacity_kW;
	}
	for (int k = weekEnd_h; k < 24; k ++) {
		weekCapacities[k] = 0;
	}
}
else { // If the start time is higher than the end time we share capacity at night
	for (int i = 0; i < weekEnd_h; i++) {
		weekCapacities[i] = weekCapacity_kW;
	}
	for (int j = weekEnd_h; j < weekStart_h ; j ++) {
		weekCapacities[j] = 0;
	}
	for (int k = weekStart_h; k < 24; k ++) {
		weekCapacities[k] = weekCapacity_kW;
	}
}

if (b_nfatoWeekendDistinction) {
	// repeat above code for weekend
	int weekendStart_h = (int) sl_nfatoWeekendStartTime.getValue();
	int weekendEnd_h = (int) sl_nfatoWeekendEndTime.getValue();
	int weekendCapacity_kW = (int) sl_nfatoWeekendCapacity.getValue();
	
	
	if (weekendStart_h < weekendEnd_h) {
		for (int i = 0; i < weekendStart_h; i++) {
			weekendCapacities[i] = 0;
		}
		for (int j = weekendStart_h; j < weekendEnd_h; j ++) {
			weekendCapacities[j] = weekendCapacity_kW;
		}
		for (int k = weekendEnd_h; k < 24; k ++) {
			weekendCapacities[k] = 0;
		}
	}
	else { // If the start time is higher than the end time we share capacity at night
		for (int i = 0; i < weekendEnd_h; i++) {
			weekendCapacities[i] = weekendCapacity_kW;
		}
		for (int j = weekendEnd_h; j < weekendStart_h; j ++) {
			weekendCapacities[j] = 0;
		}
		for (int k = weekendStart_h; k < 24; k ++) {
			weekendCapacities[k] = weekendCapacity_kW;
		}
	}
}
else {
	// no distinction means the settings are the same during the weekend
	weekendCapacities = weekCapacities;
}

double[][] arr = {weekCapacities, weekendCapacities};
return arr;]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256365483</Id>
					<Name><![CDATA[f_resetNFATOSettings]]></Name>
					<Description><![CDATA[Resets the group of NFATO Settings after a contract is added or canceled.]]></Description>
					<X>740</X><Y>820</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[t_nfatoFirstBuilding.setText("Klik op een gebouw dat capaciteit gaat ontvangen");
t_nfatoSecondBuilding.setText("");
v_nfatoFirstGC = null;
v_nfatoSecondGC = null;
b_NFATOListener = false;]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1722256998182</Id>
					<Name><![CDATA[f_setTab]]></Name>
					<Description><![CDATA[Function that ensures the correct tab is visible]]></Description>
					<X>480</X><Y>710</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[selectedTabType]]></Name>
						<Type><![CDATA[EnergyDemandTab]]></Type>
					</Parameter>
					<Body><![CDATA[if (selectedTabType == EnergyDemandTab.NFATO) {
	gr_nfatoSettings.setVisible(true);
	gr_hubSliders.setVisible(false);
}
else {
	gr_nfatoSettings.setVisible(false);
	gr_hubSliders.setVisible(true);
}]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1722253463896</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1722253479511</Id>
					<Name><![CDATA[uI_Tabs]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[UI_Tabs]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
				<ContainerLink>
					<Id>1722253479513</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>150</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Interface]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1722253463902</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1722344806530</Id>
					<Name><![CDATA[rect_generalFunctions]]></Name>
					<X>450</X><Y>650</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>200</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1722344586686</Id>
					<Name><![CDATA[rect_nfatoFunctions]]></Name>
					<X>700</X><Y>650</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16711936</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>300</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Group>
					<Id>1722253487925</Id>
					<Name><![CDATA[gr_hubSliders]]></Name>
					<X>185</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1722253487927</Id>
					<Name><![CDATA[rect_hubSliders]]></Name>
					<X>-185</X><Y>-175</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-3736634</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253487935</Id>
					<Name><![CDATA[cb_spreadChargingEVs]]></Name>
					<X>75</X><Y>-112</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="40" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (cb_spreadChargingEVs.isSelected()) {
	cb_powerChargingEVs.setSelected(false);
	zero_Interface.energyModel.f_getGridConnections().forEach(x -> x.p_chargingAttitudeVehicles = OL_ChargingAttitude.MAX_SPREAD);
} else {
	zero_Interface.energyModel.f_getGridConnections().forEach(x -> x.p_chargingAttitudeVehicles = OL_ChargingAttitude.SIMPLE);
}
zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[]]></LabelText>
						<LinkTo>false</LinkTo>
	 				</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722253487937</Id>
					<Name><![CDATA[t_collectiveBatteries1]]></Name>
					<X>35</X><Y>-45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[#]]></Text>
					<TextCode><![CDATA[sl_collectiveBattery_MWh.getIntValue() + " MWh"]]></TextCode>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1722253487939</Id>
					<Name><![CDATA[t_spreadChargingEVsDescription]]></Name>
					<X>-170</X><Y>-105</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Max Spread laden elek. trucks]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253487941</Id>
					<Name><![CDATA[sl_collectiveBattery_MWh]]></Name>
					<X>70</X><Y>-50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setGridBatteries(sl_collectiveBattery_MWh.getValue());

zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722253487943</Id>
					<Name><![CDATA[t_curtailmentDescription]]></Name>
					<X>-170</X><Y>-130</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Curtailment opwek]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253487945</Id>
					<Name><![CDATA[t_collectiveBatteryDescription]]></Name>
					<X>-170</X><Y>-45</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Collectieve batterijen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253487947</Id>
					<Name><![CDATA[cb_curtailment]]></Name>
					<X>75</X><Y>-138</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="40" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (cb_curtailment.isSelected()) {
	for (GridConnection GC : zero_Interface.energyModel.f_getGridConnections()) {
		GC.v_enableCurtailment = true;
	}
}
else {
	for (GridConnection GC : zero_Interface.energyModel.f_getGridConnections()) {
		GC.v_enableCurtailment = false;
	}
}
zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[]]></LabelText>
						<LinkTo>false</LinkTo>
	 				</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253487949</Id>
					<Name><![CDATA[button_add_nfato]]></Name>
					<X>-170</X><Y>15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="160" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[/*
if (v_NFATOListener) {
	// This should not be reachable anymore
	traceln("Quitting NF ATO settings");
	v_NFATOListener = false;
	return;
}
*/

if (zero_Interface.v_clickedObjectType != null && zero_Interface.v_clickedObjectType == OL_GISObjectType.BUILDING && zero_Interface.c_selectedGridConnections.size() != 0) {
	v_nfatoFirstGC = zero_Interface.c_selectedGridConnections.get(0);
	t_nfatoFirstBuilding.setText(v_nfatoFirstGC.p_ownerID + " zal ontvangen");
	t_nfatoSecondBuilding.setText("Klik op een gebouw dat zijn capaciteit gaat afstaan");	
}

// When this boolean is true clicking on the GIS Map will select another building for the NF ATO
b_NFATOListener = true;
f_setTab(NFATO);


if (b_nfatoWeekendDistinction) {
	t_nfatoWeek.setVisible(true);
	t_nfatoWeekend.setVisible(true);
	sl_nfatoWeekendStartTime.setVisible(true);
	sl_nfatoWeekendEndTime.setVisible(true);
	sl_nfatoWeekendCapacity.setVisible(true);
}
else {
	t_nfatoWeek.setVisible(false);
	t_nfatoWeekend.setVisible(false);
	sl_nfatoWeekendStartTime.setVisible(false);
	sl_nfatoWeekendEndTime.setVisible(false);
	sl_nfatoWeekendCapacity.setVisible(false);
}


// TODO: Color the companies on the GIS Map (e.g. according to grid topology)]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Voeg Non-Firm ATO toe]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253487951</Id>
					<Name><![CDATA[button_remove_nfato]]></Name>
					<X>0</X><Y>15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="160" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[for (GridConnection GC : zero_Interface.energyModel.f_getGridConnections()) {
	GC.f_nfatoSetConnectionCapacity(true);
	GC.v_enableNFato = false;
	GC.v_nfatoWeekDeliveryCapacity_kW = new double[24];
	GC.v_nfatoWeekendDeliveryCapacity_kW = new double[24];
	GC.v_nfatoWeekFeedinCapacity_kW = new double[24];
	GC.v_nfatoWeekendFeedinCapacity_kW = new double[24];}

zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Verwijder alle NF ATOs]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725277950476</Id>
					<Name><![CDATA[cb_powerChargingEVs]]></Name>
					<X>75</X><Y>-86</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="40" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (cb_powerChargingEVs.isSelected()) {
	cb_spreadChargingEVs.setSelected(false);
	zero_Interface.energyModel.f_getGridConnections().forEach(x -> x.p_chargingAttitudeVehicles = OL_ChargingAttitude.MAX_POWER);
} else {
	zero_Interface.energyModel.f_getGridConnections().forEach(x -> x.p_chargingAttitudeVehicles = OL_ChargingAttitude.SIMPLE);
}
zero_Interface.f_resetSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[]]></LabelText>
						<LinkTo>false</LinkTo>
	 				</ExtendedProperties>
				</Control>
				<Text>
					<Id>1725277950478</Id>
					<Name><![CDATA[t_powerChargingEVsDescription]]></Name>
					<X>-170</X><Y>-79</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Max Power laden elek. trucks]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1722253509588</Id>
					<Name><![CDATA[gr_nfatoSettings]]></Name>
					<X>185</X><Y>575</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<XCode><![CDATA[185]]></XCode>
					<YCode><![CDATA[175]]></YCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1722253509590</Id>
					<Name><![CDATA[rect_nfatoSettings]]></Name>
					<X>-185</X><Y>-175</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>370</Width>
					<Height>350</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-3736634</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722253509592</Id>
					<Name><![CDATA[t_nfatoFirstBuilding]]></Name>
					<X>-160</X><Y>-155</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Klik op een gebouw dat capaciteit gaat ontvangen]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253509594</Id>
					<Name><![CDATA[t_nfatoSecondBuilding]]></Name>
					<X>-160</X><Y>-125</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509596</Id>
					<Name><![CDATA[sl_nfatoWeekStartTime]]></Name>
					<X>-60</X><Y>5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[8]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[24]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509598</Id>
					<Name><![CDATA[cb_nfatoWeekendDistinction]]></Name>
					<X>-160</X><Y>-100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="190" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (b_nfatoWeekendDistinction) {
	t_nfatoWeek.setVisible(true);
	t_nfatoWeekend.setVisible(true);
	sl_nfatoWeekendStartTime.setVisible(true);
	sl_nfatoWeekendEndTime.setVisible(true);
	sl_nfatoWeekendCapacity.setVisible(true);
}
else {
	t_nfatoWeek.setVisible(false);
	t_nfatoWeekend.setVisible(false);
	sl_nfatoWeekendStartTime.setVisible(false);
	sl_nfatoWeekendEndTime.setVisible(false);
	sl_nfatoWeekendCapacity.setVisible(false);
}]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="14" Style="0"/>
						<LabelText><![CDATA[verschil week & weekend]]></LabelText>
						<LinkTo>true</LinkTo>
						<Link>b_nfatoWeekendDistinction</Link>
	 				</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509600</Id>
					<Name><![CDATA[sl_nfatoWeekEndTime]]></Name>
					<X>-60</X><Y>35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[20]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[24]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509602</Id>
					<Name><![CDATA[sl_nfatoWeekCapacity]]></Name>
					<X>-60</X><Y>70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[100]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[2000]]></MaxValue>
						<Step><![CDATA[10]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509604</Id>
					<Name><![CDATA[button_confirm_nfato]]></Name>
					<X>-140</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="155" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[if (sl_nfatoWeekStartTime.getValue() == sl_nfatoWeekEndTime.getValue()) {
	traceln("Week start time is the same as end time");
}
else if (sl_nfatoWeekendStartTime.getValue() == sl_nfatoWeekendEndTime.getValue()) {
	traceln("Weekend start time is the same as end time");
}
else {
	double[][] arr = f_constructNFATOArrays();
	//traceln("f_constructNFATOArraysFromSliders: " + Arrays.toString(arr[0]));
	//traceln("f_constructNFATOArraysFromSliders: " + Arrays.toString(arr[1]));
	
	double[] weekCapacities = arr[0];
	double[] weekendCapacities = arr[1];
	
	if (f_checkNFATO(weekCapacities, weekendCapacities)) {	
		f_setNFATO(weekCapacities, weekendCapacities);
		f_setTab(HUB);
		// reset the nfato settings
		f_resetNFATOSettings();
		zero_Interface.f_resetSettings();
	}
}

]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[Voeg Non-Firm ATO toe]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509606</Id>
					<Name><![CDATA[button_cancel_nfato]]></Name>
					<X>90</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="75" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[f_setTab(HUB);
f_resetNFATOSettings();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[cancel]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1722253509608</Id>
					<Name><![CDATA[t_nfatoWeekStartTime]]></Name>
					<X>-165</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Start tijd (uur)]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253509610</Id>
					<Name><![CDATA[t_nfatoWeekEndTime]]></Name>
					<X>-165</X><Y>40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Eind tijd (uur)]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253509612</Id>
					<Name><![CDATA[t_nfatoWeekStartTime2]]></Name>
					<X>-175</X><Y>75</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Capaciteit (kW)]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253509614</Id>
					<Name><![CDATA[t_nfatoWeek]]></Name>
					<X>-30</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Week
]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1722253509616</Id>
					<Name><![CDATA[t_nfatoWeekend]]></Name>
					<X>80</X><Y>-20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Weekend
]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509618</Id>
					<Name><![CDATA[sl_nfatoWeekendStartTime]]></Name>
					<X>62</X><Y>5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[8]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[24]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509620</Id>
					<Name><![CDATA[sl_nfatoWeekendEndTime]]></Name>
					<X>62</X><Y>35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[20]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[24]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1722253509622</Id>
					<Name><![CDATA[sl_nfatoWeekendCapacity]]></Name>
					<X>62</X><Y>70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[100]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[2000]]></MaxValue>
						<Step><![CDATA[10]]></Step>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1725970287541</Id>
					<Name><![CDATA[rb_deliveryOrFeedin]]></Name>
					<X>-160</X><Y>-70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="70" Height="70">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[2]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[Delivery]]></Button>
						<Button><![CDATA[Feed in]]></Button>
						<Button><![CDATA[Both]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
			</Presentation>

				</Group>
				<Text>
					<Id>1722256365442</Id>
					<Name><![CDATA[t_nfatoFunctionsDescription]]></Name>
					<X>850</X><Y>655</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[NF ATO Functions]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1722344870135</Id>
					<Name><![CDATA[t_generalFunctionsDescription]]></Name>
					<X>480</X><Y>660</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[General Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1722344920583</Id>
					<Name><![CDATA[rect_batteryFunctions]]></Name>
					<X>1050</X><Y>650</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16744320</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>300</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1722344920585</Id>
					<Name><![CDATA[t_batteryFunctionsDescription]]></Name>
					<X>1200</X><Y>655</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Battery Functions]]></Text>
					<Font>
						<Name>Dialog</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1726584205528</Id>
			<Name><![CDATA[AVGC_data]]></Name>
			<StartupCode><![CDATA[f_setAVGC_data();]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1726584205523</Id>
				<Name><![CDATA[1726584205523]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1710835200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1726584205524</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1726584205534</CurrentLevel>
			<ConnectionsId>1726584205728</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1726584205532</Id>
					<Name><![CDATA[hourOfYearPerMonth]]></Name>
					<Description><![CDATA[Hour of year per month (not leap year) --> Houdt dit rekening met zomer/winter tijd?]]></Description>
					<X>1070</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int[]]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new int[] {0, 744, 1392, 2136, 2856, 3600, 4320, 5064, 5808, 6528, 7272, 7992}]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205579</Id>
					<Name><![CDATA[p_avgHouseConnectionCapacity_kW]]></Name>
					<Description><![CDATA[https://www.enexis.nl/aansluitingen/welke-aansluiting-heb-ik-nodig
3*25 A --> 3*25*230 = 17.25 kW]]></Description>
					<X>50</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[17.25]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205577</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205582</Id>
					<Name><![CDATA[p_avgHouseHeatingMethod]]></Name>
					<X>50</X><Y>188.976</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridConnectionHeatingType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_GridConnectionHeatingType.GASBURNER]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205580</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205585</Id>
					<Name><![CDATA[p_avgUtilityConnectionCapacity_kW]]></Name>
					<Description><![CDATA[https://www.enexis.nl/aansluitingen/welke-aansluiting-heb-ik-nodig]]></Description>
					<X>50</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[17.25]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205583</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205588</Id>
					<Name><![CDATA[p_avgUtilityHeatingMethod]]></Name>
					<X>50</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridConnectionHeatingType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_GridConnectionHeatingType.GASBURNER]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205586</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205591</Id>
					<Name><![CDATA[p_avgHouseElectricityConsumption_kWh_yr]]></Name>
					<Description><![CDATA[- https://www.milieucentraal.nl/energie-besparen/inzicht-in-je-energierekening/gemiddeld-energieverbruik/
- https://www.overstappen.nl/energie/gemiddeld-energieverbruik/ 
--> 2479 kWh/yr is the average of NL
--> Overwrite if numbers are available in the project selection agent
]]></Description>
					<X>50</X><Y>148.976</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[2479]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205589</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205594</Id>
					<Name><![CDATA[p_avgHouseGasConsumption_m3_yr]]></Name>
					<Description><![CDATA[- https://www.overstappen.nl/energie/gemiddeld-energieverbruik/
- https://www.milieucentraal.nl/energie-besparen/inzicht-in-je-energierekening/gemiddeld-energieverbruik/
 --> 1169 m3 is the average of NL
--> Overwrite if numbers are available in the project selection agent
]]></Description>
					<X>50</X><Y>128.976</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[1169]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205592</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205597</Id>
					<Name><![CDATA[p_shareOfElectricVehicleOwnership]]></Name>
					<Description><![CDATA[share of EVs in the netherlands. --> 5% (feb 2024).

https://www.rvo.nl/onderwerpen/elektrisch-vervoer/stand-van-zaken ]]></Description>
					<X>50</X><Y>208.976</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.05]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205595</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205600</Id>
					<Name><![CDATA[p_ratioHouseInstalledPV]]></Name>
					<Description><![CDATA[How many houses have installed PV in The Netherlands: 25% (end of 2022)
https://solarmagazine.nl/nieuws-zonne-energie/i34591/de-harde-cijfers-drenthe-verstevigt-koppositie-38-procent-woningen-heeft-zonnepanelen]]></Description>
					<X>50</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.25]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205598</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205603</Id>
					<Name><![CDATA[p_avgHousePVInstallationPower_kWp]]></Name>
					<Description><![CDATA[volgens gegevens van het CBS (Centraal Bureau voor de Statistiek) en RVO (Rijksdienst voor Ondernemend Nederland), was het gemiddelde geïnstalleerde piekvermogen van residentiële zonnepanelen in Nederland in 2020 ongeveer 4 kilowatt piek (kWp) per huishouden. --> 4kWp]]></Description>
					<X>50</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[4]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205601</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205606</Id>
					<Name><![CDATA[p_avgEVStorageCar_kWh]]></Name>
					<Description><![CDATA[-https://www.eonenergy.com/electric-vehicle-charging/running-costs-and-benefits/battery-capacity-and-lifespan.html

-https://www.edi.be/blog/laadstation-3/hoe-is-het-gesteld-met-de-autonomie-van-de-elektrische-auto-in-2023-12

40 kWh (kleine autos)

50-80 kWh (middel grote autos) 

80-100 kWh (grote autos)

Minimaal: 116 kWh minimum nodig, anders soms negatieve SOC.]]></Description>
					<X>570</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[116]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205604</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205609</Id>
					<Name><![CDATA[p_avgEVMaxChargePowerCar_kW]]></Name>
					<Description><![CDATA[Bron???]]></Description>
					<X>570</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[11]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205607</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205612</Id>
					<Name><![CDATA[p_avgEVStorageVan_kWh]]></Name>
					<Description><![CDATA[????]]></Description>
					<X>570</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[200]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205610</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205615</Id>
					<Name><![CDATA[p_avgEVStorageTruck_kWh]]></Name>
					<Description><![CDATA[??]]></Description>
					<X>570</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[500]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205613</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205618</Id>
					<Name><![CDATA[p_avgEVMaxChargePowerVan_kW]]></Name>
					<Description><![CDATA[Bron???]]></Description>
					<X>570</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[11]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205616</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205621</Id>
					<Name><![CDATA[p_avgEVMaxChargePowerTruck_kW]]></Name>
					<Description><![CDATA[Bron???]]></Description>
					<X>570</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[200]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205619</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205624</Id>
					<Name><![CDATA[p_avgEVEnergyConsumptionCar_kWhpkm]]></Name>
					<Description><![CDATA[https://ev-database.org/nl/auto/1555/Tesla-Model-3: 0.142 kWh/km

https://www.vattenfall.nl/elektrische-auto/verbruik/

--> Tesla model 3: 15.1 kWh per 100 km --> 0.151 kWh/km
--> Kia niro: 17.1 kWh per 100 km --> 0.171 kWh/km
--> taking 0.16 kWh/km as the average]]></Description>
					<X>570</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.16]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205622</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205627</Id>
					<Name><![CDATA[p_avgEVEnergyConsumptionVan_kWhpkm]]></Name>
					<Description><![CDATA[praktijkverbruik van 26,9 kWh per 100 kilometer:
https://www.debedrijfswagenadviseurs.nl/praktijkverbruik-elektrische-bedrijfswagen/ ]]></Description>
					<X>570</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.269]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205625</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205630</Id>
					<Name><![CDATA[p_avgEVEnergyConsumptionTruck_kWhpkm]]></Name>
					<Description><![CDATA[https://www.elektrischevrachtwagen.nl/post/hoe-ver-kan-een-elektrische-vrachtwagen-rijden, https://topsectorlogistiek.nl/wp-content/uploads/2024/06/20240126_Stappenplan-ZE-vrachtwagens.pdf
0.9 - 1.7 kWh/km
--> pak gemiddelde: 1.3]]></Description>
					<X>570</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[1.3]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205628</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205633</Id>
					<Name><![CDATA[p_gas_kWhpm3]]></Name>
					<Description><![CDATA[- https://www.greenchoice.nl/stroom-en-gas/bosgecompenseerd-gas/hoeveel-is-1-kuub-gas/

- https://www.joostdevree.nl/shtmls/calorische_waarde.shtml]]></Description>
					<X>1070</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[9.7]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205631</Id>
							<Label><![CDATA[p_gas_kWh_per_m3]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205636</Id>
					<Name><![CDATA[p_hydrogenEnergyDensity_kWh_Nm3]]></Name>
					<Description><![CDATA[https://www.enapter.com/kb_post/what-is-the-energy-content-of-hydrogen 

LHV = 3.00 kWh/Nm3
HHV = 3.54 kWh/Nm3]]></Description>
					<X>1590</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[3.00]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205634</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205639</Id>
					<Name><![CDATA[p_hydrogenDensity_kg_Nm3]]></Name>
					<Description><![CDATA[https://keengas.com/gases/hydrogen/]]></Description>
					<X>1590</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.08988]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205637</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205642</Id>
					<Name><![CDATA[p_oxygenDensity_kg_Nm3]]></Name>
					<Description><![CDATA[http://www.uigi.com/o2_conv.html]]></Description>
					<X>1590</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[1.4291]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205640</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205645</Id>
					<Name><![CDATA[p_oxygenProduction_kgO2pkgH2]]></Name>
					<Description><![CDATA[H20 = 2H + O
MM H = 1.008 g/mol
MM O = 16 g/mol
--> 1.008*2/16 = 0.126.
0.126 g waterstof per g water conversie.
1-0.126 = 0.874 g zuurstof per gram water conversie.

--> 1/0.126 =7.9365 gram zuurstof productie per gram waterstof productie.]]></Description>
					<X>1590</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[7.9365]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205643</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205648</Id>
					<Name><![CDATA[p_hydrogenSpecificEnergy_kWh_kg]]></Name>
					<Description><![CDATA[https://www.cenex.co.uk/app/uploads/2021/05/Intro-to-hydrogen-1.pdf --> 33.6]]></Description>
					<X>1590</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[33.6]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205646</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205651</Id>
					<Name><![CDATA[p_diesel_kWhpl]]></Name>
					<Description><![CDATA[https://www.joostdevree.nl/shtmls/calorische_waarde.shtml]]></Description>
					<X>1070</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[10]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205649</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205654</Id>
					<Name><![CDATA[p_avgDieselConsumptionCar_kmpl]]></Name>
					<Description><![CDATA[https://www.unitedconsumers.com/blog/auto/zuinig-rijden.jsp]]></Description>
					<X>570</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[21]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205652</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205657</Id>
					<Name><![CDATA[p_avgGasolineConsumptionCar_kmpl]]></Name>
					<Description><![CDATA[https://www.unitedconsumers.com/blog/auto/zuinig-rijden.jsp]]></Description>
					<X>570</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[15]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205655</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205660</Id>
					<Name><![CDATA[p_gasoline_kWhpl]]></Name>
					<Description><![CDATA[https://www.joostdevree.nl/shtmls/calorische_waarde.shtml]]></Description>
					<X>1070</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[8.8]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205658</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205663</Id>
					<Name><![CDATA[p_avgDieselConsumptionCar_kWhpkm]]></Name>
					<X>570</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[p_diesel_kWhpl/p_avgDieselConsumptionCar_kmpl]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205661</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205666</Id>
					<Name><![CDATA[p_avgGasolineConsumptionCar_kWhpkm]]></Name>
					<X>570</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[p_gasoline_kWhpl/p_avgGasolineConsumptionCar_kmpl]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205664</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205669</Id>
					<Name><![CDATA[p_avgDieselConsumptionVan_kmpl]]></Name>
					<Description><![CDATA[https://www.webfleet.com/nl_nl/webfleet/blog/hoeveel-diesel-verbruikt-een-vrachtwagen-per-kilometer/

11 liter per 100 km = 9.1 km per liter.
]]></Description>
					<X>570</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[9.1]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205667</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205672</Id>
					<Name><![CDATA[p_avgDieselConsumptionVan_kWhpkm]]></Name>
					<X>570</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[p_diesel_kWhpl/p_avgDieselConsumptionVan_kmpl]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205670</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205675</Id>
					<Name><![CDATA[p_avgDieselConsumptionTruck_kmpl]]></Name>
					<Description><![CDATA[https://www.webfleet.com/nl_nl/webfleet/blog/hoeveel-diesel-verbruikt-een-vrachtwagen-per-kilometer/

--> 25 - 30 - 40 liter per 100 km. = 4 - 3.33 - 2.5 km per l
Heavely dependend on load, city/highway, etc.
For now: Picking 3.33 km per l]]></Description>
					<X>570</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[3.33]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205673</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205678</Id>
					<Name><![CDATA[p_avgDieselConsumptionTruck_kWhpkm]]></Name>
					<X>570</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[p_diesel_kWhpl/p_avgDieselConsumptionTruck_kmpl]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205676</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205681</Id>
					<Name><![CDATA[p_avgCOPHeatpump]]></Name>
					<Description><![CDATA[https://www.vaillant.be/consumenten/ons-advies/blog/het-rendement-van-een-warmtepomp/

Gemiddelde COP is 4.]]></Description>
					<X>70</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[4]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205679</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205684</Id>
					<Name><![CDATA[p_avgUtilityPVPower_kWp]]></Name>
					<Description><![CDATA[FIND SOURCE!!! ????????]]></Description>
					<X>50</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205682</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205687</Id>
					<Name><![CDATA[p_ratioElectricTrucks]]></Name>
					<Description><![CDATA[Ratio of how many trucks are electric vs diesel.
???
https://nos.nl/artikel/2483604-elektrische-vrachtwagens-blijven-achter-door-complexe-serie-aan-uitdagingen --> 'volgens cbs nog geen half procent.']]></Description>
					<X>50</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.005]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205685</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205690</Id>
					<Name><![CDATA[p_avgCompanyHeatingMethod]]></Name>
					<Description><![CDATA[Source?? --> Should definatly be still the case in 2024]]></Description>
					<X>50</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_GridConnectionHeatingType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_GridConnectionHeatingType.GASBURNER]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205688</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205693</Id>
					<Name><![CDATA[p_avgPVPower_kWpm2]]></Name>
					<Description><![CDATA[https://hallostroom.nl/zonnepanelen/opbrengst/per-m2/ --> 177 W/m2
https://www.zonneplan.nl/kenniscentrum/zonnepanelen/vermogen --> 212 W/m2
https://www.zonnepanelennoord.nl/vermogen-zonnepanelen/ --> 215 W/m2]]></Description>
					<X>50</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.2]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205691</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205696</Id>
					<Name><![CDATA[p_avgRatioBatteryCapacity_v_Power]]></Name>
					<Description><![CDATA[Average ratio of battery capacity over battery power.
--> If battery capacity (in kWh) is twice the battery power (in kW) --> ratio = 2.]]></Description>
					<X>50</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[2]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205694</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205699</Id>
					<Name><![CDATA[p_avgHydrogenConsumptionCar_kWhpkm]]></Name>
					<Description><![CDATA[https://magnuscmd.com/hydrogen-fuel-cell-vehicles-a-threat-to-the-electric-car/

--> avg: 29 kWh per 100 km --> 0.29 kWh/km
]]></Description>
					<X>570</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.29]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205697</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205702</Id>
					<Name><![CDATA[p_avgHydrogenConsumptionVan_kWhpkm]]></Name>
					<Description><![CDATA[https://www.huiskes-kokkeler.nl/bedrijfswagens/volkswagen-bedrijfswagens/modellen/crafter-hymotion-concept
--> 1.4 kg Waterstof per 100 km = 0.014 kg/km
-->  0.014 * 33.6 (p_hydrogenSpecificEnergy_kWh_kg = 0.47 kWh/kg]]></Description>
					<X>570</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.47]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205700</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205705</Id>
					<Name><![CDATA[p_avgHydrogenConsumptionTruck_kWhpkm]]></Name>
					<Description><![CDATA[https://transportenmilieu.nl/nieuwsarchief/item/hyundai-op-waterstof-voor-havi-zwitserland
--> 6.6 kg Waterstof per 100 km = 0.066 kg/km
--> 0.066 * 33.6 (p_hydrogenSpecificEnergy_kWh_kg = 2.22 kWh/kg]]></Description>
					<X>570</X><Y>640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[2.22]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205703</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205708</Id>
					<Name><![CDATA[p_avgRatioRoofPotentialPV]]></Name>
					<Description><![CDATA[value for ratio that]]></Description>
					<X>50</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726584205706</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205711</Id>
					<Name><![CDATA[p_avgEfficiencyHeatpump]]></Name>
					<Description><![CDATA[Efficiency (eta_r) used to calculate the COP in the energy asset based on temperature differences. 

'0.5' comes from old code, no source found for it yet.]]></Description>
					<X>70</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.5]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205709</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205714</Id>
					<Name><![CDATA[p_avgOutputTemperatureHeatpump_degC]]></Name>
					<Description><![CDATA[The avg output temperature of a heatpump in degC. Can be set manually, as an average 60 has been taken. ]]></Description>
					<X>70</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[60]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205712</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205717</Id>
					<Name><![CDATA[p_avgEfficiencyGasBurner]]></Name>
					<Description><![CDATA[Average heating efficiency of a gas burner.

--> SOURCE?]]></Description>
					<X>70</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.99]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205715</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205720</Id>
					<Name><![CDATA[p_avgOutputTemperatureGasBurner_degC]]></Name>
					<Description><![CDATA[Average output temperature of a gas burner unit in degC.

--> Source?]]></Description>
					<X>70</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[90]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205718</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205723</Id>
					<Name><![CDATA[p_avgEfficiencyHydrogenBurner]]></Name>
					<Description><![CDATA[Average heating efficiency of a hydrogen burner.

- https://h2sciencecoalition.com/blog/hydrogen-for-heating-a-comparison-with-heat-pumps-part-1/

- https://www.csrf.ac.uk/blog/hydrogen-for-heating/]]></Description>
					<X>70</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.90]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205721</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584205726</Id>
					<Name><![CDATA[p_avgOutputTemperatureHydrogenBurner_degC]]></Name>
					<Description><![CDATA[Average output temperature of a hydrogen burner unit in degC.

--> Source?]]></Description>
					<X>70</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[90]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584205724</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726746753360</Id>
					<Name><![CDATA[p_avgVehiclesPerChargePoint]]></Name>
					<X>50</X><Y>820</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[5]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726746753358</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205530</Id>
					<Name><![CDATA[f_setAVGC_data]]></Name>
					<X>30</X><Y>50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[J_AVGC_data dataAVGC = new J_AVGC_data();

dataAVGC.p_avgHouseGasConsumption_m3_yr = p_avgHouseGasConsumption_m3_yr;
dataAVGC.p_avgHouseElectricityConsumption_kWh_yr = p_avgHouseElectricityConsumption_kWh_yr;
dataAVGC.p_avgEVMaxChargePowerVan_kW = p_avgEVMaxChargePowerVan_kW;
dataAVGC.p_avgHouseConnectionCapacity_kW = p_avgHouseConnectionCapacity_kW;
dataAVGC.p_avgHouseHeatingMethod = p_avgHouseHeatingMethod;
dataAVGC.p_ratioEVHousePersonalCars = p_shareOfElectricVehicleOwnership;
dataAVGC.p_avgEVMaxChargePowerCar_kW = p_avgEVMaxChargePowerCar_kW;
dataAVGC.p_avgEVMaxChargePowerTruck_kW = p_avgEVMaxChargePowerTruck_kW;
dataAVGC.p_avgEVStorageCar_kWh = p_avgEVStorageCar_kWh;
dataAVGC.p_avgEVStorageVan_kWh = p_avgEVStorageVan_kWh;
dataAVGC.p_avgHousePVInstallationPower_kWp = p_avgHousePVInstallationPower_kWp;
dataAVGC.p_avgEVStorageTruck_kWh = p_avgEVStorageTruck_kWh;
dataAVGC.p_ratioHouseInstalledPV = p_ratioHouseInstalledPV;
dataAVGC.p_gas_kWhpm3 = p_gas_kWhpm3;
dataAVGC.p_diesel_kWhpl = p_diesel_kWhpl;
dataAVGC.p_gasoline_kWhpl = p_gasoline_kWhpl;
dataAVGC.p_avgUtilityHeatingMethod = p_avgUtilityHeatingMethod;
dataAVGC.p_avgUtilityConnectionCapacity_kW = p_avgUtilityConnectionCapacity_kW;
dataAVGC.p_avgUtilityPVPower_kWp = p_avgUtilityPVPower_kWp;
dataAVGC.p_ratioElectricTrucks = p_ratioElectricTrucks;
dataAVGC.p_avgCompanyHeatingMethod = p_avgCompanyHeatingMethod;
dataAVGC.p_avgEVEnergyConsumptionCar_kWhpkm = p_avgEVEnergyConsumptionCar_kWhpkm;
dataAVGC.p_avgEVEnergyConsumptionVan_kWhpkm = p_avgEVEnergyConsumptionVan_kWhpkm;
dataAVGC.p_avgEVEnergyConsumptionTruck_kWhpkm = p_avgEVEnergyConsumptionTruck_kWhpkm;
dataAVGC.p_hydrogenEnergyDensity_kWh_Nm3 = p_hydrogenEnergyDensity_kWh_Nm3;
dataAVGC.p_avgDieselConsumptionCar_kmpl = p_avgDieselConsumptionCar_kmpl;
dataAVGC.p_avgGasolineConsumptionCar_kmpl = p_avgGasolineConsumptionCar_kmpl;
dataAVGC.p_hydrogenSpecificEnergy_kWh_kg = p_hydrogenSpecificEnergy_kWh_kg;
dataAVGC.p_hydrogenDensity_kg_Nm3 = p_hydrogenDensity_kg_Nm3;
dataAVGC.p_oxygenDensity_kg_Nm3 = p_oxygenDensity_kg_Nm3;
dataAVGC.p_avgCOPHeatpump = p_avgCOPHeatpump;
dataAVGC.p_avgEfficiencyHeatpump = p_avgEfficiencyHeatpump;
dataAVGC.p_avgDieselConsumptionCar_kWhpkm = p_avgDieselConsumptionCar_kWhpkm;
dataAVGC.p_oxygenProduction_kgO2pkgH2 = p_oxygenProduction_kgO2pkgH2;
dataAVGC.p_avgGasolineConsumptionCar_kWhpkm = p_avgGasolineConsumptionCar_kWhpkm;
dataAVGC.p_avgDieselConsumptionVan_kmpl = p_avgDieselConsumptionVan_kmpl;
dataAVGC.p_avgDieselConsumptionVan_kWhpkm = p_avgDieselConsumptionVan_kWhpkm;
dataAVGC.p_avgDieselConsumptionTruck_kmpl = p_avgDieselConsumptionTruck_kmpl;
dataAVGC.p_avgDieselConsumptionTruck_kWhpkm = p_avgDieselConsumptionTruck_kWhpkm;
dataAVGC.p_avgOutputTemperatureHeatpump_degC = p_avgOutputTemperatureHeatpump_degC;
dataAVGC.p_avgHydrogenConsumptionCar_kWhpkm = p_avgHydrogenConsumptionCar_kWhpkm;
dataAVGC.p_avgEfficiencyGasBurner = p_avgEfficiencyGasBurner;
dataAVGC.p_avgHydrogenConsumptionVan_kWhpkm = p_avgHydrogenConsumptionVan_kWhpkm;
dataAVGC.p_avgHydrogenConsumptionTruck_kWhpkm = p_avgHydrogenConsumptionTruck_kWhpkm;
dataAVGC.p_avgOutputTemperatureGasBurner_degC = p_avgOutputTemperatureGasBurner_degC;
dataAVGC.p_avgEfficiencyHydrogenBurner = p_avgEfficiencyHydrogenBurner;
dataAVGC.p_avgOutputTemperatureHydrogenBurner_degC = p_avgOutputTemperatureHydrogenBurner_degC;
dataAVGC.p_avgPVPower_kWpm2= p_avgPVPower_kWpm2;
dataAVGC.p_avgRatioRoofPotentialPV = p_avgRatioRoofPotentialPV;
dataAVGC.p_avgRatioBatteryCapacity_v_Power = p_avgRatioBatteryCapacity_v_Power;

zero_Loader.energyModel.avgc_data = dataAVGC;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1726584205728</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1726584830548</Id>
					<Name><![CDATA[zero_Loader]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[Zero_Loader]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1726584205534</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1726584205536</Id>
					<Name><![CDATA[rect_constants]]></Name>
					<X>958.816</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>958.0782918149466</Width>
					<Height>980</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1726584205538</Id>
					<Name><![CDATA[rect_avg]]></Name>
					<X>0.737</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>958.0782918149466</Width>
					<Height>980</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205540</Id>
					<Name><![CDATA[txt_houses]]></Name>
					<X>40</X><Y>100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Average values for houses]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205542</Id>
					<Name><![CDATA[txt_avgCompanies]]></Name>
					<X>40</X><Y>280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Average values for companies/utilities]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205544</Id>
					<Name><![CDATA[txt_avgEV]]></Name>
					<X>560</X><Y>90</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Average values for Electric Vehicles]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205546</Id>
					<Name><![CDATA[text3]]></Name>
					<X>1440</X><Y>40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Constants]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1726584205548</Id>
					<Name><![CDATA[text4]]></Name>
					<X>1060</X><Y>200</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Energy conversion constants]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205550</Id>
					<Name><![CDATA[text5]]></Name>
					<X>480</X><Y>40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Averages]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Rectangle>
					<Id>1726584205552</Id>
					<Name><![CDATA[rect_hydrogenC]]></Name>
					<X>1560</X><Y>100</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16711681</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>340</Width>
					<Height>200</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205554</Id>
					<Name><![CDATA[txt_hydrogenC]]></Name>
					<X>1580</X><Y>120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Hydrogen constants]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205556</Id>
					<Name><![CDATA[txt_avgFossil]]></Name>
					<X>560</X><Y>330</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Average values for Fossil fueled vehicles]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205558</Id>
					<Name><![CDATA[txt_Heatassets]]></Name>
					<X>40</X><Y>420</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Heat assets]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205560</Id>
					<Name><![CDATA[txt_avgPV]]></Name>
					<X>40</X><Y>680</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[PV panels]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205562</Id>
					<Name><![CDATA[txt_avgBat]]></Name>
					<X>40</X><Y>745</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Batteries]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205564</Id>
					<Name><![CDATA[txt_avgFCV]]></Name>
					<X>560</X><Y>570</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Average values for Hydrogen vehicles]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205566</Id>
					<Name><![CDATA[txt_heatpumps]]></Name>
					<X>60</X><Y>440</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Heatpumps]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205568</Id>
					<Name><![CDATA[txt_gasburners]]></Name>
					<X>60</X><Y>530</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gasburners]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205570</Id>
					<Name><![CDATA[txt_hydrogenburners]]></Name>
					<X>60</X><Y>600</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Hydrogenburners]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1726584205572</Id>
					<Name><![CDATA[rect_sendToEngine]]></Name>
					<X>10</X><Y>10</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-65536</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>60</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205574</Id>
					<Name><![CDATA[txt_valuesToEngine]]></Name>
					<X>20</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Send values to Engine]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205576</Id>
					<Name><![CDATA[txt_timeC]]></Name>
					<X>1060</X><Y>120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Time constants]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726743791200</Id>
					<Name><![CDATA[text]]></Name>
					<X>40</X><Y>790</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Chargingcentres]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1726584205735</Id>
			<Name><![CDATA[Zero_Loader]]></Name>
			<Import><![CDATA[import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.NumericNode;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.FileOutputStream;
import java.util.stream.Stream;
import java.util.Dictionary.*;
import java.util.Hashtable.*;
import java.util.*;
import java.util.stream.Collectors;

import java.io.*;
import java.io.File;
import java.io.IOException;
//import java.util.Date;  
import java.text.SimpleDateFormat;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;


//Possibility to turn of traceln
import java.io.OutputStream;
import java.io.PrintStream;

//Import survey API library
import com.zenmo.vallum.Vallum;
]]></Import>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1726584205730</Id>
				<Name><![CDATA[1726584205730]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>GIS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>false</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[p_timeStep_h]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1726584205731</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1726584205903</CurrentLevel>
			<ConnectionsId>1726584206083</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1726584205883</Id>
					<Name><![CDATA[v_timeOfModelStart_ms]]></Name>
					<X>1480</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205885</Id>
					<Name><![CDATA[v_modelStartUpDuration_s]]></Name>
					<X>1480</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205887</Id>
					<Name><![CDATA[v_hourOfYearStart]]></Name>
					<X>1480</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205889</Id>
					<Name><![CDATA[v_remainingNumberOfTrucks]]></Name>
					<X>1480</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205891</Id>
					<Name><![CDATA[v_totalFloorAreaAnonymousCompanies_m2]]></Name>
					<Description><![CDATA[variable that tracks how much floor area remains for the average companies. (this will be used to determine the average m3 and kwh per m2 floor area to be used by the unkown companies (that have not filled in the survey). 
Calculated by: initial value (total floor area of the area) - total floor area of the survey companies]]></Description>
					<X>1481</X><Y>241</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205893</Id>
					<Name><![CDATA[v_numberOfCompaniesNoSurvey]]></Name>
					<X>1481</X><Y>221</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205895</Id>
					<Name><![CDATA[v_remainingGasConsumption_m3]]></Name>
					<X>1481</X><Y>281</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205897</Id>
					<Name><![CDATA[v_remainingElectricityDelivery_kWh]]></Name>
					<X>1481</X><Y>261</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205899</Id>
					<Name><![CDATA[v_remainingNumberOfVans]]></Name>
					<X>1481</X><Y>321</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1726584205901</Id>
					<Name><![CDATA[v_remainingNumberOfCompaniesNoSurvey]]></Name>
					<X>1480</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584206064</Id>
					<Name><![CDATA[zero_Interface]]></Name>
					<X>30</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Zero_Interface]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726584206062</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584206067</Id>
					<Name><![CDATA[p_createGridnodeTimeSeries]]></Name>
					<X>1490</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726584206065</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584206070</Id>
					<Name><![CDATA[genericProfiles_data]]></Name>
					<X>-370</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Profiles_data]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726584206068</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584206073</Id>
					<Name><![CDATA[project_data]]></Name>
					<Description><![CDATA[Should be filled with the Project_data record created in the startup of the project model]]></Description>
					<X>-370</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Project_data]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726584206071</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584206076</Id>
					<Name><![CDATA[settings]]></Name>
					<Description><![CDATA[Should be filled with the settings record created in the startup of the project model]]></Description>
					<X>-370</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Settings]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726584206074</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726584206079</Id>
					<Name><![CDATA[user]]></Name>
					<X>-370</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[User]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726584206077</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205737</Id>
					<Name><![CDATA[c_gridNodeIDsInScope]]></Name>
					<X>1480</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205739</Id>
					<Name><![CDATA[c_GenericCompanyBuilding_data]]></Name>
					<X>-370</X><Y>335</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Building_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205741</Id>
					<Name><![CDATA[c_GridNode_data]]></Name>
					<X>-370</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[GridNode_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205743</Id>
					<Name><![CDATA[c_SurveyCompanyBuilding_data]]></Name>
					<X>-370</X><Y>315</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Building_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205745</Id>
					<Name><![CDATA[c_HouseBuilding_data]]></Name>
					<X>-370</X><Y>355</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Building_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205747</Id>
					<Name><![CDATA[c_Solarfarm_data]]></Name>
					<X>-370</X><Y>402</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Solarfarm_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205749</Id>
					<Name><![CDATA[c_Windfarm_data]]></Name>
					<X>-370</X><Y>422</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Windfarm_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205751</Id>
					<Name><![CDATA[c_Electrolyser_data]]></Name>
					<X>-370</X><Y>441</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Electrolyser_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205753</Id>
					<Name><![CDATA[c_Battery_data]]></Name>
					<X>-370</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Battery_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205755</Id>
					<Name><![CDATA[c_Cable_data_LV]]></Name>
					<X>-370</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Cable_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205757</Id>
					<Name><![CDATA[c_Neighbourhood_data]]></Name>
					<X>-370</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Neighbourhood_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205759</Id>
					<Name><![CDATA[c_remainingBuilding_data]]></Name>
					<X>-370</X><Y>375</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Building_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205761</Id>
					<Name><![CDATA[c_defaultDatabaseNames]]></Name>
					<X>-370</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String[]]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
						<CollectionInitializer Class="CodeValue">
							<Code><![CDATA[{
{"Buildings", "buildings"},
{"GridNodes", "gridnodes"}
}]]></Code>
						</CollectionInitializer>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205763</Id>
					<Name><![CDATA[c_Chargingstation_data]]></Name>
					<X>-370</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Chargingstation_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205765</Id>
					<Name><![CDATA[c_Parcel_data]]></Name>
					<X>-370</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Parcel_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726584205767</Id>
					<Name><![CDATA[c_Cable_data_MV]]></Name>
					<X>-370</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Cable_data]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205769</Id>
					<Name><![CDATA[f_createGISRegionOutline]]></Name>
					<Description><![CDATA[Creates the outline of the simulated area]]></Description>
					<X>806.739</X><Y>479</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[GISRegion gisregion = null;

// Create neighborhoods and draw them
for (Neighbourhood_data NBH : c_Neighbourhood_data) {	
	GIS_Object area = energyModel.add_pop_GIS_Objects();
	
	area.p_id = NBH.districtname();
	area.p_GISObjectType = OL_GISObjectType.valueOf(NBH.neighbourhoodtype());

	//Create gisregion
	area.gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(NBH.polygon()));
	
	//Style area 
	zero_Interface.f_styleSimulationAreas(area);
	zero_Interface.c_GISRegions.add(gisregion);
}

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205771</Id>
					<Name><![CDATA[f_createGridConnections]]></Name>
					<X>90</X><Y>180</Y>
					<Label><X>11</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Energy production sites
f_generateSolarParks();
f_generateWindFarms();

//Other infra assets
f_generateElectrolysers();
f_generateBatteries();
f_createChargingStations();

//Consumers
switch(project_data.project_type()){

case BUSINESSPARK:
	f_createConsumerGC_businesspark();
	break;
	
case RESIDENTIAL:
	f_createConsumerGC_Residential();
	break;
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205773</Id>
					<Name><![CDATA[f_configureEngine_default]]></Name>
					<Description><![CDATA[Generieke functie die flexibele modelconfiguratie mogelijk maakt op basis van externe data. Expliciet gemodelleerd om profiling en volgorde van initialisatie te kunnen controleren.

@param: none
@return: none
@since: Sprint 6
@author: Jorrit]]></Description>
					<X>79</X><Y>139</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set basic input files
energyModel.p_truckTripsExcel = inputTruckTrips;
energyModel.p_householdTripsExcel = inputHouseholdTrips;
energyModel.p_cookingPatternExcel = inputCookingActivities;


//Actors
f_createActors();

//Grid nodes
f_createGridNodes();

//Grid connections
f_createGridConnections();

//Additional GIS objects
f_createAdditionalGISObjects();

//Initialize the engine
energyModel.f_initializeEngine();


/*
if( p_createGridnodeTimeSeries ){
	energyModel.p_gridNodeTimeSeriesExcel = e_gridnodeTimeSeries;
	f_initializeGrideNodeTimeSeriesExcel();
}
*/]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205775</Id>
					<Name><![CDATA[f_createGridNodes]]></Name>
					<X>50</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//double latitude_c;
//double longitude_c;
OL_GridNodeType nodeType;
GISRegion gisregion;

// Grid operator (for now only one in the area)
GridOperator Grid_Operator = findFirst(energyModel.pop_gridOperators, p->p.p_actorID.equals(project_data.grid_operator())) ;

for (GridNode_data GN_data : c_GridNode_data) {
	//    if no scope selected, or if node has 'all scopes' in input file or if the node specific scope is selected (exists in the arrayList)       
	if( settings.subscopesToSimulate() == null || settings.subscopesToSimulate().isEmpty() || GN_data.subscope() == null || settings.subscopesToSimulate().indexOf(GN_data.subscope()) > -1 ){ 
		if (GN_data.status()) {
			GridNode GN = energyModel.add_pop_gridNodes();
			GN.p_gridNodeID = GN_data.trafo_id();
			c_gridNodeIDsInScope.add(GN.p_gridNodeID);
			
			// Check wether transformer capacity is known or estimated
			GN.p_capacity_kW = GN_data.capacity_kw();	
			GN.p_realCapacityAvailable = GN_data.is_capacity_available();
			
			// Basic GN information
			//GN.p_nodeStatus = GN_data.status();
			GN.p_description = GN_data.description();
			String nodeTypeString = GN_data.type();
			
			// Connect
			GN.p_parentNodeID = GN_data.parent_node_id(); // Needs to be manually defined in the excel file of the nodes!
			GN.p_ownerGridOperator = Grid_Operator;
			
			//Define node type
			switch (nodeTypeString) {
			    case "MVLV":
			        GN.p_nodeType = OL_GridNodeType.MVLV;
			        GN.p_energyType = OL_EnergyCarrierType.ELECTRICITY;
			        break;
			    case "SUBMV":
			        GN.p_nodeType = OL_GridNodeType.SUBMV;
			        GN.p_energyType = OL_EnergyCarrierType.ELECTRICITY;
			        break;
			    case "MVMV":
			        GN.p_nodeType = OL_GridNodeType.MVMV;
			        GN.p_energyType = OL_EnergyCarrierType.ELECTRICITY;
			        break;
			    case "HVMV":
			        GN.p_nodeType = OL_GridNodeType.HVMV;
			        GN.p_energyType = OL_EnergyCarrierType.ELECTRICITY;
			        break;
			    default:
			        traceln("There is a gridnode in your input file with an incorrect node type");
			        break;
			}
			
			//Define GN location
			GN.p_latitude = GN_data.latitude();
			GN.p_longitude = GN_data.longitude();
			GN.setLatLon(GN.p_latitude, GN.p_longitude);
			
			//Create gis region
			GN.gisRegion = zero_Interface.f_createGISObject(f_createGISNodesTokens(GN));
			zero_Interface.f_styleGridNodes(GN);
			
			zero_Interface.c_GISNodes.add(GN.gisRegion);
			Grid_Operator.c_electricityGridNodes.add(GN);
			
			
			//Gridnode service area
			if (GN_data.service_area_polygon() != null){
				//Create service area gis object
				GIS_Object serviceArea = f_createGISObject(GN.p_gridNodeID + ": service area", GN.p_latitude, GN.p_longitude, GN_data.service_area_polygon());
				
				//Add to hashmap
				zero_Interface.c_GISNetplanes.put(GN.p_gridNodeID, serviceArea );
			}
		}
	}
}

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1726584205777</Id>
					<Name><![CDATA[f_createGISObjectsTokens]]></Name>
					<X>825.241</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[RegionCoords]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[if (RegionCoords.startsWith( "MultiPolygon")){
	RegionCoords = RegionCoords.replace("MultiPolygon (((","");
	RegionCoords = RegionCoords.replace(",","");
	RegionCoords = RegionCoords.replace(")))","");
}
else if( RegionCoords.startsWith( "Poly") ){
	RegionCoords = RegionCoords.replace("Polygon ((","");
	RegionCoords = RegionCoords.replace(",","");
	RegionCoords = RegionCoords.replace("))","");
}
else if(RegionCoords.startsWith( "MultiLineString")){
	RegionCoords = RegionCoords.replace("MultiLineString ((","");
	RegionCoords = RegionCoords.replace(",","");
	RegionCoords = RegionCoords.replace("))","");
}
else {
	traceln("GIS coordinaten in de excel data die niet starten met Multi of Poly");
}

if (RegionCoords.contains(")(")) {
	RegionCoords = RegionCoords.split("\\)")[0];
}

String delims = " ";
String[] tokens;
tokens = RegionCoords.split(delims);

int nbCoords = tokens.length;
double[] GISCoords = new double[nbCoords];
		
for (int i=0; i<nbCoords; i++) {
	if (i % 2 == 0) { // latitudes
		GISCoords[i]=Double.parseDouble(tokens[i+1]);
	} else { // longitudes
		GISCoords[i]=Double.parseDouble(tokens[i-1]);
	}
}
return GISCoords;]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205779</Id>
					<Name><![CDATA[f_importExcelTablesToDB]]></Name>
					<Description><![CDATA[Automatisch inladen van excel files uit de model map naar de database.

@author: Ate
@since: 14-12-23]]></Description>
					<X>-390</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if(settings.reloadDatabase()){
	
	List<String[]> databaseNames = project_data.databaseNames();
	//If not given as argument, get the default databases that should be loaded in
	if(databaseNames == null || databaseNames.size() == 0){ 
		return;
		//databaseNames = c_defaultDatabaseNames;
	}
	
	//Get the model database
	ModelDatabase modelDB = getEngine().getModelDatabase();
	
	//Loop over all databases
	for(String[] databaseName : databaseNames){
		//Loading in the specific company data
		traceln("DatabaseName: " + databaseName[1]);
		Database myFile = new Database(this, databaseName[1], "data_" + project_data.project_name() + "/" + databaseName[0] + "_" + project_data.project_name() + ".xlsx");
		modelDB.importFromExternalDB(myFile.getConnection(), databaseName[1], databaseName[1], true, false);	
	}
	
	//Update
	traceln("Database has been updated.");
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205781</Id>
					<Name><![CDATA[f_createHousesFromDatabase]]></Name>
					<Description><![CDATA[Creates the houses using a single GC, and their building. After creation, they will be simulated using average values.]]></Description>
					<X>440</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Building_data> scopedBuilding_data = f_getScopedBuildingList(c_HouseBuilding_data);
	
traceln("Aantal panden met woonfunctie in BAG data: " + scopedBuilding_data.size());

int i = 0;
for (Building_data dataBuilding : scopedBuilding_data) {
	
	GCHouse GCH = energyModel.add_Houses();
	ConnectionOwner	COH = energyModel.add_pop_connectionOwners();
	
	//Set parameters for the Grid Connection
 	GCH.p_gridConnectionID = dataBuilding.address_id();
	GCH.p_ownerID = "Woonhuis" + Integer.toString(i);	//aanname : huiseigenaar is eigenbaas

	GCH.p_purposeBAG = dataBuilding.purpose();
	
	//pand gegevens
	GCH.p_heatingType = avgc_data.p_avgHouseHeatingMethod ;
	GCH.p_floorSurfaceArea_m2 = dataBuilding.cumulative_floor_surface_m2();
	GCH.p_bouwjaar = dataBuilding.build_year();
	
	//Nageisoleerd
	if (dataBuilding.energy_label() != null) {
		GCH.p_nageisoleerd = dataBuilding.energy_label();
	}
	else {
		if (GCH.p_bouwjaar < 1980) {
			GCH.p_nageisoleerd = "D";
		}
		else if (GCH.p_bouwjaar < 2000) {
			GCH.p_nageisoleerd = "C";
		}
		else {
			GCH.p_nageisoleerd = "B";
		}
	}
	
	//aansluiting gegevens
	GCH.p_physicalConnectionCapacity_kW = avgc_data.p_avgHouseConnectionCapacity_kW;
	GCH.p_contractedDeliveryCapacity_kW = avgc_data.p_avgHouseConnectionCapacity_kW;
	GCH.p_contractedFeedinCapacity_kW = avgc_data.p_avgHouseConnectionCapacity_kW;
	
	//adres gegevens
	GCH.p_address = new J_Address();
	GCH.p_address.setStreetName(dataBuilding.streetname());
	GCH.p_address.setHouseNumber(dataBuilding.house_number());
	GCH.p_address.setHouseLetter(dataBuilding.house_letter());
	GCH.p_address.setHouseAddition(dataBuilding.house_addition());
	GCH.p_address.setPostalcode(dataBuilding.postalcode());
	GCH.p_address.setCity(dataBuilding.city());
	
	//locatie
	GCH.p_longitude = dataBuilding.longitude();
	GCH.p_latitude = dataBuilding.latitude();
	GCH.setLatLon(GCH.p_latitude, GCH.p_longitude);
	
	//Connect GC to grid node
	//GridNode myParentNodeElectric;
	GCH.p_parentNodeElectricID = dataBuilding.trafo_id();
	

	
	//Set parameters for the Actor: ConnectionOwner
	COH.p_actorID = GCH.p_ownerID;
	COH.p_actorType = OL_ActorType.CONNECTIONOWNER;
	COH.p_connectionOwnerType = OL_ConnectionOwnerType.HOUSEHOLD;
	COH.p_detailedCompany = false;
	
	GCH.p_owner = COH;
	
	//Create GIS building
	GIS_Building b;
	int pandClusterNr = dataBuilding.pandcluster_nr();
	if( pandClusterNr == 0 ){	
		b = f_createGISBuilding( dataBuilding, GCH );
	}
	else {
		b = randomWhere(energyModel.c_GISBuildingClusters, x -> x.p_pandcluster_nr == pandClusterNr);
		if (b == null){
			b = f_createGISBuilding( dataBuilding, GCH );
		}
		else {
			b.c_containedGridConnections.add(GCH);
			GCH.c_connectedGISObjects.add(b);
		}
	}
	
	//Style building
	b.p_defaultFillColor = zero_Interface.v_houseBuildingColor;
	b.p_defaultLineColor = zero_Interface.v_houseBuildingLineColor;
	zero_Interface.f_styleAreas(b);
	
	//Instantiate energy assets
	double jaarlijksElectriciteitsVerbruik;
	double jaarlijksGasVerbruik;
	try {
		jaarlijksElectriciteitsVerbruik = dataBuilding.electricity_consumption_kwhpa();
	}
	catch (NullPointerException e){
		jaarlijksElectriciteitsVerbruik = Double.valueOf(uniform_discr(1200, 4500)); // Hardcoded??
	}
	try {
		jaarlijksGasVerbruik = dataBuilding.gas_consumption_kwhpa();
	}
	catch (NullPointerException e){
		jaarlijksGasVerbruik =  Double.valueOf(uniform_discr(600, 2000)); // Hardcoded??
	}
	
	f_addEnergyAssetsToHouses(GCH, jaarlijksElectriciteitsVerbruik, jaarlijksGasVerbruik );	
	f_setHouseHeatingPreferences(GCH);
	i ++;
}	
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[A_SubTenant]]></ReturnType>
					<Id>1726584205783</Id>
					<Name><![CDATA[f_createSubtenant]]></Name>
					<Description><![CDATA[function used to connect the subtenant to the main tenant (connection owner), based on adres data of subtenant and Grid connection. ]]></Description>
					<X>459.001</X><Y>199.001</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[survey]]></Name>
						<Type><![CDATA[com.zenmo.zummon.companysurvey.Survey]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[address]]></Name>
						<Type><![CDATA[com.zenmo.zummon.companysurvey.Address]]></Type>
					</Parameter>
					<Body><![CDATA[A_SubTenant subtenant = energyModel.add_pop_subTenants();

subtenant.p_actorID = survey.getCompanyName();
			
//Adress data
subtenant.p_address = new J_Address();
subtenant.p_address.setStreetName(address.getStreet().substring(0,1).toUpperCase() + address.getStreet().substring(1).toLowerCase());
subtenant.p_address.setHouseNumber(address.getHouseNumber());
subtenant.p_address.setHouseLetter(address.getHouseLetter().equals("") ? null : address.getHouseLetter());
subtenant.p_address.setHouseAddition(address.getHouseNumberSuffix().equals("") ? null : address.getHouseNumberSuffix());
subtenant.p_address.setPostalcode(address.getPostalCode().equals("") ? null : address.getPostalCode().toUpperCase().replaceAll("\\s",""));
subtenant.p_address.setCity(address.getCity().substring(0,1).toUpperCase() + address.getCity().substring(1).toLowerCase());
				
return subtenant;

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205785</Id>
					<Name><![CDATA[f_generateSolarParks]]></Name>
					<Description><![CDATA[Function used to generate solar parks: grid connections and park owner (connection owner actor)]]></Description>
					<X>430.001</X><Y>730.001</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[ConnectionOwner owner;
GCEnergyProduction solarpark;

List<String> existing_actors = new ArrayList();
List<String> existing_solarFields = new ArrayList();


for (Solarfarm_data dataSolarfarm : c_Solarfarm_data) { // MOET NOG CHECK OF ZONNEVELD ACTOR AL BESTAAT OP, zo ja --> Zonneveld koppelen aan elkaar en niet 2 GC en 2 actoren maken.
	
	if (!existing_solarFields.contains( dataSolarfarm.gc_id() )) {
		solarpark = energyModel.add_EnergyProductionSites();
		
		solarpark.set_p_gridConnectionID( dataSolarfarm.gc_id() );
		solarpark.set_p_name( dataSolarfarm.gc_name() );
		solarpark.set_p_physicalConnectionCapacity_kW( dataSolarfarm.connection_capacity_kw() );
		//solarpark.set_p_contractedDeliveryCapacity_kW( dataSolarfarm.contracted_delivery_capacity_kw() );
		if ( dataSolarfarm.contracted_feed_in_capacity_kw() != null ) {
			solarpark.set_p_contractedFeedinCapacity_kW( dataSolarfarm.contracted_feed_in_capacity_kw() );
		}
		else {
			solarpark.set_p_contractedFeedinCapacity_kW( dataSolarfarm.connection_capacity_kw() );
		}
		solarpark.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	
		solarpark.set_p_ownerID( dataSolarfarm.owner_id() );	
		solarpark.set_p_parentNodeElectricID( dataSolarfarm.trafo_id() );
		
		solarpark.v_isActive = dataSolarfarm.initially_active() ;
		
		//Add EA
		f_addEnergyProduction(solarpark, OL_EnergyAssetType.PHOTOVOLTAIC, "Solar farm" , dataSolarfarm.capacity_electric_kw());
		
		
		if (!existing_actors.contains(solarpark.p_ownerID)){ // check if owner exists already, if not, create new owner.
			owner = energyModel.add_pop_connectionOwners();
			
			owner.set_p_actorID( dataSolarfarm.owner_id());
			owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );
			owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.SOLARFARM_OP );

			existing_actors.add(owner.p_actorID);
		}
		else { // Owner exists already: add new GC to existing owner
			owner = findFirst(energyModel.f_getConnectionOwners(), p -> p.p_actorID.equals(dataSolarfarm.owner_id()));
		}
		
		solarpark.set_p_owner( owner );
		
		existing_solarFields.add(solarpark.p_gridConnectionID);		
	}
	else { // solarpark and its owner exist already, only create new gis building which is added to the park
		solarpark = findFirst(energyModel.EnergyProductionSites, p -> p.p_gridConnectionID.equals(dataSolarfarm.gc_id()) );
		owner = solarpark.p_owner;		

	}
	
	if (dataSolarfarm.polygon() != null) {
		//Create GIS object for the solar park
		GIS_Object area = f_createGISObject( dataSolarfarm.gc_name(), dataSolarfarm.latitude(), dataSolarfarm.longitude(), dataSolarfarm.polygon() );
		
		//Set area type
		area.p_GISObjectType = OL_GISObjectType.SOLARFARM;
		
		//Add to collections
		area.c_containedGridConnections.add(solarpark);
		solarpark.c_connectedGISObjects.add(area);
		
		//Style building
		area.set_p_defaultFillColor( zero_Interface.v_solarParkColor );
		area.set_p_defaultLineColor( zero_Interface.v_solarParkLineColor );
		zero_Interface.f_styleAreas(area);
	}
}
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205787</Id>
					<Name><![CDATA[f_generateBatteries]]></Name>
					<Description><![CDATA[Function used to create (neighborhood) battery grid connection and actor]]></Description>
					<X>430.001</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (Battery_data dataBattery : c_Battery_data) { // MOET NOG CHECK OF battery ACTOR AL BESTAAT OP, zo ja --> battery koppelen aan elkaar en niet 2 GC en 2 actoren maken.
	
	ConnectionOwner owner = energyModel.add_pop_connectionOwners();
	GCGridBattery gridbattery = energyModel.add_GridBatteries();
	
	//Owner parameters
	owner.set_p_actorID( dataBattery.owner_id() );
	owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );
	owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.BATTERY_OP );
	
	//GC parameters
	gridbattery.set_p_gridConnectionID( dataBattery.gc_id () );
	gridbattery.set_p_name( dataBattery.gc_name() );
	gridbattery.set_p_ownerID( dataBattery.owner_id() );
	gridbattery.set_p_owner( owner );	
	gridbattery.set_p_physicalConnectionCapacity_kW( dataBattery.connection_capacity_kw() );
	if (dataBattery.contracted_delivery_capacity_kw() != null) {
		gridbattery.set_p_contractedDeliveryCapacity_kW( dataBattery.contracted_delivery_capacity_kw() );
	}
	else {
		gridbattery.set_p_contractedDeliveryCapacity_kW( dataBattery.connection_capacity_kw() );
	}
	if (dataBattery.contracted_delivery_capacity_kw() != null) {
		gridbattery.set_p_contractedFeedinCapacity_kW( dataBattery.contracted_feed_in_capacity_kw() );
	}
	else {
		gridbattery.set_p_contractedFeedinCapacity_kW(dataBattery.connection_capacity_kw() );
	}
	gridbattery.set_p_parentNodeElectricID( dataBattery.trafo_id() );	
	gridbattery.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	
	
	
	//Get initial state
	gridbattery.v_isActive = dataBattery.initially_active();

	if (dataBattery.polygon() != null) {
		//Create gis object for the battery
		GIS_Object area =  f_createGISObject( dataBattery.gc_name(), dataBattery.latitude(), dataBattery.longitude(), dataBattery.polygon() );
		
		//Set area type
		area.p_GISObjectType = OL_GISObjectType.BATTERY;
		
		//Add to collections
		gridbattery.c_connectedGISObjects.add(area);
		area.c_containedGridConnections.add(gridbattery);
			
		//Style building
		area.set_p_defaultFillColor( zero_Interface.v_batteryColor );
		area.set_p_defaultLineColor( zero_Interface.v_batteryLineColor );
		zero_Interface.f_styleAreas(area);
	}
	//Create energy asset for the battery
	f_addStorage(gridbattery, dataBattery.capacity_electric_kw(), dataBattery.storage_capacity_kwh(), OL_EnergyAssetType.STORAGE_ELECTRIC );	
	
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205789</Id>
					<Name><![CDATA[f_generateElectrolysers]]></Name>
					<Description><![CDATA[Function used to create electrolyser grid connections and actors]]></Description>
					<X>430</X><Y>770</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[ConnectionOwner owner;
List<String> existing_actors = new ArrayList();


for (Electrolyser_data dataElectrolyser : c_Electrolyser_data) {
	GCEnergyConversion H2Electrolyser = energyModel.add_EnergyConversionSites();

	H2Electrolyser.set_p_gridConnectionID( dataElectrolyser.gc_id() );
	H2Electrolyser.set_p_name( dataElectrolyser.gc_name() );
	H2Electrolyser.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	
	H2Electrolyser.set_p_ownerID( dataElectrolyser.owner_id() );	
	H2Electrolyser.set_p_parentNodeElectricID( dataElectrolyser.trafo_id() );
	H2Electrolyser.set_p_physicalConnectionCapacity_kW( dataElectrolyser.connection_capacity_kw() );
	if ( dataElectrolyser.contracted_delivery_capacity_kw() != null ) {
		H2Electrolyser.set_p_contractedDeliveryCapacity_kW( dataElectrolyser.contracted_delivery_capacity_kw() );
	}
	else {
		H2Electrolyser.set_p_contractedDeliveryCapacity_kW( dataElectrolyser.connection_capacity_kw() );
	}
	if ( dataElectrolyser.contracted_feed_in_capacity_kw() != null ) {
		H2Electrolyser.set_p_contractedFeedinCapacity_kW( dataElectrolyser.contracted_feed_in_capacity_kw() );
	}
	else {
		H2Electrolyser.set_p_contractedFeedinCapacity_kW( dataElectrolyser.connection_capacity_kw() );	
	}
	
	H2Electrolyser.v_isActive = dataElectrolyser.initially_active();	
	H2Electrolyser.p_minProductionRatio = dataElectrolyser.min_production_ratio();

	//Electrolyser operation mode
	H2Electrolyser.set_p_electrolyserOperationMode( dataElectrolyser.default_operation_mode());
	
	//Create EA for the electrolyser GC
	J_EAConversionElectrolyser h2ElectrolyserEA = new J_EAConversionElectrolyser(H2Electrolyser, OL_ElectrolyserState.STANDBY, dataElectrolyser.capacity_electric_kw(), dataElectrolyser.conversion_efficiency(), energyModel.p_timeStep_h, dataElectrolyser.load_change_time_s(), dataElectrolyser.start_up_time_shutdown_s(), dataElectrolyser.start_up_time_standby_s(), dataElectrolyser.start_up_time_idle_s());
	
	if (!existing_actors.contains(H2Electrolyser.p_ownerID)){ // check if owner exists already, if not, create new owner.
		owner = energyModel.add_pop_connectionOwners();
		
		owner.set_p_actorID( H2Electrolyser.p_ownerID );
		owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );
		owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.ELECTROLYSER_OP );

	}
	else { // Owner exists already: add new GC to existing owner
		owner = findFirst(energyModel.f_getConnectionOwners(), p -> p.p_actorID.equals(dataElectrolyser.owner_id()));
	}
	
	H2Electrolyser.set_p_owner( owner );

	if (dataElectrolyser.polygon() != null) {			
		//Create GIS object for the electrolyser
		GIS_Object area = f_createGISObject( dataElectrolyser.gc_name(), dataElectrolyser.latitude(), dataElectrolyser.longitude(), dataElectrolyser.polygon() );
		
		//Set area type
		area.p_GISObjectType = OL_GISObjectType.ELECTROLYSER;
		
		//Add to collections
		area.c_containedGridConnections.add(H2Electrolyser);
		H2Electrolyser.c_connectedGISObjects.add(area);
	
		
		//Style building
		area.set_p_defaultFillColor( zero_Interface.v_electrolyserColor );
		area.set_p_defaultLineColor( zero_Interface.v_electrolyserLineColor );
		zero_Interface.f_styleAreas(area);
	}
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205791</Id>
					<Name><![CDATA[f_generateWindFarms]]></Name>
					<Description><![CDATA[Function used to create all windfarm grid connections, actors, EAs and GISObjects]]></Description>
					<X>430.001</X><Y>750</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[ConnectionOwner owner;
GCEnergyProduction windfarm;

List<String> existing_actors = new ArrayList();
List<String> existing_windFarms = new ArrayList();

for (Windfarm_data dataWindfarm : c_Windfarm_data) {
	if (!existing_windFarms.contains(dataWindfarm.gc_id())) { // Check if windfarm exists already, if not, create new windfarm GC + turbine
		windfarm = energyModel.add_EnergyProductionSites();

		windfarm.set_p_gridConnectionID( dataWindfarm.gc_id() );
		windfarm.set_p_name( dataWindfarm.gc_name() );
		windfarm.set_p_physicalConnectionCapacity_kW( dataWindfarm.connection_capacity_kw() );
		//windfarm.set_p_contractedDeliveryCapacity_kW( dataWindfarm.contracted_delivery_capacity_kw() );
		if ( dataWindfarm.contracted_feed_in_capacity_kw() != null ) {
			windfarm.set_p_contractedFeedinCapacity_kW( dataWindfarm.contracted_feed_in_capacity_kw() );
		}
		else {
			windfarm.set_p_contractedFeedinCapacity_kW( dataWindfarm.connection_capacity_kw() );
		}
		windfarm.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	
		windfarm.set_p_ownerID( dataWindfarm.owner_id() );	
		windfarm.set_p_parentNodeElectricID( dataWindfarm.trafo_id() );
		
		//Get initial state
		windfarm.v_isActive = dataWindfarm.initially_active();
		
		//Create EA for the windturbine GC
		f_addEnergyProduction(windfarm, OL_EnergyAssetType.WINDMILL, "Windmill onshore", dataWindfarm.capacity_electric_kw());
		
		if (!existing_actors.contains(windfarm.p_ownerID)){ // check if owner exists already, if not, create new owner.
			owner = energyModel.add_pop_connectionOwners();
			
			owner.set_p_actorID( windfarm.p_ownerID );
			owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );
			owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.WINDFARM_OP );
		}
		else { // Owner exists already: add new GC to existing owner
			owner = findFirst(energyModel.f_getConnectionOwners(), p -> p.p_actorID.equals(dataWindfarm.owner_id()));
		}
		
		windfarm.set_p_owner( owner );
		
	}
	else { // winfarm and its owner exist already, only create new gis building which is added to the farm
		windfarm = findFirst(energyModel.EnergyProductionSites, p -> p.p_gridConnectionID.equals(dataWindfarm.gc_id()) );
		owner = windfarm.p_owner;		

	}
	
	//Create GIS object for the windfarm
	if (dataWindfarm.polygon() != null) {
		GIS_Object area = f_createGISObject( dataWindfarm.gc_name(), dataWindfarm.latitude(), dataWindfarm.longitude(), dataWindfarm.polygon() );
	
		//Set area type
		area.p_GISObjectType = OL_GISObjectType.WINDFARM;
		
		//Add to collections
		area.c_containedGridConnections.add(windfarm);
		windfarm.c_connectedGISObjects.add(area);
		
		//Style building
		area.set_p_defaultFillColor( zero_Interface.v_windFarmColor );
		area.set_p_defaultLineColor( zero_Interface.v_windFarmLineColor );
		area.set_p_defaultLineWidth( 3.0 );
		zero_Interface.f_styleAreas(area);
	}
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1726584205793</Id>
					<Name><![CDATA[f_createGISNodesTokens]]></Name>
					<X>70</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GN]]></Name>
						<Type><![CDATA[GridNode]]></Type>
					</Parameter>
					<Body><![CDATA[double scaling_factor_HVMV = zero_Interface.v_HVMVNodeSize;
double scaling_factor_MVMV = zero_Interface.v_MVMVNodeSize;
double scaling_factor_MVLV = zero_Interface.v_MVLVNodeSize;
int nb_GISCoords;

switch( GN.p_nodeType ) {
		case MVLV:
		nb_GISCoords = 6;
		break;
		case SUBMV:
		nb_GISCoords = 6;
		break;
		case MVMV:
		nb_GISCoords = 8;
		break;
		case HVMV:
		nb_GISCoords = 8;
		break;
		case HT:
		nb_GISCoords = 6;	
		break;
		case MT:
		nb_GISCoords = 6;	
		break;
		case LT:
		nb_GISCoords = 6;	
		break;
		case LT5thgen:
		nb_GISCoords = 6;	
		break;
		default:
		nb_GISCoords = 6;
}

double[] GISCoords = new double[nb_GISCoords];

switch( GN.p_nodeType ) {

		case MVLV:
			//latitudes
			GISCoords[0]=GN.p_latitude;
			GISCoords[2]=GN.p_latitude - scaling_factor_MVLV*0.00001;
			GISCoords[4]=GN.p_latitude - scaling_factor_MVLV*0.00001;
			
			//longitudes
			GISCoords[1]=GN.p_longitude;
			GISCoords[3]=GN.p_longitude + scaling_factor_MVLV*0.00001;
			GISCoords[5]=GN.p_longitude - scaling_factor_MVLV*0.00001;
		break;
		
		case SUBMV:
			//latitudes
			GISCoords[0]=GN.p_latitude;
			GISCoords[2]=GN.p_latitude - scaling_factor_MVLV*0.00001;
			GISCoords[4]=GN.p_latitude - scaling_factor_MVLV*0.00001;
			
			//longitudes
			GISCoords[1]=GN.p_longitude;
			GISCoords[3]=GN.p_longitude + scaling_factor_MVLV*0.00001;
			GISCoords[5]=GN.p_longitude - scaling_factor_MVLV*0.00001;
		break;
		
		case MVMV:
			//latitudes
			GISCoords[0]=GN.p_latitude;
			GISCoords[2]=GN.p_latitude - scaling_factor_MVMV*0.00001;
			GISCoords[4]=GN.p_latitude;
			GISCoords[6]=GN.p_latitude + scaling_factor_MVMV*0.00001;
			
			//longitudes
			GISCoords[1]=GN.p_longitude;
			GISCoords[3]=GN.p_longitude + scaling_factor_MVMV*0.00001;
			GISCoords[5]=GN.p_longitude + scaling_factor_MVMV*0.00001*2;
			GISCoords[7]=GN.p_longitude + scaling_factor_MVMV*0.00001;
		break;
		
		case HVMV:		
			//latitudes
			GISCoords[0]=GN.p_latitude;
			GISCoords[2]=GN.p_latitude - scaling_factor_HVMV*0.00001;
			GISCoords[4]=GN.p_latitude;
			GISCoords[6]=GN.p_latitude + scaling_factor_HVMV*0.00001;
			
			//longitudes
			GISCoords[1]=GN.p_longitude;
			GISCoords[3]=GN.p_longitude + scaling_factor_HVMV*0.00001;
			GISCoords[5]=GN.p_longitude + scaling_factor_HVMV*0.00001*2;
			GISCoords[7]=GN.p_longitude + scaling_factor_HVMV*0.00001;
			
			// if you want Circle coordinates -->
			//x = r * cos(t) + a
			//y = r * sin(t) + b
			//t is an angle between 0 and 2π (more steps is more circle points, about 10-12 should suffice. --> adjust nb_GISCoords accordingly
			// r is the radius: 0.000009 degrees in latitude is about 1 meter 
			// a and b are latitude and longitude
		break;

		case HT:
			
		break;
		case MT:
			
		break;
		case LT:
			
		break;
		case LT5thgen:
			
		break;
}


return GISCoords;





]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205795</Id>
					<Name><![CDATA[f_createEnergyActors]]></Name>
					<Description><![CDATA[Function used to generate specific actors like grid operator, energy supplier and energy coop. Actors used to create variable pricing.]]></Description>
					<X>60</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Create the grid operator
GridOperator GO = energyModel.add_pop_gridOperators();

GO.p_actorID = project_data.grid_operator();
GO.p_actorType = OL_ActorType.OPERATORGRID;
GO.p_hasCongestionPricing = project_data.hasCongestionPricing() != null ? project_data.hasCongestionPricing() : false;


// Create the energy coop
if (project_data.energy_coop() != null && !project_data.energy_coop().equals("None")){
	
	EnergyCoop EC = energyModel.add_pop_energyCoops();
	
	EC.p_actorID = project_data.energy_coop();
	EC.p_actorType = OL_ActorType.COOPENERGY;
	EC.p_gridOperator = GO;
	//EC.p_CoopParent = EC.p_actorID; // WAT BETEKENT COOP PARENT??
}


// Energy supplier
if (project_data.energy_supplier() != null && !project_data.energy_supplier().equals("None")){
	
	EnergySupplier ES = energyModel.add_pop_energySuppliers(); 
	
	ES.p_actorID = project_data.energy_supplier();
	ES.p_actorType = OL_ActorType.SUPPLIERENERGY;
}

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205797</Id>
					<Name><![CDATA[f_setEngineProfiles]]></Name>
					<Description><![CDATA[Functie van gillis voor inladen weer data!]]></Description>
					<X>79</X><Y>119</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Double> argumentsList = genericProfiles_data.argumentsList();

// Various demand profiles

List<Double> houseEdemandList = genericProfiles_data.houseEdemandList();
List<Double> houseHDHWdemandList = genericProfiles_data.houseHDHWdemandList();
List<Double> buildingEdemandList = genericProfiles_data.buildingEdemandList();
List<Double> buildingHeatDemandList = genericProfiles_data.buildingHeatDemandList();
List<Double> industrySteelEdemandList = genericProfiles_data.industrySteelEdemandList();
List<Double> industrySteelHdemandList = genericProfiles_data.industrySteelHdemandList();
List<Double> industryOtherEdemandList = genericProfiles_data.industryOtherEdemandList();
List<Double> industryOtherHdemandList = genericProfiles_data.industryOtherHdemandList();
List<Double> logisticsFleetEdemandList = genericProfiles_data.logisticsFleetEdemandList();     
 
// Weather data
List<Double> windList = genericProfiles_data.windList();
List<Double> solarList = genericProfiles_data.solarList();
List<Double> tempList = genericProfiles_data.tempList();
List<Double> epexList = genericProfiles_data.epexList(); 

double[] a_arguments = new double[argumentsList.size()];
double[] a_windValues = new double[argumentsList.size()];
double[] a_solarValues = new double[argumentsList.size()];
double[] a_tempValues = new double[argumentsList.size()];
double[] a_houseEdemand = new double[argumentsList.size()];
double[] a_houseDHWdemand = new double[argumentsList.size()];
double[] a_buildingEdemand = new double[argumentsList.size()];
double[] a_buildingHeatDemand = new double[argumentsList.size()];
double[] a_industrySteelEdemand = new double[argumentsList.size()];
double[] a_industrySteelHdemand = new double[argumentsList.size()];
double[] a_industryOtherEdemand = new double[argumentsList.size()];
double[] a_industryOtherHdemand = new double[argumentsList.size()];
double[] a_logisticsFleetEdemand = new double[argumentsList.size()];  
double[] a_epexValues = new double[argumentsList.size()];
            
for(int i = 0; i < argumentsList.size(); i++) {
       a_arguments[i] = argumentsList.get(i);
       a_windValues[i] = windList.get(i);
       a_solarValues[i] = solarList.get(i);
       a_tempValues[i] = tempList.get(i);
       a_houseEdemand[i] = houseEdemandList.get(i);
       a_houseDHWdemand[i] = houseHDHWdemandList.get(i);
       a_buildingEdemand[i] = buildingEdemandList.get(i);
       a_buildingHeatDemand[i] = buildingHeatDemandList.get(i);
       a_industrySteelEdemand[i] = industrySteelEdemandList.get(i);
       a_industrySteelHdemand[i] = industrySteelHdemandList.get(i);
       a_industryOtherEdemand[i] = industryOtherEdemandList.get(i);
       a_industryOtherHdemand[i] = industryOtherHdemandList.get(i);
       a_logisticsFleetEdemand[i] = logisticsFleetEdemandList.get(i);        
       a_epexValues[i] = epexList.get(i);
}


J_profilePointer profilePointer;
// 'ambient' conditions:
energyModel.tf_ambientTemperature_degC.setArgumentsAndValues(a_arguments, a_tempValues);
energyModel.tf_dayAheadElectricityPricing_eurpMWh.setArgumentsAndValues(a_arguments, a_epexValues);

energyModel.tf_p_wind_e_normalized.setArgumentsAndValues(a_arguments, a_windValues);
profilePointer = new J_profilePointer("normalized onshore wind production", energyModel.tf_p_wind_e_normalized);
energyModel.f_addProfile(profilePointer);
energyModel.pp_windOnshoreProduction = profilePointer;

energyModel.tf_p_solar_e_normalized.setArgumentsAndValues(a_arguments, a_solarValues);
profilePointer = new J_profilePointer("normalized_PV_production", energyModel.tf_p_solar_e_normalized);
energyModel.f_addProfile(profilePointer);
energyModel.pp_solarPVproduction = profilePointer;

// Consumption profiles:

//energyModel.tf_p_house_e_demand_other.setArgumentsAndValues(a_arguments, a_houseEdemand);
TableFunction tf_p_house_e_demand_other = new TableFunction(a_arguments, a_houseEdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("house_other_electricity_demand", tf_p_house_e_demand_other);
energyModel.f_addProfile(profilePointer);

//energyModel.tf_p_house_h_demand_hot_water.setArgumentsAndValues(a_arguments, a_houseDHWdemand);
TableFunction tf_p_house_h_demand_hot_water = new TableFunction(a_arguments, a_houseDHWdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("house_hot_water_demand", tf_p_house_h_demand_hot_water);
energyModel.f_addProfile(profilePointer);

//energyModel.tf_p_building_e_demand_other.setArgumentsAndValues(a_arguments, a_buildingEdemand);
TableFunction tf_p_building_e_demand_other = new TableFunction(a_arguments, a_buildingEdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("Office_other_electricity", tf_p_building_e_demand_other);
energyModel.f_addProfile(profilePointer);

//energyModel.tf_p_building_h_demand.setArgumentsAndValues(a_arguments, a_buildingHeatDemand);
TableFunction tf_p_building_h_demand = new TableFunction(a_arguments, a_buildingHeatDemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("Building_heat_demand", tf_p_building_h_demand);
energyModel.f_addProfile(profilePointer);

//energyModel.tf_p_industry_other_e_demand.setArgumentsAndValues(a_arguments, a_industryOtherEdemand);
TableFunction tf_p_industry_other_e_demand = new TableFunction(a_arguments, a_industryOtherEdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("Industry_other_electricity", tf_p_industry_other_e_demand);
energyModel.f_addProfile(profilePointer);

//energyModel.tf_p_industry_other_h_demand.setArgumentsAndValues(a_arguments, a_industryOtherHdemand);
TableFunction tf_p_industry_other_h_demand = new TableFunction(a_arguments, a_industryOtherHdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("Industry_other_heat", tf_p_industry_other_h_demand);
energyModel.f_addProfile(profilePointer);

//energyModel.tf_p_industry_steel_e_demand.setArgumentsAndValues(a_arguments, a_industrySteelEdemand);
TableFunction tf_p_industry_steel_e_demand = new TableFunction(a_arguments, a_industrySteelEdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("Industry_steel_electricity", tf_p_industry_steel_e_demand);
energyModel.f_addProfile(profilePointer);

//energyModel.tf_p_industry_steel_h_demand.setArgumentsAndValues(a_arguments, a_industrySteelHdemand);
TableFunction tf_p_industry_steel_h_demand = new TableFunction(a_arguments, a_industrySteelHdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("Industry_steel_heat", tf_p_industry_steel_h_demand);
energyModel.f_addProfile(profilePointer);

//energyModel.tf_p_logistics_fleet_e_hgv.setArgumentsAndValues(a_arguments, a_logisticsFleetEdemand);
TableFunction tf_p_logistics_fleet_e_hgv = new TableFunction(a_arguments, a_logisticsFleetEdemand, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);
profilePointer = new J_profilePointer("LOGISTICS_FLEET_HGV_E", tf_p_logistics_fleet_e_hgv);
energyModel.f_addProfile(profilePointer);






]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205799</Id>
					<Name><![CDATA[f_createGenericCompanies]]></Name>
					<Description><![CDATA[Creating the companies (using a single GC) + owned buildings, that have not filled in the survey. If created, they will be simulated using average values, scaled with the totals (CBS data) of the area.]]></Description>
					<X>440</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Initialize variables
List<GridConnection> generic_company_GCs = new ArrayList();


for (Building_data genericCompany : c_GenericCompanyBuilding_data) {

	//Create new companyGC
	GCUtility companyGC = energyModel.add_UtilityConnections();
	
	//Update counter and collection	 
	v_numberOfCompaniesNoSurvey++;
	generic_company_GCs.add(companyGC);
	
	//Set parameters for the Grid Connection
	companyGC.p_gridConnectionID = genericCompany.address_id();
	
	// Check that is needed until connectioncapacity is no longer in 'Panden' excel
	if (genericCompany.contracted_capacity_kw() == null || genericCompany.contracted_capacity_kw() <= 0) {
		companyGC.p_physicalConnectionCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;
		companyGC.p_contractedDeliveryCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;
		companyGC.p_contractedFeedinCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;
	}
	else{
		companyGC.p_contractedDeliveryCapacity_kW = genericCompany.contracted_capacity_kw();
		companyGC.p_contractedFeedinCapacity_kW = companyGC.p_contractedDeliveryCapacity_kW;
		companyGC.p_physicalConnectionCapacity_kW = companyGC.p_contractedDeliveryCapacity_kW;
	}
	
	companyGC.p_heatingType = avgc_data.p_avgCompanyHeatingMethod; // Assuming all avg companies have GASBURNER.
	
	
	//set GC Adress
	companyGC.p_address = new J_Address();
	companyGC.p_address.setStreetName(genericCompany.streetname());
	if (genericCompany.house_number() == null) {
		companyGC.p_address.setHouseNumber(0);
	}
	else {
		companyGC.p_address.setHouseNumber(genericCompany.house_number());
	}
	companyGC.p_address.setHouseLetter(genericCompany.house_letter());
	companyGC.p_address.setHouseAddition(genericCompany.house_addition());
	companyGC.p_address.setPostalcode(genericCompany.postalcode());
	companyGC.p_address.setCity(genericCompany.city());
	
	
	//Set location of GC
 	companyGC.p_latitude = genericCompany.latitude(); 
 	companyGC.p_longitude = genericCompany.longitude();
 	companyGC.setLatLon(companyGC.p_latitude, companyGC.p_longitude);  
 	
 	
	//Connect GC to grid node
	companyGC.p_parentNodeElectricID = genericCompany.trafo_id ();
	
	// Create new actor and assign GC to that
	ConnectionOwner COC = energyModel.add_pop_connectionOwners(); // Create Connection owner company
		
	COC.p_actorID = genericCompany.address_id();
	COC.p_actorType = OL_ActorType.CONNECTIONOWNER;
	COC.p_connectionOwnerType = OL_ConnectionOwnerType.COMPANY;
	COC.p_detailedCompany = false;
	
	companyGC.p_owner = COC;
	companyGC.p_ownerID = COC.p_actorID;
	
	
	//Create GIS object and connect
	GIS_Building b = f_createGISBuilding( genericCompany, companyGC );
	v_totalFloorAreaAnonymousCompanies_m2 += b.p_floorSurfaceArea_m2;
	
	//Style building
	b.p_defaultFillColor = zero_Interface.v_companyBuildingColor;
	b.p_defaultLineColor = zero_Interface.v_companyBuildingLineColor;
	zero_Interface.f_styleAreas(b);
}

//Amount of generic companies created
traceln("Number of companies created without survey: " + v_numberOfCompaniesNoSurvey);
v_remainingNumberOfCompaniesNoSurvey = v_numberOfCompaniesNoSurvey;

//Create EA after all grid connections have been made -> needed because total surfaces are unkown before that
for (GridConnection GCcompany : generic_company_GCs ) {
	

	//Calculating total floor area of all buildings attached to the GC
	for (int k = 0; k < GCcompany.c_connectedGISObjects.size(); k++ ){
		GIS_Building b = (GIS_Building)GCcompany.c_connectedGISObjects.get(k);
		GCcompany.p_floorSurfaceArea_m2 += b.p_floorSurfaceArea_m2;
		GCcompany.p_roofSurfaceArea_m2 += b.p_roofSurfaceArea_m2;
	}
	
	//create the energy assets for each GC
	f_iEAGenericCompanies(GCcompany);
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[GIS_Building]]></ReturnType>
					<Id>1726584205801</Id>
					<Name><![CDATA[f_createGISBuilding]]></Name>
					<Description><![CDATA[Creates the GIS object(s) building(s) for the companies and houses]]></Description>
					<X>807.621</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[buildingData]]></Name>
						<Type><![CDATA[Building_data]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[GIS_Building b = energyModel.add_pop_GIS_Buildings();

b.p_id = buildingData.building_id();
b.p_GISObjectType = OL_GISObjectType.BUILDING;
b.p_buildingYear = buildingData.build_year();	
b.p_status = buildingData.status();
b.p_useType = buildingData.purpose();	

// Adres data
b.p_annotation = buildingData.annotation();

//position and coordinates
b.p_longitude = buildingData.longitude();
b.p_latitude = buildingData.latitude();
b.setLatLon(b.p_latitude, b.p_longitude);		

//If building is the first building in a cluster (means it has a pancluster_nr), add it to the list of buidling clusters
if(buildingData.pandcluster_nr() != null && buildingData.pandcluster_nr() > 0) { // && 
	energyModel.c_GISBuildingClusters.add(b);
	b.p_pandcluster_nr = buildingData.pandcluster_nr();
}

//Create gisregion
b.gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(buildingData.polygon()));


//Define surface area (with Null checks)
if (buildingData.cumulative_floor_surface_m2() == null && buildingData.polygon_area_m2() == null){
	b.p_floorSurfaceArea_m2 = b.gisRegion.area();
	b.p_roofSurfaceArea_m2 = b.gisRegion.area();
}
else if (buildingData.cumulative_floor_surface_m2() == null){
	b.p_roofSurfaceArea_m2 = buildingData.polygon_area_m2();
	b.p_floorSurfaceArea_m2 = b.p_roofSurfaceArea_m2;
}
else if(buildingData.polygon_area_m2() == null){
	b.p_floorSurfaceArea_m2 = buildingData.cumulative_floor_surface_m2();
	b.p_roofSurfaceArea_m2 = b.gisRegion.area();
}
else{
	b.p_floorSurfaceArea_m2 = buildingData.cumulative_floor_surface_m2();
	b.p_roofSurfaceArea_m2 = buildingData.polygon_area_m2();
}

//Add to collections
zero_Interface.c_GISBuildingShapes.add(b.gisRegion);
b.c_containedGridConnections.add(parentGC);
parentGC.c_connectedGISObjects.add(b);


return b;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205803</Id>
					<Name><![CDATA[f_addElectricityDemandProfile]]></Name>
					<X>811</X><Y>111</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[yearlyElectricityDemand_kWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[pvPower_kW]]></Name>
						<Type><![CDATA[Double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[hasQuarterlyData]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[profileName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[if ( hasQuarterlyData == true ) { // Add quarterly electricity data pattern if available 
	
	//Initialize the arrays
	List<Double> yearlyElectricityFeedin_kWh_list = null; 
	List<Double> yearlyElectricityProduction_kWh_list = null;
	
	//Check for PV, and if so: check for additional quarterhourly values
	if(pvPower_kW != null && pvPower_kW > 0){
		//Check for feedin values availability, if available: fill the list, if not, list = null;
		try {
			if(selectFirstValue(Double.class, "SELECT " + profileName + "_feedin FROM comp_elec_consumption LIMIT 1;") != null){
		  		yearlyElectricityFeedin_kWh_list = selectValues(double.class, "SELECT " + profileName + "_feedin FROM comp_elec_consumption;");
			}
		}
		catch(Exception e) {
			//Do nothing, cause initialized with null;
		}
		
		//Check for bruto production values availability, if available: fill the list, if not, list = null;
		try {
			if(selectFirstValue(Double.class, "SELECT " + profileName + "_production FROM comp_elec_consumption LIMIT 1;") != null){
		  		yearlyElectricityProduction_kWh_list = selectValues(double.class, "SELECT " + profileName + "_production FROM comp_elec_consumption;");
			}
		}
		catch(Exception e) {
			//Do nothing, cause initialized with null;
		}
	}
	
	//Get the delivery values
	List<Double> yearlyElectricityDelivery_kWh_list = selectValues(double.class, "SELECT " + profileName + "_demand FROM comp_elec_consumption;");
	
	//Convert lists into arrays
	double[] yearlyElectricityDelivery_kWh = (yearlyElectricityDelivery_kWh_list != null) ? yearlyElectricityDelivery_kWh_list.stream().mapToDouble(d -> max(0,d)).toArray() : null;
	double[] yearlyElectricityFeedin_kWh = 	(yearlyElectricityFeedin_kWh_list != null) ? yearlyElectricityFeedin_kWh_list.stream().mapToDouble(d -> max(0,d)).toArray() : null;
	double[] yearlyElectricityProduction_kWh = (yearlyElectricityProduction_kWh_list != null) ? yearlyElectricityProduction_kWh_list.stream().mapToDouble(d -> max(0,d)).toArray() : null;
	
	//Preprocess and add the profiles
	f_createPreprocessedElectricityProfile(parentGC, yearlyElectricityDelivery_kWh, yearlyElectricityFeedin_kWh, yearlyElectricityProduction_kWh, pvPower_kW);

} 

else { // Add regular electricity and consumption profiles
	J_EAConsumption profile = new J_EAConsumption(parentGC, OL_EnergyAssetType.ELECTRICITY_DEMAND, profileName, yearlyElectricityDemand_kWh, 0.0, 0.0, 0.0, 0.0, energyModel.p_timeStep_h, null);
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205805</Id>
					<Name><![CDATA[f_addHeatDemandProfile]]></Name>
					<X>811</X><Y>171</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[yearlyGasDemand_m3]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[hasHourlyGasData]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[ratioGasUsedForHeating]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[profileName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[J_EAConsumption heatDemand;
double yearlyDemandHeat_kWh = 0;
double profileTimeStep_hr = 1;
double maxPowerGasburner = 0;

if (parentGC.p_heatingType != OL_GridConnectionHeatingType.GASBURNER || yearlyGasDemand_m3 <= 0 ){// FOR NOW CHECK THIS
	traceln("NO SUPPORTED HEATING TYPE DETECTED, OR NO GAS DEMAND DETECTED!!");
	return;
}

if(hasHourlyGasData){
	J_EAProfile profile = new J_EAProfile(parentGC, OL_EnergyCarrierType.HEAT, null, OL_ProfileAssetType.HEATDEMAND ,profileTimeStep_hr);		
	profile.energyAssetName = parentGC.p_ownerID + " custom heat profile";
	
	List<Double> hourlyGasDemand_kWh = selectValues(double.class, "SELECT " + profileName + "_demand FROM comp_gas_consumption;");
	List<Double> hourlyHeatDemand_kWh = new ArrayList<Double>();
	for (int i = 0; i < hourlyGasDemand_kWh.size(); i++) {
		double gasHeatingValue_timestep_kWh = hourlyGasDemand_kWh.get(i) * avgc_data.p_gas_kWhpm3 * ratioGasUsedForHeating;
		yearlyDemandHeat_kWh += gasHeatingValue_timestep_kWh;
    	hourlyHeatDemand_kWh.add(i, gasHeatingValue_timestep_kWh);
    	
    	//Keep track of max value
    	if((gasHeatingValue_timestep_kWh/energyModel.p_timeStep_h) > maxPowerGasburner){
    		maxPowerGasburner = gasHeatingValue_timestep_kWh/energyModel.p_timeStep_h;
    	}
	}	
	profile.a_energyProfile_kWh = hourlyHeatDemand_kWh.stream().mapToDouble(d -> max(0,d)).toArray();
}
else{
	//Determine heatdemand
	yearlyDemandHeat_kWh = yearlyGasDemand_m3 * avgc_data.p_gas_kWhpm3; 
	heatDemand = new J_EAConsumption(parentGC, OL_EnergyAssetType.HEAT_DEMAND, profileName, 0.0, yearlyDemandHeat_kWh, 0.0, 0.0, 0.0, energyModel.p_timeStep_h, null);
	maxPowerGasburner = (yearlyDemandHeat_kWh / 8760 * 10);
}

switch (parentGC.p_heatingType){ // HOE gaan we om met meerdere heating types in survey???

	case GASBURNER:
		J_EAConversionGasBurner gasBurner = new J_EAConversionGasBurner(parentGC, OL_EnergyAssetType.GAS_BURNER, maxPowerGasburner , 0.99, energyModel.p_timeStep_h, 90);
	break;
	
	case HYBRID_HEATPUMP:
		traceln("GC HAS HYBRID_HEATPUMP, NO EA MADE");
	break;
	
	case ELECTRIC_HEATPUMP:
		traceln("GC HAS ELECTRIC_HEATPUMP, NO EA MADE");
	break;
	
	default:
	traceln("HEATING TYPE NOT FOUND FOR GC ");
	traceln(parentGC);
}

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205807</Id>
					<Name><![CDATA[f_createGISParcels]]></Name>
					<Description><![CDATA[Creates "empty" parcels on the gismap, these parcels do not contain buildings or gridconnections. Currently no need for the function to return the GIS_Object.]]></Description>
					<X>807.621</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (Parcel_data dataParcel : c_Parcel_data) {
		
	GIS_Parcel parcel = energyModel.add_pop_GIS_Parcels();
	
	parcel.set_p_latitude( dataParcel.latitude() );
	parcel.set_p_longitude( dataParcel.longitude() );
	parcel.setLatLon(parcel.p_latitude, parcel.p_longitude);	
	parcel.set_p_id( dataParcel.parcel_id() );
	parcel.set_p_GISObjectType(OL_GISObjectType.PARCEL);
	
	//Building + styling the gisregion and putting it on the map
	GISRegion gisregion = zero_Interface.f_createGISObject(f_createGISObjectsTokens( dataParcel.polygon()));
	parcel.gisRegion = gisregion;
	
	parcel.set_p_defaultFillColor( zero_Interface.v_parcelColor );
	parcel.set_p_defaultLineColor( zero_Interface.v_parcelLineColor );
	parcel.set_p_defaultLineStyle( LineStyle.LINE_STYLE_DASHED );
	zero_Interface.f_styleAreas(parcel);
	
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205809</Id>
					<Name><![CDATA[f_addEnergyProduction]]></Name>
					<X>811</X><Y>231</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[asset_type]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[asset_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[installedPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//String asset_name					= "Production Asset";
double capacityElectric_kW			= 0;
double capacityHeat_kW				= 0;
double yearlyProductionMethane_kWh 	= 0;
double yearlyProductionHydrogen_kWh = 0;
double timestep_h 					= energyModel.p_timeStep_h;
double outputTemperature_degC 		= 0;
J_profilePointer profilePointer = null;

switch (asset_type){

case PHOTOVOLTAIC: 
	//asset_name = "Solar Panels";
	profilePointer = energyModel.pp_solarPVproduction;
	capacityElectric_kW = installedPower_kW;
break;

case WINDMILL:
	//asset_name = "Windmill onshore";'
	profilePointer=energyModel.pp_windOnshoreProduction;
	capacityElectric_kW = installedPower_kW;
break;

case PHOTOTHERMAL: //NOT USED YET
	//asset_name = "PVT";
	capacityElectric_kW = installedPower_kW*0.5;//??????
	capacityHeat_kW	= installedPower_kW*0.5; // ????????
	outputTemperature_degC = 60; // ??????
break;
}

J_EAProduction production_asset = new J_EAProduction(parentGC, asset_type, asset_name, capacityElectric_kW , capacityHeat_kW, yearlyProductionMethane_kWh, yearlyProductionHydrogen_kWh, timestep_h, outputTemperature_degC, profilePointer);

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[GIS_Object]]></ReturnType>
					<Id>1726584205811</Id>
					<Name><![CDATA[f_createGISObject]]></Name>
					<Description><![CDATA[Creates the GIS object for the area EA (windfarms, solarparks, electrolysers, batteries, etc.)]]></Description>
					<X>807.621</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[latitude]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[longitude]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[polygon]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[GIS_Object area = energyModel.add_pop_GIS_Objects();

area.p_id = name;

//position and coordinates
area.p_latitude = latitude;
area.p_longitude = longitude;
area.setLatLon(area.p_latitude, area.p_longitude);		

//Create gisregion
area.gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(polygon));

//zero_Interface.c_GISBuildingShapes.add(b.gisRegion);		

return area;
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205813</Id>
					<Name><![CDATA[f_addEnergyAssetsToHouses]]></Name>
					<Description><![CDATA[Initialisation of the Energy assets using average values for houses]]></Description>
					<X>459</X><Y>559</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[house]]></Name>
						<Type><![CDATA[GCHouse]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[jaarlijksGasVerbruik]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[jaarlijksElectriciteitsVerbruik]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//Add generic electricity demand profile 
f_addElectricityDemandProfile(house, jaarlijksElectriciteitsVerbruik, null, false, "House_other_electricity");

//Woonwijk specifiek

if (project_data.project_type() == OL_ProjectType.RESIDENTIAL){
	f_addBuildingHeatModel(house, house.p_floorSurfaceArea_m2, C);
	
	//temporary hardcode household gasburner initialisatie (should be seperate function).
	house.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;
	J_EAConversionGasBurner gasBurner = new J_EAConversionGasBurner(house, OL_EnergyAssetType.GAS_BURNER, 20, 0.99, energyModel.p_timeStep_h, 90);
	
}
else{
	f_addHeatDemandProfile(house, jaarlijksGasVerbruik, false, 1, "Building_heat_demand");
}

if( randomTrue ( 0.1 )){
	double installedRooftopSolar_kW = Double.valueOf( uniform_discr(3,6));
	f_addEnergyProduction(house, OL_EnergyAssetType.PHOTOVOLTAIC, "Residential Solar", installedRooftopSolar_kW );
}

if (randomTrue( 0.05)){
	//f_addElectricVehicle(house, OL_EnergyAssetType.ELECTRIC_VEHICLE, true, 0, 0);
}
else{
	//f_addDieselVehicle(house, OL_EnergyAssetType.DIESEL_VEHICLE, true, 0);
}
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205815</Id>
					<Name><![CDATA[f_createSurveyCompanies_Zorm]]></Name>
					<X>439.001</X><Y>159</Y>
					<Label><X>10.999</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[traceln("Companies that filled in the survey:");

//Initialize parameters
List<A_SubTenant> subTenants = new ArrayList<A_SubTenant>();

//Get the survey data
List<com.zenmo.zummon.companysurvey.Survey> surveys = f_getSurveys();

for (var survey : surveys) {
	for (var address : survey.getAddresses()) {
        for (var gridConnection: address.getGridConnections()) {
	 		
	 		//Find the survey_owner (if it already exists)
	 		ConnectionOwner survey_owner = findFirst(energyModel.pop_connectionOwners, CO -> CO.p_actorID.equals(survey.getCompanyName()));
	 		
		 	//Check if it has (or will have) a direct connection with the grid (either gas or electric), if not: create subtenant	
		 	boolean hasNaturalGasConnection = (gridConnection.getNaturalGas().getHasConnection() != null)? gridConnection.getNaturalGas().getHasConnection() : false;	 	
		 	if (!gridConnection.getElectricity().getHasConnection() && !gridConnection.getElectricity().getGridExpansion().getHasRequestAtGridOperator() && !hasNaturalGasConnection){
				subTenants.add(f_createSubtenant(survey, address));	
			 	continue;
		 	}
		 	else if(survey_owner == null){// Connection owner does not exist yet: create and initialize new one
				survey_owner = energyModel.add_pop_connectionOwners();
				survey_owner.p_actorID = survey.getCompanyName();
				survey_owner.p_actorType = OL_ActorType.CONNECTIONOWNER;
				survey_owner.p_connectionOwnerType = OL_ConnectionOwnerType.COMPANY;
				survey_owner.p_detailedCompany = true;
			 	traceln(survey.getCompanyName());
		 	}

		 	//Create GC
		 	GCUtility companyGC = energyModel.add_UtilityConnections();		  
		 	
			//Set parameters for the Grid Connection
			companyGC.p_ownerID = survey.getCompanyName();
		 	companyGC.p_gridConnectionID = gridConnection.getSequence().toString() ;

			//Adress data
			companyGC.p_address = new J_Address();
			companyGC.p_address.setStreetName(address.getStreet().substring(0,1).toUpperCase() + address.getStreet().substring(1).toLowerCase());
		 	companyGC.p_address.setHouseNumber(address.getHouseNumber());
		 	companyGC.p_address.setHouseLetter(address.getHouseLetter().equals("") ? null : address.getHouseLetter());
		 	companyGC.p_address.setHouseAddition(address.getHouseNumberSuffix().equals("") ? null : address.getHouseNumberSuffix());
		 	companyGC.p_address.setPostalcode(address.getPostalCode().equals("") ? null : address.getPostalCode().toUpperCase().replaceAll("\\s",""));
		 	companyGC.p_address.setCity(address.getCity().substring(0,1).toUpperCase() + address.getCity().substring(1).toLowerCase());
			
		 	//Find actor and connect GC 
			companyGC.p_owner = survey_owner;	 	
		 	
		 	//Find buildings, and connect 
		 	double totalFloorSurfaceAreaGC_m2 = 0;
		 	double totalRoofSurfaceAreaGC_m2 = 0;
		 	List<Building_data> buildings = findAll(c_SurveyCompanyBuilding_data, b -> b.gc_id().equals(companyGC.p_gridConnectionID));
		 	//selectFrom(c_S).where(buildings.gc_id.eq(companyGC.p_gridConnectionID)).list();
			for (Building_data building : buildings) {
				GIS_Building b = f_createGISBuilding( building, companyGC);				
				
				//Accumulate surface areas
				totalFloorSurfaceAreaGC_m2 += b.p_floorSurfaceArea_m2;
				totalRoofSurfaceAreaGC_m2 += b.p_roofSurfaceArea_m2;
				
				//Set trafo ID
				companyGC.p_parentNodeElectricID = building.trafo_id();
				
				//Style building
				b.p_defaultFillColor = zero_Interface.v_detailedCompanyBuildingColor;
				b.p_defaultLineColor = zero_Interface.v_detailedCompanyBuildingLineColor;
				zero_Interface.f_styleAreas(b);
				
			}      
			
			//Add (combined) building data to GC (latitude and longitude + area)
			companyGC.p_floorSurfaceArea_m2 = totalFloorSurfaceAreaGC_m2;
			companyGC.p_roofSurfaceArea_m2 = totalRoofSurfaceAreaGC_m2;
			companyGC.p_longitude = companyGC.c_connectedGISObjects.get(0).p_longitude; // Get longitude of first building (only used to get nearest trafo)
			companyGC.p_latitude = companyGC.c_connectedGISObjects.get(0).p_latitude; // Get latitude of first building (only used to get nearest trafo)
			companyGC.setLatLon(companyGC.p_latitude, companyGC.p_longitude);  
			
			//Calculate remaining floor surface area for the unknown company calculations
			//v_remainingFloorArea_m2 -= totalFloorSurfaceAreaGC_m2;
			
			//Energy asset initialization
			f_iEASurveyCompanies_Zorm(companyGC, gridConnection); 
			
        }
    }
}

//Add created subtenants to main tenant(should happen after the other companies have been created)
for(A_SubTenant subtenant : subTenants){

	//Find grid connection that feeds the subtenant (achter de meter)
	GridConnection GC = findFirst(energyModel.f_getGridConnections(), 
	GCU -> GCU.p_address != null && GCU.p_address.getAddress().equals(subtenant.p_address.getAddress()));
	
	if (GC != null){
		subtenant.p_mainTenantID = GC.p_ownerID;
		subtenant.p_connectedGridConnection = GC;
		
		ConnectionOwner owner = findFirst(energyModel.pop_connectionOwners, p -> p.p_actorID.equals(GC.p_ownerID));
		owner.c_subTenants.add(subtenant);
	}
	else {
		traceln("Subtenant '" + subtenant.p_actorID + "' at " + subtenant.p_address.getAddress()+ ", does not have a main tenant");
	}
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205817</Id>
					<Name><![CDATA[f_createConnectionOwners]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>60</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (Tuple row : rows) {
	ConnectionOwner COC = energyModel.add_pop_connectionOwners(); // Create Connection owner company
	COC.p_actorID = row.get(companies.actor_id);
	COC.p_actorType = OL_ActorType.CONNECTIONOWNER;
	COC.p_connectionOwnerType = OL_ConnectionOwnerType.COMPANY;
	COC.p_detailedCompany = row.get(companies.is_detailed_company);
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[List<com.zenmo.zummon.companysurvey.Survey>]]></ReturnType>
					<Id>1726584205819</Id>
					<Name><![CDATA[f_getSurveys]]></Name>
					<X>459</X><Y>179</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Connect with API to database
Vallum vallum = new Vallum(user.PROJECT_CLIENT_ID(), user.PROJECT_CLIENT_SECRET());

List<com.zenmo.zummon.companysurvey.Survey> surveys = new ArrayList();

surveys = vallum.getSurveysByProject(project_data.project_name());

//Clear user data
user = null;

return surveys;]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205821</Id>
					<Name><![CDATA[f_createActors]]></Name>
					<X>89</X><Y>159</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Create specific actors like Grid operator, energy supplier, energy coop
f_createEnergyActors();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205823</Id>
					<Name><![CDATA[f_iEASurveyCompanies_Zorm]]></Name>
					<X>460</X><Y>220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[companyGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gridConnection]]></Name>
						<Type><![CDATA[com.zenmo.zummon.companysurvey.GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[//Initialize boolean that sets the creation of currently existing electric (demand) EA
boolean createElectricEA = true;


//Create current scenario parameter list
J_scenario_Current current_scenario_list = new J_scenario_Current();
zero_Interface.c_scenarioMap_Current.put(companyGC, current_scenario_list);

//Create future scenario parameter list
J_scenario_Future future_scenario_list = new J_scenario_Future();
zero_Interface.c_scenarioMap_Future.put(companyGC, future_scenario_list);


////Electricity (connection and consumption)
//Initialize contract capacity with 0 for when companies fill in survey already but currently have no connection yet
companyGC.p_contractedDeliveryCapacity_kW = 0;
companyGC.p_contractedFeedinCapacity_kW = 0;
companyGC.p_physicalConnectionCapacity_kW = 0;

//Check for electricity connection
if (gridConnection.getElectricity().getHasConnection()){
	
	if (gridConnection.getElectricity().getContractedConnectionCapacityKw() == null) {
		traceln("SURVEYOWNER HAS NOT FILLED IN CONNECTION CAPACITY!!! AVG value taken");
		companyGC.p_contractedDeliveryCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;
		companyGC.p_contractedFeedinCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;
		companyGC.p_physicalConnectionCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;
	}
	else{
		companyGC.p_contractedDeliveryCapacity_kW = gridConnection.getElectricity().getContractedConnectionCapacityKw(); //Contracted connection capacity
		
		//Check if contract capacity feedin has been filled in: if not, make the same as contract delivery
		if(gridConnection.getElectricity().getGrootverbruik().getContractedConnectionSupplyCapacityKw() != null && gridConnection.getElectricity().getGrootverbruik().getContractedConnectionSupplyCapacityKw() > 0){
			companyGC.p_contractedFeedinCapacity_kW = gridConnection.getElectricity().getGrootverbruik().getContractedConnectionSupplyCapacityKw(); //Contracted connection capacity
		}
		else{
			companyGC.p_contractedFeedinCapacity_kW = companyGC.p_contractedDeliveryCapacity_kW; //Contracted connection capacity
		}
		
		//Check if physical capacity has been filled in: if not, make the same as contract delivery
		if(gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw() != null && gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw() > 0){
			companyGC.p_physicalConnectionCapacity_kW = gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw(); //Contracted connection capacity
		}
		else{
			companyGC.p_physicalConnectionCapacity_kW = companyGC.p_contractedDeliveryCapacity_kW; //Contracted connection capacity
		}
	}
	
	//Add to current scenario list
	current_scenario_list.setCurrentContractDeliveryCapacity_kW(companyGC.p_contractedDeliveryCapacity_kW);
	current_scenario_list.setCurrentContractFeedinCapacity_kW(companyGC.p_contractedFeedinCapacity_kW);
	current_scenario_list.setCurrentPhysicalConnectionCapacity_kW(companyGC.p_physicalConnectionCapacity_kW);
	
	
	//Electricity consumption profile
	double yearlyElectricityConsumption_kWh = (gridConnection.getElectricity().getAnnualElectricityDemandKwh() != null) ? gridConnection.getElectricity().getAnnualElectricityDemandKwh() : 0; // Yearly electricity consumption (0 if value is null)
	String profileName = "Office_other_electricity";

	//Check if quarter hourly values are available 
	companyGC.v_hasQuarterHourlyValues = false;
	if (selectFirstValue(Double.class, "SELECT " + "ccid" + gridConnection.getSequence().toString() + "_demand FROM comp_elec_consumption LIMIT 1;") != null){
		companyGC.v_hasQuarterHourlyValues = true;
		profileName = "ccid" + companyGC.p_gridConnectionID;
		
		
		if (!settings.createCurrentElectricityEA()){//input boolean: Dont create current electric energy assets if electricity profile is present.
			createElectricEA = false;
		}
	}
	
	//Get PV power (used for preprocessing)
	Double pvPower_kW = (gridConnection.getSupply().getPvInstalledKwp() != null) ? new Double(gridConnection.getSupply().getPvInstalledKwp()) : null;
	
	//Add base electricity demand profile (with profile if available, with generic pattern if only yearly data is available)
	f_addElectricityDemandProfile(companyGC, yearlyElectricityConsumption_kWh, pvPower_kW, companyGC.v_hasQuarterHourlyValues, profileName);
		
	//Update total Yearly electricity consumption (only when no timestep data available, cause when thats avaiable, it happens in the preprocessing function)
	if (companyGC.v_hasQuarterHourlyValues == false){
		v_remainingElectricityDelivery_kWh -= yearlyElectricityConsumption_kWh;
	}
}

//If everything is 0 set the GC as non active
if(companyGC.p_contractedDeliveryCapacity_kW == 0 && companyGC.p_contractedFeedinCapacity_kW == 0 && companyGC.p_physicalConnectionCapacity_kW == 0){
	companyGC.v_isActive = false;
}
		
//Grid expansion request
future_scenario_list.setRequestedContractDeliveryCapacity_kW(companyGC.p_contractedDeliveryCapacity_kW);
if (gridConnection.getElectricity().getGridExpansion().getHasRequestAtGridOperator()){
	future_scenario_list.setRequestedContractDeliveryCapacity_kW((gridConnection.getElectricity().getGridExpansion().getRequestedKW() != null) ? gridConnection.getElectricity().getGridExpansion().getRequestedKW() : 0 + companyGC.p_contractedDeliveryCapacity_kW);
	future_scenario_list.setRequestedContractFeedinCapacity_kW((gridConnection.getElectricity().getGridExpansion().getRequestedKW() != null) ? gridConnection.getElectricity().getGridExpansion().getRequestedKW() : 0 + companyGC.p_contractedDeliveryCapacity_kW);
	future_scenario_list.setRequestedPhysicalConnectionCapacity_kW((gridConnection.getElectricity().getGridExpansion().getRequestedKW() != null) ? gridConnection.getElectricity().getGridExpansion().getRequestedKW() : 0 + companyGC.p_contractedDeliveryCapacity_kW);
}


////Supply (pv, wind, etc.)
if (gridConnection.getSupply().getHasSupply() != null && gridConnection.getSupply().getHasSupply()){
	//gridConnection.getElectricity().getAnnualElectricityProductionKwh() // Staat niet meer in het formulier!
	
	//PV
	if (gridConnection.getSupply().getPvInstalledKwp() != null && gridConnection.getSupply().getPvInstalledKwp() > 0){
		
		gridConnection.getSupply().getPvOrientation(); // Wat doen we hier mee?????
		
		f_addEnergyProduction(companyGC, OL_EnergyAssetType.PHOTOVOLTAIC, "Rooftop Solar", gridConnection.getSupply().getPvInstalledKwp());
		
		//add to scenario: current
		current_scenario_list.setCurrentPV_kW(gridConnection.getSupply().getPvInstalledKwp());
		//current_scenario_list.currentPV_orient = gridConnection.getSupply().getPvOrientation();
	}
	
	//Wind
	if (gridConnection.getSupply().getWindInstalledKw() != null && gridConnection.getSupply().getWindInstalledKw() > 0){
		f_addEnergyProduction(companyGC, OL_EnergyAssetType.WINDMILL, "Wind mill", gridConnection.getSupply().getWindInstalledKw());

		//add to scenario: current
		current_scenario_list.setCurrentWind_kW(gridConnection.getSupply().getWindInstalledKw());
	}
}

//Planned supply (PV)
if (gridConnection.getSupply().getPvPlanned() != null && gridConnection.getSupply().getPvPlanned()){ 
	future_scenario_list.setPlannedPV_kW(gridConnection.getSupply().getPvPlannedKwp()); 
	future_scenario_list.setPlannedPV_year(gridConnection.getSupply().getPvPlannedYear());
	//gridConnection.getSupply().getPvPlannedOrientation();
}

//Planned supply (Wind)
if (gridConnection.getSupply().getWindPlannedKw() != null && gridConnection.getSupply().getWindPlannedKw() > 0){
	future_scenario_list.setPlannedWind_kW(gridConnection.getSupply().getWindPlannedKw());
	// plannedWind_year // ???
}




////Gas
//Initialize variables (outside of gas loop needed for heating)
boolean hasHourlyGasData = false;
double yearlyGasConsumption_m3 = 0;
double ratioGasUsedForHeating = 1;
String heatProfileName = "Building_heat_demand";

if (gridConnection.getNaturalGas().getHasConnection() != null && gridConnection.getNaturalGas().getHasConnection()){
	
	yearlyGasConsumption_m3 = (gridConnection.getNaturalGas().getAnnualDemandM3() != null) ? gridConnection.getNaturalGas().getAnnualDemandM3() : 0; // Yearly electricity consumption (0 if value is null)

	//Check if quarter hourly values are available 
	if (selectFirstValue(Double.class, "SELECT " + "ccid" + gridConnection.getSequence().toString() + "_demand FROM comp_gas_consumption LIMIT 1;") != null){
		hasHourlyGasData = true;
		heatProfileName = "ccid" + companyGC.p_gridConnectionID;
	}
	
	//Determine how much gas goes towards heating
	ratioGasUsedForHeating = ((gridConnection.getNaturalGas().getPercentageUsedForHeating() != null) ? gridConnection.getNaturalGas().getPercentageUsedForHeating() : 100)/100;

	//Update total Yearly gas consumption
	v_remainingGasConsumption_m3 -= yearlyGasConsumption_m3;
}



	
////Heating
//Determine the current heating type
f_setHeatingTypeSurvey(companyGC, gridConnection);

//Set the heating demand profile
f_addHeatDemandProfile(companyGC, yearlyGasConsumption_m3, hasHourlyGasData, ratioGasUsedForHeating, heatProfileName);

//add to scenario: current
current_scenario_list.setCurrentHeatingType(companyGC.p_heatingType);




////Storage
Float battery_power_kW = 0f;
Float battery_capacity_kWh = 0f;

if (gridConnection.getStorage().getHasBattery() != null && gridConnection.getStorage().getHasBattery() && createElectricEA){ // Check if battery present and if electric demand EA should be created
	if (gridConnection.getStorage().getBatteryPowerKw() != null){
		battery_power_kW = gridConnection.getStorage().getBatteryPowerKw();
	}
	if (gridConnection.getStorage().getBatteryCapacityKwh() != null){
		battery_capacity_kWh = gridConnection.getStorage().getBatteryCapacityKwh();	
	}
}
// Elke survey company krijgt hoe dan ook een batterij EA (ook als op dit moment nog geen batterij aanwezig is, maar dan is capaciteit gewoon 0)
f_addStorage(companyGC, battery_power_kW, battery_capacity_kWh, OL_EnergyAssetType.STORAGE_ELECTRIC);


//Aansturing toevoegen ?

//add to scenario: current
current_scenario_list.setCurrentBatteryPower_kW(battery_power_kW);
current_scenario_list.setCurrentBatteryCapacity_kWh(battery_capacity_kWh);
	
	
if (gridConnection.getStorage().getHasThermalStorage() != null && gridConnection.getStorage().getHasThermalStorage()){ // Check for thermal storage
	//gridConnection.getStorage().getThermalStorageKw()
	//J_EAStorageHeat(Agent parentAgent, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType ) {
	//J_EAStorageHeat(companyGC, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType ) {
	//Denk ook aan aansturing?!!
}

if (gridConnection.getStorage().getHasPlannedBattery() != null && gridConnection.getStorage().getHasPlannedBattery()){ // Check for planned battery
	future_scenario_list.setPlannedBatteryCapacity_kWh(gridConnection.getStorage().getPlannedBatteryCapacityKwh());
	future_scenario_list.setPlannedBatteryPower_kW(gridConnection.getStorage().getPlannedBatteryPowerKw());
}




////Transport

//Cars of comuters and visitors 
int nbDailyCarVisitors_notNull = (gridConnection.getTransport().getNumDailyCarVisitors() != null) ? gridConnection.getTransport().getNumDailyCarVisitors() : 0;
int nbDailyCarCommuters_notNull = (gridConnection.getTransport().getNumDailyCarAndVanCommuters() != null) ? gridConnection.getTransport().getNumDailyCarAndVanCommuters() : 0;

if (nbDailyCarCommuters_notNull + nbDailyCarVisitors_notNull > 0){	
	
	int nbEVCarsComute = (gridConnection.getTransport().getNumCommuterAndVisitorChargePoints() != null) ? gridConnection.getTransport().getNumCommuterAndVisitorChargePoints() : 0; // Wat doen we hier mee????
	int nbDieselCarsComute = gridConnection.getTransport().getNumDailyCarAndVanCommuters() + gridConnection.getTransport().getNumDailyCarVisitors() - nbEVCarsComute;

	boolean isDefaultVehicle = true;
	double maxChargingPower_kW 		= avgc_data.p_avgEVMaxChargePowerCar_kW;	
	
	for (int i = 0; i< nbDieselCarsComute; i++){
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VEHICLE, isDefaultVehicle, 0);
	}
	
	
	//check if charge power is filled in
	if (gridConnection.getTransport().getCars().getPowerPerChargePointKw() != null){
		maxChargingPower_kW 		= gridConnection.getTransport().getCars().getPowerPerChargePointKw();		
		isDefaultVehicle			= false;
	}
	
	if (createElectricEA){ // Check if electric demand EA should be created
		for (int j = 0; j< nbEVCarsComute; j++){
			f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_VEHICLE, isDefaultVehicle, 0, maxChargingPower_kW);
		}
	}
	
	//add to scenario: current
	current_scenario_list.setCurrentEVCars(nbEVCarsComute);
	current_scenario_list.setCurrentDieselCars(nbDieselCarsComute);
}


//Business vehicles
if (gridConnection.getTransport().getHasVehicles() != null && gridConnection.getTransport().getHasVehicles()){

	//Cars
	if (gridConnection.getTransport().getCars().getNumCars() != null && gridConnection.getTransport().getCars().getNumCars() != 0){
		
		//gridConnection.getTransport().getCars().getNumChargePoints(); // Wat doen we hier mee????????
		
		int nbEVCars = gridConnection.getTransport().getCars().getNumElectricCars();
		int nbDieselCars = gridConnection.getTransport().getCars().getNumCars() - nbEVCars;

		
		boolean isDefaultVehicle		= true;
		double annualTravelDistance_km 	= 0;
		double maxChargingPower_kW 		= avgc_data.p_avgEVMaxChargePowerCar_kW;		
		
		//check if annual travel distance is filled in
		if (gridConnection.getTransport().getCars().getAnnualTravelDistancePerCarKm() != null){
			annualTravelDistance_km 	= gridConnection.getTransport().getCars().getAnnualTravelDistancePerCarKm();
			isDefaultVehicle			= false;
		}
		
		//create diesel vehicle
		for (int i = 0; i< nbDieselCars; i++){
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VEHICLE, isDefaultVehicle, annualTravelDistance_km);
		}
		
		//check if charge power is filled in
		if (gridConnection.getTransport().getCars().getPowerPerChargePointKw() != null){
			maxChargingPower_kW 		= gridConnection.getTransport().getCars().getPowerPerChargePointKw();		
			isDefaultVehicle			= false;		
		}
		
		//create EV
		if (createElectricEA){ // Check if electric demand EA should be created
			for (int j = 0; j< nbEVCars; j++){
			f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_VEHICLE, isDefaultVehicle, annualTravelDistance_km, maxChargingPower_kW);
			}
		}
		
		//add to scenario: current
		current_scenario_list.setCurrentEVCars(((current_scenario_list.getCurrentEVCars() != null) ? current_scenario_list.getCurrentEVCars() : 0) + nbEVCars);
		current_scenario_list.setCurrentDieselCars(((current_scenario_list.getCurrentDieselCars() != null) ? current_scenario_list.getCurrentDieselCars() : 0) + nbDieselCars);
		current_scenario_list.setCurrentEVCarChargePower_kW(maxChargingPower_kW);
		
		//Planned
		future_scenario_list.setPlannedEVCars((gridConnection.getTransport().getCars().getNumPlannedElectricCars() != null) ? gridConnection.getTransport().getCars().getNumPlannedElectricCars() : 0);
		future_scenario_list.setPlannedHydrogenCars((gridConnection.getTransport().getCars().getNumPlannedHydrogenCars() != null) ? gridConnection.getTransport().getCars().getNumPlannedHydrogenCars() : 0);
		
	}
	
	
	//Vans
	if (gridConnection.getTransport().getVans().getNumVans() != null && gridConnection.getTransport().getVans().getNumVans() != 0){
		
		//Update v_remaningAmount of vans
		v_remainingNumberOfVans -= gridConnection.getTransport().getVans().getNumVans();
		
		
		//gridConnection.getTransport().getVans().getNumChargePoints(); // Wat doen we hier mee????????
		
		int nbEVVans = gridConnection.getTransport().getVans().getNumElectricVans();		
		int nbDieselVans = gridConnection.getTransport().getVans().getNumVans() - nbEVVans;

		boolean isDefaultVehicle		= true;
		double annualTravelDistance_km 	= 0;
		double maxChargingPower_kW 		= avgc_data.p_avgEVMaxChargePowerVan_kW;		
		
		//check if annual travel distance is filled in
		if (gridConnection.getTransport().getVans().getAnnualTravelDistancePerVanKm() != null){
			annualTravelDistance_km 	= gridConnection.getTransport().getVans().getAnnualTravelDistancePerVanKm();
			isDefaultVehicle			= false;
		}
		
		//create diesel vehicles
		for (int i = 0; i< nbDieselVans; i++){
			f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VAN, isDefaultVehicle, annualTravelDistance_km);
		}
		
		//check if charge power is filled in
		if (gridConnection.getTransport().getVans().getPowerPerChargePointKw() != null){
			maxChargingPower_kW 		= gridConnection.getTransport().getVans().getPowerPerChargePointKw();	
			isDefaultVehicle			= false;		
		}
		
		//create electric vehicles
		if (createElectricEA){ // Check if electric demand EA should be created
			for (int j = 0; j< nbEVVans; j++){
				f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_VAN, isDefaultVehicle, annualTravelDistance_km, maxChargingPower_kW);
			}
		}
		
		//add to scenario: current
		current_scenario_list.setCurrentEVVans(nbEVVans);
		current_scenario_list.setCurrentDieselVans(nbDieselVans);
		current_scenario_list.setCurrentEVVanChargePower_kW(maxChargingPower_kW);
		
		//Planned
		future_scenario_list.setPlannedEVVans((gridConnection.getTransport().getVans().getNumPlannedElectricVans() != null) ? gridConnection.getTransport().getVans().getNumPlannedElectricVans() : 0);
		future_scenario_list.setPlannedHydrogenVans((gridConnection.getTransport().getVans().getNumPlannedHydrogenVans() != null) ? gridConnection.getTransport().getVans().getNumPlannedHydrogenVans() : 0);
	}
	
		
	
	//Trucks
	if (gridConnection.getTransport().getTrucks().getNumTrucks() != null && gridConnection.getTransport().getTrucks().getNumTrucks() != 0){
		
		//Update v_remaningAmount of trucks
		v_remainingNumberOfTrucks -= gridConnection.getTransport().getTrucks().getNumTrucks();


		//gridConnection.getTransport().getTrucks().getNumChargePoints(); // Wat doen we hier mee????????
		
		
		int nbEVTrucks = gridConnection.getTransport().getTrucks().getNumElectricTrucks();		
		int nbDieselTrucks = gridConnection.getTransport().getTrucks().getNumTrucks() - nbEVTrucks;
	
		boolean isDefaultVehicle		= true;
		double annualTravelDistance_km = 0;
		double maxChargingPower_kW = avgc_data.p_avgEVMaxChargePowerTruck_kW;
		
		//check if annual travel distance is filled in
		if (gridConnection.getTransport().getTrucks().getAnnualTravelDistancePerTruckKm() != null){
			annualTravelDistance_km 	= gridConnection.getTransport().getTrucks().getAnnualTravelDistancePerTruckKm();
			isDefaultVehicle			= false;
		}
		
		//create diesel vehicles
		for (int i = 0; i< nbDieselTrucks; i++){
			f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_TRUCK, isDefaultVehicle, annualTravelDistance_km);
		}
		
		//check if charge power is filled in
		if (gridConnection.getTransport().getTrucks().getPowerPerChargePointKw() != null){
			maxChargingPower_kW 		= gridConnection.getTransport().getTrucks().getPowerPerChargePointKw();
			isDefaultVehicle			= false;		
		}
		
		//create electric vehicles
		if (createElectricEA){ // Check if electric demand EA should be created
			for (int j = 0; j< nbEVTrucks; j++){
			f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_TRUCK, isDefaultVehicle, annualTravelDistance_km, maxChargingPower_kW);
			}
		}
		
		//add to scenario: current
		current_scenario_list.setCurrentEVTrucks(nbEVTrucks);
		current_scenario_list.setCurrentDieselTrucks(nbDieselTrucks);
		current_scenario_list.setCurrentEVTruckChargePower_kW(maxChargingPower_kW);
		
		//Planned
		future_scenario_list.setPlannedEVTrucks((gridConnection.getTransport().getTrucks().getNumPlannedElectricTrucks() != null) ? gridConnection.getTransport().getTrucks().getNumPlannedElectricTrucks() : 0);
		future_scenario_list.setPlannedHydrogenTrucks((gridConnection.getTransport().getTrucks().getNumPlannedHydrogenTrucks() != null) ? gridConnection.getTransport().getTrucks().getNumPlannedHydrogenTrucks() : 0);
	}
	
	
	//Other
	if (Objects.nonNull(gridConnection.getTransport().getOtherVehicles().getHasOtherVehicles())){
	
	// Wat doen we hier mee???
	
	}
}
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205825</Id>
					<Name><![CDATA[f_setHeatingTypeSurvey]]></Name>
					<X>831</X><Y>191</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[companyGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[gridConnection]]></Name>
						<Type><![CDATA[com.zenmo.zummon.companysurvey.GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[int i = 0;

if(gridConnection.getHeat().getHeatingTypes().size() == 0){
	companyGC.p_heatingType = OL_GridConnectionHeatingType.NONE;// None for now.
	traceln("no or incorrect heating type detected for '" + companyGC.p_ownerID + "'");
}		

while (i < gridConnection.getHeat().getHeatingTypes().size()){

	var Heating_Type = gridConnection.getHeat().getHeatingTypes().get(i);

	//Heating type Mixed toevoegen! Dus geen collection
	switch (Heating_Type){
		
		case GAS_BOILER:
		companyGC.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;
		companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.GASBURNER);
		break;

		case HYBRID_HEATPUMP:
		companyGC.p_heatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;
		companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.HYBRID_HEATPUMP);
		break;

		case ELECTRIC_HEATPUMP:
		companyGC.p_heatingType = OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP;
		companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP);
		break;
		
		case DISTRICT_HEATING:
		companyGC.p_heatingType = OL_GridConnectionHeatingType.DISTRICTHEAT;
		companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.DISTRICTHEAT);
		break;
		
		case OTHER:
		companyGC.p_heatingType = OL_GridConnectionHeatingType.NONE;// Other is not supported by the model so: NONE.
		companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.OTHER);
		break;
		
		default:
		companyGC.p_heatingType = OL_GridConnectionHeatingType.NONE;
		traceln("no or incorrect heating type detected for '" + companyGC.p_ownerID + "'");
		//companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.NONE);
	}
	i++;
}

//Set correct primary heating method (p_heatingType) (needed for now, till model can support multiple heating types)
if (companyGC.c_heatingTypes.size()>1){
	if (companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP)){
		companyGC.p_heatingType = OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP;
		return;
	}
	else if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.HYBRID_HEATPUMP)){
		companyGC.p_heatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;
		return;
	}
	else if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.GASBURNER)){
		companyGC.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;
		return;
	}
}



/*
//If multiple heating types: Set heating type mixed
if (companyGC.c_heatingTypes.size()>1 && !companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.OTHER)|| companyGC.c_heatingTypes.size()>2){
	traceln("Has multiple heating types (excluding OTHER)");
	traceln(companyGC.c_heatingTypes);
	//Set heating type mixed
	companyGC.p_heatingType = OL_GridConnectionHeatingType.MIXED;
}
*/]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205827</Id>
					<Name><![CDATA[f_addElectricVehicle]]></Name>
					<X>811</X><Y>271</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[vehicle_type]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[isDefaultVehicle]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[annualTravelDistance_km]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[maxChargingPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double storageCapacity_kWh 		= 0;
double energyConsumption_kWhpkm = 0;
double capacityElectricity_kW 	= 0;
double stateOfCharge_r  		= 1; // Initial state of charge
double timestep_h				= energyModel.p_timeStep_h;
double vehicleScaling 			= 1.0;

switch(vehicle_type){
	
	/*
	case ELECTRIC_VEHICLE_COMUTERS: // ??? Hoe laad je andere laadprofielen in.?? Deze moet ander laadprofiel dan de Standaard Electric_vehicle 
		capacityElectricity_kW	= avgc_data.p_avgEVMaxChargePowerCar_kW;
		storageCapacity_kWh		= avgc_data.p_avgEVStorageCar_kWh;
		energyConsumption_kWhpkm = avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;
	break;
	*/
	
	case ELECTRIC_VEHICLE:
		capacityElectricity_kW	= avgc_data.p_avgEVMaxChargePowerCar_kW;
		storageCapacity_kWh		= avgc_data.p_avgEVStorageCar_kWh;
		energyConsumption_kWhpkm = avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;
	break;
	
	case ELECTRIC_VAN:
		capacityElectricity_kW 	= avgc_data.p_avgEVMaxChargePowerVan_kW;
		storageCapacity_kWh		= avgc_data.p_avgEVStorageVan_kWh;
		energyConsumption_kWhpkm = avgc_data.p_avgEVEnergyConsumptionVan_kWhpkm;
	break;
	
	case ELECTRIC_TRUCK:
		capacityElectricity_kW	= avgc_data.p_avgEVMaxChargePowerTruck_kW;
		storageCapacity_kWh		= avgc_data.p_avgEVStorageTruck_kWh;
		energyConsumption_kWhpkm = avgc_data.p_avgEVEnergyConsumptionTruck_kWhpkm;
	break;
	
}

if (!isDefaultVehicle && maxChargingPower_kW != 0){
	capacityElectricity_kW	= maxChargingPower_kW;
}


//Create the EV vehicle energy asset with the set parameters + links
J_EAEV electricVehicle = new J_EAEV(parentGC, capacityElectricity_kW, storageCapacity_kWh, stateOfCharge_r, timestep_h, energyConsumption_kWhpkm, vehicleScaling, vehicle_type, null);	

if (!isDefaultVehicle && annualTravelDistance_km > 1000){
		electricVehicle.tripTracker.setAnnualDistance_km(annualTravelDistance_km);
}

]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205829</Id>
					<Name><![CDATA[f_addDieselVehicle]]></Name>
					<X>811</X><Y>291</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[vehicle_type]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[isDefaultVehicle]]></Name>
						<Type><![CDATA[Boolean]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[annualTravelDistance_km]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double energyConsumption_kWhpkm = 0;
double vehicleScaling = 1.0;

//Diesel car
switch (vehicle_type){
	
	case DIESEL_VEHICLE:
		energyConsumption_kWhpkm = avgc_data.p_avgDieselConsumptionCar_kWhpkm;
	break;
	
	case DIESEL_VAN:
		energyConsumption_kWhpkm = avgc_data.p_avgDieselConsumptionVan_kWhpkm;
	break;
	
	case DIESEL_TRUCK:
		energyConsumption_kWhpkm = avgc_data.p_avgDieselConsumptionTruck_kWhpkm;
	break;
}

//Create EA
J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(parentGC, energyConsumption_kWhpkm, energyModel.p_timeStep_h, vehicleScaling, vehicle_type, null);

//Set annual travel distance
if (!isDefaultVehicle && annualTravelDistance_km > 1000){
		dieselVehicle.tripTracker.setAnnualDistance_km(annualTravelDistance_km);
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205831</Id>
					<Name><![CDATA[f_addStorage]]></Name>
					<X>811</X><Y>251</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[storagePower_kw]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[storageCapacity_kWh]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[storageType]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Body><![CDATA[J_EAStorage storage = null;

switch (storageType){

	case STORAGE_ELECTRIC:
	
		storage = new J_EAStorageElectric(parentGC, storagePower_kw, storageCapacity_kWh, 0, energyModel.p_timeStep_h);

	break;
	
	case STORAGE_HEAT:
	
	break;
	
	case STORAGE_GAS:
	
	break;
	
	default:
	
	return;
}
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205833</Id>
					<Name><![CDATA[f_iEAGenericCompanies]]></Name>
					<Description><![CDATA[Initialisation of the Energy assets using average values for companies that have not filled in the survey (yet) combined with totals (floor surface, electricity/yr, gas/yr and trucks)  of the simulated area.]]></Description>
					<X>470</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[companyGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Body><![CDATA[//Create current & future scenario parameter list
J_scenario_Current current_scenario_list = new J_scenario_Current();
zero_Interface.c_scenarioMap_Current.put(companyGC, current_scenario_list);

J_scenario_Future future_scenario_list = new J_scenario_Future();
zero_Interface.c_scenarioMap_Future.put(companyGC, future_scenario_list);

//Add current grid capacity to current (and future, no data on plans so assumption it stays the same) scenario list
current_scenario_list.setCurrentContractDeliveryCapacity_kW(companyGC.p_contractedDeliveryCapacity_kW);
future_scenario_list.setRequestedContractDeliveryCapacity_kW(companyGC.p_contractedDeliveryCapacity_kW);

//Basic heating and electricity demand profiles
if (companyGC.p_floorSurfaceArea_m2 > 0){

	//Buidling Base electricity load
	double Remaining_electricity_demand_kWh_p_m2_yr = v_remainingElectricityDelivery_kWh / v_totalFloorAreaAnonymousCompanies_m2;
	double yearlyElectricityDemand_kWh = Remaining_electricity_demand_kWh_p_m2_yr * companyGC.p_floorSurfaceArea_m2;
	//Add base load profile
	f_addElectricityDemandProfile(companyGC, yearlyElectricityDemand_kWh, null, false, "Office_other_electricity");


	//Building Gas demand profile (purely heating)
	double Remaining_gas_demand_m3_p_m2_yr = v_remainingGasConsumption_m3/v_totalFloorAreaAnonymousCompanies_m2;
	double yearlyGasDemand_m3 = Remaining_gas_demand_m3_p_m2_yr*companyGC.p_floorSurfaceArea_m2;
	double ratioGasUsedForHeating = 1;
	//Add heat demand profile
	f_addHeatDemandProfile(companyGC, yearlyGasDemand_m3, false, ratioGasUsedForHeating, "Building_heat_demand");
	
	//Set current scenario heating type
	current_scenario_list.setCurrentHeatingType(companyGC.p_heatingType);
}


//Production asset (PV) ??????????????????????????????????????????? willen we die toevoegen aan generieke bedrijven?
//f_addEnergyProduction(companyGC, OL_EnergyAssetType.PHOTOVOLTAIC, avgc_data.p_avgUtilityPVPower_kWp);



//Battery with capacity 0 (initialize the slider)
f_addStorage(companyGC, 0, 0, OL_EnergyAssetType.STORAGE_ELECTRIC);

//add to scenario: current & future
current_scenario_list.setCurrentBatteryPower_kW(0f);
current_scenario_list.setCurrentBatteryCapacity_kWh(0f);
future_scenario_list.setPlannedBatteryPower_kW(0f);
future_scenario_list.setPlannedBatteryCapacity_kWh(0f);

	
//Transport (total remaining vans and trucks (total as defined in project selection - survey company usage)

//Vans
if(v_remainingNumberOfVans > 0){
	int nbVans = 0;
	for (int k = 0; k< ceil((double)v_remainingNumberOfVans/(double)v_remainingNumberOfCompaniesNoSurvey); k++){
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VAN, true, 0);
		v_remainingNumberOfVans--;
		nbVans++;
	}
	
	//Set current scenario trucks
	current_scenario_list.setCurrentDieselVans(nbVans);
}

//Trucks
if (v_remainingNumberOfTrucks > 0){
	int nbTrucks=0;
	for (int k = 0; k< ceil((double)v_remainingNumberOfTrucks/(double)v_remainingNumberOfCompaniesNoSurvey); k++){
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_TRUCK, true, 0);
		v_remainingNumberOfTrucks--;
		nbTrucks++;
	}
	
	//Set current scenario trucks
	current_scenario_list.setCurrentDieselTrucks(nbTrucks);
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205835</Id>
					<Name><![CDATA[f_createRemainingBuildings]]></Name>
					<X>806.739</X><Y>519</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (Building_data remainingBuilding_data : c_remainingBuilding_data) {
	
	GIS_Building building = energyModel.add_pop_GIS_Buildings();
	building.p_longitude = remainingBuilding_data.longitude();
	building.p_latitude = remainingBuilding_data.latitude();
	building.setLatLon(building.p_latitude, building.p_longitude);		
	
	//Building + styling the gisregion and putting it on the map		
	building.gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(remainingBuilding_data.polygon()));
	
	building.p_defaultFillColor = zero_Interface.v_restBuildingColor;
	building.p_defaultLineColor = zero_Interface.v_restBuildingLineColor;
	zero_Interface.f_styleAreas(building);
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205837</Id>
					<Name><![CDATA[f_addTransportHydrogen]]></Name>
					<X>811</X><Y>311</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[vehicle_type]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[isDefaultVehicle]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[annualTravelDistance_km]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double energyConsumption_kWhpkm = 0;
double vehicleScaling = 1.0;

//Hydrogen car
switch (vehicle_type){

	case HYDROGEN_VEHICLE:
		energyConsumption_kWhpkm = avgc_data.p_avgHydrogenConsumptionCar_kWhpkm;
	break;
	
	case HYDROGEN_VAN:
		energyConsumption_kWhpkm = avgc_data.p_avgHydrogenConsumptionVan_kWhpkm;
	break;
	
	case HYDROGEN_TRUCK:
		energyConsumption_kWhpkm = avgc_data.p_avgHydrogenConsumptionTruck_kWhpkm;
	break;
}

//Create EA
J_EAHydrogenVehicle hydrogenVehicle = new J_EAHydrogenVehicle(parentGC, energyConsumption_kWhpkm, energyModel.p_timeStep_h, vehicleScaling, vehicle_type, null);

//Set annual travel distance
if (!isDefaultVehicle && annualTravelDistance_km > 1000){
		hydrogenVehicle.tripTracker.setAnnualDistance_km(annualTravelDistance_km);
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205839</Id>
					<Name><![CDATA[f_iEASurveyCompanies_Excel]]></Name>
					<X>460</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/*
double ratioGasUsedForHeating = 1;

String idString = companyGC.p_gridConnectionID;
int id = 0;
try {
	id = roundToInt(Double.valueOf(idString));
}
catch (NumberFormatException e) {
	// Probably one of the template GCs?
}

J_scenario_Current current_scenario_list = new J_scenario_Current();
zero_Interface.c_scenarioMap_Current.put(companyGC, current_scenario_list);

J_scenario_Future future_scenario_list = new J_scenario_Future();
zero_Interface.c_scenarioMap_Future.put(companyGC, future_scenario_list);

//Add current grid capacity to current scenario list
current_scenario_list.setCurrentContractDeliveryCapacity_kW(companyGC.p_contractedDeliveryCapacity_kW);

//Add future grid capacity to future scenario list (FOR NOW IT STAYS THE SAME, NO DATA)
future_scenario_list.setRequestedContractDeliveryCapacity_kW(companyGC.p_contractedDeliveryCapacity_kW);

//Electricity consumption
//traceln("Company connection id: %s", selectFrom(comp_connections).where(comp_connections.detail_id.eq(idString)).firstResult(comp_connections.name));
//traceln("id uit pandentabel id: %s", id);


//if( selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).list().get(0).get(comp_connections.has_quarterhourly_values)) { // Check wetehr there is 15-min data available.
//if( selectFrom(comp_connections).where(comp_connections.detail_id.eq(id)).kwartierwaardes.equals("ja")){ // Check wetehr there is 15-min data available.
if (row.get( comp_connections.has_quarterhourly_values )) {	
	f_addElectricityDemandProfile(companyGC, 0, null, true, "ccid" + id);
} else { // If not: Use yearly consumption and generic profiles
	f_addElectricityDemandProfile(companyGC, row.get( comp_connections.electricity_consumption_k_wh_year ), null, false, "Office_other_electricity");
}

v_remainingElectricityDelivery_kWh -= row.get( comp_connections.electricity_consumption_k_wh_year );



//Gas consumption
double gasConsumption_m3 = row.get( comp_connections.gas_consumption_m3_year );

//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.gas_consumption_m3_year);
//traceln("gasConsumption_m3: %s",gasConsumption_m3);
//traceln("companyGC.p_floorSurfaceArea_m2: %s", companyGC.p_floorSurfaceArea_m2);
if (gasConsumption_m3 > 0) {
	if (companyGC.p_ownerID.equals("Applied Medical (2/2)")) {
		gasConsumption_m3 *= 0.25; // Most of the gas consumption is not for heating
	}
	f_addHeatDemandProfile(companyGC, gasConsumption_m3, false, ratioGasUsedForHeating);
}

v_remainingGasConsumption_m3 -= gasConsumption_m3;

//PV panels
int installedPV_kW = row.get( comp_connections.pv_installed_kw );
//(int) selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.pv_installed_kw);
if( installedPV_kW > 0){
	f_addEnergyProduction(companyGC, OL_EnergyAssetType.PHOTOVOLTAIC, "solar panels", installedPV_kW);
}

current_scenario_list.setCurrentPV_kW(installedPV_kW);
future_scenario_list.setPlannedPV_year( row.get( comp_connections.pv_investment_year ) );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.pv_investment_year));
future_scenario_list.setPlannedPV_kW( row.get( comp_connections.pv_investment_kw ) );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.pv_investment_kw));

//Vehicles
//Trucks
int nbTrucks = row.get( comp_connections.nb_trucks );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_trucks);
int nbEVTrucks = row.get( comp_connections.nb_etrucks );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_etrucks);
	
if (nbTrucks > 0) {
	for (int i = 0; i<nbEVTrucks; i++) {
		f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_TRUCK, true, 0, 0);
		v_remainingAmountOfTrucks--;		
		
	}
	for (int i = 0; i<(nbTrucks-nbEVTrucks); i++) {
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_TRUCK, true, 0);	
		v_remainingAmountOfTrucks--;	
	}
}
current_scenario_list.setCurrentDieselTrucks(nbTrucks);
current_scenario_list.setCurrentEVTrucks(nbEVTrucks);
future_scenario_list.setPlannedEVTrucks( row.get( comp_connections.nb_planned_etrucks ) );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_planned_etrucks));

//Vans
int nbVans =  row.get( comp_connections.nb_vans );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_vans);
int nbEVans =  row.get( comp_connections.nb_evans );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_evans);
	
if (nbVans>0) {
	for (int i = 0; i<nbEVans; i++) {
		f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_VAN, true, 0, 0);
		v_remainingAmountOfVans--;
		
	}
	for (int i = 0; i<(nbVans-nbEVans); i++) {
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VAN, true, 0);	
		v_remainingAmountOfVans--;
	}
}

current_scenario_list.setCurrentDieselVans(nbVans);
current_scenario_list.setCurrentEVVans(nbEVans);
future_scenario_list.setPlannedEVVans( row.get( comp_connections.nb_planned_evans ) );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_planned_evans));

//Cars	
int nbCars = row.get( comp_connections.nb_cars );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_cars);
int nbEVs = row.get( comp_connections.nb_evs );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_evs);

if (nbCars>0) {
	for (int i = 0; i<nbEVs; i++) {
		f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_VEHICLE, true, 0, 0);
	}
	for (int i = 0; i<(nbCars-nbEVs); i++) {
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VEHICLE, true, 0);	
	}
}

current_scenario_list.setCurrentDieselCars(nbCars);
current_scenario_list.setCurrentEVCars(nbEVs);
future_scenario_list.setPlannedEVCars( row.get( comp_connections.nb_planned_evs ) );
//selectFrom(comp_connections).where(comp_connections.gc_id.eq(idString)).firstResult(comp_connections.nb_planned_evs));


*/]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205841</Id>
					<Name><![CDATA[f_addBuildingHeatModel]]></Name>
					<X>811</X><Y>211</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[floorArea_m2]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[isolationLevel]]></Name>
						<Type><![CDATA[OL_IsolationLevelHouse]]></Type>
					</Parameter>
					<Body><![CDATA[double maxPowerHeat_kW = 100; 				//Dit is hoeveel vermogen het huis kan afgeven/opnemen, mag willekeurige waarden hebben. Wordt alleen gebruikt in rekenstap van ratio of capacity
double lossfactor_WpK; 						//Dit is wat bepaalt hoeveel warmte het huis verliest/opneemt per tijdstap per delta_T 
double initialTemp = uniform_discr(15,22); 	//starttemperatuur
double heatCapacity_JpK; 					//hoeveel lucht zit er in je huis dat je moet verwarmen?
double solarAbsorptionFactor_m2; 			//hoeveel m2 effectieve ramen zijn er die opwarmen met zonneinstraling

switch (isolationLevel){
	case A:
		lossfactor_WpK = 0.20 * floorArea_m2;
	break;
	case B:
		lossfactor_WpK = 0.35 * floorArea_m2;
	break;
	case C:
		lossfactor_WpK = 0.55 * floorArea_m2;
	break;
	case D:
		lossfactor_WpK = 0.75 * floorArea_m2;
	break;
	default:
		lossfactor_WpK = uniform (0.4, 0.8) * floorArea_m2;
	break;
}

solarAbsorptionFactor_m2 = floorArea_m2 * 0.01; //solar irradiance [W/m2] 

heatCapacity_JpK = floorArea_m2 * 500000;

parentGC.p_BuildingThermalAsset = new J_EABuilding( parentGC, maxPowerHeat_kW, lossfactor_WpK, energyModel.p_timeStep_h, initialTemp, heatCapacity_JpK, solarAbsorptionFactor_m2 );]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205843</Id>
					<Name><![CDATA[f_createChargingStationsScale]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>440</X><Y>580</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Tuple> initialList = selectFrom(chargepoints).list();
List<Tuple> scopedList = new ArrayList<>();

for (Tuple tuple : initialList) {
	for (int i = 0; i < c_gridNodeIDsInScope.size() - 1; i++){
		if (tuple.get(chargepoints.trafo_id).equals( c_gridNodeIDsInScope.get(i)) ){
			scopedList.add(tuple);
		}
	}	
}

traceln("Aantal laadstations in input data (huidig + toekomstig): " + scopedList.size());

//Create CPO agent
ConnectionOwner	CPO;
CPO = energyModel.add_pop_connectionOwners();
CPO.p_actorID = "CPO";
CPO.p_actorType = OL_ActorType.CONNECTIONOWNER;
CPO.p_connectionOwnerType = OL_ConnectionOwnerType.CHARGEPOINT_OP;

for (Tuple row : scopedList){
 	GCPublicCharger charger = energyModel.add_PublicChargers();
	charger.set_p_gridConnectionID( row.get( chargepoints.gc_id ) );
	charger.set_p_name( row.get( chargepoints.gc_name ) );
	charger.set_p_ownerID(CPO.p_actorID );
	charger.set_p_floorSurfaceArea_m2( 1 ); 
	charger.set_p_parentNodeElectricID( row.get( chargepoints.trafo_id ) );
	charger.v_isActiveCharger = row.get(chargepoints.exists_already);
	//	charger.v_isPaused = !row.get( chargepoints.initially_active );
	charger.set_p_latitude( row.get( chargepoints.latitude ) );
	charger.set_p_longitude( row.get( chargepoints.longitude ) );
	charger.setLatLon(charger.p_latitude, charger.p_longitude);
	
	//TODO: set Connection capacity (Can't be 0 anymore in engine) 1 assumed now, wrong so: FIX THIS.
	charger.set_p_physicalConnectionCapacity_kW(1);
	
	//THIS IS A QUICK FIX FOR SCALE. THAT USES THE nbOfChargers TO DETERMINE WHEN TO TURN IT ON OR OFF (TO AVOID ADDING PARAMETERS FOR A QUICK FIX)
	charger.p_nbOfChargers = uniform_discr(1,4) / 4.0;
	 
	GIS_Object area = energyModel.add_pop_GIS_Objects();
		
	//position and coordinates
	area.set_p_latitude( row.get( chargepoints.latitude ) );
	area.set_p_longitude( row.get( chargepoints.longitude ) );
	area.setLatLon( area.p_latitude, area.p_longitude );		
	
	//Create gisregion
	area.gisRegion = f_createGISRegionChargingStation( area.p_latitude, area.p_longitude );	
	
	//Set gis object type
	area.p_GISObjectType = OL_GISObjectType.CHARGER;
	
	//Add to collections			
	charger.c_connectedGISObjects.add(area);
	area.c_containedGridConnections.add(charger);
	
	//zero_Interface.uI_Tabs.tabElectricity.p_nbChargersInDatabase ++;
	//TODO: load the profile from excel column pofile_data
	charger.p_chargingProfileName = "cs_" + uniform_discr(1, 50);
	if (charger.v_isActiveCharger){
		f_addChargingDemandProfile( charger, charger.p_chargingProfileName );
		charger.p_isInitialCharger = true;
		//zero_Interface.uI_Tabs.tabElectricity.v_currentNbChargers ++;
		zero_Interface.c_fixedPublicChargers.add(charger);
				
		//Style building
		area.set_p_defaultFillColor( zero_Interface.v_chargingStationColor );
		area.set_p_defaultLineColor( zero_Interface.v_chargingStationLineColor );
		traceln("adding active charger");
	}
	else {
		area.gisRegion.setVisible(false);
		zero_Interface.c_inactivePublicChargers.add(charger);
		
		//Style building
		area.set_p_defaultFillColor( zero_Interface.v_newChargingStationColor );
		area.set_p_defaultLineColor( zero_Interface.v_newChargingStationLineColor );
	}
	zero_Interface.f_styleAreas(area);
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205845</Id>
					<Name><![CDATA[f_addChargingDemandProfile]]></Name>
					<X>811</X><Y>151</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[GC]]></Name>
						<Type><![CDATA[GCPublicCharger]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[profileName]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[J_EAProfile profile = new J_EAProfile(GC, OL_EnergyCarrierType.ELECTRICITY, null, OL_ProfileAssetType.CHARGING, energyModel.p_timeStep_h);		
profile.energyAssetName = "charging profile";
List<Double> quarterlyEnergyDemand_kWh = selectValues(double.class, "SELECT " + profileName + " FROM charging_profiles;");			
profile.a_energyProfile_kWh = quarterlyEnergyDemand_kWh.stream().mapToDouble(d -> max(0,d)).map( d -> d / 4).toArray();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[GISRegion]]></ReturnType>
					<Id>1726584205847</Id>
					<Name><![CDATA[f_createGISRegionChargingStation]]></Name>
					<X>807.621</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[lat]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[lon]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//create shape Coords
int nb_points = 6;
double[] GISCoords = new double[nb_points * 2];

for (int i=0; i < nb_points ; i++){
	double size = 0.00004;
	GISCoords[i * 2] = size * cos( i * ( 2 * Math.PI ) / nb_points) + lat;
	GISCoords[i * 2 + 1] = 1.64 * size * sin( i * ( 2 * Math.PI ) / nb_points) + lon;
}

//Create the region
GISRegion gisregion = zero_Interface.f_createGISObject( GISCoords );

return gisregion;
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205849</Id>
					<Name><![CDATA[f_createChargingStations]]></Name>
					<X>431</X><Y>811</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Initialize parameters
int laadpaal_nr = 1;
int laadstation_nr = 1;

//Loop over charging stations
for (Chargingstation_data dataChargingStation : c_Chargingstation_data){

	GCPublicCharger chargingStation = energyModel.add_PublicChargers();

	chargingStation.set_p_gridConnectionID( dataChargingStation.gc_id());
	chargingStation.set_p_name( dataChargingStation.gc_name() );
	
	//Electric Capacity
	if (dataChargingStation.connection_capacity_kw() != null) {
		// Assume the connection capacity is both physical and contracted.
		chargingStation.set_p_physicalConnectionCapacity_kW( dataChargingStation.connection_capacity_kw() );
		chargingStation.set_p_contractedDeliveryCapacity_kW( dataChargingStation.connection_capacity_kw() );
	}
	
	chargingStation.set_p_heatingType( OL_GridConnectionHeatingType.NONE );
	
	//Set parent node
	chargingStation.p_parentNodeElectricID = dataChargingStation.trafo_id();
	
	//Is active at start?
	chargingStation.v_isActive = dataChargingStation.initially_active();

	//Set charging attitude: MAX_POWER should always be the starting case for charge stations to prevent more charging than possible
	chargingStation.set_p_chargingAttitudeVehicles(OL_ChargingAttitude.MAX_POWER);
			
	//Create and connect owner
	ConnectionOwner owner = energyModel.add_pop_connectionOwners();

	chargingStation.set_p_ownerID( dataChargingStation.owner_id());				
	owner.set_p_actorID( chargingStation.p_ownerID );
	owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );
	owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.CHARGEPOINT_OP );
	chargingStation.set_p_owner( owner );
	
	
	//Check if centre or single
	if (dataChargingStation.is_charging_centre()) {
	
		if (chargingStation.p_ownerID == null){
			chargingStation.p_ownerID = "Publiek laadstation " + laadstation_nr;
			laadstation_nr++;
		}

		chargingStation.set_p_nbOfChargers( dataChargingStation.number_of_chargers() );
		chargingStation.set_p_maxChargingPower_kW( dataChargingStation.power_per_charger_kw() );
		
		//If check on connection capacity to prevent more charging than possible
		if(chargingStation.p_contractedDeliveryCapacity_kW > chargingStation.p_nbOfChargers*chargingStation.p_maxChargingPower_kW){
			chargingStation.p_contractedDeliveryCapacity_kW = chargingStation.p_nbOfChargers*chargingStation.p_maxChargingPower_kW;
		}
		
		//Set vehicle type
		chargingStation.p_chargingVehicleType = dataChargingStation.vehicle_type();		
		
		//Create vehicles that charge at the charging centre
		for(int k = 0; k < chargingStation.p_nbOfChargers*avgc_data.p_avgVehiclesPerChargePoint; k++ ){
			f_addElectricVehicle(chargingStation, chargingStation.p_chargingVehicleType, true, 0, chargingStation.p_maxChargingPower_kW);
		}
		
		
		if (dataChargingStation.polygon() != null) {
			//Create EA GIS object (building) for the charging centre
			GIS_Object area = f_createGISObject( dataChargingStation.gc_name(), dataChargingStation.latitude(), dataChargingStation.longitude(), dataChargingStation.polygon() );
			
			//Set gis object type
			area.p_GISObjectType = OL_GISObjectType.CHARGER;
			
			//Add to collections
			area.c_containedGridConnections.add(chargingStation);
			chargingStation.c_connectedGISObjects.add(area);
			
			//Style building
			area.set_p_defaultFillColor( zero_Interface.v_chargingStationColor_centre );
			area.set_p_defaultLineColor( zero_Interface.v_chargingStationLineColor_centre );
			zero_Interface.f_styleAreas(area);
		}
		else{
			traceln("No gisobject created for charge centre: " + chargingStation.p_name);
		}
	}
	else {
	
			if (chargingStation.p_ownerID == null){
				chargingStation.p_ownerID = "Publieke laadpaal " + laadpaal_nr;
				laadpaal_nr++;
			}
			
			//Set charging power
			chargingStation.set_p_maxChargingPower_kW( dataChargingStation.power_per_charger_kw() );
			
			//Set vehicle type
			chargingStation.p_chargingVehicleType = dataChargingStation.vehicle_type();		
			
			//Create vehicles that charge at the charging centre
			for(int k = 0; k < avgc_data.p_avgVehiclesPerChargePoint; k++ ){
				f_addElectricVehicle(chargingStation, chargingStation.p_chargingVehicleType, true, 0, chargingStation.p_maxChargingPower_kW);
			}
		
			//Create GIS object for the chargingStation			
			GIS_Object area = energyModel.add_pop_GIS_Objects();
	
			//position and coordinates
			area.p_latitude = dataChargingStation.latitude();
			area.p_longitude = dataChargingStation.longitude();
			area.setLatLon(area.p_latitude, area.p_longitude);		
			
			//Create gisregion
			area.gisRegion = f_createGISRegionChargingStation( area.p_latitude, area.p_longitude );	
			
			//Set area type
			area.p_GISObjectType = OL_GISObjectType.CHARGER;
		
			chargingStation.c_connectedGISObjects.add(area);
			area.c_containedGridConnections.add(chargingStation);
			
			area.set_p_defaultFillColor( zero_Interface.v_chargingStationColor );
			area.set_p_defaultLineColor( zero_Interface.v_chargingStationLineColor );
			zero_Interface.f_styleAreas(area);
	}
}
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205851</Id>
					<Name><![CDATA[f_createCompaniesFromDatabase]]></Name>
					<Description><![CDATA[Creates the houses using a single GC, and their building. After creation, they will be simulated using average values.]]></Description>
					<X>440</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Building_data> scopedBuilding_data = f_getScopedBuildingList(c_GenericCompanyBuilding_data);

traceln("Aantal bedrijven in BAG data (geen woonfunctie): " + scopedBuilding_data.size());

int i = 0;
for (Building_data dataBuilding : scopedBuilding_data) {
	GCUtility company = energyModel.add_UtilityConnections();
	
	//Set parameters for the Grid Connection
 	company.p_gridConnectionID = dataBuilding.address_id();
	company.p_ownerID = "Bedrijf " + Integer.toString(i);	//aanname : huiseigenaar is eigenbaas
	company.p_purposeBAG = dataBuilding.purpose();
	company.p_heatingType = avgc_data.p_avgHouseHeatingMethod ;
	company.p_floorSurfaceArea_m2 = dataBuilding.cumulative_floor_surface_m2();
	//company.p_bouwjaar = dataBuilding.bouwjaar();
	company.p_physicalConnectionCapacity_kW = 50; //// HARDCODED?????
	company.p_contractedDeliveryCapacity_kW = 50; //// HARDCODED?????
	company.p_contractedFeedinCapacity_kW = 50; //// HARDCODED?????
	
	//adres gegevens
	company.p_address = new J_Address();
	company.p_address.setStreetName(dataBuilding.streetname());
	company.p_address.setHouseNumber(dataBuilding.house_number());
	company.p_address.setHouseLetter(dataBuilding.house_letter());
	company.p_address.setHouseAddition(dataBuilding.house_addition());
	company.p_address.setPostalcode(dataBuilding.postalcode());
	company.p_address.setCity(dataBuilding.city());

	//locatie
	company.p_longitude = dataBuilding.longitude();
	company.p_latitude = dataBuilding.latitude();
	company.setLatLon(company.p_latitude, company.p_longitude);
	
	//Connect GC to grid node
	company.p_parentNodeElectricID = dataBuilding.trafo_id();
		
	//Create and set owner
	ConnectionOwner	companyOwner = energyModel.add_pop_connectionOwners();
	companyOwner.p_actorID = company.p_ownerID;
	companyOwner.p_actorType = OL_ActorType.CONNECTIONOWNER;
	companyOwner.p_connectionOwnerType = OL_ConnectionOwnerType.COMPANY;
	companyOwner.p_detailedCompany = false;
	company.p_owner = companyOwner;
	
	//Create GIS building
	GIS_Building b;
	int pandClusterNr = dataBuilding.pandcluster_nr();
	if( pandClusterNr == 0 ){	
		b = f_createGISBuilding( dataBuilding, company );
	}
	else {
		b = randomWhere(energyModel.c_GISBuildingClusters, x -> x.p_pandcluster_nr == pandClusterNr);
		if (b == null){
			b = f_createGISBuilding( dataBuilding, company );
		}
		else {
			b.c_containedGridConnections.add(company);
			company.c_connectedGISObjects.add(b);
		}
	}
	
	//Style building
	b.p_defaultFillColor = zero_Interface.v_companyBuildingColor;
	b.p_defaultLineColor = zero_Interface.v_companyBuildingLineColor;
	zero_Interface.f_styleAreas(b);
	
	//Instantiate energy assets
	double jaarlijksElectriciteitsVerbruik;
	double jaarlijksGasVerbruik;
	try {
		jaarlijksElectriciteitsVerbruik = dataBuilding.electricity_consumption_kwhpa();
		jaarlijksGasVerbruik = dataBuilding.gas_consumption_kwhpa();
	}
	catch (NullPointerException e){
		jaarlijksElectriciteitsVerbruik = Double.valueOf(uniform_discr(5000, 10000)); // HARDCODED???
		jaarlijksGasVerbruik =  Double.valueOf(uniform_discr(600, 2000)); //// HARDCODED?????
	}
	f_addElectricityDemandProfile(company, jaarlijksElectriciteitsVerbruik, null, false, "Office_other_electricity");

	i++;
}	
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205853</Id>
					<Name><![CDATA[f_createInterface]]></Name>
					<X>30</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//OVERRIDE THE zero_Interface parameter here
//zero_Interface = YOUR INTERFACE;

//Set parameters/pointers in the interface
zero_Interface.energyModel = energyModel;
zero_Interface.uI_Results.energyModel = energyModel;
zero_Interface.p_selectedProjectType = project_data.project_type();
zero_Interface.settings = settings;]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205855</Id>
					<Name><![CDATA[f_initializeGrideNodeTimeSeriesExcel]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1490</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int columnIndex = 2;
for(GridNode gn : energyModel.pop_gridNodes){
	e_gridnodeTimeSeries.setCellValue(gn.p_gridNodeID, "Sheet1", 1, columnIndex);
	columnIndex++;
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[List<Building_data>]]></ReturnType>
					<Id>1726584205857</Id>
					<Name><![CDATA[f_getScopedBuildingList]]></Name>
					<X>440</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[initialList]]></Name>
						<Type><![CDATA[List<Building_data>]]></Type>
					</Parameter>
					<Body><![CDATA[List<Building_data> scopedList = new ArrayList<>();

for (Building_data dataBuilding : initialList) {
	for (int i = 0; i < c_gridNodeIDsInScope.size() - 1; i++){
		if (dataBuilding.trafo_id().equals( c_gridNodeIDsInScope.get(i)) ){
			scopedList.add(dataBuilding);
		}
	}	
}

return scopedList;]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205859</Id>
					<Name><![CDATA[f_createGISCables]]></Name>
					<X>807.621</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
//LV cables
//Initialize the array with gisroutes 
GISRoute[] gisroutesLV = new GISRoute[c_Cable_data_LV.size()];
int i = 0;


for (Cable_data dataCableLV : c_Cable_data_LV) {
	gisroutesLV[i] = zero_Interface.f_createGISLine(f_createGISObjectsTokens(dataCableLV.line()), "LVGrid");
	i++;
}

//Create LV network
//zero_Interface.f_createGISNetwork(gisroutesLV, "LVGrid");


//MV cables
//Initialize the array with gisroutes 
GISRoute[] gisroutesMV = new GISRoute[c_Cable_data_MV.size()];
int k = 0;


for (Cable_data dataCableMV : c_Cable_data_MV) {
	gisroutesMV[k] = zero_Interface.f_createGISLine(f_createGISObjectsTokens(dataCableMV.line()), "MVGrid");
	k++;
}

//Create MV network
//zero_Interface.f_createGISNetwork(gisroutesMV, "MVGrid");
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205861</Id>
					<Name><![CDATA[f_createPreprocessedElectricityProfile]]></Name>
					<X>831</X><Y>131</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[yearlyElectricityDelivery_kWh]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[yearlyElectricityFeedin_kWh]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[yearlyElectricityProduction_kWh]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[pvPower_kW]]></Name>
						<Type><![CDATA[Double]]></Type>
					</Parameter>
					<Body><![CDATA[//Create the profile 
J_EAProfile profile = new J_EAProfile(parentGC, OL_EnergyCarrierType.ELECTRICITY, null, OL_ProfileAssetType.ELECTRICITYBASELOAD, energyModel.p_timeStep_h);		
profile.energyAssetName = parentGC.p_ownerID + " custom profile";

//Initialize parameters		
double nettDelivery_kWh;

//Preprocessing and adding new array to the J_EAProfile
if (yearlyElectricityProduction_kWh != null && yearlyElectricityFeedin_kWh != null) { // When delivery, feedin and production profiles are available
	double[] yearlyElectricityConsumption_kWh = new double[yearlyElectricityDelivery_kWh.length];
	for (int i = 0; i < yearlyElectricityDelivery_kWh.length; i++) {	
		yearlyElectricityConsumption_kWh[i] = yearlyElectricityDelivery_kWh[i] - yearlyElectricityFeedin_kWh[i] + yearlyElectricityProduction_kWh[i];
	}
	profile.a_energyProfile_kWh = yearlyElectricityConsumption_kWh;
	nettDelivery_kWh = Arrays.stream(yearlyElectricityDelivery_kWh).sum() - Arrays.stream(yearlyElectricityFeedin_kWh).sum();
	//traceln("Calculating consumption profile on delivery, feedin and production profiles for company %s with %s kWp PV", parentGC.p_gridConnectionID, pvPower_kW);
} else if (pvPower_kW != null && pvPower_kW > 0) { // When only delivery, feedin profiles are available, in addition to PV power, make explicit consumption and production arrays using delivery profile and PV installed power [kW]
	double[] yearlyElectricityConsumption_kWh = new double[yearlyElectricityDelivery_kWh.length];
	if (yearlyElectricityFeedin_kWh != null) { // Terugleveringsdata beschikbaar
		//traceln("Estimating electricity consumption based on delivery and feedin profiles with pv power estimate for company %s with %s kWp PV", parentGC.p_gridConnectionID, pvPower_kW);
		double addedConsumption_kWh = 0;
		for (int i = 0; i < yearlyElectricityDelivery_kWh.length; i++) {
			double pvPowerEstimate_kW = pvPower_kW * energyModel.tf_p_solar_e_normalized(i*0.25);
			double estimatedConsumption_kWh = yearlyElectricityDelivery_kWh[i] + max(0, pvPowerEstimate_kW*0.25 - yearlyElectricityFeedin_kWh[i]);
			addedConsumption_kWh += max(0, pvPowerEstimate_kW*0.25 - yearlyElectricityFeedin_kWh[i]);
			yearlyElectricityConsumption_kWh[i] = max(0,estimatedConsumption_kWh);
		}
		//traceln("Added electricity consumed compared to delivery profile: %s MWh", addedConsumption_kWh/1000);
	} else { // Zonder terugleveringsdata, alleen afname
		//traceln("Estimating electricity consumption based on delivery profile and pv power for company %s with %s kWp PV", parentGC.p_gridConnectionID, pvPower_kW);
		double pvPowerEstimate_kW = 0;
		double estimatedConsumption_kWh = 0;
		double addedConsumption_kWh = 0;
		for (int i = 0; i < yearlyElectricityDelivery_kWh.length; i++) {
			pvPowerEstimate_kW = pvPower_kW * energyModel.tf_p_solar_e_normalized(i*0.25);
			if (yearlyElectricityDelivery_kWh[i] != 0) { // Only update consumption if delivery is non-zero, otherwise hold previously estimated consumption constant
				estimatedConsumption_kWh = yearlyElectricityDelivery_kWh[i] + pvPowerEstimate_kW*0.25;
				addedConsumption_kWh += pvPowerEstimate_kW * 0.25;
			} else {
				addedConsumption_kWh += estimatedConsumption_kWh * 0.25;
			}
			yearlyElectricityConsumption_kWh[i] = max(0,estimatedConsumption_kWh);
		}
		//traceln("Added electricity consumed compared to delivery profile: %s MWh", addedConsumption_kWh/1000);
	}
	profile.a_energyProfile_kWh = yearlyElectricityConsumption_kWh;
	nettDelivery_kWh = Arrays.stream(yearlyElectricityDelivery_kWh).sum();
} else { // No PV production
	profile.a_energyProfile_kWh = yearlyElectricityDelivery_kWh;
	nettDelivery_kWh = Arrays.stream(yearlyElectricityDelivery_kWh).sum();
}
//traceln(Arrays.stream(profile.a_energyProfile_kWh).sum() + " kWh per jaar at grid connection " + parentGC.p_ownerID + " " + profileName);
v_remainingElectricityDelivery_kWh -= nettDelivery_kWh;
 
if (v_remainingElectricityDelivery_kWh < 0){
	traceln("v_remainingElectricityConsumption_kWh became negative at GC: %s", parentGC);
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205863</Id>
					<Name><![CDATA[f_setHouseHeatingPreferences]]></Name>
					<X>440</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[house]]></Name>
						<Type><![CDATA[GCHouse]]></Type>
					</Parameter>
					<Body><![CDATA[house.v_nightTempSetpoint_degC = uniform_discr(12,18); // HARDCODED??
house.v_dayTempSetpoint_degC = uniform_discr(18, 24); // HARDCODED??
house.v_heatingOn_time = uniform_discr(5,10) + uniform_discr(0,4) / 4.0; // HARDCODED??
house.v_heatingOff_time = uniform_discr(21,23); // HARDCODED??]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205865</Id>
					<Name><![CDATA[f_startUpLoader_default]]></Name>
					<X>60</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[traceln("---------------------------");
traceln("======= STARTING UP =======");
traceln("---------------------------");
traceln("");

double startTime = System.currentTimeMillis();
v_timeOfModelStart_ms = startTime;
v_hourOfYearStart= avgc_data.hourOfYearPerMonth[getMonth()] + (getDayOfMonth()-1)*24;

//Import excel data to the anylogic database
f_importExcelTablesToDB();

//Fill the record collections
f_readDatabase();

//Weather market data
f_setEngineProfiles();

//Create the project interface
f_createInterface();

//Project specific styling (Needs to happen before configuring the engine)
zero_Interface.f_projectSpecificStyling();

// Populate the model
f_configureEngine_default();

//send the GIS map centre location to the Interface 
zero_Interface.map_centre_latitude = project_data.map_centre_latitude();
zero_Interface.map_centre_longitude = project_data.map_centre_longitude();

//Start up of the User Interface (Needs to happen after configuring the engine)
zero_Interface.f_UIStartup();

//Ending of the start up
double endTime = System.currentTimeMillis();
double duration = endTime - startTime;
v_modelStartUpDuration_s = roundToDecimal(duration / 1000, 3);

traceln(" ");
traceln("*** Start up finished *** ");
traceln("*** Start up duration: "+ v_modelStartUpDuration_s + " s ***");
traceln(" ");


//Simulate full year simulation for initial KPIs
if( settings.runHeadlessAtStartup() ){
	energyModel.f_runRapidSimulation(); // Do a full year run to have KPIs right away!
	zero_Interface.f_updateUIresultsMainArea();
	zero_Interface.gr_simulateYearScreenSmall.setVisible(false);
	zero_Interface.gr_loadIconSmall.setVisible(false);
	if (energyModel.UtilityConnections.size() > 0) {
		//zero_Interface.f_updateUIresultsGridConnection( zero_Interface.uI_Results.v_gridConnection, energyModel.UtilityConnections.get(0));
	}
	zero_Interface.f_updateUIresultsGridNode( zero_Interface.uI_Results.v_trafo, energyModel.pop_gridNodes.get(0));
	if (energyModel.pop_energyCoops.size()>0) {
		zero_Interface.f_updateUIresultsEnergyCoop( zero_Interface.uI_Results.v_collective, energyModel.pop_energyCoops.get(0));
	}
	zero_Interface.b_resultsUpToDate = true;
}
else {
		zero_Interface.f_resetSettings();
}

//Clear all data record collections after loader is done
f_clearDataRecords();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205867</Id>
					<Name><![CDATA[f_readDatabase]]></Name>
					<X>-390</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Override this function and:
//Fill the data parameters and collections using your own functions here]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205869</Id>
					<Name><![CDATA[f_clearDataRecords]]></Name>
					<X>-390</X><Y>600</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Function used to clear all data record collections after the loader is done
//-> no longer needed, by clearing it is send to the garbage collector -> saves memory

genericProfiles_data = null;
c_GridNode_data.clear();
c_SurveyCompanyBuilding_data.clear();
c_GenericCompanyBuilding_data.clear();
c_HouseBuilding_data.clear();
c_remainingBuilding_data.clear();
c_Solarfarm_data.clear();
c_Windfarm_data.clear();
c_Electrolyser_data.clear();
c_Battery_data.clear();
c_Chargingstation_data.clear();
c_Neighbourhood_data.clear();
c_Parcel_data.clear();
c_Cable_data_LV.clear();
c_Cable_data_MV.clear();

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205871</Id>
					<Name><![CDATA[f_createSurveyCompanies_Excel]]></Name>
					<X>440</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[traceln("Companies that filled in the survey:");

/*
	// Find all the buildings that have specified a gridconnection id.
	List<Tuple> buildingRows = selectFrom(buildings)
		.where(buildings.gc_id.isNotNull())
		.list();
	
	// Loop through the comp_connections
	List<Tuple> connectionRows = selectFrom(comp_connections).list();
	
	for (Tuple connectionRow : connectionRows) {	
		
		if (connectionRow.get(comp_connections.is_template)) {
			// Templates are descriptions of generic companies, each row in the buildings excel represents one such company.
			for (Tuple buildingRow : buildingRows) {
				if (buildingRow.get( buildings.gc_id ).equals(connectionRow.get(comp_connections.gc_id))) {
					GCUtility companyGC = energyModel.add_UtilityConnections();					
					
					companyGC.p_gridConnectionID = buildingRow.get( buildings.adress_id );
					// For excel-inputs we use annotation for the company name. These were added by hand, in the future we will probably change this.
					companyGC.p_ownerID = buildingRow.get( buildings.annotation);
					companyGC.p_physicalConnectionCapacity_kW = connectionRow.get(comp_connections.connection_capacity_demand);
					companyGC.p_contractedDeliveryCapacity_kW = connectionRow.get(comp_connections.connection_capacity_demand);
					companyGC.p_contractedFeedinCapacity_kW = connectionRow.get(comp_connections.connection_capacity_supply);

					// Finding the ConnectionOwner
					ConnectionOwner COC = findFirst(energyModel.pop_connectionOwners, p -> p.p_actorID.equals(companyGC.p_ownerID) );
					if (COC == null) {
						traceln("GC with id %s has no COC", companyGC.p_gridConnectionID );
						COC = energyModel.add_pop_connectionOwners();
						COC.p_actorID = companyGC.p_ownerID;
						COC.p_actorType = OL_ActorType.CONNECTIONOWNER;
						COC.p_connectionOwnerType = OL_ConnectionOwnerType.COMPANY;
						COC.p_detailedCompany = false;
					}
					companyGC.p_owner = COC;
					
					// Create a building
					GIS_Building b = f_createGISBuilding(buildingRow, companyGC);
					
					companyGC.p_floorSurfaceArea_m2 = b.p_floorSurfaceArea_m2;
					companyGC.p_roofSurfaceArea_m2 = b.p_roofSurfaceArea_m2;

					// Style the building
					b.p_defaultFillColor = zero_Interface.v_companyBuildingColor;
					b.p_defaultLineColor = zero_Interface.v_companyBuildingLineColor;
					zero_Interface.f_styleAreas(b);
	
					// Trafo data
					companyGC.set_p_parentNodeElectricID( buildingRow.get ( buildings.trafo_id ) );				
					companyGC.p_longitude = companyGC.c_connectedGISObjects.get(0).p_longitude;
					companyGC.p_latitude = companyGC.c_connectedGISObjects.get(0).p_latitude;
					companyGC.setLatLon(companyGC.p_latitude, companyGC.p_longitude);  
				
					// Adress data
					companyGC.p_streetName = buildingRow.get( buildings.streetname);
				 	companyGC.p_houseNumber = buildingRow.get( buildings.house_number);
				 	companyGC.p_houseLetter = buildingRow.get( buildings.house_letter);
				 	companyGC.p_houseAddition = buildingRow.get( buildings.house_addition);
				 	companyGC.p_postalcode = buildingRow.get( buildings.postalcode);
				 	companyGC.p_city = buildingRow.get( buildings.city);
			 									 	
					// Heating type
					companyGC.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;
					
					//Calculate remaining floor surface area for the unknown company calculations
					v_remainingFloorArea_m2 -= companyGC.p_floorSurfaceArea_m2;
					
					// Instantiate the energy assets based on the comp_connection excel
					f_iEASurveyCompanies_Excel(connectionRow, companyGC);
					
				}
			}
		}
		else {
			// The row in the comp_connections represents one single company
			GCUtility companyGC = energyModel.add_UtilityConnections();
			
			companyGC.p_gridConnectionID = connectionRow.get(comp_connections.gc_id);
			companyGC.p_ownerID = connectionRow.get( comp_connections.name );
			companyGC.p_physicalConnectionCapacity_kW = connectionRow.get(comp_connections.connection_capacity_demand);
			companyGC.p_contractedDeliveryCapacity_kW = connectionRow.get(comp_connections.connection_capacity_demand);
			companyGC.p_contractedFeedinCapacity_kW = connectionRow.get(comp_connections.connection_capacity_supply);
			
			// Finding the connection owner
			ConnectionOwner COC = findFirst(energyModel.pop_connectionOwners, p -> p.p_actorID.equals(companyGC.p_ownerID) );
			if (COC == null) {
				throw new IllegalStateException("Detailed company " + companyGC.p_ownerID + " has no connection owner.");
			}
			companyGC.p_owner = COC;
			
			// The non template companies can have multiple buildings
			double totalFloorSurfaceAreaGC_m2 = 0;
			double totalRoofSurfaceAreaGC_m2 = 0;
			
			for (Tuple buildingRow : buildingRows) {
				if (buildingRow.get( buildings.gc_id ).equals(companyGC.p_gridConnectionID)) {
					GIS_Building b = f_createGISBuilding( buildingRow, companyGC);				

					totalFloorSurfaceAreaGC_m2 += b.p_floorSurfaceArea_m2;
					totalRoofSurfaceAreaGC_m2 += b.p_roofSurfaceArea_m2;
					companyGC.p_parentNodeElectricID = buildingRow.get(buildings.trafo_id);
					
					//Style building
					if (COC.p_detailedCompany) {
						b.p_defaultFillColor = zero_Interface.v_detailedCompanyBuildingColor;
						b.p_defaultLineColor = zero_Interface.v_detailedCompanyBuildingLineColor;
					}
					else {
						b.p_defaultFillColor = zero_Interface.v_companyBuildingColor;
						b.p_defaultLineColor = zero_Interface.v_companyBuildingLineColor;
					}
					zero_Interface.f_styleAreas(b);
					
					//Adress data (Keeps overwriting this info each time a new building is found, ends with data from last building)
					companyGC.p_streetName = buildingRow.get( buildings.streetname );
				 	companyGC.p_houseNumber = buildingRow.get( buildings.house_number );
				 	companyGC.p_houseLetter = buildingRow.get( buildings.house_letter );
				 	companyGC.p_houseAddition = buildingRow.get( buildings.house_addition );
				 	companyGC.p_postalcode = buildingRow.get( buildings.postalcode );
				 	companyGC.p_city = buildingRow.get( buildings.city );
				 	
				 	// Set Trafo ID
				 	companyGC.p_parentNodeElectricID = buildingRow.trafo_id();
				 }
			}
				
			//Add (combined) building data to GC (latitude and longitude + area)
			companyGC.p_floorSurfaceArea_m2 = totalFloorSurfaceAreaGC_m2;
			companyGC.p_roofSurfaceArea_m2 = totalRoofSurfaceAreaGC_m2;
			
			if (companyGC.c_connectedGISObjects.size() == 0) {
				throw new IllegalStateException("Detailed company " + companyGC.p_ownerID + " has no building.");
			}
			companyGC.p_longitude = companyGC.c_connectedGISObjects.get(0).p_longitude; // Get longitude of first building (only used to get nearest trafo)
			companyGC.p_latitude = companyGC.c_connectedGISObjects.get(0).p_latitude; // Get latitude of first building (only used to get nearest trafo)
			companyGC.setLatLon(companyGC.p_latitude, companyGC.p_longitude);  
			
			// Heating type
			companyGC.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;
					
			//Calculate remaining floor surface area for the unknown company calculations
			v_remainingFloorArea_m2 -= totalFloorSurfaceAreaGC_m2;
			
			// Instantiate the energy assets based on the comp_connection excel
			f_iEASurveyCompanies_Excel(connectionRow, companyGC);
		}
	}
}
*/]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205873</Id>
					<Name><![CDATA[f_createConsumerGC_businesspark]]></Name>
					<X>420</X><Y>130</Y>
					<Label><X>11</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Create survey companies based on survey inload structure
switch(project_data.survey_type()){
	
	case ZORM:
		f_createSurveyCompanies_Zorm();
		break;
	
	case EXCEL:
		f_createSurveyCompanies_Excel();
		break;
	
	/*	
	case ZUMMON:
		f_createSurveyCompanies_Zummon();
		break;
	*/
}

//Create generic companies
f_createGenericCompanies();]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205875</Id>
					<Name><![CDATA[f_iEASurveyCompanies_Zummon]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>460</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205877</Id>
					<Name><![CDATA[f_createSurveyCompanies_Zummon]]></Name>
					<X>440</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[traceln("Companies that filled in the survey:");

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205879</Id>
					<Name><![CDATA[f_createConsumerGC_Residential]]></Name>
					<X>420</X><Y>490</Y>
					<Label><X>11</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Create houses
f_createHousesFromDatabase();

//Create companies
f_createCompaniesFromDatabase();

//Charge stations?
//f_createChargingStationsScale();
]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726584205881</Id>
					<Name><![CDATA[f_createAdditionalGISObjects]]></Name>
					<X>90</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Area outlines
f_createGISRegionOutline();

//Parcels
f_createGISParcels();

//Remaining buildings (no GC or EA)
f_createRemainingBuildings();

//Cables
f_createGISCables();]]></Body>
				</Function>
			</Functions>
			<Connectivity>
				<ExcelFile>
					<Id>1726584205977</Id>
					<Name><![CDATA[inputHouseholdTrips]]></Name>
					<X>-389.5</X><Y>739</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ResourceReference>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[data_Generic/AlbatrossProcessedVehicleTrips.xlsx]]></ClassName>
					</ResourceReference>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>true</LoadOnStartup>
					<SaveOnDispose>false</SaveOnDispose>
				</ExcelFile>
				<ExcelFile>
					<Id>1726584205979</Id>
					<Name><![CDATA[inputTruckTrips]]></Name>
					<X>-389.5</X><Y>719</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ResourceReference>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[data_Generic/inputTruckTripPatterns.xlsx]]></ClassName>
					</ResourceReference>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>true</LoadOnStartup>
					<SaveOnDispose>false</SaveOnDispose>
				</ExcelFile>
				<ExcelFile>
					<Id>1726584205981</Id>
					<Name><![CDATA[inputCookingActivities]]></Name>
					<X>-390</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ResourceReference>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[data_Generic/inputECookerPatterns.xlsx]]></ClassName>
					</ResourceReference>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>true</LoadOnStartup>
					<SaveOnDispose>false</SaveOnDispose>
				</ExcelFile>
				<ExcelFile>
					<Id>1726584205983</Id>
					<Name><![CDATA[e_gridnodeTimeSeries]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>1490</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ResourceReference>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[GridNode Timeseries Output.xlsx]]></ClassName>
					</ResourceReference>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>true</LoadOnStartup>
					<SaveOnDispose>true</SaveOnDispose>
				</ExcelFile>
			</Connectivity>
			<AgentLinks>
				<AgentLink>
					<Id>1726584206083</Id>
					<Name><![CDATA[connections]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1726584206041</Id>
					<Name><![CDATA[energyModel]]></Name>
					<X>30</X><Y>660</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zero_engine]]></PackageName>
						<ClassName><![CDATA[EnergyModel]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zero_engine]]></PackageName>
							<ClassName><![CDATA[EnergyModel]]></ClassName>
							<ItemName><![CDATA[1658477103138]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_timeStep_h]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_undergroundTemperature_degC]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[j_dataOut]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[j_experimentSettingsData]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[j_simulationResults]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_forecastTime_h]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[j_hourlyCurvesData]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[b_anylogicCostsForAllContracts]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_startHourWinterWeek]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_startHourSummerWeek]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_plotInterval_h]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_truckTripsExcel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_householdTripsExcel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_cookingPatternExcel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_year]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[avgc_data]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[b_parallelizeConnectionOwners]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[b_parallelizeGridConnections]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[b_enableDLR]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gridNodeTimeSeriesExcel]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>false</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1726584829907</Id>
					<Name><![CDATA[avgc_data]]></Name>
					<X>-380</X><Y>800</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
						<ClassName><![CDATA[AVGC_data]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
							<ClassName><![CDATA[AVGC_data]]></ClassName>
							<ItemName><![CDATA[1726584205523]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_avgHouseConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgHouseHeatingMethod]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgUtilityConnectionCapacity_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgUtilityHeatingMethod]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgHouseElectricityConsumption_kWh_yr]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgHouseGasConsumption_m3_yr]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_shareOfElectricVehicleOwnership]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ratioHouseInstalledPV]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgHousePVInstallationPower_kWp]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVStorageCar_kWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVMaxChargePowerCar_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVStorageVan_kWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVStorageTruck_kWh]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVMaxChargePowerVan_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVMaxChargePowerTruck_kW]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVEnergyConsumptionCar_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVEnergyConsumptionVan_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEVEnergyConsumptionTruck_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gas_kWhpm3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_hydrogenEnergyDensity_kWh_Nm3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_hydrogenDensity_kg_Nm3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_oxygenDensity_kg_Nm3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_oxygenProduction_kgO2pkgH2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_hydrogenSpecificEnergy_kWh_kg]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_diesel_kWhpl]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgDieselConsumptionCar_kmpl]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgGasolineConsumptionCar_kmpl]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_gasoline_kWhpl]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgDieselConsumptionCar_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgGasolineConsumptionCar_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgDieselConsumptionVan_kmpl]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgDieselConsumptionVan_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgDieselConsumptionTruck_kmpl]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgDieselConsumptionTruck_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgCOPHeatpump]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgUtilityPVPower_kWp]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_ratioElectricTrucks]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgCompanyHeatingMethod]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgPVPower_kWpm2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgRatioBatteryCapacity_v_Power]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgHydrogenConsumptionCar_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgHydrogenConsumptionVan_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgHydrogenConsumptionTruck_kWhpkm]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgRatioRoofPotentialPV]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEfficiencyHeatpump]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgOutputTemperatureHeatpump_degC]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEfficiencyGasBurner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgOutputTemperatureGasBurner_degC]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgEfficiencyHydrogenBurner]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgOutputTemperatureHydrogenBurner_degC]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_avgVehiclesPerChargePoint]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>false</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1726584205903</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1726584205905</Id>
					<Name><![CDATA[rect_canvas]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16744448</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1920</Width>
					<Height>980</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1726584205907</Id>
					<Name><![CDATA[rect_projectDataTracking]]></Name>
					<X>1450</X><Y>60</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-65536</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>460</Width>
					<Height>360</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1726584205909</Id>
					<Name><![CDATA[rect_loader]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16744448</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>169</Width>
					<Height>40</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205911</Id>
					<Name><![CDATA[txt_input]]></Name>
					<X>55</X><Y>7</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16744448</Color>
					<Text><![CDATA[Loader]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205913</Id>
					<Name><![CDATA[txt_timeLoggers]]></Name>
					<X>1470</X><Y>100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Time loggers]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1726584205915</Id>
					<Name><![CDATA[rect_connectedModels]]></Name>
					<X>0</X><Y>600</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-16744448</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>310</Width>
					<Height>170</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205917</Id>
					<Name><![CDATA[t_connectedModels]]></Name>
					<X>20</X><Y>620</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Connected Models]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205919</Id>
					<Name><![CDATA[t_output]]></Name>
					<X>1480</X><Y>440</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Output settings:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205921</Id>
					<Name><![CDATA[txt_projectDataTracking]]></Name>
					<X>1460</X><Y>70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Time and data Tracking]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1726584205923</Id>
					<Name><![CDATA[rect_defaultStartup]]></Name>
					<X>20</X><Y>60</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>340</Width>
					<Height>200</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1726584205925</Id>
					<Name><![CDATA[rect_dataCollections]]></Name>
					<X>-440</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-360334</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>437</Width>
					<Height>980</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1726584205927</Id>
					<Name><![CDATA[rect_GridNodeFunctions]]></Name>
					<X>20</X><Y>430</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>340</Width>
					<Height>110</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205929</Id>
					<Name><![CDATA[txt_loaderStartupDefault]]></Name>
					<X>40</X><Y>70</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Loader default startup:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205931</Id>
					<Name><![CDATA[txt_createGridNodes]]></Name>
					<X>40</X><Y>440</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Create Grid node functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1726584205933</Id>
					<Name><![CDATA[rect_dataInput]]></Name>
					<X>-440</X><Y>0</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-360334</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>169</Width>
					<Height>40</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205935</Id>
					<Name><![CDATA[text]]></Name>
					<X>-400</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Lock>true</Lock>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-360334</Color>
					<Text><![CDATA[Data input]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205937</Id>
					<Name><![CDATA[t_inputFiles]]></Name>
					<X>-400</X><Y>660</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Basic Input files:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205939</Id>
					<Name><![CDATA[t_inputFileFunctions]]></Name>
					<X>-400</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Read input files to database:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726584205941</Id>
					<Name><![CDATA[txt_dataCollectionFill]]></Name>
					<X>-400</X><Y>140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Fill the data collections:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1726584205943</Id>
					<Name><![CDATA[rect_ActorFunctions]]></Name>
					<X>20</X><Y>300</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>340</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205945</Id>
					<Name><![CDATA[txt_createActorFunctions]]></Name>
					<X>40</X><Y>310</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Create Actor functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1726584205947</Id>
					<Name><![CDATA[rect_createEnergyGC]]></Name>
					<X>400</X><Y>680</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>340</Width>
					<Height>200</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205949</Id>
					<Name><![CDATA[txt_createEnergyGC]]></Name>
					<X>410</X><Y>690</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Create Energy GC functions 
]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Group>
					<Id>1726584205951</Id>
					<Name><![CDATA[gr_consumerGC_residential]]></Name>
					<X>570</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1726584205953</Id>
					<Name><![CDATA[rect_createConsumerGC_Residential]]></Name>
					<X>-170</X><Y>-110</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>340</Width>
					<Height>240</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205955</Id>
					<Name><![CDATA[txt_createConsumerGC_Residential]]></Name>
					<X>-160</X><Y>-100</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Create Consumer GC functions 
(Residential)]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1726584205957</Id>
					<Name><![CDATA[gr_consumerGC_businesspark]]></Name>
					<X>570</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1726584205959</Id>
					<Name><![CDATA[rect_createConsumerGC_Businesspark]]></Name>
					<X>-170</X><Y>-170</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>340</Width>
					<Height>340</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205961</Id>
					<Name><![CDATA[txt_createConsumerGC_Businesspark]]></Name>
					<X>-160</X><Y>-160</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Create Consumer GC functions 
(Businesspark)]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1726584205963</Id>
					<Name><![CDATA[gr_addEAFunctions]]></Name>
					<X>960</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1726584205965</Id>
					<Name><![CDATA[rect_addEA]]></Name>
					<X>-180</X><Y>-140</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>360</Width>
					<Height>280</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205967</Id>
					<Name><![CDATA[txt_addEnergyAssetFunctions]]></Name>
					<X>-160</X><Y>-120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Add EA functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1726584205969</Id>
					<Name><![CDATA[gr_createGISObjects]]></Name>
					<X>960</X><Y>490</Y>
					<Label><X>9.938</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1726584205971</Id>
					<Name><![CDATA[rect_createGISObjects]]></Name>
					<X>-180</X><Y>-128.972</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>2</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>360</Width>
					<Height>248.024</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1726584205973</Id>
					<Name><![CDATA[txt_createGISObjects]]></Name>
					<X>-161.492</X><Y>-109.13</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Create GIS objects]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
			</Presentation>

				</Level>
				<Level>
					<Id>1726584205975</Id>
					<Name><![CDATA[level1]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1726584206081</Id>
					<Name><![CDATA[viewArea]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
	</ActiveObjectClasses>
	<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
	<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
	<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
	<AbsoluteAccuracy>1.0</AbsoluteAccuracy>
	<FixedTimeStep>1.0</FixedTimeStep>
	<RelativeAccuracy>1.0</RelativeAccuracy>
	<TimeAccuracy>0.1</TimeAccuracy>
	<Frame>
		<Width>1920</Width>
		<Height>980</Height>
	</Frame>
	<Database>
		<Logging>false</Logging>
		<AutoExport>false</AutoExport>
		<ShutdownCompact>false</ShutdownCompact>
		<ImportSettings>
		</ImportSettings>
		<ExportSettings>
		</ExportSettings>
	</Database>

	<RunConfiguration ActiveObjectClassId="1658477103140">
		<Id>1658477103163</Id>
		<Name><![CDATA[RunConfiguration]]></Name>
		<MaximumMemory>4096</MaximumMemory>
		<ModelTimeProperties>
			<StopOption><![CDATA[Stop at specified date]]></StopOption>
			<InitialDate><![CDATA[1672531200000]]></InitialDate>	
			<InitialTime><![CDATA[0.0]]></InitialTime>	
			<FinalDate><![CDATA[1704067200000]]></FinalDate>	
			<FinalTime><![CDATA[8760.0]]></FinalTime>	
		</ModelTimeProperties>
		<AnimationProperties>
			<StopNever>false</StopNever>
			<ExecutionMode>realTimeScaled</ExecutionMode>
			<RealTimeScale>5.0</RealTimeScale>
			<EnableZoomAndPanning>false</EnableZoomAndPanning>
			<EnableDeveloperPanel>false</EnableDeveloperPanel>
			<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
		</AnimationProperties>
		<Inputs>		
		</Inputs>
		<Outputs>
		</Outputs>
	</RunConfiguration>
	<JavaClasses>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1715862317301</Id>
			<Name><![CDATA[J_scenario_Current]]></Name>
			<Text><![CDATA[/**
 * Scenario_future
 */	
public class J_scenario_Current implements Serializable {

	private Agent parentAgent;
	private Double currentContractDeliveryCapacity_kW = 0.0;
	private Double currentContractFeedinCapacity_kW = 0.0;
	private Double currentPhysicalConnectionCapacity_kW = 0.0;
	private Integer currentPV_kW = 0;
	//String currentPV_orient;
	private Float currentWind_kW = 0f;
	private Float currentBatteryPower_kW = 0f;
	private Float currentBatteryCapacity_kWh = 0f;
	private OL_GridConnectionHeatingType currentHeatingType = OL_GridConnectionHeatingType.NONE;
	private Integer currentDieselCars = 0;
	private Integer currentDieselVans = 0;
	private Integer currentDieselTrucks = 0;
	private Integer currentHydrogenCars = 0; 
	private Integer currentHydrogenVans = 0;
	private Integer currentHydrogenTrucks = 0;
	private Integer currentEVCars = 0;
	private Integer currentEVVans = 0;
	private Integer currentEVTrucks = 0;
	private Double currentEVCarChargePower_kW = 0.0;
	private Double currentEVVanChargePower_kW = 0.0;
	private Double currentEVTruckChargePower_kW = 0.0; 
		
		
    /**
     * Default constructor
     */
    public J_scenario_Current() {
    }
    
    /**
     * Constructor initializing the fields
     */
    /*
    public J_scenario_Current() {
    }
    */
    
    // Setters
    public void setParentAgent(Agent parentAgent) {
        this.parentAgent = parentAgent;
    }
    
    public void setCurrentContractDeliveryCapacity_kW(Double currentContractDeliveryCapacity_kW) {
    	this.currentContractDeliveryCapacity_kW = currentContractDeliveryCapacity_kW;
    }
    
    public void setCurrentContractFeedinCapacity_kW(Double currentContractFeedinCapacity_kW) {
    	this.currentContractFeedinCapacity_kW = currentContractFeedinCapacity_kW;
    }
    
    public void setCurrentPhysicalConnectionCapacity_kW(Double currentPhysicalConnectionCapacity_kW) {
    	this.currentPhysicalConnectionCapacity_kW = currentPhysicalConnectionCapacity_kW;
    }
    
    public void setCurrentPV_kW(int currentPV_kW) {
    	this.currentPV_kW = currentPV_kW;
    }
    
    /*
    public void setCurrentPV_orient(String currentPV_orient) {
        this.currentPV_orient = currentPV_orient;
    }
	*/
    public void setCurrentWind_kW(Float currentWind_kW) {
        this.currentWind_kW = currentWind_kW;
    }

    public void setCurrentBatteryPower_kW(Float currentBatteryPower_kW) {
        this.currentBatteryPower_kW = currentBatteryPower_kW;
    }

    public void setCurrentBatteryCapacity_kWh(Float currentBatteryCapacity_kWh) {
        this.currentBatteryCapacity_kWh = currentBatteryCapacity_kWh;
    }

    public void setCurrentHeatingType(OL_GridConnectionHeatingType currentHeatingType) {
        this.currentHeatingType = currentHeatingType;
    }

    public void setCurrentDieselCars(Integer currentDieselCars) {
        this.currentDieselCars = currentDieselCars;
    }

    public void setCurrentDieselVans(Integer currentDieselVans) {
        this.currentDieselVans = currentDieselVans;
    }

    public void setCurrentDieselTrucks(Integer currentDieselTrucks) {
        this.currentDieselTrucks = currentDieselTrucks;
    }
  
    public void setCurrentHydrogenCars(Integer currentHydrogenCars) {
        this.currentHydrogenCars = currentHydrogenCars;
    }

    public void setCurrentHydrogenVans(Integer currentHydrogenVans) {
        this.currentHydrogenVans = currentHydrogenVans;
    }

    public void setCurrentHydrogenTrucks(Integer currentHydrogenTrucks) {
        this.currentHydrogenTrucks = currentHydrogenTrucks;
    }
    
    public void setCurrentEVCars(Integer currentEVCars) {
        this.currentEVCars = currentEVCars;
    }

    public void setCurrentEVVans(Integer currentEVVans) {
        this.currentEVVans = currentEVVans;
    }

    public void setCurrentEVTrucks(Integer currentEVTrucks) {
        this.currentEVTrucks = currentEVTrucks;
    }
    
    public void setCurrentEVCarChargePower_kW(Double currentEVCarChargePower_kW) {
        this.currentEVCarChargePower_kW = currentEVCarChargePower_kW;
    }

    public void setCurrentEVVanChargePower_kW(Double currentEVVanChargePower_kW) {
        this.currentEVVanChargePower_kW = currentEVVanChargePower_kW;
    }

    public void setCurrentEVTruckChargePower_kW(Double currentEVTruckChargePower_kW) {
        this.currentEVTruckChargePower_kW = currentEVTruckChargePower_kW;
    }
    
    
    // Getters
    public Agent getParentAgent() {
        return parentAgent;
    }
    
    public Double getCurrentContractDeliveryCapacity_kW() {
    	return currentContractDeliveryCapacity_kW;
    }

    public Double getCurrentContractFeedinCapacity_kW() {
    	return currentContractFeedinCapacity_kW;
    }
    
    public Double getCurrentPhysicalConnectionCapacity_kW() {
    	return currentPhysicalConnectionCapacity_kW;
    }    
    	
    public Integer getCurrentPV_kW() {
    	if (currentPV_kW == null) {
    		return 0;
    	}
        return currentPV_kW;
    }
    
    /*
    public String getCurrentPV_orient() {
        return currentPV_orient;
    }
	*/
    
    public Float getCurrentWind_kW() {
        return currentWind_kW;
    }
    
    public Float getCurrentBatteryPower_kW() {
        return currentBatteryPower_kW;
    }
    
    public Float getCurrentBatteryCapacity_kWh() {
        return currentBatteryCapacity_kWh;
    }
    
    public OL_GridConnectionHeatingType getCurrentHeatingType() {
        return currentHeatingType;
    }
	
    public Integer getCurrentDieselCars() {
        return currentDieselCars;
    }

    public Integer getCurrentDieselVans() {
        return currentDieselVans;
    }

    public Integer getCurrentDieselTrucks() {
        return currentDieselTrucks;
    }

    public Integer getCurrentHydrogenCars() {
        return currentHydrogenCars;
    }

    public Integer getCurrentHydrogenVans() {
        return currentHydrogenVans;
    }

    public Integer getCurrentHydrogenTrucks() {
        return currentHydrogenTrucks;
    }
    
    public Integer getCurrentEVCars() {
        return currentEVCars;
    }

    public Integer getCurrentEVVans() {
        return currentEVVans;
    }

    public Integer getCurrentEVTrucks() {
        return currentEVTrucks;
    }
    
    public Double getCurrentEVCarChargePower_kW() {
        return currentEVCarChargePower_kW;
    }

    public Double getCurrentEVVanChargePower_kW() {
        return currentEVVanChargePower_kW;
    }

    public Double getCurrentEVTruckChargePower_kW() {
        return currentEVTruckChargePower_kW;
    }

    
    
	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1715862317307</Id>
			<Name><![CDATA[J_scenario_Future]]></Name>
			<Text><![CDATA[/**
 * Scenario_future
 */	
public class J_scenario_Future implements Serializable {

	private Agent parentAgent;
	private Double requestedContractDeliveryCapacity_kW = 0.0;
	private Double requestedContractFeedinCapacity_kW = 0.0;
	private Double requestedPhysicalConnectionCapacity_kW = 0.0;
	private Integer plannedPV_kW = 0;
	private Integer plannedPV_year;
	private Float plannedWind_kW = 0f;
	private Float plannedBatteryPower_kW = 0f;
	private Float plannedBatteryCapacity_kWh = 0f;
	//Integer plannedWind_year;
	private Integer plannedEVCars = 0;
	private Integer plannedEVVans = 0;
	private Integer plannedEVTrucks = 0;
	private Integer plannedHydrogenCars = 0;
	private Integer plannedHydrogenVans = 0;
	private Integer plannedHydrogenTrucks = 0; 

	
		
    /**
     * Default constructor
     */
    public J_scenario_Future() {
    }
    
    /**
     * Constructor initializing the fields
     */
    /*
    public J_scenario_Future(Agent parentAgent, Integer plannedPV_kW, Integer plannedPV_year, Float plannedWind_kW, Integer plannedEVCars, Integer plannedEVVans, Integer plannedEVTrucks) {

		
    }
    */
    
    // Setters
    public void setParentAgent(Agent parentAgent) {
        this.parentAgent = parentAgent;
    }

    public void setRequestedContractDeliveryCapacity_kW(Double requestedContractDeliveryCapacity_kW) {
        this.requestedContractDeliveryCapacity_kW = requestedContractDeliveryCapacity_kW;
    }
    
    public void setRequestedContractFeedinCapacity_kW(Double requestedContractFeedinCapacity_kW) {
        this.requestedContractFeedinCapacity_kW = requestedContractFeedinCapacity_kW;
    }
    
    public void setRequestedPhysicalConnectionCapacity_kW(Double requestedPhysicalConnectionCapacity_kW) {
        this.requestedPhysicalConnectionCapacity_kW = requestedPhysicalConnectionCapacity_kW;
    }
    
    public void setPlannedPV_kW(Integer plannedPV_kW) {
        this.plannedPV_kW = plannedPV_kW;
    }

    public void setPlannedPV_year(Integer plannedPV_year) {
        this.plannedPV_year = plannedPV_year;
    }

    public void setPlannedWind_kW(Float plannedWind_kW) {
        this.plannedWind_kW = plannedWind_kW;
    }

    public void setPlannedBatteryPower_kW(Float plannedBatteryPower_kW) {
        this.plannedBatteryPower_kW = plannedBatteryPower_kW;
    }

    public void setPlannedBatteryCapacity_kWh(Float plannedBatteryCapacity_kWh) {
        this.plannedBatteryCapacity_kWh = plannedBatteryCapacity_kWh;
    }

    public void setPlannedEVCars(Integer plannedEVCars) {
        this.plannedEVCars = plannedEVCars;
    }

    public void setPlannedEVVans(Integer plannedEVVans) {
        this.plannedEVVans = plannedEVVans;
    }

    public void setPlannedEVTrucks(Integer plannedEVTrucks) {
        this.plannedEVTrucks = plannedEVTrucks;
    }

    public void setPlannedHydrogenCars(Integer plannedHydrogenCars) {
        this.plannedHydrogenCars = plannedHydrogenCars;
    }

    public void setPlannedHydrogenVans(Integer plannedHydrogenVans) {
        this.plannedHydrogenVans = plannedHydrogenVans;
    }

    public void setPlannedHydrogenTrucks(Integer plannedHydrogenTrucks) {
        this.plannedHydrogenTrucks = plannedHydrogenTrucks;
    }
    
    
    // Getters
    public Agent getParentAgent() {
        return parentAgent;
    }
    
    public Double getRequestedContractDeliveryCapacity_kW() {
        return requestedContractDeliveryCapacity_kW;
    } 
    
    public Double getRequestedContractFeedinCapacity_kW() {
        return requestedContractFeedinCapacity_kW;
    } 

    public Double getRequestedPhysicalConnectionCapacity_kW() {
    	return requestedPhysicalConnectionCapacity_kW;
    }
    
    public Integer getPlannedPV_kW() {
    	if (plannedPV_kW == null) {
    		return 0;
    	}
        return plannedPV_kW;
    }

    public Integer getPlannedPV_year() {
        return plannedPV_year;
    }

    public Float getPlannedWind_kW() {
        return plannedWind_kW;
    }

    public Float getPlannedBatteryPower_kW() {
    	if (plannedBatteryPower_kW == null) {
    		return 0f;
    	}
        return plannedBatteryPower_kW;
    }
    
    public Float getPlannedBatteryCapacity_kWh() {
    	if (plannedBatteryCapacity_kWh == null) {
    		return 0f;
    	}
        return plannedBatteryCapacity_kWh;
    }
    
    public Integer getPlannedEVCars() {
        return plannedEVCars;
    }

    public Integer getPlannedEVVans() {
        return plannedEVVans;
    }

    public Integer getPlannedEVTrucks() {
        return plannedEVTrucks;
    }
    
    public Integer getPlannedHydrogenCars() {
        return plannedHydrogenCars;
    }

    public Integer getPlannedHydrogenVans() {
        return plannedHydrogenVans;
    }

    public Integer getPlannedHydrogenTrucks() {
        return plannedHydrogenTrucks;
    }
    
    
       
	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206084</Id>
			<Name><![CDATA[Battery_data]]></Name>
			<Text><![CDATA[/**
 * Battery_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Battery_data {
	//Database column name
	String gc_id;
	String gc_name;
	String owner_id;
	String streetname;
	Integer house_number;
	String house_letter;
	String house_addition;
	String postalcode;
	String city;
	String trafo_id;
	boolean initially_active;
	double storage_capacity_kwh;
	double capacity_electric_kw;
	double connection_capacity_kw;
	Double contracted_delivery_capacity_kw;
	Double contracted_feed_in_capacity_kw;
	String default_operation_mode;
	double latitude;
	double longitude;
	String polygon;
}
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206085</Id>
			<Name><![CDATA[Building_data]]></Name>
			<Text><![CDATA[/**
 * Building_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Building_data {
	//Database column name
	String address_id;
	String building_id;	
	Integer pand_nr;
	Integer pandcluster_nr;
	String streetname;
	Integer house_number;
	String house_letter;
	String house_addition;
	String postalcode;
	String city;
	Integer build_year;	
	String status;
	String purpose;
	Double cumulative_floor_surface_m2;	
	Double polygon_area_m2;
	String gc_id;
	String annotation;
	String extra_info;
	Double contracted_capacity_kw;
	Double electricity_consumption_kwhpa;
	Double gas_consumption_kwhpa;
	String energy_label;
	String trafo_id;
	Double latitude;
	Double longitude;
	String polygon;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206086</Id>
			<Name><![CDATA[Cable_data]]></Name>
			<Text><![CDATA[/**
 * Cable_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Cable_data {
		String fid;
		boolean status;
		Double nominal_voltage_v;
		String label;
		String description;
		double latitude;
		double longitude;
		String line;
}
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206087</Id>
			<Name><![CDATA[Chargingstation_data]]></Name>
			<Text><![CDATA[/**
 * Chargingstation_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Chargingstation_data {
	//Database column name
	String gc_id;
	String gc_name;
	String owner_id;
	String streetname;
	Integer house_number;
	String house_letter;
	String house_addition;
	String postalcode;
	String city;
	String trafo_id;
	Double connection_capacity_kw;	
	boolean is_charging_centre;
	//profile_data ??
	OL_EnergyAssetType vehicle_type;
	int number_of_chargers;
	double power_per_charger_kw;
	boolean initially_active;
	double latitude;
	double longitude;
	String polygon;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206088</Id>
			<Name><![CDATA[Electrolyser_data]]></Name>
			<Text><![CDATA[/**
 * Electrolyser_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Electrolyser_data {
		String gc_id;
		String gc_name;
		String owner_id;
		String streetname;
		Integer house_number;
		String house_letter;
		String house_addition;
		String postalcode;
		String city;
		String trafo_id;
		boolean initially_active;
		double capacity_electric_kw;
		double connection_capacity_kw;
		Double contracted_delivery_capacity_kw;
		Double contracted_feed_in_capacity_kw;
		OL_ElectrolyserOperationMode default_operation_mode;
		double conversion_efficiency;
		double min_production_ratio;
		double idle_consumption_power_ratio;
		double start_up_time_shutdown_s;
		double start_up_time_standby_s;
		double start_up_time_idle_s;
		double load_change_time_s;
		double latitude;
		double longitude;
		String polygon;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206089</Id>
			<Name><![CDATA[GridNode_data]]></Name>
			<Text><![CDATA[/**
 * GridNode_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class GridNode_data {
		String trafo_id;
		String fid;
		boolean status;
		String type;
		String description;
		double latitude;
		double longitude;
		String parent_node_id;
		boolean is_capacity_available;
		double capacity_kw;
		String subscope;
		String service_area_polygon;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206090</Id>
			<Name><![CDATA[Neighbourhood_data]]></Name>
			<Text><![CDATA[/**
 * Neighbourhood_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Neighbourhood_data {
	String districtcode;
	String districtname;
	String neighbourhoodcode;
	String neighbourhoodtype; // OL van maken
	double latitude;
	double longitude;
	String polygon;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206091</Id>
			<Name><![CDATA[Parcel_data]]></Name>
			<Text><![CDATA[/**
 * Parcel_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Parcel_data {
		String parcel_id;
		String name;
		String streetname;
		Integer house_number;
		String house_letter;
		String house_addition;
		String postalcode;
		String city;
		double polygon_area_m2;
		double latitude;
		double longitude;
		String polygon;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206092</Id>
			<Name><![CDATA[Profiles_data]]></Name>
			<Text><![CDATA[/**
 * Profiles_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Profiles_data {
		
		List<Double> argumentsList;
		
		// Various demand profiles
		List<Double> houseEdemandList;
		List<Double> houseHDHWdemandList;
		List<Double> buildingEdemandList;
		List<Double> buildingHeatDemandList;
		List<Double> industrySteelEdemandList;
		List<Double> industrySteelHdemandList;
		List<Double> industryOtherEdemandList;
		List<Double> industryOtherHdemandList;
		List<Double> logisticsFleetEdemandList;
		
		// Weather data
		List<Double> windList;
		List<Double> solarList;
		List<Double> tempList;
		List<Double> epexList;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206093</Id>
			<Name><![CDATA[Project_data]]></Name>
			<Text><![CDATA[/**
 * Project_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Project_data {
		
		//Project settings
		String project_name;
		OL_ProjectType project_type;
		OL_SurveyType survey_type;
		
		//Database names
		List<String[]> databaseNames;
		
		//Map centre coordinates
		double map_centre_latitude;
		double map_centre_longitude;
		double map_zoomlevel;
		
		//Project specific actors
		String grid_operator;
		Boolean hasCongestionPricing;
		String energy_coop;
		String energy_supplier;
		
		//Project totals
		Double total_electricity_consumption_companies_kWh_p_yr;
		Double total_gas_consumption_companies_m3_p_yr;
		Double avg_electricity_consumption_house_kWh_p_yr;
		Double avg_gas_consumption_house_m3_p_yr;
		Integer total_cars_houses;
		Integer total_vans_companies;
		Integer total_trucks_companies;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206094</Id>
			<Name><![CDATA[Settings]]></Name>
			<Text><![CDATA[/**
 * Settings
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Settings {
		
		//Simulation settings
		boolean reloadDatabase;
		boolean createCurrentElectricityEA;
		boolean runHeadlessAtStartup;
		Boolean showKPISummary;
		ArrayList<String> subscopesToSimulate;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206095</Id>
			<Name><![CDATA[Solarfarm_data]]></Name>
			<Text><![CDATA[/**
 * Solarfarm_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Solarfarm_data {

		String gc_id;
		String gc_name;
		String owner_id;
		String streetname;
		Integer house_number;
		String house_letter;
		String house_addition;
		String postalcode;
		String city;
		String trafo_id;
		boolean initially_active;
		double capacity_electric_kw;
		double connection_capacity_kw;
		Double contracted_delivery_capacity_kw;
		Double contracted_feed_in_capacity_kw;
		double latitude;
		double longitude;
		String polygon;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206096</Id>
			<Name><![CDATA[User]]></Name>
			<Text><![CDATA[/**
 * User
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class User {
		
		//User
		String PROJECT_CLIENT_ID;
		String PROJECT_CLIENT_SECRET;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1726584206097</Id>
			<Name><![CDATA[Windfarm_data]]></Name>
			<Text><![CDATA[/**
 * Windfarm_data
 */	
@lombok.Builder
@lombok.Value
@lombok.experimental.Accessors(fluent = true)
public class Windfarm_data {
		
		String gc_id;
		String gc_name;
		String owner_id;
		String streetname;
		Integer house_number;
		String house_letter;
		String house_addition;
		String postalcode;
		String city;
		String trafo_id;
		boolean initially_active;
		double capacity_electric_kw;
		double connection_capacity_kw;
		Double contracted_delivery_capacity_kw;
		Double contracted_feed_in_capacity_kw;
		double latitude;
		double longitude;
		String polygon;
}]]></Text>
		</JavaClass>
	</JavaClasses>
	<ModelResources>
		<Resource>
			<Path><![CDATA[icon_arrow.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[icon_greater_than.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[icon_i.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[icon_loading.gif]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[logo_TUe_white.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[logo_zenmo.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[logo_TUe_red.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[noun-electricity-3408805.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[noun-fire-2429630.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[noun-car-1777731.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_Generic/AlbatrossProcessedVehicleTrips.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_Generic/inputTruckTripPatterns.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_Generic/inputECookerPatterns.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[vallum-main-265-4c146ef-all.jar]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[lombok.jar]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
	</ModelResources>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.anylogic.libraries.modules.markup_descriptors]]></LibraryName>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[zero_engine]]></LibraryName>
		<VersionMajor>0</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[digital_twin_results]]></LibraryName>
		<VersionMajor>0</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
	<ClassPathEntry>
		<ResourceReference>
			<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
			<ClassName><![CDATA[vallum-main-265-4c146ef-all.jar]]></ClassName>
		</ResourceReference>
		<Imported>true</Imported>
		<Folder>false</Folder>
	</ClassPathEntry>
	<ClassPathEntry>
		<ResourceReference>
			<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
			<ClassName><![CDATA[lombok.jar]]></ClassName>
		</ResourceReference>
		<Imported>true</Imported>
		<Folder>false</Folder>
	</ClassPathEntry>
	<CloudModelUuid><![CDATA[123b8977-3095-438e-bc2b-3605a67e7159]]></CloudModelUuid>
</Model>
</AnyLogicWorkspace>